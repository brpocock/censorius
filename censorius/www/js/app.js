if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

// Input 0
var CLOSURE_NO_DEPS = true;
// Input 1
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
// Input 2
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
// Input 3
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
// Input 4
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
// Input 5
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
// Input 6
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
// Input 7
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
// Input 8
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
// Input 9
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__10964__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__10963 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__10963) : cljs.core.into_array.call(null, G__10963);
      }());
    };
    var G__10964 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10965__i = 0, G__10965__a = new Array(arguments.length - 0);
        while (G__10965__i < G__10965__a.length) {
          G__10965__a[G__10965__i] = arguments[G__10965__i + 0];
          ++G__10965__i;
        }
        args = new cljs.core.IndexedSeq(G__10965__a, 0);
      }
      return G__10964__delegate.call(this, args);
    };
    G__10964.cljs$lang$maxFixedArity = 0;
    G__10964.cljs$lang$applyTo = function(arglist__10966) {
      var args = cljs.core.seq(arglist__10966);
      return G__10964__delegate(args);
    };
    G__10964.cljs$core$IFn$_invoke$arity$variadic = G__10964__delegate;
    return G__10964;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__10968 = x;
  return goog.isString(G__10968);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__10970 = x__$1;
    return goog.typeOf(G__10970);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3787__auto__ = ty;
    if (cljs.core.truth_(and__3787__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3787__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__10972 = obj;
    return goog.typeOf(G__10972);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__10974 = Symbol;
  return goog.typeOf(G__10974);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4686__auto___10976 = len;
  var i_10977 = 0;
  while (true) {
    if (i_10977 < n__4686__auto___10976) {
      new_arr[i_10977] = arr[i_10977];
      var G__10978 = i_10977 + 1;
      i_10977 = G__10978;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__10979 = i + 1;
      i = G__10979;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__10988__delegate = function(array, i, idxs) {
      var G__10985 = aget;
      var G__10986 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__10987 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__10985, G__10986, G__10987) : cljs.core.apply.call(null, G__10985, G__10986, G__10987);
    };
    var G__10988 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__10989__i = 0, G__10989__a = new Array(arguments.length - 2);
        while (G__10989__i < G__10989__a.length) {
          G__10989__a[G__10989__i] = arguments[G__10989__i + 2];
          ++G__10989__i;
        }
        idxs = new cljs.core.IndexedSeq(G__10989__a, 0);
      }
      return G__10988__delegate.call(this, array, i, idxs);
    };
    G__10988.cljs$lang$maxFixedArity = 2;
    G__10988.cljs$lang$applyTo = function(arglist__10990) {
      var array = cljs.core.first(arglist__10990);
      arglist__10990 = cljs.core.next(arglist__10990);
      var i = cljs.core.first(arglist__10990);
      var idxs = cljs.core.rest(arglist__10990);
      return G__10988__delegate(array, i, idxs);
    };
    G__10988.cljs$core$IFn$_invoke$arity$variadic = G__10988__delegate;
    return G__10988;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__10991 = null;
        if (arguments.length > 2) {
          var G__10992__i = 0, G__10992__a = new Array(arguments.length - 2);
          while (G__10992__i < G__10992__a.length) {
            G__10992__a[G__10992__i] = arguments[G__10992__i + 2];
            ++G__10992__i;
          }
          G__10991 = new cljs.core.IndexedSeq(G__10992__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__10991);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__11001__delegate = function(array, idx, idx2, idxv) {
      var G__10997 = aset;
      var G__10998 = array[idx];
      var G__10999 = idx2;
      var G__11000 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__10997, G__10998, G__10999, G__11000) : cljs.core.apply.call(null, G__10997, G__10998, G__10999, G__11000);
    };
    var G__11001 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__11002__i = 0, G__11002__a = new Array(arguments.length - 3);
        while (G__11002__i < G__11002__a.length) {
          G__11002__a[G__11002__i] = arguments[G__11002__i + 3];
          ++G__11002__i;
        }
        idxv = new cljs.core.IndexedSeq(G__11002__a, 0);
      }
      return G__11001__delegate.call(this, array, idx, idx2, idxv);
    };
    G__11001.cljs$lang$maxFixedArity = 3;
    G__11001.cljs$lang$applyTo = function(arglist__11003) {
      var array = cljs.core.first(arglist__11003);
      arglist__11003 = cljs.core.next(arglist__11003);
      var idx = cljs.core.first(arglist__11003);
      arglist__11003 = cljs.core.next(arglist__11003);
      var idx2 = cljs.core.first(arglist__11003);
      var idxv = cljs.core.rest(arglist__11003);
      return G__11001__delegate(array, idx, idx2, idxv);
    };
    G__11001.cljs$core$IFn$_invoke$arity$variadic = G__11001__delegate;
    return G__11001;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__11004 = null;
        if (arguments.length > 3) {
          var G__11005__i = 0, G__11005__a = new Array(arguments.length - 3);
          while (G__11005__i < G__11005__a.length) {
            G__11005__a[G__11005__i] = arguments[G__11005__i + 3];
            ++G__11005__i;
          }
          G__11004 = new cljs.core.IndexedSeq(G__11005__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__11004);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__11011 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__11012 = [];
    var G__11013 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11011, G__11012, G__11013) : cljs.core.reduce.call(null, G__11011, G__11012, G__11013);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__11014__i = 0, G__11014__a = new Array(arguments.length - 2);
      while (G__11014__i < G__11014__a.length) {
        G__11014__a[G__11014__i] = arguments[G__11014__i + 2];
        ++G__11014__i;
      }
      args = new cljs.core.IndexedSeq(G__11014__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__11015) {
    var obj = cljs.core.first(arglist__11015);
    arglist__11015 = cljs.core.next(arglist__11015);
    var s = cljs.core.first(arglist__11015);
    var args = cljs.core.rest(arglist__11015);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj11017 = {};
  return obj11017;
}();
cljs.core.IFn = function() {
  var obj11019 = {};
  return obj11019;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11065 = x__4443__auto__;
          return goog.typeOf(G__11065);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11067 = x__4443__auto__;
          return goog.typeOf(G__11067);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11069 = x__4443__auto__;
          return goog.typeOf(G__11069);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11071 = x__4443__auto__;
          return goog.typeOf(G__11071);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11073 = x__4443__auto__;
          return goog.typeOf(G__11073);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11075 = x__4443__auto__;
          return goog.typeOf(G__11075);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11077 = x__4443__auto__;
          return goog.typeOf(G__11077);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11079 = x__4443__auto__;
          return goog.typeOf(G__11079);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11081 = x__4443__auto__;
          return goog.typeOf(G__11081);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11083 = x__4443__auto__;
          return goog.typeOf(G__11083);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11085 = x__4443__auto__;
          return goog.typeOf(G__11085);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11087 = x__4443__auto__;
          return goog.typeOf(G__11087);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11089 = x__4443__auto__;
          return goog.typeOf(G__11089);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11091 = x__4443__auto__;
          return goog.typeOf(G__11091);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11093 = x__4443__auto__;
          return goog.typeOf(G__11093);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11095 = x__4443__auto__;
          return goog.typeOf(G__11095);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11097 = x__4443__auto__;
          return goog.typeOf(G__11097);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11099 = x__4443__auto__;
          return goog.typeOf(G__11099);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11101 = x__4443__auto__;
          return goog.typeOf(G__11101);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11103 = x__4443__auto__;
          return goog.typeOf(G__11103);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11105 = x__4443__auto__;
          return goog.typeOf(G__11105);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = cljs.core._invoke[function() {
          var G__11107 = x__4443__auto__;
          return goog.typeOf(G__11107);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._invoke["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj11109 = {};
  return obj11109;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3787__auto__ = value;
    if (and__3787__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4443__auto__ = value == null ? null : value;
    return function() {
      var or__3799__auto__ = cljs.core._clone[function() {
        var G__11113 = x__4443__auto__;
        return goog.typeOf(G__11113);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._clone["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj11115 = {};
  return obj11115;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._count[function() {
        var G__11119 = x__4443__auto__;
        return goog.typeOf(G__11119);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._count["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj11121 = {};
  return obj11121;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._empty[function() {
        var G__11125 = x__4443__auto__;
        return goog.typeOf(G__11125);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._empty["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj11127 = {};
  return obj11127;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._conj[function() {
        var G__11131 = x__4443__auto__;
        return goog.typeOf(G__11131);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._conj["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj11133 = {};
  return obj11133;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3787__auto__ = coll;
      if (and__3787__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4443__auto__ = coll == null ? null : coll;
      return function() {
        var or__3799__auto__ = cljs.core._nth[function() {
          var G__11139 = x__4443__auto__;
          return goog.typeOf(G__11139);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._nth["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3787__auto__ = coll;
      if (and__3787__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4443__auto__ = coll == null ? null : coll;
      return function() {
        var or__3799__auto__ = cljs.core._nth[function() {
          var G__11141 = x__4443__auto__;
          return goog.typeOf(G__11141);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._nth["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj11143 = {};
  return obj11143;
}();
cljs.core.ISeq = function() {
  var obj11145 = {};
  return obj11145;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._first[function() {
        var G__11149 = x__4443__auto__;
        return goog.typeOf(G__11149);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._first["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._rest[function() {
        var G__11153 = x__4443__auto__;
        return goog.typeOf(G__11153);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._rest["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj11155 = {};
  return obj11155;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._next[function() {
        var G__11159 = x__4443__auto__;
        return goog.typeOf(G__11159);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._next["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj11161 = {};
  return obj11161;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3787__auto__ = o;
      if (and__3787__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4443__auto__ = o == null ? null : o;
      return function() {
        var or__3799__auto__ = cljs.core._lookup[function() {
          var G__11167 = x__4443__auto__;
          return goog.typeOf(G__11167);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._lookup["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3787__auto__ = o;
      if (and__3787__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4443__auto__ = o == null ? null : o;
      return function() {
        var or__3799__auto__ = cljs.core._lookup[function() {
          var G__11169 = x__4443__auto__;
          return goog.typeOf(G__11169);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._lookup["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj11171 = {};
  return obj11171;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__11175 = x__4443__auto__;
        return goog.typeOf(G__11175);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._assoc[function() {
        var G__11179 = x__4443__auto__;
        return goog.typeOf(G__11179);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._assoc["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj11181 = {};
  return obj11181;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._dissoc[function() {
        var G__11185 = x__4443__auto__;
        return goog.typeOf(G__11185);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._dissoc["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj11187 = {};
  return obj11187;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._key[function() {
        var G__11191 = x__4443__auto__;
        return goog.typeOf(G__11191);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._key["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._val[function() {
        var G__11195 = x__4443__auto__;
        return goog.typeOf(G__11195);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._val["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj11197 = {};
  return obj11197;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._disjoin[function() {
        var G__11201 = x__4443__auto__;
        return goog.typeOf(G__11201);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._disjoin["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj11203 = {};
  return obj11203;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._peek[function() {
        var G__11207 = x__4443__auto__;
        return goog.typeOf(G__11207);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._peek["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._pop[function() {
        var G__11211 = x__4443__auto__;
        return goog.typeOf(G__11211);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._pop["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj11213 = {};
  return obj11213;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._assoc_n[function() {
        var G__11217 = x__4443__auto__;
        return goog.typeOf(G__11217);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj11219 = {};
  return obj11219;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._deref[function() {
        var G__11223 = x__4443__auto__;
        return goog.typeOf(G__11223);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._deref["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj11225 = {};
  return obj11225;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._deref_with_timeout[function() {
        var G__11229 = x__4443__auto__;
        return goog.typeOf(G__11229);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj11231 = {};
  return obj11231;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._meta[function() {
        var G__11235 = x__4443__auto__;
        return goog.typeOf(G__11235);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._meta["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj11237 = {};
  return obj11237;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._with_meta[function() {
        var G__11241 = x__4443__auto__;
        return goog.typeOf(G__11241);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._with_meta["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj11243 = {};
  return obj11243;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3787__auto__ = coll;
      if (and__3787__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4443__auto__ = coll == null ? null : coll;
      return function() {
        var or__3799__auto__ = cljs.core._reduce[function() {
          var G__11249 = x__4443__auto__;
          return goog.typeOf(G__11249);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._reduce["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3787__auto__ = coll;
      if (and__3787__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4443__auto__ = coll == null ? null : coll;
      return function() {
        var or__3799__auto__ = cljs.core._reduce[function() {
          var G__11251 = x__4443__auto__;
          return goog.typeOf(G__11251);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._reduce["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj11253 = {};
  return obj11253;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._kv_reduce[function() {
        var G__11257 = x__4443__auto__;
        return goog.typeOf(G__11257);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj11259 = {};
  return obj11259;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._equiv[function() {
        var G__11263 = x__4443__auto__;
        return goog.typeOf(G__11263);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._equiv["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj11265 = {};
  return obj11265;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._hash[function() {
        var G__11269 = x__4443__auto__;
        return goog.typeOf(G__11269);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._hash["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj11271 = {};
  return obj11271;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._seq[function() {
        var G__11275 = x__4443__auto__;
        return goog.typeOf(G__11275);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._seq["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj11277 = {};
  return obj11277;
}();
cljs.core.IList = function() {
  var obj11279 = {};
  return obj11279;
}();
cljs.core.IRecord = function() {
  var obj11281 = {};
  return obj11281;
}();
cljs.core.IReversible = function() {
  var obj11283 = {};
  return obj11283;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._rseq[function() {
        var G__11287 = x__4443__auto__;
        return goog.typeOf(G__11287);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._rseq["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj11289 = {};
  return obj11289;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._sorted_seq[function() {
        var G__11293 = x__4443__auto__;
        return goog.typeOf(G__11293);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._sorted_seq_from[function() {
        var G__11297 = x__4443__auto__;
        return goog.typeOf(G__11297);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._entry_key[function() {
        var G__11301 = x__4443__auto__;
        return goog.typeOf(G__11301);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._entry_key["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._comparator[function() {
        var G__11305 = x__4443__auto__;
        return goog.typeOf(G__11305);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._comparator["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj11307 = {};
  return obj11307;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3787__auto__ = writer;
    if (and__3787__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4443__auto__ = writer == null ? null : writer;
    return function() {
      var or__3799__auto__ = cljs.core._write[function() {
        var G__11311 = x__4443__auto__;
        return goog.typeOf(G__11311);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._write["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3787__auto__ = writer;
    if (and__3787__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4443__auto__ = writer == null ? null : writer;
    return function() {
      var or__3799__auto__ = cljs.core._flush[function() {
        var G__11315 = x__4443__auto__;
        return goog.typeOf(G__11315);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._flush["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj11317 = {};
  return obj11317;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._pr_writer[function() {
        var G__11321 = x__4443__auto__;
        return goog.typeOf(G__11321);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj11323 = {};
  return obj11323;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3787__auto__ = d;
    if (and__3787__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4443__auto__ = d == null ? null : d;
    return function() {
      var or__3799__auto__ = cljs.core._realized_QMARK_[function() {
        var G__11327 = x__4443__auto__;
        return goog.typeOf(G__11327);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj11329 = {};
  return obj11329;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = cljs.core._notify_watches[function() {
        var G__11333 = x__4443__auto__;
        return goog.typeOf(G__11333);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = cljs.core._add_watch[function() {
        var G__11337 = x__4443__auto__;
        return goog.typeOf(G__11337);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._add_watch["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = cljs.core._remove_watch[function() {
        var G__11341 = x__4443__auto__;
        return goog.typeOf(G__11341);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj11343 = {};
  return obj11343;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._as_transient[function() {
        var G__11347 = x__4443__auto__;
        return goog.typeOf(G__11347);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._as_transient["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj11349 = {};
  return obj11349;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3787__auto__ = tcoll;
    if (and__3787__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4443__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3799__auto__ = cljs.core._conj_BANG_[function() {
        var G__11353 = x__4443__auto__;
        return goog.typeOf(G__11353);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3787__auto__ = tcoll;
    if (and__3787__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4443__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3799__auto__ = cljs.core._persistent_BANG_[function() {
        var G__11357 = x__4443__auto__;
        return goog.typeOf(G__11357);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj11359 = {};
  return obj11359;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3787__auto__ = tcoll;
    if (and__3787__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4443__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3799__auto__ = cljs.core._assoc_BANG_[function() {
        var G__11363 = x__4443__auto__;
        return goog.typeOf(G__11363);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj11365 = {};
  return obj11365;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3787__auto__ = tcoll;
    if (and__3787__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4443__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3799__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__11369 = x__4443__auto__;
        return goog.typeOf(G__11369);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj11371 = {};
  return obj11371;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3787__auto__ = tcoll;
    if (and__3787__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4443__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3799__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__11375 = x__4443__auto__;
        return goog.typeOf(G__11375);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3787__auto__ = tcoll;
    if (and__3787__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4443__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3799__auto__ = cljs.core._pop_BANG_[function() {
        var G__11379 = x__4443__auto__;
        return goog.typeOf(G__11379);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj11381 = {};
  return obj11381;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3787__auto__ = tcoll;
    if (and__3787__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4443__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3799__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__11385 = x__4443__auto__;
        return goog.typeOf(G__11385);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj11387 = {};
  return obj11387;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3787__auto__ = x;
    if (and__3787__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4443__auto__ = x == null ? null : x;
    return function() {
      var or__3799__auto__ = cljs.core._compare[function() {
        var G__11391 = x__4443__auto__;
        return goog.typeOf(G__11391);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._compare["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj11393 = {};
  return obj11393;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._drop_first[function() {
        var G__11397 = x__4443__auto__;
        return goog.typeOf(G__11397);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._drop_first["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj11399 = {};
  return obj11399;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._chunked_first[function() {
        var G__11403 = x__4443__auto__;
        return goog.typeOf(G__11403);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._chunked_rest[function() {
        var G__11407 = x__4443__auto__;
        return goog.typeOf(G__11407);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj11409 = {};
  return obj11409;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._chunked_next[function() {
        var G__11413 = x__4443__auto__;
        return goog.typeOf(G__11413);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj11415 = {};
  return obj11415;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3787__auto__ = x;
    if (and__3787__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4443__auto__ = x == null ? null : x;
    return function() {
      var or__3799__auto__ = cljs.core._name[function() {
        var G__11419 = x__4443__auto__;
        return goog.typeOf(G__11419);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._name["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3787__auto__ = x;
    if (and__3787__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4443__auto__ = x == null ? null : x;
    return function() {
      var or__3799__auto__ = cljs.core._namespace[function() {
        var G__11423 = x__4443__auto__;
        return goog.typeOf(G__11423);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._namespace["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj11425 = {};
  return obj11425;
}();
cljs.core.IReset = function() {
  var obj11427 = {};
  return obj11427;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._reset_BANG_[function() {
        var G__11431 = x__4443__auto__;
        return goog.typeOf(G__11431);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj11433 = {};
  return obj11433;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3787__auto__ = o;
      if (and__3787__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4443__auto__ = o == null ? null : o;
      return function() {
        var or__3799__auto__ = cljs.core._swap_BANG_[function() {
          var G__11443 = x__4443__auto__;
          return goog.typeOf(G__11443);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3787__auto__ = o;
      if (and__3787__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4443__auto__ = o == null ? null : o;
      return function() {
        var or__3799__auto__ = cljs.core._swap_BANG_[function() {
          var G__11445 = x__4443__auto__;
          return goog.typeOf(G__11445);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3787__auto__ = o;
      if (and__3787__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4443__auto__ = o == null ? null : o;
      return function() {
        var or__3799__auto__ = cljs.core._swap_BANG_[function() {
          var G__11447 = x__4443__auto__;
          return goog.typeOf(G__11447);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3787__auto__ = o;
      if (and__3787__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4443__auto__ = o == null ? null : o;
      return function() {
        var or__3799__auto__ = cljs.core._swap_BANG_[function() {
          var G__11449 = x__4443__auto__;
          return goog.typeOf(G__11449);
        }()];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj11451 = {};
  return obj11451;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3787__auto__ = o;
    if (and__3787__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4443__auto__ = o == null ? null : o;
    return function() {
      var or__3799__auto__ = cljs.core._vreset_BANG_[function() {
        var G__11455 = x__4443__auto__;
        return goog.typeOf(G__11455);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj11457 = {};
  return obj11457;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3787__auto__ = coll;
    if (and__3787__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4443__auto__ = coll == null ? null : coll;
    return function() {
      var or__3799__auto__ = cljs.core._iterator[function() {
        var G__11461 = x__4443__auto__;
        return goog.typeOf(G__11461);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._iterator["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__11464 = 4294967295;
  var G__11465 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11464, G__11465) : Math.imul.call(null, G__11464, G__11465);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__11468 = a;
    var G__11469 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11468, G__11469) : Math.imul.call(null, G__11468, G__11469);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__11470 = i + 2;
        var G__11471 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__11470;
        h1 = G__11471;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj11473 = {};
  return obj11473;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__11474 = i + 1;
          var G__11475 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__11474;
          hash = G__11475;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj11479 = {};
      return obj11479;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__11482 = o;
    if (G__11482) {
      var bit__4473__auto__ = G__11482.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4473__auto__ || G__11482.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__11483 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11483) : Math.floor.call(null, G__11483);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = cljs.core.not(a.ns);
      if (and__3787__auto__) {
        return b.ns;
      } else {
        return and__3787__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11490 = a.ns;
            var G__11491 = b.ns;
            return goog.array.defaultCompare(G__11490, G__11491);
          }();
          if (0 === nsc) {
            var G__11492 = a.name;
            var G__11493 = b.name;
            return goog.array.defaultCompare(G__11492, G__11493);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11494 = a.name;
        var G__11495 = b.name;
        return goog.array.defaultCompare(G__11494, G__11495);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4220__auto__ = self__._hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__11497 = null;
  var G__11497__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__11497__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__11497 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11497__2.call(this, self__, coll);
      case 3:
        return G__11497__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11497.cljs$core$IFn$_invoke$arity$2 = G__11497__2;
  G__11497.cljs$core$IFn$_invoke$arity$3 = G__11497__3;
  return G__11497;
}();
cljs.core.Symbol.prototype.apply = function(self__, args11496) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11496)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163840;
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__11501 = x;
  if (G__11501) {
    var bit__4480__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3799__auto__ = bit__4480__auto__;
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return G__11501.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__11501.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11501);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11501);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__11503 = value;
  if (G__11503) {
    var bit__4480__auto__ = G__11503.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4480__auto__ || G__11503.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__11503.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11503);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11503);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11505 = coll;
      if (G__11505) {
        var bit__4473__auto__ = G__11505.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4473__auto__ || G__11505.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11507 = coll;
      if (G__11507) {
        var bit__4473__auto__ = G__11507.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4473__auto__ || G__11507.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11509 = coll;
      if (G__11509) {
        var bit__4473__auto__ = G__11509.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4473__auto__ || G__11509.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11511 = coll;
      if (G__11511) {
        var bit__4473__auto__ = G__11511.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4473__auto__ || G__11511.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__11516__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11517 = y;
            var G__11518 = cljs.core.first(more);
            var G__11519 = cljs.core.next(more);
            x = G__11517;
            y = G__11518;
            more = G__11519;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11516 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11520__i = 0, G__11520__a = new Array(arguments.length - 2);
        while (G__11520__i < G__11520__a.length) {
          G__11520__a[G__11520__i] = arguments[G__11520__i + 2];
          ++G__11520__i;
        }
        more = new cljs.core.IndexedSeq(G__11520__a, 0);
      }
      return G__11516__delegate.call(this, x, y, more);
    };
    G__11516.cljs$lang$maxFixedArity = 2;
    G__11516.cljs$lang$applyTo = function(arglist__11521) {
      var x = cljs.core.first(arglist__11521);
      arglist__11521 = cljs.core.next(arglist__11521);
      var y = cljs.core.first(arglist__11521);
      var more = cljs.core.rest(arglist__11521);
      return G__11516__delegate(x, y, more);
    };
    G__11516.cljs$core$IFn$_invoke$arity$variadic = G__11516__delegate;
    return G__11516;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__11522 = null;
        if (arguments.length > 2) {
          var G__11523__i = 0, G__11523__a = new Array(arguments.length - 2);
          while (G__11523__i < G__11523__a.length) {
            G__11523__a[G__11523__i] = arguments[G__11523__i + 2];
            ++G__11523__i;
          }
          G__11522 = new cljs.core.IndexedSeq(G__11523__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11522);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__11524 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11524) : cljs.core.es6_iterator_seq.call(null, G__11524);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11525 = n + 1;
      var G__11526 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11527 = cljs.core.next(coll__$1);
      n = G__11525;
      hash_code = G__11526;
      coll__$1 = G__11527;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11528 = n + 1;
      var G__11529 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11530 = cljs.core.next(coll__$1);
      n = G__11528;
      hash_code = G__11529;
      coll__$1 = G__11530;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__11531 = o;
  return goog.getUid(G__11531);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__11533 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11533) : cljs.core.deref.call(null, G__11533);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11540 = val;
            var G__11541 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11540, G__11541) : f.call(null, G__11540, G__11541);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11546 = nval;
            var G__11547 = n + 1;
            val = G__11546;
            n = G__11547;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11542 = val__$1;
          var G__11543 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11542, G__11543) : f.call(null, G__11542, G__11543);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11548 = nval;
          var G__11549 = n + 1;
          val__$1 = G__11548;
          n = G__11549;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11544 = val__$1;
          var G__11545 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11544, G__11545) : f.call(null, G__11544, G__11545);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11550 = nval;
          var G__11551 = n + 1;
          val__$1 = G__11550;
          n = G__11551;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11558 = val;
            var G__11559 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11558, G__11559) : f.call(null, G__11558, G__11559);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11564 = nval;
            var G__11565 = n + 1;
            val = G__11564;
            n = G__11565;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11560 = val__$1;
          var G__11561 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11560, G__11561) : f.call(null, G__11560, G__11561);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11566 = nval;
          var G__11567 = n + 1;
          val__$1 = G__11566;
          n = G__11567;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11562 = val__$1;
          var G__11563 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11562, G__11563) : f.call(null, G__11562, G__11563);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11568 = nval;
          var G__11569 = n + 1;
          val__$1 = G__11568;
          n = G__11569;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11571 = x;
  if (G__11571) {
    var bit__4480__auto__ = G__11571.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4480__auto__ || G__11571.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__11571.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11571);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11571);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11573 = x;
  if (G__11573) {
    var bit__4480__auto__ = G__11573.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4480__auto__ || G__11573.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__11573.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11573);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11573);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11574 = coll__$1;
  var G__11575 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11574, G__11575) : cljs.core.equiv_sequential.call(null, G__11574, G__11575);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11576 = o;
  var G__11577 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11576, G__11577) : cljs.core.cons.call(null, G__11576, G__11577);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11580 = coll__$1;
  var G__11581 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11580, G__11581) : cljs.core.equiv_sequential.call(null, G__11580, G__11581);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11582 = cljs.core.List.EMPTY;
  var G__11583 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11582, G__11583) : cljs.core.with_meta.call(null, G__11582, G__11583);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__11584 = f;
  var G__11585 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11584, G__11585) : cljs.core.seq_reduce.call(null, G__11584, G__11585);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__11586 = f;
  var G__11587 = start;
  var G__11588 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11586, G__11587, G__11588) : cljs.core.seq_reduce.call(null, G__11586, G__11587, G__11588);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11589 = o;
  var G__11590 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11589, G__11590) : cljs.core.cons.call(null, G__11589, G__11590);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__11591 = sn;
      s = G__11591;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__11596__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__11597 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__11598 = cljs.core.first(xs);
          var G__11599 = cljs.core.next(xs);
          coll = G__11597;
          x = G__11598;
          xs = G__11599;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__11596 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__11600__i = 0, G__11600__a = new Array(arguments.length - 2);
        while (G__11600__i < G__11600__a.length) {
          G__11600__a[G__11600__i] = arguments[G__11600__i + 2];
          ++G__11600__i;
        }
        xs = new cljs.core.IndexedSeq(G__11600__a, 0);
      }
      return G__11596__delegate.call(this, coll, x, xs);
    };
    G__11596.cljs$lang$maxFixedArity = 2;
    G__11596.cljs$lang$applyTo = function(arglist__11601) {
      var coll = cljs.core.first(arglist__11601);
      arglist__11601 = cljs.core.next(arglist__11601);
      var x = cljs.core.first(arglist__11601);
      var xs = cljs.core.rest(arglist__11601);
      return G__11596__delegate(coll, x, xs);
    };
    G__11596.cljs$core$IFn$_invoke$arity$variadic = G__11596__delegate;
    return G__11596;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__11602 = null;
        if (arguments.length > 2) {
          var G__11603__i = 0, G__11603__a = new Array(arguments.length - 2);
          while (G__11603__i < G__11603__a.length) {
            G__11603__a[G__11603__i] = arguments[G__11603__i + 2];
            ++G__11603__i;
          }
          G__11602 = new cljs.core.IndexedSeq(G__11603__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__11602);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__11604 = cljs.core.next(s);
      var G__11605 = acc + 1;
      s = G__11604;
      acc = G__11605;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11607 = coll;
      if (G__11607) {
        var bit__4473__auto__ = G__11607.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4473__auto__ || G__11607.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__11608 = cljs.core.next(coll);
              var G__11609 = n - 1;
              coll = G__11608;
              n = G__11609;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__11610 = cljs.core.next(coll);
              var G__11611 = n - 1;
              var G__11612 = not_found;
              coll = G__11610;
              n = G__11611;
              not_found = G__11612;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__11617 = coll;
          if (G__11617) {
            var bit__4473__auto__ = G__11617.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4473__auto__ || G__11617.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__11618 = coll;
                  if (G__11618) {
                    var bit__4480__auto__ = G__11618.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4480__auto__ || G__11618.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11618.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11618);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11618);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__11619 = coll;
          if (G__11619) {
            var bit__4473__auto__ = G__11619.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4473__auto__ || G__11619.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__11620 = coll;
                  if (G__11620) {
                    var bit__4480__auto__ = G__11620.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4480__auto__ || G__11620.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11620.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11620);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11620);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__11621 = n__$1 - 1;
      var G__11622 = cljs.core.rest(xs);
      n__$1 = G__11621;
      xs = G__11622;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__11625 = o;
        if (G__11625) {
          var bit__4473__auto__ = G__11625.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4473__auto__ || G__11625.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__11626 = o;
        if (G__11626) {
          var bit__4473__auto__ = G__11626.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4473__auto__ || G__11626.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__11630__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__11631 = ret;
          var G__11632 = cljs.core.first(kvs);
          var G__11633 = cljs.core.second(kvs);
          var G__11634 = cljs.core.nnext(kvs);
          coll = G__11631;
          k = G__11632;
          v = G__11633;
          kvs = G__11634;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__11630 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__11635__i = 0, G__11635__a = new Array(arguments.length - 3);
        while (G__11635__i < G__11635__a.length) {
          G__11635__a[G__11635__i] = arguments[G__11635__i + 3];
          ++G__11635__i;
        }
        kvs = new cljs.core.IndexedSeq(G__11635__a, 0);
      }
      return G__11630__delegate.call(this, coll, k, v, kvs);
    };
    G__11630.cljs$lang$maxFixedArity = 3;
    G__11630.cljs$lang$applyTo = function(arglist__11636) {
      var coll = cljs.core.first(arglist__11636);
      arglist__11636 = cljs.core.next(arglist__11636);
      var k = cljs.core.first(arglist__11636);
      arglist__11636 = cljs.core.next(arglist__11636);
      var v = cljs.core.first(arglist__11636);
      var kvs = cljs.core.rest(arglist__11636);
      return G__11630__delegate(coll, k, v, kvs);
    };
    G__11630.cljs$core$IFn$_invoke$arity$variadic = G__11630__delegate;
    return G__11630;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__11637 = null;
        if (arguments.length > 3) {
          var G__11638__i = 0, G__11638__a = new Array(arguments.length - 3);
          while (G__11638__i < G__11638__a.length) {
            G__11638__a[G__11638__i] = arguments[G__11638__i + 3];
            ++G__11638__i;
          }
          G__11637 = new cljs.core.IndexedSeq(G__11638__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__11637);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__11641__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11642 = ret;
            var G__11643 = cljs.core.first(ks);
            var G__11644 = cljs.core.next(ks);
            coll = G__11642;
            k = G__11643;
            ks = G__11644;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11641 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11645__i = 0, G__11645__a = new Array(arguments.length - 2);
        while (G__11645__i < G__11645__a.length) {
          G__11645__a[G__11645__i] = arguments[G__11645__i + 2];
          ++G__11645__i;
        }
        ks = new cljs.core.IndexedSeq(G__11645__a, 0);
      }
      return G__11641__delegate.call(this, coll, k, ks);
    };
    G__11641.cljs$lang$maxFixedArity = 2;
    G__11641.cljs$lang$applyTo = function(arglist__11646) {
      var coll = cljs.core.first(arglist__11646);
      arglist__11646 = cljs.core.next(arglist__11646);
      var k = cljs.core.first(arglist__11646);
      var ks = cljs.core.rest(arglist__11646);
      return G__11641__delegate(coll, k, ks);
    };
    G__11641.cljs$core$IFn$_invoke$arity$variadic = G__11641__delegate;
    return G__11641;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__11647 = null;
        if (arguments.length > 2) {
          var G__11648__i = 0, G__11648__a = new Array(arguments.length - 2);
          while (G__11648__i < G__11648__a.length) {
            G__11648__a[G__11648__i] = arguments[G__11648__i + 2];
            ++G__11648__i;
          }
          G__11647 = new cljs.core.IndexedSeq(G__11648__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__11647);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3799__auto__ = function() {
    var G__11653 = f;
    return goog.isFunction(G__11653);
  }();
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var G__11654 = f;
    if (G__11654) {
      var bit__4480__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3799__auto____$1 = bit__4480__auto__;
        if (cljs.core.truth_(or__3799__auto____$1)) {
          return or__3799__auto____$1;
        } else {
          return G__11654.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__11654.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11654);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11654);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__12120 = null;
  var G__12120__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__12120__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11656 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11656) : self__.afn.call(null, G__11656);
  };
  var G__12120__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11657 = a;
    var G__11658 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11657, G__11658) : self__.afn.call(null, G__11657, G__11658);
  };
  var G__12120__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11659 = a;
    var G__11660 = b;
    var G__11661 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11659, G__11660, G__11661) : self__.afn.call(null, G__11659, G__11660, G__11661);
  };
  var G__12120__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11662 = a;
    var G__11663 = b;
    var G__11664 = c;
    var G__11665 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11662, G__11663, G__11664, G__11665) : self__.afn.call(null, G__11662, G__11663, G__11664, G__11665);
  };
  var G__12120__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11666 = a;
    var G__11667 = b;
    var G__11668 = c;
    var G__11669 = d;
    var G__11670 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11666, G__11667, G__11668, G__11669, G__11670) : self__.afn.call(null, G__11666, G__11667, G__11668, G__11669, G__11670);
  };
  var G__12120__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11671 = a;
    var G__11672 = b;
    var G__11673 = c;
    var G__11674 = d;
    var G__11675 = e;
    var G__11676 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11671, G__11672, G__11673, G__11674, G__11675, G__11676) : self__.afn.call(null, G__11671, G__11672, G__11673, G__11674, G__11675, G__11676);
  };
  var G__12120__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11677 = a;
    var G__11678 = b;
    var G__11679 = c;
    var G__11680 = d;
    var G__11681 = e;
    var G__11682 = f;
    var G__11683 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11677, G__11678, G__11679, G__11680, G__11681, G__11682, G__11683) : self__.afn.call(null, G__11677, G__11678, G__11679, G__11680, G__11681, G__11682, G__11683);
  };
  var G__12120__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11684 = a;
    var G__11685 = b;
    var G__11686 = c;
    var G__11687 = d;
    var G__11688 = e;
    var G__11689 = f;
    var G__11690 = g;
    var G__11691 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11684, G__11685, G__11686, G__11687, G__11688, G__11689, G__11690, G__11691) : self__.afn.call(null, G__11684, G__11685, G__11686, G__11687, G__11688, G__11689, G__11690, G__11691);
  };
  var G__12120__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11692 = a;
    var G__11693 = b;
    var G__11694 = c;
    var G__11695 = d;
    var G__11696 = e;
    var G__11697 = f;
    var G__11698 = g;
    var G__11699 = h;
    var G__11700 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11692, G__11693, G__11694, G__11695, G__11696, G__11697, G__11698, G__11699, G__11700) : self__.afn.call(null, G__11692, G__11693, G__11694, G__11695, G__11696, G__11697, G__11698, G__11699, G__11700);
  };
  var G__12120__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11701 = a;
    var G__11702 = b;
    var G__11703 = c;
    var G__11704 = d;
    var G__11705 = e;
    var G__11706 = f;
    var G__11707 = g;
    var G__11708 = h;
    var G__11709 = i;
    var G__11710 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11701, G__11702, G__11703, G__11704, G__11705, G__11706, G__11707, G__11708, G__11709, G__11710) : self__.afn.call(null, G__11701, G__11702, G__11703, G__11704, G__11705, G__11706, G__11707, G__11708, G__11709, G__11710);
  };
  var G__12120__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11711 = a;
    var G__11712 = b;
    var G__11713 = c;
    var G__11714 = d;
    var G__11715 = e;
    var G__11716 = f;
    var G__11717 = g;
    var G__11718 = h;
    var G__11719 = i;
    var G__11720 = j;
    var G__11721 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11711, G__11712, G__11713, G__11714, G__11715, G__11716, G__11717, G__11718, G__11719, G__11720, G__11721) : self__.afn.call(null, G__11711, G__11712, G__11713, G__11714, G__11715, G__11716, G__11717, G__11718, G__11719, G__11720, G__11721);
  };
  var G__12120__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11722 = a;
    var G__11723 = b;
    var G__11724 = c;
    var G__11725 = d;
    var G__11726 = e;
    var G__11727 = f;
    var G__11728 = g;
    var G__11729 = h;
    var G__11730 = i;
    var G__11731 = j;
    var G__11732 = k;
    var G__11733 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11722, G__11723, G__11724, G__11725, G__11726, G__11727, G__11728, G__11729, G__11730, G__11731, G__11732, G__11733) : self__.afn.call(null, G__11722, G__11723, G__11724, G__11725, G__11726, G__11727, G__11728, G__11729, G__11730, G__11731, G__11732, G__11733);
  };
  var G__12120__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11734 = a;
    var G__11735 = b;
    var G__11736 = c;
    var G__11737 = d;
    var G__11738 = e;
    var G__11739 = f;
    var G__11740 = g;
    var G__11741 = h;
    var G__11742 = i;
    var G__11743 = j;
    var G__11744 = k;
    var G__11745 = l;
    var G__11746 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11734, G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, G__11743, G__11744, G__11745, G__11746) : self__.afn.call(null, G__11734, G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, G__11743, G__11744, G__11745, G__11746);
  };
  var G__12120__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11747 = a;
    var G__11748 = b;
    var G__11749 = c;
    var G__11750 = d;
    var G__11751 = e;
    var G__11752 = f;
    var G__11753 = g;
    var G__11754 = h;
    var G__11755 = i;
    var G__11756 = j;
    var G__11757 = k;
    var G__11758 = l;
    var G__11759 = m;
    var G__11760 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11747, G__11748, G__11749, G__11750, G__11751, G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760) : self__.afn.call(null, G__11747, G__11748, G__11749, G__11750, G__11751, G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760);
  };
  var G__12120__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11761 = a;
    var G__11762 = b;
    var G__11763 = c;
    var G__11764 = d;
    var G__11765 = e;
    var G__11766 = f;
    var G__11767 = g;
    var G__11768 = h;
    var G__11769 = i;
    var G__11770 = j;
    var G__11771 = k;
    var G__11772 = l;
    var G__11773 = m;
    var G__11774 = n;
    var G__11775 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11761, G__11762, G__11763, G__11764, G__11765, G__11766, G__11767, G__11768, G__11769, G__11770, G__11771, G__11772, G__11773, G__11774, G__11775) : self__.afn.call(null, G__11761, G__11762, G__11763, G__11764, G__11765, G__11766, G__11767, G__11768, G__11769, G__11770, G__11771, G__11772, G__11773, G__11774, G__11775);
  };
  var G__12120__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11776 = a;
    var G__11777 = b;
    var G__11778 = c;
    var G__11779 = d;
    var G__11780 = e;
    var G__11781 = f;
    var G__11782 = g;
    var G__11783 = h;
    var G__11784 = i;
    var G__11785 = j;
    var G__11786 = k;
    var G__11787 = l;
    var G__11788 = m;
    var G__11789 = n;
    var G__11790 = o;
    var G__11791 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11776, G__11777, G__11778, G__11779, G__11780, G__11781, G__11782, G__11783, G__11784, G__11785, G__11786, G__11787, G__11788, G__11789, G__11790, G__11791) : self__.afn.call(null, G__11776, G__11777, G__11778, G__11779, G__11780, G__11781, G__11782, G__11783, G__11784, G__11785, G__11786, G__11787, G__11788, G__11789, G__11790, G__11791);
  };
  var G__12120__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11792 = a;
    var G__11793 = b;
    var G__11794 = c;
    var G__11795 = d;
    var G__11796 = e;
    var G__11797 = f;
    var G__11798 = g;
    var G__11799 = h;
    var G__11800 = i;
    var G__11801 = j;
    var G__11802 = k;
    var G__11803 = l;
    var G__11804 = m;
    var G__11805 = n;
    var G__11806 = o;
    var G__11807 = p;
    var G__11808 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11792, G__11793, G__11794, G__11795, G__11796, G__11797, G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804, G__11805, G__11806, G__11807, G__11808) : self__.afn.call(null, G__11792, G__11793, G__11794, G__11795, G__11796, G__11797, G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804, G__11805, G__11806, G__11807, G__11808);
  };
  var G__12120__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11809 = a;
    var G__11810 = b;
    var G__11811 = c;
    var G__11812 = d;
    var G__11813 = e;
    var G__11814 = f;
    var G__11815 = g;
    var G__11816 = h;
    var G__11817 = i;
    var G__11818 = j;
    var G__11819 = k;
    var G__11820 = l;
    var G__11821 = m;
    var G__11822 = n;
    var G__11823 = o;
    var G__11824 = p;
    var G__11825 = q;
    var G__11826 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11809, G__11810, G__11811, G__11812, G__11813, G__11814, G__11815, G__11816, G__11817, G__11818, G__11819, G__11820, G__11821, G__11822, G__11823, G__11824, G__11825, G__11826) : self__.afn.call(null, G__11809, G__11810, G__11811, G__11812, G__11813, G__11814, G__11815, G__11816, G__11817, G__11818, G__11819, G__11820, G__11821, G__11822, G__11823, G__11824, G__11825, G__11826);
  };
  var G__12120__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11827 = a;
    var G__11828 = b;
    var G__11829 = c;
    var G__11830 = d;
    var G__11831 = e;
    var G__11832 = f;
    var G__11833 = g;
    var G__11834 = h;
    var G__11835 = i;
    var G__11836 = j;
    var G__11837 = k;
    var G__11838 = l;
    var G__11839 = m;
    var G__11840 = n;
    var G__11841 = o;
    var G__11842 = p;
    var G__11843 = q;
    var G__11844 = r;
    var G__11845 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11827, G__11828, G__11829, G__11830, G__11831, G__11832, G__11833, G__11834, G__11835, G__11836, G__11837, G__11838, G__11839, G__11840, G__11841, G__11842, G__11843, G__11844, G__11845) : self__.afn.call(null, G__11827, G__11828, G__11829, G__11830, G__11831, G__11832, G__11833, G__11834, G__11835, G__11836, G__11837, G__11838, G__11839, G__11840, G__11841, G__11842, G__11843, G__11844, G__11845);
  };
  var G__12120__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11846 = a;
    var G__11847 = b;
    var G__11848 = c;
    var G__11849 = d;
    var G__11850 = e;
    var G__11851 = f;
    var G__11852 = g;
    var G__11853 = h;
    var G__11854 = i;
    var G__11855 = j;
    var G__11856 = k;
    var G__11857 = l;
    var G__11858 = m;
    var G__11859 = n;
    var G__11860 = o;
    var G__11861 = p;
    var G__11862 = q;
    var G__11863 = r;
    var G__11864 = s;
    var G__11865 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, G__11865) : self__.afn.call(null, G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, 
    G__11864, G__11865);
  };
  var G__12120__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11866 = self__.afn;
    var G__11867 = a;
    var G__11868 = b;
    var G__11869 = c;
    var G__11870 = d;
    var G__11871 = e;
    var G__11872 = f;
    var G__11873 = g;
    var G__11874 = h;
    var G__11875 = i;
    var G__11876 = j;
    var G__11877 = k;
    var G__11878 = l;
    var G__11879 = m;
    var G__11880 = n;
    var G__11881 = o;
    var G__11882 = p;
    var G__11883 = q;
    var G__11884 = r;
    var G__11885 = s;
    var G__11886 = t;
    var G__11887 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11866, G__11867, G__11868, G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875, G__11876, G__11877, G__11878, G__11879, G__11880, G__11881, G__11882, G__11883, G__11884, G__11885, G__11886, G__11887) : cljs.core.apply.call(null, G__11866, G__11867, G__11868, G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875, G__11876, G__11877, G__11878, G__11879, G__11880, 
    G__11881, G__11882, G__11883, G__11884, G__11885, G__11886, G__11887);
  };
  G__12120 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12120__1.call(this, self__);
      case 2:
        return G__12120__2.call(this, self__, a);
      case 3:
        return G__12120__3.call(this, self__, a, b);
      case 4:
        return G__12120__4.call(this, self__, a, b, c);
      case 5:
        return G__12120__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12120__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12120__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12120__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12120__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12120__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12120__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12120__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12120__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12120__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12120__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12120__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12120__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12120__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12120__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12120__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12120__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12120__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12120.cljs$core$IFn$_invoke$arity$1 = G__12120__1;
  G__12120.cljs$core$IFn$_invoke$arity$2 = G__12120__2;
  G__12120.cljs$core$IFn$_invoke$arity$3 = G__12120__3;
  G__12120.cljs$core$IFn$_invoke$arity$4 = G__12120__4;
  G__12120.cljs$core$IFn$_invoke$arity$5 = G__12120__5;
  G__12120.cljs$core$IFn$_invoke$arity$6 = G__12120__6;
  G__12120.cljs$core$IFn$_invoke$arity$7 = G__12120__7;
  G__12120.cljs$core$IFn$_invoke$arity$8 = G__12120__8;
  G__12120.cljs$core$IFn$_invoke$arity$9 = G__12120__9;
  G__12120.cljs$core$IFn$_invoke$arity$10 = G__12120__10;
  G__12120.cljs$core$IFn$_invoke$arity$11 = G__12120__11;
  G__12120.cljs$core$IFn$_invoke$arity$12 = G__12120__12;
  G__12120.cljs$core$IFn$_invoke$arity$13 = G__12120__13;
  G__12120.cljs$core$IFn$_invoke$arity$14 = G__12120__14;
  G__12120.cljs$core$IFn$_invoke$arity$15 = G__12120__15;
  G__12120.cljs$core$IFn$_invoke$arity$16 = G__12120__16;
  G__12120.cljs$core$IFn$_invoke$arity$17 = G__12120__17;
  G__12120.cljs$core$IFn$_invoke$arity$18 = G__12120__18;
  G__12120.cljs$core$IFn$_invoke$arity$19 = G__12120__19;
  G__12120.cljs$core$IFn$_invoke$arity$20 = G__12120__20;
  G__12120.cljs$core$IFn$_invoke$arity$21 = G__12120__21;
  G__12120.cljs$core$IFn$_invoke$arity$22 = G__12120__22;
  return G__12120;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args11655) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11655)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__11888 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11888) : self__.afn.call(null, G__11888);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__11889 = a;
  var G__11890 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11889, G__11890) : self__.afn.call(null, G__11889, G__11890);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__11891 = a;
  var G__11892 = b;
  var G__11893 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11891, G__11892, G__11893) : self__.afn.call(null, G__11891, G__11892, G__11893);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__11894 = a;
  var G__11895 = b;
  var G__11896 = c;
  var G__11897 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11894, G__11895, G__11896, G__11897) : self__.afn.call(null, G__11894, G__11895, G__11896, G__11897);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__11898 = a;
  var G__11899 = b;
  var G__11900 = c;
  var G__11901 = d;
  var G__11902 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11898, G__11899, G__11900, G__11901, G__11902) : self__.afn.call(null, G__11898, G__11899, G__11900, G__11901, G__11902);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__11903 = a;
  var G__11904 = b;
  var G__11905 = c;
  var G__11906 = d;
  var G__11907 = e;
  var G__11908 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11903, G__11904, G__11905, G__11906, G__11907, G__11908) : self__.afn.call(null, G__11903, G__11904, G__11905, G__11906, G__11907, G__11908);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__11909 = a;
  var G__11910 = b;
  var G__11911 = c;
  var G__11912 = d;
  var G__11913 = e;
  var G__11914 = f;
  var G__11915 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11909, G__11910, G__11911, G__11912, G__11913, G__11914, G__11915) : self__.afn.call(null, G__11909, G__11910, G__11911, G__11912, G__11913, G__11914, G__11915);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__11916 = a;
  var G__11917 = b;
  var G__11918 = c;
  var G__11919 = d;
  var G__11920 = e;
  var G__11921 = f;
  var G__11922 = g;
  var G__11923 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11916, G__11917, G__11918, G__11919, G__11920, G__11921, G__11922, G__11923) : self__.afn.call(null, G__11916, G__11917, G__11918, G__11919, G__11920, G__11921, G__11922, G__11923);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__11924 = a;
  var G__11925 = b;
  var G__11926 = c;
  var G__11927 = d;
  var G__11928 = e;
  var G__11929 = f;
  var G__11930 = g;
  var G__11931 = h;
  var G__11932 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11924, G__11925, G__11926, G__11927, G__11928, G__11929, G__11930, G__11931, G__11932) : self__.afn.call(null, G__11924, G__11925, G__11926, G__11927, G__11928, G__11929, G__11930, G__11931, G__11932);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__11933 = a;
  var G__11934 = b;
  var G__11935 = c;
  var G__11936 = d;
  var G__11937 = e;
  var G__11938 = f;
  var G__11939 = g;
  var G__11940 = h;
  var G__11941 = i;
  var G__11942 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11933, G__11934, G__11935, G__11936, G__11937, G__11938, G__11939, G__11940, G__11941, G__11942) : self__.afn.call(null, G__11933, G__11934, G__11935, G__11936, G__11937, G__11938, G__11939, G__11940, G__11941, G__11942);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__11943 = a;
  var G__11944 = b;
  var G__11945 = c;
  var G__11946 = d;
  var G__11947 = e;
  var G__11948 = f;
  var G__11949 = g;
  var G__11950 = h;
  var G__11951 = i;
  var G__11952 = j;
  var G__11953 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11943, G__11944, G__11945, G__11946, G__11947, G__11948, G__11949, G__11950, G__11951, G__11952, G__11953) : self__.afn.call(null, G__11943, G__11944, G__11945, G__11946, G__11947, G__11948, G__11949, G__11950, G__11951, G__11952, G__11953);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__11954 = a;
  var G__11955 = b;
  var G__11956 = c;
  var G__11957 = d;
  var G__11958 = e;
  var G__11959 = f;
  var G__11960 = g;
  var G__11961 = h;
  var G__11962 = i;
  var G__11963 = j;
  var G__11964 = k;
  var G__11965 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11954, G__11955, G__11956, G__11957, G__11958, G__11959, G__11960, G__11961, G__11962, G__11963, G__11964, G__11965) : self__.afn.call(null, G__11954, G__11955, G__11956, G__11957, G__11958, G__11959, G__11960, G__11961, G__11962, G__11963, G__11964, G__11965);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__11966 = a;
  var G__11967 = b;
  var G__11968 = c;
  var G__11969 = d;
  var G__11970 = e;
  var G__11971 = f;
  var G__11972 = g;
  var G__11973 = h;
  var G__11974 = i;
  var G__11975 = j;
  var G__11976 = k;
  var G__11977 = l;
  var G__11978 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11966, G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973, G__11974, G__11975, G__11976, G__11977, G__11978) : self__.afn.call(null, G__11966, G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973, G__11974, G__11975, G__11976, G__11977, G__11978);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__11979 = a;
  var G__11980 = b;
  var G__11981 = c;
  var G__11982 = d;
  var G__11983 = e;
  var G__11984 = f;
  var G__11985 = g;
  var G__11986 = h;
  var G__11987 = i;
  var G__11988 = j;
  var G__11989 = k;
  var G__11990 = l;
  var G__11991 = m;
  var G__11992 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11979, G__11980, G__11981, G__11982, G__11983, G__11984, G__11985, G__11986, G__11987, G__11988, G__11989, G__11990, G__11991, G__11992) : self__.afn.call(null, G__11979, G__11980, G__11981, G__11982, G__11983, G__11984, G__11985, G__11986, G__11987, G__11988, G__11989, G__11990, G__11991, G__11992);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__11993 = a;
  var G__11994 = b;
  var G__11995 = c;
  var G__11996 = d;
  var G__11997 = e;
  var G__11998 = f;
  var G__11999 = g;
  var G__12000 = h;
  var G__12001 = i;
  var G__12002 = j;
  var G__12003 = k;
  var G__12004 = l;
  var G__12005 = m;
  var G__12006 = n;
  var G__12007 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11993, G__11994, G__11995, G__11996, G__11997, G__11998, G__11999, G__12000, G__12001, G__12002, G__12003, G__12004, G__12005, G__12006, G__12007) : self__.afn.call(null, G__11993, G__11994, G__11995, G__11996, G__11997, G__11998, G__11999, G__12000, G__12001, G__12002, G__12003, G__12004, G__12005, G__12006, G__12007);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__12008 = a;
  var G__12009 = b;
  var G__12010 = c;
  var G__12011 = d;
  var G__12012 = e;
  var G__12013 = f;
  var G__12014 = g;
  var G__12015 = h;
  var G__12016 = i;
  var G__12017 = j;
  var G__12018 = k;
  var G__12019 = l;
  var G__12020 = m;
  var G__12021 = n;
  var G__12022 = o;
  var G__12023 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12008, G__12009, G__12010, G__12011, G__12012, G__12013, G__12014, G__12015, G__12016, G__12017, G__12018, G__12019, G__12020, G__12021, G__12022, G__12023) : self__.afn.call(null, G__12008, G__12009, G__12010, G__12011, G__12012, G__12013, G__12014, G__12015, G__12016, G__12017, G__12018, G__12019, G__12020, G__12021, G__12022, G__12023);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__12024 = a;
  var G__12025 = b;
  var G__12026 = c;
  var G__12027 = d;
  var G__12028 = e;
  var G__12029 = f;
  var G__12030 = g;
  var G__12031 = h;
  var G__12032 = i;
  var G__12033 = j;
  var G__12034 = k;
  var G__12035 = l;
  var G__12036 = m;
  var G__12037 = n;
  var G__12038 = o;
  var G__12039 = p;
  var G__12040 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12024, G__12025, G__12026, G__12027, G__12028, G__12029, G__12030, G__12031, G__12032, G__12033, G__12034, G__12035, G__12036, G__12037, G__12038, G__12039, G__12040) : self__.afn.call(null, G__12024, G__12025, G__12026, G__12027, G__12028, G__12029, G__12030, G__12031, G__12032, G__12033, G__12034, G__12035, G__12036, G__12037, G__12038, G__12039, G__12040);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__12041 = a;
  var G__12042 = b;
  var G__12043 = c;
  var G__12044 = d;
  var G__12045 = e;
  var G__12046 = f;
  var G__12047 = g;
  var G__12048 = h;
  var G__12049 = i;
  var G__12050 = j;
  var G__12051 = k;
  var G__12052 = l;
  var G__12053 = m;
  var G__12054 = n;
  var G__12055 = o;
  var G__12056 = p;
  var G__12057 = q;
  var G__12058 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12041, G__12042, G__12043, G__12044, G__12045, G__12046, G__12047, G__12048, G__12049, G__12050, G__12051, G__12052, G__12053, G__12054, G__12055, G__12056, G__12057, G__12058) : self__.afn.call(null, G__12041, G__12042, G__12043, G__12044, G__12045, G__12046, G__12047, G__12048, G__12049, G__12050, G__12051, G__12052, G__12053, G__12054, G__12055, G__12056, G__12057, G__12058);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__12059 = a;
  var G__12060 = b;
  var G__12061 = c;
  var G__12062 = d;
  var G__12063 = e;
  var G__12064 = f;
  var G__12065 = g;
  var G__12066 = h;
  var G__12067 = i;
  var G__12068 = j;
  var G__12069 = k;
  var G__12070 = l;
  var G__12071 = m;
  var G__12072 = n;
  var G__12073 = o;
  var G__12074 = p;
  var G__12075 = q;
  var G__12076 = r;
  var G__12077 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12059, G__12060, G__12061, G__12062, G__12063, G__12064, G__12065, G__12066, G__12067, G__12068, G__12069, G__12070, G__12071, G__12072, G__12073, G__12074, G__12075, G__12076, G__12077) : self__.afn.call(null, G__12059, G__12060, G__12061, G__12062, G__12063, G__12064, G__12065, G__12066, G__12067, G__12068, G__12069, G__12070, G__12071, G__12072, G__12073, G__12074, G__12075, G__12076, G__12077);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__12078 = a;
  var G__12079 = b;
  var G__12080 = c;
  var G__12081 = d;
  var G__12082 = e;
  var G__12083 = f;
  var G__12084 = g;
  var G__12085 = h;
  var G__12086 = i;
  var G__12087 = j;
  var G__12088 = k;
  var G__12089 = l;
  var G__12090 = m;
  var G__12091 = n;
  var G__12092 = o;
  var G__12093 = p;
  var G__12094 = q;
  var G__12095 = r;
  var G__12096 = s;
  var G__12097 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12078, G__12079, G__12080, G__12081, G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090, G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, G__12097) : self__.afn.call(null, G__12078, G__12079, G__12080, G__12081, G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090, G__12091, G__12092, G__12093, G__12094, G__12095, G__12096, 
  G__12097);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__12098 = self__.afn;
  var G__12099 = a;
  var G__12100 = b;
  var G__12101 = c;
  var G__12102 = d;
  var G__12103 = e;
  var G__12104 = f;
  var G__12105 = g;
  var G__12106 = h;
  var G__12107 = i;
  var G__12108 = j;
  var G__12109 = k;
  var G__12110 = l;
  var G__12111 = m;
  var G__12112 = n;
  var G__12113 = o;
  var G__12114 = p;
  var G__12115 = q;
  var G__12116 = r;
  var G__12117 = s;
  var G__12118 = t;
  var G__12119 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12098, G__12099, G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109, G__12110, G__12111, G__12112, G__12113, G__12114, G__12115, G__12116, G__12117, G__12118, G__12119) : cljs.core.apply.call(null, G__12098, G__12099, G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109, G__12110, G__12111, G__12112, 
  G__12113, G__12114, G__12115, G__12116, G__12117, G__12118, G__12119);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__12124 = o;
    if (G__12124) {
      var bit__4480__auto__ = G__12124.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4480__auto__ || G__12124.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__12124.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12124);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12124);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3787__auto__ = !(o == null);
    if (and__3787__auto__) {
      var G__12128 = o;
      if (G__12128) {
        var bit__4480__auto__ = G__12128.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4480__auto__ || G__12128.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__12128.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12128);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12128);
      }
    } else {
      return and__3787__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__12131__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12132 = ret;
            var G__12133 = cljs.core.first(ks);
            var G__12134 = cljs.core.next(ks);
            coll = G__12132;
            k = G__12133;
            ks = G__12134;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12131 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12135__i = 0, G__12135__a = new Array(arguments.length - 2);
        while (G__12135__i < G__12135__a.length) {
          G__12135__a[G__12135__i] = arguments[G__12135__i + 2];
          ++G__12135__i;
        }
        ks = new cljs.core.IndexedSeq(G__12135__a, 0);
      }
      return G__12131__delegate.call(this, coll, k, ks);
    };
    G__12131.cljs$lang$maxFixedArity = 2;
    G__12131.cljs$lang$applyTo = function(arglist__12136) {
      var coll = cljs.core.first(arglist__12136);
      arglist__12136 = cljs.core.next(arglist__12136);
      var k = cljs.core.first(arglist__12136);
      var ks = cljs.core.rest(arglist__12136);
      return G__12131__delegate(coll, k, ks);
    };
    G__12131.cljs$core$IFn$_invoke$arity$variadic = G__12131__delegate;
    return G__12131;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__12137 = null;
        if (arguments.length > 2) {
          var G__12138__i = 0, G__12138__a = new Array(arguments.length - 2);
          while (G__12138__i < G__12138__a.length) {
            G__12138__a[G__12138__i] = arguments[G__12138__i + 2];
            ++G__12138__i;
          }
          G__12137 = new cljs.core.IndexedSeq(G__12138__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12137);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12140 = x;
    if (G__12140) {
      var bit__4480__auto__ = G__12140.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4480__auto__ || G__12140.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__12140.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12140);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12140);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12142 = x;
    if (G__12142) {
      var bit__4480__auto__ = G__12142.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4480__auto__ || G__12142.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__12142.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12142);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12142);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12144 = x;
  if (G__12144) {
    var bit__4480__auto__ = G__12144.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4480__auto__ || G__12144.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__12144.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12144);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12144);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12146 = x;
  if (G__12146) {
    var bit__4480__auto__ = G__12146.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4480__auto__ || G__12146.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__12146.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12146);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12146);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__12148 = x;
  if (G__12148) {
    var bit__4480__auto__ = G__12148.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4480__auto__ || G__12148.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__12148.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12148);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12148);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12150 = x;
  if (G__12150) {
    var bit__4480__auto__ = G__12150.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4480__auto__ || G__12150.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__12150.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12150);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12150);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12152 = x;
    if (G__12152) {
      var bit__4480__auto__ = G__12152.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4480__auto__ || G__12152.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__12152.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12152);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12152);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12154 = x;
  if (G__12154) {
    var bit__4480__auto__ = G__12154.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4480__auto__ || G__12154.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__12154.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12154);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12154);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12156 = x;
  if (G__12156) {
    var bit__4473__auto__ = G__12156.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4473__auto__ || G__12156.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj12162 = {};
    return obj12162;
  };
  var js_obj__1 = function() {
    var G__12165__delegate = function(keyvals) {
      var G__12163 = goog.object.create;
      var G__12164 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12163, G__12164) : cljs.core.apply.call(null, G__12163, G__12164);
    };
    var G__12165 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__12166__i = 0, G__12166__a = new Array(arguments.length - 0);
        while (G__12166__i < G__12166__a.length) {
          G__12166__a[G__12166__i] = arguments[G__12166__i + 0];
          ++G__12166__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__12166__a, 0);
      }
      return G__12165__delegate.call(this, keyvals);
    };
    G__12165.cljs$lang$maxFixedArity = 0;
    G__12165.cljs$lang$applyTo = function(arglist__12167) {
      var keyvals = cljs.core.seq(arglist__12167);
      return G__12165__delegate(keyvals);
    };
    G__12165.cljs$core$IFn$_invoke$arity$variadic = G__12165__delegate;
    return G__12165;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__12168 = null;
        if (arguments.length > 0) {
          var G__12169__i = 0, G__12169__a = new Array(arguments.length - 0);
          while (G__12169__i < G__12169__a.length) {
            G__12169__a[G__12169__i] = arguments[G__12169__i + 0];
            ++G__12169__i;
          }
          G__12168 = new cljs.core.IndexedSeq(G__12169__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12168);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__12172_12174 = obj;
  var G__12173_12175 = function(G__12172_12174, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__12172_12174, keys);
  goog.object.forEach(G__12172_12174, G__12173_12175);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12176 = i__$1 + 1;
      var G__12177 = j__$1 + 1;
      var G__12178 = len__$1 - 1;
      i__$1 = G__12176;
      j__$1 = G__12177;
      len__$1 = G__12178;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12179 = i__$1 - 1;
      var G__12180 = j__$1 - 1;
      var G__12181 = len__$1 - 1;
      i__$1 = G__12179;
      j__$1 = G__12180;
      len__$1 = G__12181;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj12183 = {};
  return obj12183;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__12185 = s;
    if (G__12185) {
      var bit__4480__auto__ = G__12185.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4480__auto__ || G__12185.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__12185.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12185);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12185);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12187 = s;
  if (G__12187) {
    var bit__4480__auto__ = G__12187.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4480__auto__ || G__12187.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__12187.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12187);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12187);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3799__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3799__auto__) {
    return or__3799__auto__;
  } else {
    var G__12191 = f;
    if (G__12191) {
      var bit__4480__auto__ = G__12191.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4480__auto__ || G__12191.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__12191.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12191);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12191);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__12204 = n;
    return isNaN(G__12204);
  }()) && !(n === Infinity) && function() {
    var G__12205 = n;
    return parseFloat(G__12205);
  }() === function() {
    var G__12206 = n;
    var G__12207 = 10;
    return parseInt(G__12206, G__12207);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__12208__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__12209 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__12210 = etc;
              s = G__12209;
              xs = G__12210;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__12208 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12211__i = 0, G__12211__a = new Array(arguments.length - 2);
        while (G__12211__i < G__12211__a.length) {
          G__12211__a[G__12211__i] = arguments[G__12211__i + 2];
          ++G__12211__i;
        }
        more = new cljs.core.IndexedSeq(G__12211__a, 0);
      }
      return G__12208__delegate.call(this, x, y, more);
    };
    G__12208.cljs$lang$maxFixedArity = 2;
    G__12208.cljs$lang$applyTo = function(arglist__12212) {
      var x = cljs.core.first(arglist__12212);
      arglist__12212 = cljs.core.next(arglist__12212);
      var y = cljs.core.first(arglist__12212);
      var more = cljs.core.rest(arglist__12212);
      return G__12208__delegate(x, y, more);
    };
    G__12208.cljs$core$IFn$_invoke$arity$variadic = G__12208__delegate;
    return G__12208;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__12213 = null;
        if (arguments.length > 2) {
          var G__12214__i = 0, G__12214__a = new Array(arguments.length - 2);
          while (G__12214__i < G__12214__a.length) {
            G__12214__a[G__12214__i] = arguments[G__12214__i + 2];
            ++G__12214__i;
          }
          G__12213 = new cljs.core.IndexedSeq(G__12214__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12213);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__12218 = x;
            if (G__12218) {
              var bit__4473__auto__ = G__12218.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4473__auto__ || G__12218.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__12219 = x;
            var G__12220 = y;
            return goog.array.defaultCompare(G__12219, G__12220);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__12225 = xs;
        var G__12226 = ys;
        var G__12227 = len;
        var G__12228 = n + 1;
        xs = G__12225;
        ys = G__12226;
        len = G__12227;
        n = G__12228;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__12233 = x;
        var G__12234 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12233, G__12234) : f.call(null, G__12233, G__12234);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__12235 = y;
            var G__12236 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12235, G__12236) : f.call(null, G__12235, G__12236);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__12242 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12242) : cljs.core.to_array.call(null, G__12242);
      }();
      var G__12243_12245 = a;
      var G__12244_12246 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__12243_12245, G__12244_12246);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__12252 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12252) : keyfn.call(null, G__12252);
      }(), function() {
        var G__12253 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12253) : keyfn.call(null, G__12253);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__12259 = f;
      var G__12260 = cljs.core.first(s);
      var G__12261 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12259, G__12260, G__12261) : cljs.core.reduce.call(null, G__12259, G__12260, G__12261);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__12262 = val__$1;
          var G__12263 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12262, G__12263) : f.call(null, G__12262, G__12263);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12264 = nval;
          var G__12265 = cljs.core.next(coll__$1);
          val__$1 = G__12264;
          coll__$1 = G__12265;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__12269 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12269) : cljs.core.to_array.call(null, G__12269);
  }();
  var G__12270_12272 = a;
  goog.array.shuffle(G__12270_12272);
  var G__12271 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12271) : cljs.core.vec.call(null, G__12271);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__12275 = coll;
      if (G__12275) {
        var bit__4473__auto__ = G__12275.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4473__auto__ || G__12275.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__12276 = coll;
      if (G__12276) {
        var bit__4473__auto__ = G__12276.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4473__auto__ || G__12276.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__12285 = null;
      var G__12285__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__12285__1 = function(x) {
        var G__12282 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12282) : cf.call(null, G__12282);
      };
      var G__12285__2 = function(x, y) {
        var G__12283 = x;
        var G__12284 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12283, G__12284) : f.call(null, G__12283, G__12284);
      };
      G__12285 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__12285__0.call(this);
          case 1:
            return G__12285__1.call(this, x);
          case 2:
            return G__12285__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12285.cljs$core$IFn$_invoke$arity$0 = G__12285__0;
      G__12285.cljs$core$IFn$_invoke$arity$1 = G__12285__1;
      G__12285.cljs$core$IFn$_invoke$arity$2 = G__12285__2;
      return G__12285;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__12292 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12292) : xform.call(null, G__12292);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__12293 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12293) : f__$1.call(null, G__12293);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__12294__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__12294 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12295__i = 0, G__12295__a = new Array(arguments.length - 2);
        while (G__12295__i < G__12295__a.length) {
          G__12295__a[G__12295__i] = arguments[G__12295__i + 2];
          ++G__12295__i;
        }
        more = new cljs.core.IndexedSeq(G__12295__a, 0);
      }
      return G__12294__delegate.call(this, x, y, more);
    };
    G__12294.cljs$lang$maxFixedArity = 2;
    G__12294.cljs$lang$applyTo = function(arglist__12296) {
      var x = cljs.core.first(arglist__12296);
      arglist__12296 = cljs.core.next(arglist__12296);
      var y = cljs.core.first(arglist__12296);
      var more = cljs.core.rest(arglist__12296);
      return G__12294__delegate(x, y, more);
    };
    G__12294.cljs$core$IFn$_invoke$arity$variadic = G__12294__delegate;
    return G__12294;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__12297 = null;
        if (arguments.length > 2) {
          var G__12298__i = 0, G__12298__a = new Array(arguments.length - 2);
          while (G__12298__i < G__12298__a.length) {
            G__12298__a[G__12298__i] = arguments[G__12298__i + 2];
            ++G__12298__i;
          }
          G__12297 = new cljs.core.IndexedSeq(G__12298__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12297);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__12299__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__12299 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12300__i = 0, G__12300__a = new Array(arguments.length - 2);
        while (G__12300__i < G__12300__a.length) {
          G__12300__a[G__12300__i] = arguments[G__12300__i + 2];
          ++G__12300__i;
        }
        more = new cljs.core.IndexedSeq(G__12300__a, 0);
      }
      return G__12299__delegate.call(this, x, y, more);
    };
    G__12299.cljs$lang$maxFixedArity = 2;
    G__12299.cljs$lang$applyTo = function(arglist__12301) {
      var x = cljs.core.first(arglist__12301);
      arglist__12301 = cljs.core.next(arglist__12301);
      var y = cljs.core.first(arglist__12301);
      var more = cljs.core.rest(arglist__12301);
      return G__12299__delegate(x, y, more);
    };
    G__12299.cljs$core$IFn$_invoke$arity$variadic = G__12299__delegate;
    return G__12299;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__12302 = null;
        if (arguments.length > 2) {
          var G__12303__i = 0, G__12303__a = new Array(arguments.length - 2);
          while (G__12303__i < G__12303__a.length) {
            G__12303__a[G__12303__i] = arguments[G__12303__i + 2];
            ++G__12303__i;
          }
          G__12302 = new cljs.core.IndexedSeq(G__12303__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12302);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__12304__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__12304 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12305__i = 0, G__12305__a = new Array(arguments.length - 2);
        while (G__12305__i < G__12305__a.length) {
          G__12305__a[G__12305__i] = arguments[G__12305__i + 2];
          ++G__12305__i;
        }
        more = new cljs.core.IndexedSeq(G__12305__a, 0);
      }
      return G__12304__delegate.call(this, x, y, more);
    };
    G__12304.cljs$lang$maxFixedArity = 2;
    G__12304.cljs$lang$applyTo = function(arglist__12306) {
      var x = cljs.core.first(arglist__12306);
      arglist__12306 = cljs.core.next(arglist__12306);
      var y = cljs.core.first(arglist__12306);
      var more = cljs.core.rest(arglist__12306);
      return G__12304__delegate(x, y, more);
    };
    G__12304.cljs$core$IFn$_invoke$arity$variadic = G__12304__delegate;
    return G__12304;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__12307 = null;
        if (arguments.length > 2) {
          var G__12308__i = 0, G__12308__a = new Array(arguments.length - 2);
          while (G__12308__i < G__12308__a.length) {
            G__12308__a[G__12308__i] = arguments[G__12308__i + 2];
            ++G__12308__i;
          }
          G__12307 = new cljs.core.IndexedSeq(G__12308__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12307);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__12313__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12313 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12314__i = 0, G__12314__a = new Array(arguments.length - 2);
        while (G__12314__i < G__12314__a.length) {
          G__12314__a[G__12314__i] = arguments[G__12314__i + 2];
          ++G__12314__i;
        }
        more = new cljs.core.IndexedSeq(G__12314__a, 0);
      }
      return G__12313__delegate.call(this, x, y, more);
    };
    G__12313.cljs$lang$maxFixedArity = 2;
    G__12313.cljs$lang$applyTo = function(arglist__12315) {
      var x = cljs.core.first(arglist__12315);
      arglist__12315 = cljs.core.next(arglist__12315);
      var y = cljs.core.first(arglist__12315);
      var more = cljs.core.rest(arglist__12315);
      return G__12313__delegate(x, y, more);
    };
    G__12313.cljs$core$IFn$_invoke$arity$variadic = G__12313__delegate;
    return G__12313;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__12316 = null;
        if (arguments.length > 2) {
          var G__12317__i = 0, G__12317__a = new Array(arguments.length - 2);
          while (G__12317__i < G__12317__a.length) {
            G__12317__a[G__12317__i] = arguments[G__12317__i + 2];
            ++G__12317__i;
          }
          G__12316 = new cljs.core.IndexedSeq(G__12317__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12316);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__12318__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__12319 = y;
            var G__12320 = cljs.core.first(more);
            var G__12321 = cljs.core.next(more);
            x = G__12319;
            y = G__12320;
            more = G__12321;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12318 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12322__i = 0, G__12322__a = new Array(arguments.length - 2);
        while (G__12322__i < G__12322__a.length) {
          G__12322__a[G__12322__i] = arguments[G__12322__i + 2];
          ++G__12322__i;
        }
        more = new cljs.core.IndexedSeq(G__12322__a, 0);
      }
      return G__12318__delegate.call(this, x, y, more);
    };
    G__12318.cljs$lang$maxFixedArity = 2;
    G__12318.cljs$lang$applyTo = function(arglist__12323) {
      var x = cljs.core.first(arglist__12323);
      arglist__12323 = cljs.core.next(arglist__12323);
      var y = cljs.core.first(arglist__12323);
      var more = cljs.core.rest(arglist__12323);
      return G__12318__delegate(x, y, more);
    };
    G__12318.cljs$core$IFn$_invoke$arity$variadic = G__12318__delegate;
    return G__12318;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__12324 = null;
        if (arguments.length > 2) {
          var G__12325__i = 0, G__12325__a = new Array(arguments.length - 2);
          while (G__12325__i < G__12325__a.length) {
            G__12325__a[G__12325__i] = arguments[G__12325__i + 2];
            ++G__12325__i;
          }
          G__12324 = new cljs.core.IndexedSeq(G__12325__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12324);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__12326__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__12327 = y;
            var G__12328 = cljs.core.first(more);
            var G__12329 = cljs.core.next(more);
            x = G__12327;
            y = G__12328;
            more = G__12329;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12326 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12330__i = 0, G__12330__a = new Array(arguments.length - 2);
        while (G__12330__i < G__12330__a.length) {
          G__12330__a[G__12330__i] = arguments[G__12330__i + 2];
          ++G__12330__i;
        }
        more = new cljs.core.IndexedSeq(G__12330__a, 0);
      }
      return G__12326__delegate.call(this, x, y, more);
    };
    G__12326.cljs$lang$maxFixedArity = 2;
    G__12326.cljs$lang$applyTo = function(arglist__12331) {
      var x = cljs.core.first(arglist__12331);
      arglist__12331 = cljs.core.next(arglist__12331);
      var y = cljs.core.first(arglist__12331);
      var more = cljs.core.rest(arglist__12331);
      return G__12326__delegate(x, y, more);
    };
    G__12326.cljs$core$IFn$_invoke$arity$variadic = G__12326__delegate;
    return G__12326;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__12332 = null;
        if (arguments.length > 2) {
          var G__12333__i = 0, G__12333__a = new Array(arguments.length - 2);
          while (G__12333__i < G__12333__a.length) {
            G__12333__a[G__12333__i] = arguments[G__12333__i + 2];
            ++G__12333__i;
          }
          G__12332 = new cljs.core.IndexedSeq(G__12333__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12332);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__12334__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__12335 = y;
            var G__12336 = cljs.core.first(more);
            var G__12337 = cljs.core.next(more);
            x = G__12335;
            y = G__12336;
            more = G__12337;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12334 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12338__i = 0, G__12338__a = new Array(arguments.length - 2);
        while (G__12338__i < G__12338__a.length) {
          G__12338__a[G__12338__i] = arguments[G__12338__i + 2];
          ++G__12338__i;
        }
        more = new cljs.core.IndexedSeq(G__12338__a, 0);
      }
      return G__12334__delegate.call(this, x, y, more);
    };
    G__12334.cljs$lang$maxFixedArity = 2;
    G__12334.cljs$lang$applyTo = function(arglist__12339) {
      var x = cljs.core.first(arglist__12339);
      arglist__12339 = cljs.core.next(arglist__12339);
      var y = cljs.core.first(arglist__12339);
      var more = cljs.core.rest(arglist__12339);
      return G__12334__delegate(x, y, more);
    };
    G__12334.cljs$core$IFn$_invoke$arity$variadic = G__12334__delegate;
    return G__12334;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__12340 = null;
        if (arguments.length > 2) {
          var G__12341__i = 0, G__12341__a = new Array(arguments.length - 2);
          while (G__12341__i < G__12341__a.length) {
            G__12341__a[G__12341__i] = arguments[G__12341__i + 2];
            ++G__12341__i;
          }
          G__12340 = new cljs.core.IndexedSeq(G__12341__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12340);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__12342__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__12343 = y;
            var G__12344 = cljs.core.first(more);
            var G__12345 = cljs.core.next(more);
            x = G__12343;
            y = G__12344;
            more = G__12345;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12342 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12346__i = 0, G__12346__a = new Array(arguments.length - 2);
        while (G__12346__i < G__12346__a.length) {
          G__12346__a[G__12346__i] = arguments[G__12346__i + 2];
          ++G__12346__i;
        }
        more = new cljs.core.IndexedSeq(G__12346__a, 0);
      }
      return G__12342__delegate.call(this, x, y, more);
    };
    G__12342.cljs$lang$maxFixedArity = 2;
    G__12342.cljs$lang$applyTo = function(arglist__12347) {
      var x = cljs.core.first(arglist__12347);
      arglist__12347 = cljs.core.next(arglist__12347);
      var y = cljs.core.first(arglist__12347);
      var more = cljs.core.rest(arglist__12347);
      return G__12342__delegate(x, y, more);
    };
    G__12342.cljs$core$IFn$_invoke$arity$variadic = G__12342__delegate;
    return G__12342;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__12348 = null;
        if (arguments.length > 2) {
          var G__12349__i = 0, G__12349__a = new Array(arguments.length - 2);
          while (G__12349__i < G__12349__a.length) {
            G__12349__a[G__12349__i] = arguments[G__12349__i + 2];
            ++G__12349__i;
          }
          G__12348 = new cljs.core.IndexedSeq(G__12349__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12348);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4116__auto__ = x;
    var y__4117__auto__ = y;
    return x__4116__auto__ > y__4117__auto__ ? x__4116__auto__ : y__4117__auto__;
  };
  var max__3 = function() {
    var G__12350__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4116__auto__ = x;
        var y__4117__auto__ = y;
        return x__4116__auto__ > y__4117__auto__ ? x__4116__auto__ : y__4117__auto__;
      }(), more);
    };
    var G__12350 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12351__i = 0, G__12351__a = new Array(arguments.length - 2);
        while (G__12351__i < G__12351__a.length) {
          G__12351__a[G__12351__i] = arguments[G__12351__i + 2];
          ++G__12351__i;
        }
        more = new cljs.core.IndexedSeq(G__12351__a, 0);
      }
      return G__12350__delegate.call(this, x, y, more);
    };
    G__12350.cljs$lang$maxFixedArity = 2;
    G__12350.cljs$lang$applyTo = function(arglist__12352) {
      var x = cljs.core.first(arglist__12352);
      arglist__12352 = cljs.core.next(arglist__12352);
      var y = cljs.core.first(arglist__12352);
      var more = cljs.core.rest(arglist__12352);
      return G__12350__delegate(x, y, more);
    };
    G__12350.cljs$core$IFn$_invoke$arity$variadic = G__12350__delegate;
    return G__12350;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__12353 = null;
        if (arguments.length > 2) {
          var G__12354__i = 0, G__12354__a = new Array(arguments.length - 2);
          while (G__12354__i < G__12354__a.length) {
            G__12354__a[G__12354__i] = arguments[G__12354__i + 2];
            ++G__12354__i;
          }
          G__12353 = new cljs.core.IndexedSeq(G__12354__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12353);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4123__auto__ = x;
    var y__4124__auto__ = y;
    return x__4123__auto__ < y__4124__auto__ ? x__4123__auto__ : y__4124__auto__;
  };
  var min__3 = function() {
    var G__12355__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4123__auto__ = x;
        var y__4124__auto__ = y;
        return x__4123__auto__ < y__4124__auto__ ? x__4123__auto__ : y__4124__auto__;
      }(), more);
    };
    var G__12355 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12356__i = 0, G__12356__a = new Array(arguments.length - 2);
        while (G__12356__i < G__12356__a.length) {
          G__12356__a[G__12356__i] = arguments[G__12356__i + 2];
          ++G__12356__i;
        }
        more = new cljs.core.IndexedSeq(G__12356__a, 0);
      }
      return G__12355__delegate.call(this, x, y, more);
    };
    G__12355.cljs$lang$maxFixedArity = 2;
    G__12355.cljs$lang$applyTo = function(arglist__12357) {
      var x = cljs.core.first(arglist__12357);
      arglist__12357 = cljs.core.next(arglist__12357);
      var y = cljs.core.first(arglist__12357);
      var more = cljs.core.rest(arglist__12357);
      return G__12355__delegate(x, y, more);
    };
    G__12355.cljs$core$IFn$_invoke$arity$variadic = G__12355__delegate;
    return G__12355;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__12358 = null;
        if (arguments.length > 2) {
          var G__12359__i = 0, G__12359__a = new Array(arguments.length - 2);
          while (G__12359__i < G__12359__a.length) {
            G__12359__a[G__12359__i] = arguments[G__12359__i + 2];
            ++G__12359__i;
          }
          G__12358 = new cljs.core.IndexedSeq(G__12359__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12358);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__12360__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__12360 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12361__i = 0, G__12361__a = new Array(arguments.length - 2);
        while (G__12361__i < G__12361__a.length) {
          G__12361__a[G__12361__i] = arguments[G__12361__i + 2];
          ++G__12361__i;
        }
        more = new cljs.core.IndexedSeq(G__12361__a, 0);
      }
      return G__12360__delegate.call(this, x, y, more);
    };
    G__12360.cljs$lang$maxFixedArity = 2;
    G__12360.cljs$lang$applyTo = function(arglist__12362) {
      var x = cljs.core.first(arglist__12362);
      arglist__12362 = cljs.core.next(arglist__12362);
      var y = cljs.core.first(arglist__12362);
      var more = cljs.core.rest(arglist__12362);
      return G__12360__delegate(x, y, more);
    };
    G__12360.cljs$core$IFn$_invoke$arity$variadic = G__12360__delegate;
    return G__12360;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__12363 = null;
        if (arguments.length > 2) {
          var G__12364__i = 0, G__12364__a = new Array(arguments.length - 2);
          while (G__12364__i < G__12364__a.length) {
            G__12364__a[G__12364__i] = arguments[G__12364__i + 2];
            ++G__12364__i;
          }
          G__12363 = new cljs.core.IndexedSeq(G__12364__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12363);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__12365__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__12365 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12366__i = 0, G__12366__a = new Array(arguments.length - 2);
        while (G__12366__i < G__12366__a.length) {
          G__12366__a[G__12366__i] = arguments[G__12366__i + 2];
          ++G__12366__i;
        }
        more = new cljs.core.IndexedSeq(G__12366__a, 0);
      }
      return G__12365__delegate.call(this, x, y, more);
    };
    G__12365.cljs$lang$maxFixedArity = 2;
    G__12365.cljs$lang$applyTo = function(arglist__12367) {
      var x = cljs.core.first(arglist__12367);
      arglist__12367 = cljs.core.next(arglist__12367);
      var y = cljs.core.first(arglist__12367);
      var more = cljs.core.rest(arglist__12367);
      return G__12365__delegate(x, y, more);
    };
    G__12365.cljs$core$IFn$_invoke$arity$variadic = G__12365__delegate;
    return G__12365;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__12368 = null;
        if (arguments.length > 2) {
          var G__12369__i = 0, G__12369__a = new Array(arguments.length - 2);
          while (G__12369__i < G__12369__a.length) {
            G__12369__a[G__12369__i] = arguments[G__12369__i + 2];
            ++G__12369__i;
          }
          G__12368 = new cljs.core.IndexedSeq(G__12369__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12368);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__12374__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12374 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12375__i = 0, G__12375__a = new Array(arguments.length - 2);
        while (G__12375__i < G__12375__a.length) {
          G__12375__a[G__12375__i] = arguments[G__12375__i + 2];
          ++G__12375__i;
        }
        more = new cljs.core.IndexedSeq(G__12375__a, 0);
      }
      return G__12374__delegate.call(this, x, y, more);
    };
    G__12374.cljs$lang$maxFixedArity = 2;
    G__12374.cljs$lang$applyTo = function(arglist__12376) {
      var x = cljs.core.first(arglist__12376);
      arglist__12376 = cljs.core.next(arglist__12376);
      var y = cljs.core.first(arglist__12376);
      var more = cljs.core.rest(arglist__12376);
      return G__12374__delegate(x, y, more);
    };
    G__12374.cljs$core$IFn$_invoke$arity$variadic = G__12374__delegate;
    return G__12374;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__12377 = null;
        if (arguments.length > 2) {
          var G__12378__i = 0, G__12378__a = new Array(arguments.length - 2);
          while (G__12378__i < G__12378__a.length) {
            G__12378__a[G__12378__i] = arguments[G__12378__i + 2];
            ++G__12378__i;
          }
          G__12377 = new cljs.core.IndexedSeq(G__12378__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12377);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__12379__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__12379 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12380__i = 0, G__12380__a = new Array(arguments.length - 2);
        while (G__12380__i < G__12380__a.length) {
          G__12380__a[G__12380__i] = arguments[G__12380__i + 2];
          ++G__12380__i;
        }
        more = new cljs.core.IndexedSeq(G__12380__a, 0);
      }
      return G__12379__delegate.call(this, x, y, more);
    };
    G__12379.cljs$lang$maxFixedArity = 2;
    G__12379.cljs$lang$applyTo = function(arglist__12381) {
      var x = cljs.core.first(arglist__12381);
      arglist__12381 = cljs.core.next(arglist__12381);
      var y = cljs.core.first(arglist__12381);
      var more = cljs.core.rest(arglist__12381);
      return G__12379__delegate(x, y, more);
    };
    G__12379.cljs$core$IFn$_invoke$arity$variadic = G__12379__delegate;
    return G__12379;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__12382 = null;
        if (arguments.length > 2) {
          var G__12383__i = 0, G__12383__a = new Array(arguments.length - 2);
          while (G__12383__i < G__12383__a.length) {
            G__12383__a[G__12383__i] = arguments[G__12383__i + 2];
            ++G__12383__i;
          }
          G__12382 = new cljs.core.IndexedSeq(G__12383__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12382);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__12384__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__12384 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12385__i = 0, G__12385__a = new Array(arguments.length - 2);
        while (G__12385__i < G__12385__a.length) {
          G__12385__a[G__12385__i] = arguments[G__12385__i + 2];
          ++G__12385__i;
        }
        more = new cljs.core.IndexedSeq(G__12385__a, 0);
      }
      return G__12384__delegate.call(this, x, y, more);
    };
    G__12384.cljs$lang$maxFixedArity = 2;
    G__12384.cljs$lang$applyTo = function(arglist__12386) {
      var x = cljs.core.first(arglist__12386);
      arglist__12386 = cljs.core.next(arglist__12386);
      var y = cljs.core.first(arglist__12386);
      var more = cljs.core.rest(arglist__12386);
      return G__12384__delegate(x, y, more);
    };
    G__12384.cljs$core$IFn$_invoke$arity$variadic = G__12384__delegate;
    return G__12384;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__12387 = null;
        if (arguments.length > 2) {
          var G__12388__i = 0, G__12388__a = new Array(arguments.length - 2);
          while (G__12388__i < G__12388__a.length) {
            G__12388__a[G__12388__i] = arguments[G__12388__i + 2];
            ++G__12388__i;
          }
          G__12387 = new cljs.core.IndexedSeq(G__12388__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12387);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__12391 = x;
  var G__12392 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12391, G__12392) : cljs.core.mod.call(null, G__12391, G__12392);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__12393__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__12393 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12394__i = 0, G__12394__a = new Array(arguments.length - 2);
        while (G__12394__i < G__12394__a.length) {
          G__12394__a[G__12394__i] = arguments[G__12394__i + 2];
          ++G__12394__i;
        }
        more = new cljs.core.IndexedSeq(G__12394__a, 0);
      }
      return G__12393__delegate.call(this, x, y, more);
    };
    G__12393.cljs$lang$maxFixedArity = 2;
    G__12393.cljs$lang$applyTo = function(arglist__12395) {
      var x = cljs.core.first(arglist__12395);
      arglist__12395 = cljs.core.next(arglist__12395);
      var y = cljs.core.first(arglist__12395);
      var more = cljs.core.rest(arglist__12395);
      return G__12393__delegate(x, y, more);
    };
    G__12393.cljs$core$IFn$_invoke$arity$variadic = G__12393__delegate;
    return G__12393;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__12396 = null;
        if (arguments.length > 2) {
          var G__12397__i = 0, G__12397__a = new Array(arguments.length - 2);
          while (G__12397__i < G__12397__a.length) {
            G__12397__a[G__12397__i] = arguments[G__12397__i + 2];
            ++G__12397__i;
          }
          G__12396 = new cljs.core.IndexedSeq(G__12397__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12396);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__12398__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__12398 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12399__i = 0, G__12399__a = new Array(arguments.length - 2);
        while (G__12399__i < G__12399__a.length) {
          G__12399__a[G__12399__i] = arguments[G__12399__i + 2];
          ++G__12399__i;
        }
        more = new cljs.core.IndexedSeq(G__12399__a, 0);
      }
      return G__12398__delegate.call(this, x, y, more);
    };
    G__12398.cljs$lang$maxFixedArity = 2;
    G__12398.cljs$lang$applyTo = function(arglist__12400) {
      var x = cljs.core.first(arglist__12400);
      arglist__12400 = cljs.core.next(arglist__12400);
      var y = cljs.core.first(arglist__12400);
      var more = cljs.core.rest(arglist__12400);
      return G__12398__delegate(x, y, more);
    };
    G__12398.cljs$core$IFn$_invoke$arity$variadic = G__12398__delegate;
    return G__12398;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__12401 = null;
        if (arguments.length > 2) {
          var G__12402__i = 0, G__12402__a = new Array(arguments.length - 2);
          while (G__12402__i < G__12402__a.length) {
            G__12402__a[G__12402__i] = arguments[G__12402__i + 2];
            ++G__12402__i;
          }
          G__12401 = new cljs.core.IndexedSeq(G__12402__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12401);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__12405 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12405) : Math.floor.call(null, G__12405);
  } else {
    var G__12406 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12406) : Math.ceil.call(null, G__12406);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__12411__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__12412 = y;
            var G__12413 = cljs.core.first(more);
            var G__12414 = cljs.core.next(more);
            x = G__12412;
            y = G__12413;
            more = G__12414;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12411 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12415__i = 0, G__12415__a = new Array(arguments.length - 2);
        while (G__12415__i < G__12415__a.length) {
          G__12415__a[G__12415__i] = arguments[G__12415__i + 2];
          ++G__12415__i;
        }
        more = new cljs.core.IndexedSeq(G__12415__a, 0);
      }
      return G__12411__delegate.call(this, x, y, more);
    };
    G__12411.cljs$lang$maxFixedArity = 2;
    G__12411.cljs$lang$applyTo = function(arglist__12416) {
      var x = cljs.core.first(arglist__12416);
      arglist__12416 = cljs.core.next(arglist__12416);
      var y = cljs.core.first(arglist__12416);
      var more = cljs.core.rest(arglist__12416);
      return G__12411__delegate(x, y, more);
    };
    G__12411.cljs$core$IFn$_invoke$arity$variadic = G__12411__delegate;
    return G__12411;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__12417 = null;
        if (arguments.length > 2) {
          var G__12418__i = 0, G__12418__a = new Array(arguments.length - 2);
          while (G__12418__i < G__12418__a.length) {
            G__12418__a[G__12418__i] = arguments[G__12418__i + 2];
            ++G__12418__i;
          }
          G__12417 = new cljs.core.IndexedSeq(G__12418__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12417);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__12419 = n__$1 - 1;
      var G__12420 = cljs.core.next(xs);
      n__$1 = G__12419;
      xs = G__12420;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__12424 = x;
      return goog.string.buildString(G__12424);
    }
  };
  var str__2 = function() {
    var G__12425__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__12426 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__12427 = cljs.core.next(more);
          sb = G__12426;
          more = G__12427;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__12425 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__12428__i = 0, G__12428__a = new Array(arguments.length - 1);
        while (G__12428__i < G__12428__a.length) {
          G__12428__a[G__12428__i] = arguments[G__12428__i + 1];
          ++G__12428__i;
        }
        ys = new cljs.core.IndexedSeq(G__12428__a, 0);
      }
      return G__12425__delegate.call(this, x, ys);
    };
    G__12425.cljs$lang$maxFixedArity = 1;
    G__12425.cljs$lang$applyTo = function(arglist__12429) {
      var x = cljs.core.first(arglist__12429);
      var ys = cljs.core.rest(arglist__12429);
      return G__12425__delegate(x, ys);
    };
    G__12425.cljs$core$IFn$_invoke$arity$variadic = G__12425__delegate;
    return G__12425;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__12430 = null;
        if (arguments.length > 1) {
          var G__12431__i = 0, G__12431__a = new Array(arguments.length - 1);
          while (G__12431__i < G__12431__a.length) {
            G__12431__a[G__12431__i] = arguments[G__12431__i + 1];
            ++G__12431__i;
          }
          G__12430 = new cljs.core.IndexedSeq(G__12431__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12430);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__12432 = cljs.core.next(xs);
            var G__12433 = cljs.core.next(ys);
            xs = G__12432;
            ys = G__12433;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__12434 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__12435 = cljs.core.next(s);
        res = G__12434;
        s = G__12435;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__12440 = (h + (cljs.core.hash(function() {
        var G__12438 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12438) : cljs.core.key.call(null, G__12438);
      }()) ^ cljs.core.hash(function() {
        var G__12439 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12439) : cljs.core.val.call(null, G__12439);
      }()))) % 4503599627370496;
      var G__12441 = cljs.core.next(s);
      h = G__12440;
      s = G__12441;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__12442 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__12443 = cljs.core.next(s__$1);
      h = G__12442;
      s__$1 = G__12443;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__12454_12464 = cljs.core.seq(fn_map);
  var chunk__12455_12465 = null;
  var count__12456_12466 = 0;
  var i__12457_12467 = 0;
  while (true) {
    if (i__12457_12467 < count__12456_12466) {
      var vec__12458_12468 = chunk__12455_12465.cljs$core$IIndexed$_nth$arity$2(null, i__12457_12467);
      var key_name_12469 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12458_12468, 0, null);
      var f_12470 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12458_12468, 1, null);
      var str_name_12471 = function() {
        var G__12459 = key_name_12469;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12459) : cljs.core.name.call(null, G__12459);
      }();
      obj[str_name_12471] = f_12470;
      var G__12472 = seq__12454_12464;
      var G__12473 = chunk__12455_12465;
      var G__12474 = count__12456_12466;
      var G__12475 = i__12457_12467 + 1;
      seq__12454_12464 = G__12472;
      chunk__12455_12465 = G__12473;
      count__12456_12466 = G__12474;
      i__12457_12467 = G__12475;
      continue;
    } else {
      var temp__4126__auto___12476 = cljs.core.seq(seq__12454_12464);
      if (temp__4126__auto___12476) {
        var seq__12454_12477__$1 = temp__4126__auto___12476;
        if (cljs.core.chunked_seq_QMARK_(seq__12454_12477__$1)) {
          var c__4586__auto___12478 = function() {
            var G__12460 = seq__12454_12477__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12460) : cljs.core.chunk_first.call(null, G__12460);
          }();
          var G__12479 = function() {
            var G__12461 = seq__12454_12477__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12461) : cljs.core.chunk_rest.call(null, G__12461);
          }();
          var G__12480 = c__4586__auto___12478;
          var G__12481 = cljs.core.count(c__4586__auto___12478);
          var G__12482 = 0;
          seq__12454_12464 = G__12479;
          chunk__12455_12465 = G__12480;
          count__12456_12466 = G__12481;
          i__12457_12467 = G__12482;
          continue;
        } else {
          var vec__12462_12483 = cljs.core.first(seq__12454_12477__$1);
          var key_name_12484 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12462_12483, 0, null);
          var f_12485 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12462_12483, 1, null);
          var str_name_12486 = function() {
            var G__12463 = key_name_12484;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12463) : cljs.core.name.call(null, G__12463);
          }();
          obj[str_name_12486] = f_12485;
          var G__12487 = cljs.core.next(seq__12454_12477__$1);
          var G__12488 = null;
          var G__12489 = 0;
          var G__12490 = 0;
          seq__12454_12464 = G__12487;
          chunk__12455_12465 = G__12488;
          count__12456_12466 = G__12489;
          i__12457_12467 = G__12490;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12492 = coll;
  if (G__12492) {
    var bit__4480__auto__ = G__12492.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4480__auto__ || G__12492.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__12492.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12492);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12492);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__12493 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__12493;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__12494 = i - 1;
        var G__12495 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__12494;
        r = G__12495;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__12496__i = 0, G__12496__a = new Array(arguments.length - 0);
      while (G__12496__i < G__12496__a.length) {
        G__12496__a[G__12496__i] = arguments[G__12496__i + 0];
        ++G__12496__i;
      }
      xs = new cljs.core.IndexedSeq(G__12496__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__12497) {
    var xs = cljs.core.seq(arglist__12497);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3799__auto__ = coll == null;
    if (or__3799__auto__) {
      return or__3799__auto__;
    } else {
      var G__12501 = coll;
      if (G__12501) {
        var bit__4473__auto__ = G__12501.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4473__auto__ || G__12501.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12503 = x;
  if (G__12503) {
    var bit__4480__auto__ = G__12503.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4480__auto__ || G__12503.cljs$core$IList$) {
      return true;
    } else {
      if (!G__12503.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12503);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12503);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = cljs.core.not(a.ns);
      if (and__3787__auto__) {
        return b.ns;
      } else {
        return and__3787__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__12510 = a.ns;
            var G__12511 = b.ns;
            return goog.array.defaultCompare(G__12510, G__12511);
          }();
          if (0 === nsc) {
            var G__12512 = a.name;
            var G__12513 = b.name;
            return goog.array.defaultCompare(G__12512, G__12513);
          } else {
            return nsc;
          }
        }
      } else {
        var G__12514 = a.name;
        var G__12515 = b.name;
        return goog.array.defaultCompare(G__12514, G__12515);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4220__auto__ = self__._hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__12517 = null;
  var G__12517__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__12517__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__12517 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12517__2.call(this, self__, coll);
      case 3:
        return G__12517__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12517.cljs$core$IFn$_invoke$arity$2 = G__12517__2;
  G__12517.cljs$core$IFn$_invoke$arity$3 = G__12517__3;
  return G__12517;
}();
cljs.core.Keyword.prototype.apply = function(self__, args12516) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12516)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__12519 = x;
    if (G__12519) {
      var bit__4473__auto__ = G__12519.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4473__auto__ || G__12519.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__12521 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12521) : cljs.core.name.call(null, G__12521);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__12522 = ls.sval();
        ls = G__12522;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__12524 = s;
    if (G__12524) {
      var bit__4473__auto__ = G__12524.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4473__auto__ || G__12524.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__12525 = cljs.core.next(s__$1);
      s__$1 = G__12525;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_12526 = 0;
  var xs_12527 = cljs.core.seq(coll);
  while (true) {
    if (xs_12527) {
      ret[i_12526] = cljs.core.to_array(cljs.core.first(xs_12527));
      var G__12528 = i_12526 + 1;
      var G__12529 = cljs.core.next(xs_12527);
      i_12526 = G__12528;
      xs_12527 = G__12529;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12532 = i + 1;
          var G__12533 = cljs.core.next(s__$1);
          i = G__12532;
          s__$1 = G__12533;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4686__auto___12534 = size;
      var i_12535 = 0;
      while (true) {
        if (i_12535 < n__4686__auto___12534) {
          a[i_12535] = init_val_or_seq;
          var G__12536 = i_12535 + 1;
          i_12535 = G__12536;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12539 = i + 1;
          var G__12540 = cljs.core.next(s__$1);
          i = G__12539;
          s__$1 = G__12540;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4686__auto___12541 = size;
      var i_12542 = 0;
      while (true) {
        if (i_12542 < n__4686__auto___12541) {
          a[i_12542] = init_val_or_seq;
          var G__12543 = i_12542 + 1;
          i_12542 = G__12543;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12546 = i + 1;
          var G__12547 = cljs.core.next(s__$1);
          i = G__12546;
          s__$1 = G__12547;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4686__auto___12548 = size;
      var i_12549 = 0;
      while (true) {
        if (i_12549 < n__4686__auto___12548) {
          a[i_12549] = init_val_or_seq;
          var G__12550 = i_12549 + 1;
          i_12549 = G__12550;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12553 = i + 1;
          var G__12554 = cljs.core.next(s__$1);
          i = G__12553;
          s__$1 = G__12554;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4686__auto___12555 = size;
      var i_12556 = 0;
      while (true) {
        if (i_12556 < n__4686__auto___12555) {
          a[i_12556] = init_val_or_seq;
          var G__12557 = i_12556 + 1;
          i_12556 = G__12557;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__12558 = cljs.core.next(s__$1);
        var G__12559 = i - 1;
        var G__12560 = sum + 1;
        s__$1 = G__12558;
        i = G__12559;
        sum = G__12560;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__12580__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__12580 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__12581__i = 0, G__12581__a = new Array(arguments.length - 2);
        while (G__12581__i < G__12581__a.length) {
          G__12581__a[G__12581__i] = arguments[G__12581__i + 2];
          ++G__12581__i;
        }
        zs = new cljs.core.IndexedSeq(G__12581__a, 0);
      }
      return G__12580__delegate.call(this, x, y, zs);
    };
    G__12580.cljs$lang$maxFixedArity = 2;
    G__12580.cljs$lang$applyTo = function(arglist__12582) {
      var x = cljs.core.first(arglist__12582);
      arglist__12582 = cljs.core.next(arglist__12582);
      var y = cljs.core.first(arglist__12582);
      var zs = cljs.core.rest(arglist__12582);
      return G__12580__delegate(x, y, zs);
    };
    G__12580.cljs$core$IFn$_invoke$arity$variadic = G__12580__delegate;
    return G__12580;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__12583 = null;
        if (arguments.length > 2) {
          var G__12584__i = 0, G__12584__a = new Array(arguments.length - 2);
          while (G__12584__i < G__12584__a.length) {
            G__12584__a[G__12584__i] = arguments[G__12584__i + 2];
            ++G__12584__i;
          }
          G__12583 = new cljs.core.IndexedSeq(G__12584__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12583);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__12585__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__12585 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12586__i = 0, G__12586__a = new Array(arguments.length - 4);
        while (G__12586__i < G__12586__a.length) {
          G__12586__a[G__12586__i] = arguments[G__12586__i + 4];
          ++G__12586__i;
        }
        more = new cljs.core.IndexedSeq(G__12586__a, 0);
      }
      return G__12585__delegate.call(this, a, b, c, d, more);
    };
    G__12585.cljs$lang$maxFixedArity = 4;
    G__12585.cljs$lang$applyTo = function(arglist__12587) {
      var a = cljs.core.first(arglist__12587);
      arglist__12587 = cljs.core.next(arglist__12587);
      var b = cljs.core.first(arglist__12587);
      arglist__12587 = cljs.core.next(arglist__12587);
      var c = cljs.core.first(arglist__12587);
      arglist__12587 = cljs.core.next(arglist__12587);
      var d = cljs.core.first(arglist__12587);
      var more = cljs.core.rest(arglist__12587);
      return G__12585__delegate(a, b, c, d, more);
    };
    G__12585.cljs$core$IFn$_invoke$arity$variadic = G__12585__delegate;
    return G__12585;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__12588 = null;
        if (arguments.length > 4) {
          var G__12589__i = 0, G__12589__a = new Array(arguments.length - 4);
          while (G__12589__i < G__12589__a.length) {
            G__12589__a[G__12589__i] = arguments[G__12589__i + 4];
            ++G__12589__i;
          }
          G__12588 = new cljs.core.IndexedSeq(G__12589__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__12588);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__12590__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__12591 = ntcoll;
          var G__12592 = cljs.core.first(vals);
          var G__12593 = cljs.core.next(vals);
          tcoll = G__12591;
          val = G__12592;
          vals = G__12593;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12590 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__12594__i = 0, G__12594__a = new Array(arguments.length - 2);
        while (G__12594__i < G__12594__a.length) {
          G__12594__a[G__12594__i] = arguments[G__12594__i + 2];
          ++G__12594__i;
        }
        vals = new cljs.core.IndexedSeq(G__12594__a, 0);
      }
      return G__12590__delegate.call(this, tcoll, val, vals);
    };
    G__12590.cljs$lang$maxFixedArity = 2;
    G__12590.cljs$lang$applyTo = function(arglist__12595) {
      var tcoll = cljs.core.first(arglist__12595);
      arglist__12595 = cljs.core.next(arglist__12595);
      var val = cljs.core.first(arglist__12595);
      var vals = cljs.core.rest(arglist__12595);
      return G__12590__delegate(tcoll, val, vals);
    };
    G__12590.cljs$core$IFn$_invoke$arity$variadic = G__12590__delegate;
    return G__12590;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__12596 = null;
        if (arguments.length > 2) {
          var G__12597__i = 0, G__12597__a = new Array(arguments.length - 2);
          while (G__12597__i < G__12597__a.length) {
            G__12597__a[G__12597__i] = arguments[G__12597__i + 2];
            ++G__12597__i;
          }
          G__12596 = new cljs.core.IndexedSeq(G__12597__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__12596);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__12598__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__12599 = ntcoll;
          var G__12600 = cljs.core.first(kvs);
          var G__12601 = cljs.core.second(kvs);
          var G__12602 = cljs.core.nnext(kvs);
          tcoll = G__12599;
          key = G__12600;
          val = G__12601;
          kvs = G__12602;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12598 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__12603__i = 0, G__12603__a = new Array(arguments.length - 3);
        while (G__12603__i < G__12603__a.length) {
          G__12603__a[G__12603__i] = arguments[G__12603__i + 3];
          ++G__12603__i;
        }
        kvs = new cljs.core.IndexedSeq(G__12603__a, 0);
      }
      return G__12598__delegate.call(this, tcoll, key, val, kvs);
    };
    G__12598.cljs$lang$maxFixedArity = 3;
    G__12598.cljs$lang$applyTo = function(arglist__12604) {
      var tcoll = cljs.core.first(arglist__12604);
      arglist__12604 = cljs.core.next(arglist__12604);
      var key = cljs.core.first(arglist__12604);
      arglist__12604 = cljs.core.next(arglist__12604);
      var val = cljs.core.first(arglist__12604);
      var kvs = cljs.core.rest(arglist__12604);
      return G__12598__delegate(tcoll, key, val, kvs);
    };
    G__12598.cljs$core$IFn$_invoke$arity$variadic = G__12598__delegate;
    return G__12598;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__12605 = null;
        if (arguments.length > 3) {
          var G__12606__i = 0, G__12606__a = new Array(arguments.length - 3);
          while (G__12606__i < G__12606__a.length) {
            G__12606__a[G__12606__i] = arguments[G__12606__i + 3];
            ++G__12606__i;
          }
          G__12605 = new cljs.core.IndexedSeq(G__12606__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__12605);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__12607__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__12608 = ntcoll;
          var G__12609 = cljs.core.first(ks);
          var G__12610 = cljs.core.next(ks);
          tcoll = G__12608;
          key = G__12609;
          ks = G__12610;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12607 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12611__i = 0, G__12611__a = new Array(arguments.length - 2);
        while (G__12611__i < G__12611__a.length) {
          G__12611__a[G__12611__i] = arguments[G__12611__i + 2];
          ++G__12611__i;
        }
        ks = new cljs.core.IndexedSeq(G__12611__a, 0);
      }
      return G__12607__delegate.call(this, tcoll, key, ks);
    };
    G__12607.cljs$lang$maxFixedArity = 2;
    G__12607.cljs$lang$applyTo = function(arglist__12612) {
      var tcoll = cljs.core.first(arglist__12612);
      arglist__12612 = cljs.core.next(arglist__12612);
      var key = cljs.core.first(arglist__12612);
      var ks = cljs.core.rest(arglist__12612);
      return G__12607__delegate(tcoll, key, ks);
    };
    G__12607.cljs$core$IFn$_invoke$arity$variadic = G__12607__delegate;
    return G__12607;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__12613 = null;
        if (arguments.length > 2) {
          var G__12614__i = 0, G__12614__a = new Array(arguments.length - 2);
          while (G__12614__i < G__12614__a.length) {
            G__12614__a[G__12614__i] = arguments[G__12614__i + 2];
            ++G__12614__i;
          }
          G__12613 = new cljs.core.IndexedSeq(G__12614__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__12613);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__12615__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__12616 = ntcoll;
          var G__12617 = cljs.core.first(vals);
          var G__12618 = cljs.core.next(vals);
          tcoll = G__12616;
          val = G__12617;
          vals = G__12618;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12615 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__12619__i = 0, G__12619__a = new Array(arguments.length - 2);
        while (G__12619__i < G__12619__a.length) {
          G__12619__a[G__12619__i] = arguments[G__12619__i + 2];
          ++G__12619__i;
        }
        vals = new cljs.core.IndexedSeq(G__12619__a, 0);
      }
      return G__12615__delegate.call(this, tcoll, val, vals);
    };
    G__12615.cljs$lang$maxFixedArity = 2;
    G__12615.cljs$lang$applyTo = function(arglist__12620) {
      var tcoll = cljs.core.first(arglist__12620);
      arglist__12620 = cljs.core.next(arglist__12620);
      var val = cljs.core.first(arglist__12620);
      var vals = cljs.core.rest(arglist__12620);
      return G__12615__delegate(tcoll, val, vals);
    };
    G__12615.cljs$core$IFn$_invoke$arity$variadic = G__12615__delegate;
    return G__12615;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__12621 = null;
        if (arguments.length > 2) {
          var G__12622__i = 0, G__12622__a = new Array(arguments.length - 2);
          while (G__12622__i < G__12622__a.length) {
            G__12622__a[G__12622__i] = arguments[G__12622__i + 2];
            ++G__12622__i;
          }
          G__12621 = new cljs.core.IndexedSeq(G__12622__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__12621);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4730 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4730);
      } else {
        var G__12833 = a4730;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12833) : f.call(null, G__12833);
      }
    } else {
      var b4731 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4730, b4731);
        } else {
          var G__12834 = a4730;
          var G__12835 = b4731;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12834, G__12835) : f.call(null, G__12834, G__12835);
        }
      } else {
        var c4732 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4730, b4731, c4732);
          } else {
            var G__12836 = a4730;
            var G__12837 = b4731;
            var G__12838 = c4732;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12836, G__12837, G__12838) : f.call(null, G__12836, G__12837, G__12838);
          }
        } else {
          var d4733 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4730, b4731, c4732, d4733);
            } else {
              var G__12839 = a4730;
              var G__12840 = b4731;
              var G__12841 = c4732;
              var G__12842 = d4733;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12839, G__12840, G__12841, G__12842) : f.call(null, G__12839, G__12840, G__12841, G__12842);
            }
          } else {
            var e4734 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4730, b4731, c4732, d4733, e4734);
              } else {
                var G__12843 = a4730;
                var G__12844 = b4731;
                var G__12845 = c4732;
                var G__12846 = d4733;
                var G__12847 = e4734;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12843, G__12844, G__12845, G__12846, G__12847) : f.call(null, G__12843, G__12844, G__12845, G__12846, G__12847);
              }
            } else {
              var f4735 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4730, b4731, c4732, d4733, e4734, f4735);
                } else {
                  var G__12848 = a4730;
                  var G__12849 = b4731;
                  var G__12850 = c4732;
                  var G__12851 = d4733;
                  var G__12852 = e4734;
                  var G__12853 = f4735;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12848, G__12849, G__12850, G__12851, G__12852, G__12853) : f.call(null, G__12848, G__12849, G__12850, G__12851, G__12852, G__12853);
                }
              } else {
                var g4736 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4730, b4731, c4732, d4733, e4734, f4735, g4736);
                  } else {
                    var G__12854 = a4730;
                    var G__12855 = b4731;
                    var G__12856 = c4732;
                    var G__12857 = d4733;
                    var G__12858 = e4734;
                    var G__12859 = f4735;
                    var G__12860 = g4736;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__12854, G__12855, G__12856, G__12857, G__12858, G__12859, G__12860) : f.call(null, G__12854, G__12855, G__12856, G__12857, G__12858, G__12859, G__12860);
                  }
                } else {
                  var h4737 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737);
                    } else {
                      var G__12861 = a4730;
                      var G__12862 = b4731;
                      var G__12863 = c4732;
                      var G__12864 = d4733;
                      var G__12865 = e4734;
                      var G__12866 = f4735;
                      var G__12867 = g4736;
                      var G__12868 = h4737;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__12861, G__12862, G__12863, G__12864, G__12865, G__12866, G__12867, G__12868) : f.call(null, G__12861, G__12862, G__12863, G__12864, G__12865, G__12866, G__12867, G__12868);
                    }
                  } else {
                    var i4738 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738);
                      } else {
                        var G__12869 = a4730;
                        var G__12870 = b4731;
                        var G__12871 = c4732;
                        var G__12872 = d4733;
                        var G__12873 = e4734;
                        var G__12874 = f4735;
                        var G__12875 = g4736;
                        var G__12876 = h4737;
                        var G__12877 = i4738;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__12869, G__12870, G__12871, G__12872, G__12873, G__12874, G__12875, G__12876, G__12877) : f.call(null, G__12869, G__12870, G__12871, G__12872, G__12873, G__12874, G__12875, G__12876, G__12877);
                      }
                    } else {
                      var j4739 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739);
                        } else {
                          var G__12878 = a4730;
                          var G__12879 = b4731;
                          var G__12880 = c4732;
                          var G__12881 = d4733;
                          var G__12882 = e4734;
                          var G__12883 = f4735;
                          var G__12884 = g4736;
                          var G__12885 = h4737;
                          var G__12886 = i4738;
                          var G__12887 = j4739;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__12878, G__12879, G__12880, G__12881, G__12882, G__12883, G__12884, G__12885, G__12886, G__12887) : f.call(null, G__12878, G__12879, G__12880, G__12881, G__12882, G__12883, G__12884, G__12885, G__12886, G__12887);
                        }
                      } else {
                        var k4740 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740);
                          } else {
                            var G__12888 = a4730;
                            var G__12889 = b4731;
                            var G__12890 = c4732;
                            var G__12891 = d4733;
                            var G__12892 = e4734;
                            var G__12893 = f4735;
                            var G__12894 = g4736;
                            var G__12895 = h4737;
                            var G__12896 = i4738;
                            var G__12897 = j4739;
                            var G__12898 = k4740;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__12888, G__12889, G__12890, G__12891, G__12892, G__12893, G__12894, G__12895, G__12896, G__12897, G__12898) : f.call(null, G__12888, G__12889, G__12890, G__12891, G__12892, G__12893, G__12894, G__12895, G__12896, G__12897, G__12898);
                          }
                        } else {
                          var l4741 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741);
                            } else {
                              var G__12899 = a4730;
                              var G__12900 = b4731;
                              var G__12901 = c4732;
                              var G__12902 = d4733;
                              var G__12903 = e4734;
                              var G__12904 = f4735;
                              var G__12905 = g4736;
                              var G__12906 = h4737;
                              var G__12907 = i4738;
                              var G__12908 = j4739;
                              var G__12909 = k4740;
                              var G__12910 = l4741;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__12899, G__12900, G__12901, G__12902, G__12903, G__12904, G__12905, G__12906, G__12907, G__12908, G__12909, G__12910) : f.call(null, G__12899, G__12900, G__12901, G__12902, G__12903, G__12904, G__12905, G__12906, G__12907, G__12908, G__12909, G__12910);
                            }
                          } else {
                            var m4742 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742);
                              } else {
                                var G__12911 = a4730;
                                var G__12912 = b4731;
                                var G__12913 = c4732;
                                var G__12914 = d4733;
                                var G__12915 = e4734;
                                var G__12916 = f4735;
                                var G__12917 = g4736;
                                var G__12918 = h4737;
                                var G__12919 = i4738;
                                var G__12920 = j4739;
                                var G__12921 = k4740;
                                var G__12922 = l4741;
                                var G__12923 = m4742;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__12911, G__12912, G__12913, G__12914, G__12915, G__12916, G__12917, G__12918, G__12919, G__12920, G__12921, G__12922, G__12923) : f.call(null, G__12911, G__12912, G__12913, G__12914, G__12915, G__12916, G__12917, G__12918, G__12919, G__12920, G__12921, G__12922, G__12923);
                              }
                            } else {
                              var n4743 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742, n4743);
                                } else {
                                  var G__12924 = a4730;
                                  var G__12925 = b4731;
                                  var G__12926 = c4732;
                                  var G__12927 = d4733;
                                  var G__12928 = e4734;
                                  var G__12929 = f4735;
                                  var G__12930 = g4736;
                                  var G__12931 = h4737;
                                  var G__12932 = i4738;
                                  var G__12933 = j4739;
                                  var G__12934 = k4740;
                                  var G__12935 = l4741;
                                  var G__12936 = m4742;
                                  var G__12937 = n4743;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__12924, G__12925, G__12926, G__12927, G__12928, G__12929, G__12930, G__12931, G__12932, G__12933, G__12934, G__12935, G__12936, G__12937) : f.call(null, G__12924, G__12925, G__12926, G__12927, G__12928, G__12929, G__12930, G__12931, G__12932, G__12933, G__12934, G__12935, G__12936, G__12937);
                                }
                              } else {
                                var o4744 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742, n4743, o4744);
                                  } else {
                                    var G__12938 = a4730;
                                    var G__12939 = b4731;
                                    var G__12940 = c4732;
                                    var G__12941 = d4733;
                                    var G__12942 = e4734;
                                    var G__12943 = f4735;
                                    var G__12944 = g4736;
                                    var G__12945 = h4737;
                                    var G__12946 = i4738;
                                    var G__12947 = j4739;
                                    var G__12948 = k4740;
                                    var G__12949 = l4741;
                                    var G__12950 = m4742;
                                    var G__12951 = n4743;
                                    var G__12952 = o4744;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__12938, G__12939, G__12940, G__12941, G__12942, G__12943, G__12944, G__12945, G__12946, G__12947, G__12948, G__12949, G__12950, G__12951, G__12952) : f.call(null, G__12938, G__12939, G__12940, G__12941, G__12942, G__12943, G__12944, G__12945, G__12946, G__12947, G__12948, G__12949, G__12950, G__12951, G__12952);
                                  }
                                } else {
                                  var p4745 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742, n4743, o4744, p4745);
                                    } else {
                                      var G__12953 = a4730;
                                      var G__12954 = b4731;
                                      var G__12955 = c4732;
                                      var G__12956 = d4733;
                                      var G__12957 = e4734;
                                      var G__12958 = f4735;
                                      var G__12959 = g4736;
                                      var G__12960 = h4737;
                                      var G__12961 = i4738;
                                      var G__12962 = j4739;
                                      var G__12963 = k4740;
                                      var G__12964 = l4741;
                                      var G__12965 = m4742;
                                      var G__12966 = n4743;
                                      var G__12967 = o4744;
                                      var G__12968 = p4745;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__12953, G__12954, G__12955, G__12956, G__12957, G__12958, G__12959, G__12960, G__12961, G__12962, G__12963, G__12964, G__12965, G__12966, G__12967, G__12968) : f.call(null, G__12953, G__12954, G__12955, G__12956, G__12957, G__12958, G__12959, G__12960, G__12961, G__12962, G__12963, G__12964, G__12965, G__12966, G__12967, G__12968);
                                    }
                                  } else {
                                    var q4746 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742, n4743, o4744, p4745, q4746);
                                      } else {
                                        var G__12969 = a4730;
                                        var G__12970 = b4731;
                                        var G__12971 = c4732;
                                        var G__12972 = d4733;
                                        var G__12973 = e4734;
                                        var G__12974 = f4735;
                                        var G__12975 = g4736;
                                        var G__12976 = h4737;
                                        var G__12977 = i4738;
                                        var G__12978 = j4739;
                                        var G__12979 = k4740;
                                        var G__12980 = l4741;
                                        var G__12981 = m4742;
                                        var G__12982 = n4743;
                                        var G__12983 = o4744;
                                        var G__12984 = p4745;
                                        var G__12985 = q4746;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__12969, G__12970, G__12971, G__12972, G__12973, G__12974, G__12975, G__12976, G__12977, G__12978, G__12979, G__12980, G__12981, G__12982, G__12983, G__12984, G__12985) : f.call(null, G__12969, G__12970, G__12971, G__12972, G__12973, G__12974, G__12975, G__12976, G__12977, G__12978, G__12979, G__12980, G__12981, G__12982, G__12983, G__12984, G__12985);
                                      }
                                    } else {
                                      var r4747 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742, n4743, o4744, p4745, q4746, r4747);
                                        } else {
                                          var G__12986 = a4730;
                                          var G__12987 = b4731;
                                          var G__12988 = c4732;
                                          var G__12989 = d4733;
                                          var G__12990 = e4734;
                                          var G__12991 = f4735;
                                          var G__12992 = g4736;
                                          var G__12993 = h4737;
                                          var G__12994 = i4738;
                                          var G__12995 = j4739;
                                          var G__12996 = k4740;
                                          var G__12997 = l4741;
                                          var G__12998 = m4742;
                                          var G__12999 = n4743;
                                          var G__13000 = o4744;
                                          var G__13001 = p4745;
                                          var G__13002 = q4746;
                                          var G__13003 = r4747;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__12986, G__12987, G__12988, G__12989, G__12990, G__12991, G__12992, G__12993, G__12994, G__12995, G__12996, G__12997, G__12998, G__12999, G__13000, G__13001, G__13002, G__13003) : f.call(null, G__12986, G__12987, G__12988, G__12989, G__12990, G__12991, G__12992, G__12993, G__12994, G__12995, G__12996, G__12997, G__12998, G__12999, G__13000, G__13001, G__13002, G__13003);
                                        }
                                      } else {
                                        var s4748 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742, n4743, o4744, p4745, q4746, r4747, s4748);
                                          } else {
                                            var G__13004 = a4730;
                                            var G__13005 = b4731;
                                            var G__13006 = c4732;
                                            var G__13007 = d4733;
                                            var G__13008 = e4734;
                                            var G__13009 = f4735;
                                            var G__13010 = g4736;
                                            var G__13011 = h4737;
                                            var G__13012 = i4738;
                                            var G__13013 = j4739;
                                            var G__13014 = k4740;
                                            var G__13015 = l4741;
                                            var G__13016 = m4742;
                                            var G__13017 = n4743;
                                            var G__13018 = o4744;
                                            var G__13019 = p4745;
                                            var G__13020 = q4746;
                                            var G__13021 = r4747;
                                            var G__13022 = s4748;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13004, G__13005, G__13006, G__13007, G__13008, G__13009, G__13010, G__13011, G__13012, G__13013, G__13014, G__13015, G__13016, G__13017, G__13018, G__13019, G__13020, G__13021, G__13022) : f.call(null, G__13004, G__13005, G__13006, G__13007, G__13008, G__13009, G__13010, G__13011, G__13012, G__13013, G__13014, G__13015, G__13016, G__13017, G__13018, G__13019, G__13020, G__13021, 
                                            G__13022);
                                          }
                                        } else {
                                          var t4749 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4730, b4731, c4732, d4733, e4734, f4735, g4736, h4737, i4738, j4739, k4740, l4741, m4742, n4743, o4744, p4745, q4746, r4747, s4748, t4749);
                                            } else {
                                              var G__13023 = a4730;
                                              var G__13024 = b4731;
                                              var G__13025 = c4732;
                                              var G__13026 = d4733;
                                              var G__13027 = e4734;
                                              var G__13028 = f4735;
                                              var G__13029 = g4736;
                                              var G__13030 = h4737;
                                              var G__13031 = i4738;
                                              var G__13032 = j4739;
                                              var G__13033 = k4740;
                                              var G__13034 = l4741;
                                              var G__13035 = m4742;
                                              var G__13036 = n4743;
                                              var G__13037 = o4744;
                                              var G__13038 = p4745;
                                              var G__13039 = q4746;
                                              var G__13040 = r4747;
                                              var G__13041 = s4748;
                                              var G__13042 = t4749;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13023, G__13024, G__13025, G__13026, G__13027, G__13028, G__13029, G__13030, G__13031, G__13032, G__13033, G__13034, G__13035, G__13036, G__13037, G__13038, G__13039, G__13040, G__13041, G__13042) : f.call(null, G__13023, G__13024, G__13025, G__13026, G__13027, G__13028, G__13029, G__13030, G__13031, G__13032, G__13033, G__13034, G__13035, G__13036, G__13037, G__13038, G__13039, 
                                              G__13040, G__13041, G__13042);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__13043__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__13043 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__13044__i = 0, G__13044__a = new Array(arguments.length - 5);
        while (G__13044__i < G__13044__a.length) {
          G__13044__a[G__13044__i] = arguments[G__13044__i + 5];
          ++G__13044__i;
        }
        args = new cljs.core.IndexedSeq(G__13044__a, 0);
      }
      return G__13043__delegate.call(this, f, a, b, c, d, args);
    };
    G__13043.cljs$lang$maxFixedArity = 5;
    G__13043.cljs$lang$applyTo = function(arglist__13045) {
      var f = cljs.core.first(arglist__13045);
      arglist__13045 = cljs.core.next(arglist__13045);
      var a = cljs.core.first(arglist__13045);
      arglist__13045 = cljs.core.next(arglist__13045);
      var b = cljs.core.first(arglist__13045);
      arglist__13045 = cljs.core.next(arglist__13045);
      var c = cljs.core.first(arglist__13045);
      arglist__13045 = cljs.core.next(arglist__13045);
      var d = cljs.core.first(arglist__13045);
      var args = cljs.core.rest(arglist__13045);
      return G__13043__delegate(f, a, b, c, d, args);
    };
    G__13043.cljs$core$IFn$_invoke$arity$variadic = G__13043__delegate;
    return G__13043;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__13046 = null;
        if (arguments.length > 5) {
          var G__13047__i = 0, G__13047__a = new Array(arguments.length - 5);
          while (G__13047__i < G__13047__a.length) {
            G__13047__a[G__13047__i] = arguments[G__13047__i + 5];
            ++G__13047__i;
          }
          G__13046 = new cljs.core.IndexedSeq(G__13047__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__13046);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__13063 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13063) : f.call(null, G__13063);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__13064 = cljs.core.meta(obj);
      var G__13065 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13064, G__13065) : f.call(null, G__13064, G__13065);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__13066 = cljs.core.meta(obj);
      var G__13067 = a;
      var G__13068 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13066, G__13067, G__13068) : f.call(null, G__13066, G__13067, G__13068);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__13069 = cljs.core.meta(obj);
      var G__13070 = a;
      var G__13071 = b;
      var G__13072 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13069, G__13070, G__13071, G__13072) : f.call(null, G__13069, G__13070, G__13071, G__13072);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__13073 = cljs.core.meta(obj);
      var G__13074 = a;
      var G__13075 = b;
      var G__13076 = c;
      var G__13077 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13073, G__13074, G__13075, G__13076, G__13077) : f.call(null, G__13073, G__13074, G__13075, G__13076, G__13077);
    }());
  };
  var vary_meta__7 = function() {
    var G__13078__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__13078 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__13079__i = 0, G__13079__a = new Array(arguments.length - 6);
        while (G__13079__i < G__13079__a.length) {
          G__13079__a[G__13079__i] = arguments[G__13079__i + 6];
          ++G__13079__i;
        }
        args = new cljs.core.IndexedSeq(G__13079__a, 0);
      }
      return G__13078__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__13078.cljs$lang$maxFixedArity = 6;
    G__13078.cljs$lang$applyTo = function(arglist__13080) {
      var obj = cljs.core.first(arglist__13080);
      arglist__13080 = cljs.core.next(arglist__13080);
      var f = cljs.core.first(arglist__13080);
      arglist__13080 = cljs.core.next(arglist__13080);
      var a = cljs.core.first(arglist__13080);
      arglist__13080 = cljs.core.next(arglist__13080);
      var b = cljs.core.first(arglist__13080);
      arglist__13080 = cljs.core.next(arglist__13080);
      var c = cljs.core.first(arglist__13080);
      arglist__13080 = cljs.core.next(arglist__13080);
      var d = cljs.core.first(arglist__13080);
      var args = cljs.core.rest(arglist__13080);
      return G__13078__delegate(obj, f, a, b, c, d, args);
    };
    G__13078.cljs$core$IFn$_invoke$arity$variadic = G__13078__delegate;
    return G__13078;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__13081 = null;
        if (arguments.length > 6) {
          var G__13082__i = 0, G__13082__a = new Array(arguments.length - 6);
          while (G__13082__i < G__13082__a.length) {
            G__13082__a[G__13082__i] = arguments[G__13082__i + 6];
            ++G__13082__i;
          }
          G__13081 = new cljs.core.IndexedSeq(G__13082__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__13081);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__13083__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__13083 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13084__i = 0, G__13084__a = new Array(arguments.length - 2);
        while (G__13084__i < G__13084__a.length) {
          G__13084__a[G__13084__i] = arguments[G__13084__i + 2];
          ++G__13084__i;
        }
        more = new cljs.core.IndexedSeq(G__13084__a, 0);
      }
      return G__13083__delegate.call(this, x, y, more);
    };
    G__13083.cljs$lang$maxFixedArity = 2;
    G__13083.cljs$lang$applyTo = function(arglist__13085) {
      var x = cljs.core.first(arglist__13085);
      arglist__13085 = cljs.core.next(arglist__13085);
      var y = cljs.core.first(arglist__13085);
      var more = cljs.core.rest(arglist__13085);
      return G__13083__delegate(x, y, more);
    };
    G__13083.cljs$core$IFn$_invoke$arity$variadic = G__13083__delegate;
    return G__13083;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__13086 = null;
        if (arguments.length > 2) {
          var G__13087__i = 0, G__13087__a = new Array(arguments.length - 2);
          while (G__13087__i < G__13087__a.length) {
            G__13087__a[G__13087__i] = arguments[G__13087__i + 2];
            ++G__13087__i;
          }
          G__13086 = new cljs.core.IndexedSeq(G__13087__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13086);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t13091 !== "undefined") {
  } else {
    cljs.core.t13091 = function(nil_iter, meta13092) {
      this.nil_iter = nil_iter;
      this.meta13092 = meta13092;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t13091.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t13091.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t13091.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t13091.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13093) {
      var self__ = this;
      var _13093__$1 = this;
      return self__.meta13092;
    };
    cljs.core.t13091.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13093, meta13092__$1) {
      var self__ = this;
      var _13093__$1 = this;
      return new cljs.core.t13091(self__.nil_iter, meta13092__$1);
    };
    cljs.core.t13091.cljs$lang$type = true;
    cljs.core.t13091.cljs$lang$ctorStr = "cljs.core/t13091";
    cljs.core.t13091.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write(writer__4387__auto__, "cljs.core/t13091");
    };
    cljs.core.__GT_t13091 = function __GT_t13091(nil_iter__$1, meta13092) {
      return new cljs.core.t13091(nil_iter__$1, meta13092);
    };
  }
  return new cljs.core.t13091(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 2998, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 2994, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = !(lt.stepper == null);
      if (and__3787__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3787__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__13094 = lt;
        var G__13095 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13094, G__13095) : self__.xform.call(null, G__13094, G__13095);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13096 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13096) : self__.xform.call(null, G__13096);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__13098 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13098) : xform.call(null, G__13098);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__13100 = cljs.core.next(iters__$1);
        iters__$1 = G__13100;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4686__auto___13101 = self__.iters.length;
  var i_13102 = 0;
  while (true) {
    if (i_13102 < n__4686__auto___13101) {
      self__.nexts[i_13102] = self__.iters[i_13102].next();
      var G__13103 = i_13102 + 1;
      i_13102 = G__13103;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = !(lt.stepper == null);
      if (and__3787__auto__) {
        return this$.hasNext();
      } else {
        return and__3787__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13099 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13099) : self__.xform.call(null, G__13099);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__13108 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13108) : xform.call(null, G__13108);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__13109_13113 = cljs.core.seq(colls);
  var chunk__13110_13114 = null;
  var count__13111_13115 = 0;
  var i__13112_13116 = 0;
  while (true) {
    if (i__13112_13116 < count__13111_13115) {
      var coll_13117 = chunk__13110_13114.cljs$core$IIndexed$_nth$arity$2(null, i__13112_13116);
      iters.push(cljs.core.iter(coll_13117));
      var G__13118 = seq__13109_13113;
      var G__13119 = chunk__13110_13114;
      var G__13120 = count__13111_13115;
      var G__13121 = i__13112_13116 + 1;
      seq__13109_13113 = G__13118;
      chunk__13110_13114 = G__13119;
      count__13111_13115 = G__13120;
      i__13112_13116 = G__13121;
      continue;
    } else {
      var temp__4126__auto___13122 = cljs.core.seq(seq__13109_13113);
      if (temp__4126__auto___13122) {
        var seq__13109_13123__$1 = temp__4126__auto___13122;
        if (cljs.core.chunked_seq_QMARK_(seq__13109_13123__$1)) {
          var c__4586__auto___13124 = cljs.core.chunk_first(seq__13109_13123__$1);
          var G__13125 = cljs.core.chunk_rest(seq__13109_13123__$1);
          var G__13126 = c__4586__auto___13124;
          var G__13127 = cljs.core.count(c__4586__auto___13124);
          var G__13128 = 0;
          seq__13109_13113 = G__13125;
          chunk__13110_13114 = G__13126;
          count__13111_13115 = G__13127;
          i__13112_13116 = G__13128;
          continue;
        } else {
          var coll_13129 = cljs.core.first(seq__13109_13123__$1);
          iters.push(cljs.core.iter(coll_13129));
          var G__13130 = cljs.core.next(seq__13109_13123__$1);
          var G__13131 = null;
          var G__13132 = 0;
          var G__13133 = 0;
          seq__13109_13113 = G__13130;
          chunk__13110_13114 = G__13131;
          count__13111_13115 = G__13132;
          i__13112_13116 = G__13133;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3799__auto__ = cljs.core.seq(coll);
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__13134__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__13134 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13135__i = 0, G__13135__a = new Array(arguments.length - 2);
        while (G__13135__i < G__13135__a.length) {
          G__13135__a[G__13135__i] = arguments[G__13135__i + 2];
          ++G__13135__i;
        }
        colls = new cljs.core.IndexedSeq(G__13135__a, 0);
      }
      return G__13134__delegate.call(this, xform, coll, colls);
    };
    G__13134.cljs$lang$maxFixedArity = 2;
    G__13134.cljs$lang$applyTo = function(arglist__13136) {
      var xform = cljs.core.first(arglist__13136);
      arglist__13136 = cljs.core.next(arglist__13136);
      var coll = cljs.core.first(arglist__13136);
      var colls = cljs.core.rest(arglist__13136);
      return G__13134__delegate(xform, coll, colls);
    };
    G__13134.cljs$core$IFn$_invoke$arity$variadic = G__13134__delegate;
    return G__13134;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__13137 = null;
        if (arguments.length > 2) {
          var G__13138__i = 0, G__13138__a = new Array(arguments.length - 2);
          while (G__13138__i < G__13138__a.length) {
            G__13138__a[G__13138__i] = arguments[G__13138__i + 2];
            ++G__13138__i;
          }
          G__13137 = new cljs.core.IndexedSeq(G__13138__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__13137);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__13140 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13140) : pred.call(null, G__13140);
      }())) {
        var G__13141 = pred;
        var G__13142 = cljs.core.next(coll);
        pred = G__13141;
        coll = G__13142;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3799__auto__ = function() {
        var G__13146 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13146) : pred.call(null, G__13146);
      }();
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        var G__13147 = pred;
        var G__13148 = cljs.core.next(coll);
        pred = G__13147;
        coll = G__13148;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13155 = null;
    var G__13155__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__13155__1 = function(x) {
      return cljs.core.not(function() {
        var G__13152 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13152) : f.call(null, G__13152);
      }());
    };
    var G__13155__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__13153 = x;
        var G__13154 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13153, G__13154) : f.call(null, G__13153, G__13154);
      }());
    };
    var G__13155__3 = function() {
      var G__13156__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__13156 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__13157__i = 0, G__13157__a = new Array(arguments.length - 2);
          while (G__13157__i < G__13157__a.length) {
            G__13157__a[G__13157__i] = arguments[G__13157__i + 2];
            ++G__13157__i;
          }
          zs = new cljs.core.IndexedSeq(G__13157__a, 0);
        }
        return G__13156__delegate.call(this, x, y, zs);
      };
      G__13156.cljs$lang$maxFixedArity = 2;
      G__13156.cljs$lang$applyTo = function(arglist__13158) {
        var x = cljs.core.first(arglist__13158);
        arglist__13158 = cljs.core.next(arglist__13158);
        var y = cljs.core.first(arglist__13158);
        var zs = cljs.core.rest(arglist__13158);
        return G__13156__delegate(x, y, zs);
      };
      G__13156.cljs$core$IFn$_invoke$arity$variadic = G__13156__delegate;
      return G__13156;
    }();
    G__13155 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13155__0.call(this);
        case 1:
          return G__13155__1.call(this, x);
        case 2:
          return G__13155__2.call(this, x, y);
        default:
          var G__13159 = null;
          if (arguments.length > 2) {
            var G__13160__i = 0, G__13160__a = new Array(arguments.length - 2);
            while (G__13160__i < G__13160__a.length) {
              G__13160__a[G__13160__i] = arguments[G__13160__i + 2];
              ++G__13160__i;
            }
            G__13159 = new cljs.core.IndexedSeq(G__13160__a, 0);
          }
          return G__13155__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13159);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13155.cljs$lang$maxFixedArity = 2;
    G__13155.cljs$lang$applyTo = G__13155__3.cljs$lang$applyTo;
    G__13155.cljs$core$IFn$_invoke$arity$0 = G__13155__0;
    G__13155.cljs$core$IFn$_invoke$arity$1 = G__13155__1;
    G__13155.cljs$core$IFn$_invoke$arity$2 = G__13155__2;
    G__13155.cljs$core$IFn$_invoke$arity$variadic = G__13155__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__13155;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13161__delegate = function(args) {
      return x;
    };
    var G__13161 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13162__i = 0, G__13162__a = new Array(arguments.length - 0);
        while (G__13162__i < G__13162__a.length) {
          G__13162__a[G__13162__i] = arguments[G__13162__i + 0];
          ++G__13162__i;
        }
        args = new cljs.core.IndexedSeq(G__13162__a, 0);
      }
      return G__13161__delegate.call(this, args);
    };
    G__13161.cljs$lang$maxFixedArity = 0;
    G__13161.cljs$lang$applyTo = function(arglist__13163) {
      var args = cljs.core.seq(arglist__13163);
      return G__13161__delegate(args);
    };
    G__13161.cljs$core$IFn$_invoke$arity$variadic = G__13161__delegate;
    return G__13161;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13218 = null;
      var G__13218__0 = function() {
        var G__13191 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13191) : f.call(null, G__13191);
      };
      var G__13218__1 = function(x) {
        var G__13192 = function() {
          var G__13193 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13193) : g.call(null, G__13193);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13192) : f.call(null, G__13192);
      };
      var G__13218__2 = function(x, y) {
        var G__13194 = function() {
          var G__13195 = x;
          var G__13196 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13195, G__13196) : g.call(null, G__13195, G__13196);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13194) : f.call(null, G__13194);
      };
      var G__13218__3 = function(x, y, z) {
        var G__13197 = function() {
          var G__13198 = x;
          var G__13199 = y;
          var G__13200 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13198, G__13199, G__13200) : g.call(null, G__13198, G__13199, G__13200);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13197) : f.call(null, G__13197);
      };
      var G__13218__4 = function() {
        var G__13219__delegate = function(x, y, z, args) {
          var G__13201 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13201) : f.call(null, G__13201);
        };
        var G__13219 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13220__i = 0, G__13220__a = new Array(arguments.length - 3);
            while (G__13220__i < G__13220__a.length) {
              G__13220__a[G__13220__i] = arguments[G__13220__i + 3];
              ++G__13220__i;
            }
            args = new cljs.core.IndexedSeq(G__13220__a, 0);
          }
          return G__13219__delegate.call(this, x, y, z, args);
        };
        G__13219.cljs$lang$maxFixedArity = 3;
        G__13219.cljs$lang$applyTo = function(arglist__13221) {
          var x = cljs.core.first(arglist__13221);
          arglist__13221 = cljs.core.next(arglist__13221);
          var y = cljs.core.first(arglist__13221);
          arglist__13221 = cljs.core.next(arglist__13221);
          var z = cljs.core.first(arglist__13221);
          var args = cljs.core.rest(arglist__13221);
          return G__13219__delegate(x, y, z, args);
        };
        G__13219.cljs$core$IFn$_invoke$arity$variadic = G__13219__delegate;
        return G__13219;
      }();
      G__13218 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13218__0.call(this);
          case 1:
            return G__13218__1.call(this, x);
          case 2:
            return G__13218__2.call(this, x, y);
          case 3:
            return G__13218__3.call(this, x, y, z);
          default:
            var G__13222 = null;
            if (arguments.length > 3) {
              var G__13223__i = 0, G__13223__a = new Array(arguments.length - 3);
              while (G__13223__i < G__13223__a.length) {
                G__13223__a[G__13223__i] = arguments[G__13223__i + 3];
                ++G__13223__i;
              }
              G__13222 = new cljs.core.IndexedSeq(G__13223__a, 0);
            }
            return G__13218__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13222);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13218.cljs$lang$maxFixedArity = 3;
      G__13218.cljs$lang$applyTo = G__13218__4.cljs$lang$applyTo;
      G__13218.cljs$core$IFn$_invoke$arity$0 = G__13218__0;
      G__13218.cljs$core$IFn$_invoke$arity$1 = G__13218__1;
      G__13218.cljs$core$IFn$_invoke$arity$2 = G__13218__2;
      G__13218.cljs$core$IFn$_invoke$arity$3 = G__13218__3;
      G__13218.cljs$core$IFn$_invoke$arity$variadic = G__13218__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13218;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13224 = null;
      var G__13224__0 = function() {
        var G__13202 = function() {
          var G__13203 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13203) : g.call(null, G__13203);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13202) : f.call(null, G__13202);
      };
      var G__13224__1 = function(x) {
        var G__13204 = function() {
          var G__13205 = function() {
            var G__13206 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13206) : h.call(null, G__13206);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13205) : g.call(null, G__13205);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13204) : f.call(null, G__13204);
      };
      var G__13224__2 = function(x, y) {
        var G__13207 = function() {
          var G__13208 = function() {
            var G__13209 = x;
            var G__13210 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13209, G__13210) : h.call(null, G__13209, G__13210);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13208) : g.call(null, G__13208);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13207) : f.call(null, G__13207);
      };
      var G__13224__3 = function(x, y, z) {
        var G__13211 = function() {
          var G__13212 = function() {
            var G__13213 = x;
            var G__13214 = y;
            var G__13215 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13213, G__13214, G__13215) : h.call(null, G__13213, G__13214, G__13215);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13212) : g.call(null, G__13212);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13211) : f.call(null, G__13211);
      };
      var G__13224__4 = function() {
        var G__13225__delegate = function(x, y, z, args) {
          var G__13216 = function() {
            var G__13217 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13217) : g.call(null, G__13217);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13216) : f.call(null, G__13216);
        };
        var G__13225 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13226__i = 0, G__13226__a = new Array(arguments.length - 3);
            while (G__13226__i < G__13226__a.length) {
              G__13226__a[G__13226__i] = arguments[G__13226__i + 3];
              ++G__13226__i;
            }
            args = new cljs.core.IndexedSeq(G__13226__a, 0);
          }
          return G__13225__delegate.call(this, x, y, z, args);
        };
        G__13225.cljs$lang$maxFixedArity = 3;
        G__13225.cljs$lang$applyTo = function(arglist__13227) {
          var x = cljs.core.first(arglist__13227);
          arglist__13227 = cljs.core.next(arglist__13227);
          var y = cljs.core.first(arglist__13227);
          arglist__13227 = cljs.core.next(arglist__13227);
          var z = cljs.core.first(arglist__13227);
          var args = cljs.core.rest(arglist__13227);
          return G__13225__delegate(x, y, z, args);
        };
        G__13225.cljs$core$IFn$_invoke$arity$variadic = G__13225__delegate;
        return G__13225;
      }();
      G__13224 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13224__0.call(this);
          case 1:
            return G__13224__1.call(this, x);
          case 2:
            return G__13224__2.call(this, x, y);
          case 3:
            return G__13224__3.call(this, x, y, z);
          default:
            var G__13228 = null;
            if (arguments.length > 3) {
              var G__13229__i = 0, G__13229__a = new Array(arguments.length - 3);
              while (G__13229__i < G__13229__a.length) {
                G__13229__a[G__13229__i] = arguments[G__13229__i + 3];
                ++G__13229__i;
              }
              G__13228 = new cljs.core.IndexedSeq(G__13229__a, 0);
            }
            return G__13224__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13228);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13224.cljs$lang$maxFixedArity = 3;
      G__13224.cljs$lang$applyTo = G__13224__4.cljs$lang$applyTo;
      G__13224.cljs$core$IFn$_invoke$arity$0 = G__13224__0;
      G__13224.cljs$core$IFn$_invoke$arity$1 = G__13224__1;
      G__13224.cljs$core$IFn$_invoke$arity$2 = G__13224__2;
      G__13224.cljs$core$IFn$_invoke$arity$3 = G__13224__3;
      G__13224.cljs$core$IFn$_invoke$arity$variadic = G__13224__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13224;
    }();
  };
  var comp__4 = function() {
    var G__13230__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__13231__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__13232 = cljs.core.first(fs__$2).call(null, ret);
                var G__13233 = cljs.core.next(fs__$2);
                ret = G__13232;
                fs__$2 = G__13233;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__13231 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__13234__i = 0, G__13234__a = new Array(arguments.length - 0);
              while (G__13234__i < G__13234__a.length) {
                G__13234__a[G__13234__i] = arguments[G__13234__i + 0];
                ++G__13234__i;
              }
              args = new cljs.core.IndexedSeq(G__13234__a, 0);
            }
            return G__13231__delegate.call(this, args);
          };
          G__13231.cljs$lang$maxFixedArity = 0;
          G__13231.cljs$lang$applyTo = function(arglist__13235) {
            var args = cljs.core.seq(arglist__13235);
            return G__13231__delegate(args);
          };
          G__13231.cljs$core$IFn$_invoke$arity$variadic = G__13231__delegate;
          return G__13231;
        }();
      }(fs__$1);
    };
    var G__13230 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__13236__i = 0, G__13236__a = new Array(arguments.length - 3);
        while (G__13236__i < G__13236__a.length) {
          G__13236__a[G__13236__i] = arguments[G__13236__i + 3];
          ++G__13236__i;
        }
        fs = new cljs.core.IndexedSeq(G__13236__a, 0);
      }
      return G__13230__delegate.call(this, f1, f2, f3, fs);
    };
    G__13230.cljs$lang$maxFixedArity = 3;
    G__13230.cljs$lang$applyTo = function(arglist__13237) {
      var f1 = cljs.core.first(arglist__13237);
      arglist__13237 = cljs.core.next(arglist__13237);
      var f2 = cljs.core.first(arglist__13237);
      arglist__13237 = cljs.core.next(arglist__13237);
      var f3 = cljs.core.first(arglist__13237);
      var fs = cljs.core.rest(arglist__13237);
      return G__13230__delegate(f1, f2, f3, fs);
    };
    G__13230.cljs$core$IFn$_invoke$arity$variadic = G__13230__delegate;
    return G__13230;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__13238 = null;
        if (arguments.length > 3) {
          var G__13239__i = 0, G__13239__a = new Array(arguments.length - 3);
          while (G__13239__i < G__13239__a.length) {
            G__13239__a[G__13239__i] = arguments[G__13239__i + 3];
            ++G__13239__i;
          }
          G__13238 = new cljs.core.IndexedSeq(G__13239__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__13238);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13324 = null;
      var G__13324__0 = function() {
        var G__13282 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13282) : f.call(null, G__13282);
      };
      var G__13324__1 = function(x) {
        var G__13283 = arg1;
        var G__13284 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13283, G__13284) : f.call(null, G__13283, G__13284);
      };
      var G__13324__2 = function(x, y) {
        var G__13285 = arg1;
        var G__13286 = x;
        var G__13287 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13285, G__13286, G__13287) : f.call(null, G__13285, G__13286, G__13287);
      };
      var G__13324__3 = function(x, y, z) {
        var G__13288 = arg1;
        var G__13289 = x;
        var G__13290 = y;
        var G__13291 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13288, G__13289, G__13290, G__13291) : f.call(null, G__13288, G__13289, G__13290, G__13291);
      };
      var G__13324__4 = function() {
        var G__13325__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__13325 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13326__i = 0, G__13326__a = new Array(arguments.length - 3);
            while (G__13326__i < G__13326__a.length) {
              G__13326__a[G__13326__i] = arguments[G__13326__i + 3];
              ++G__13326__i;
            }
            args = new cljs.core.IndexedSeq(G__13326__a, 0);
          }
          return G__13325__delegate.call(this, x, y, z, args);
        };
        G__13325.cljs$lang$maxFixedArity = 3;
        G__13325.cljs$lang$applyTo = function(arglist__13327) {
          var x = cljs.core.first(arglist__13327);
          arglist__13327 = cljs.core.next(arglist__13327);
          var y = cljs.core.first(arglist__13327);
          arglist__13327 = cljs.core.next(arglist__13327);
          var z = cljs.core.first(arglist__13327);
          var args = cljs.core.rest(arglist__13327);
          return G__13325__delegate(x, y, z, args);
        };
        G__13325.cljs$core$IFn$_invoke$arity$variadic = G__13325__delegate;
        return G__13325;
      }();
      G__13324 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13324__0.call(this);
          case 1:
            return G__13324__1.call(this, x);
          case 2:
            return G__13324__2.call(this, x, y);
          case 3:
            return G__13324__3.call(this, x, y, z);
          default:
            var G__13328 = null;
            if (arguments.length > 3) {
              var G__13329__i = 0, G__13329__a = new Array(arguments.length - 3);
              while (G__13329__i < G__13329__a.length) {
                G__13329__a[G__13329__i] = arguments[G__13329__i + 3];
                ++G__13329__i;
              }
              G__13328 = new cljs.core.IndexedSeq(G__13329__a, 0);
            }
            return G__13324__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13328);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13324.cljs$lang$maxFixedArity = 3;
      G__13324.cljs$lang$applyTo = G__13324__4.cljs$lang$applyTo;
      G__13324.cljs$core$IFn$_invoke$arity$0 = G__13324__0;
      G__13324.cljs$core$IFn$_invoke$arity$1 = G__13324__1;
      G__13324.cljs$core$IFn$_invoke$arity$2 = G__13324__2;
      G__13324.cljs$core$IFn$_invoke$arity$3 = G__13324__3;
      G__13324.cljs$core$IFn$_invoke$arity$variadic = G__13324__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13324;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13330 = null;
      var G__13330__0 = function() {
        var G__13292 = arg1;
        var G__13293 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13292, G__13293) : f.call(null, G__13292, G__13293);
      };
      var G__13330__1 = function(x) {
        var G__13294 = arg1;
        var G__13295 = arg2;
        var G__13296 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13294, G__13295, G__13296) : f.call(null, G__13294, G__13295, G__13296);
      };
      var G__13330__2 = function(x, y) {
        var G__13297 = arg1;
        var G__13298 = arg2;
        var G__13299 = x;
        var G__13300 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13297, G__13298, G__13299, G__13300) : f.call(null, G__13297, G__13298, G__13299, G__13300);
      };
      var G__13330__3 = function(x, y, z) {
        var G__13301 = arg1;
        var G__13302 = arg2;
        var G__13303 = x;
        var G__13304 = y;
        var G__13305 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13301, G__13302, G__13303, G__13304, G__13305) : f.call(null, G__13301, G__13302, G__13303, G__13304, G__13305);
      };
      var G__13330__4 = function() {
        var G__13331__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__13331 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13332__i = 0, G__13332__a = new Array(arguments.length - 3);
            while (G__13332__i < G__13332__a.length) {
              G__13332__a[G__13332__i] = arguments[G__13332__i + 3];
              ++G__13332__i;
            }
            args = new cljs.core.IndexedSeq(G__13332__a, 0);
          }
          return G__13331__delegate.call(this, x, y, z, args);
        };
        G__13331.cljs$lang$maxFixedArity = 3;
        G__13331.cljs$lang$applyTo = function(arglist__13333) {
          var x = cljs.core.first(arglist__13333);
          arglist__13333 = cljs.core.next(arglist__13333);
          var y = cljs.core.first(arglist__13333);
          arglist__13333 = cljs.core.next(arglist__13333);
          var z = cljs.core.first(arglist__13333);
          var args = cljs.core.rest(arglist__13333);
          return G__13331__delegate(x, y, z, args);
        };
        G__13331.cljs$core$IFn$_invoke$arity$variadic = G__13331__delegate;
        return G__13331;
      }();
      G__13330 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13330__0.call(this);
          case 1:
            return G__13330__1.call(this, x);
          case 2:
            return G__13330__2.call(this, x, y);
          case 3:
            return G__13330__3.call(this, x, y, z);
          default:
            var G__13334 = null;
            if (arguments.length > 3) {
              var G__13335__i = 0, G__13335__a = new Array(arguments.length - 3);
              while (G__13335__i < G__13335__a.length) {
                G__13335__a[G__13335__i] = arguments[G__13335__i + 3];
                ++G__13335__i;
              }
              G__13334 = new cljs.core.IndexedSeq(G__13335__a, 0);
            }
            return G__13330__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13334);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13330.cljs$lang$maxFixedArity = 3;
      G__13330.cljs$lang$applyTo = G__13330__4.cljs$lang$applyTo;
      G__13330.cljs$core$IFn$_invoke$arity$0 = G__13330__0;
      G__13330.cljs$core$IFn$_invoke$arity$1 = G__13330__1;
      G__13330.cljs$core$IFn$_invoke$arity$2 = G__13330__2;
      G__13330.cljs$core$IFn$_invoke$arity$3 = G__13330__3;
      G__13330.cljs$core$IFn$_invoke$arity$variadic = G__13330__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13330;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13336 = null;
      var G__13336__0 = function() {
        var G__13306 = arg1;
        var G__13307 = arg2;
        var G__13308 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13306, G__13307, G__13308) : f.call(null, G__13306, G__13307, G__13308);
      };
      var G__13336__1 = function(x) {
        var G__13309 = arg1;
        var G__13310 = arg2;
        var G__13311 = arg3;
        var G__13312 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13309, G__13310, G__13311, G__13312) : f.call(null, G__13309, G__13310, G__13311, G__13312);
      };
      var G__13336__2 = function(x, y) {
        var G__13313 = arg1;
        var G__13314 = arg2;
        var G__13315 = arg3;
        var G__13316 = x;
        var G__13317 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13313, G__13314, G__13315, G__13316, G__13317) : f.call(null, G__13313, G__13314, G__13315, G__13316, G__13317);
      };
      var G__13336__3 = function(x, y, z) {
        var G__13318 = arg1;
        var G__13319 = arg2;
        var G__13320 = arg3;
        var G__13321 = x;
        var G__13322 = y;
        var G__13323 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13318, G__13319, G__13320, G__13321, G__13322, G__13323) : f.call(null, G__13318, G__13319, G__13320, G__13321, G__13322, G__13323);
      };
      var G__13336__4 = function() {
        var G__13337__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__13337 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13338__i = 0, G__13338__a = new Array(arguments.length - 3);
            while (G__13338__i < G__13338__a.length) {
              G__13338__a[G__13338__i] = arguments[G__13338__i + 3];
              ++G__13338__i;
            }
            args = new cljs.core.IndexedSeq(G__13338__a, 0);
          }
          return G__13337__delegate.call(this, x, y, z, args);
        };
        G__13337.cljs$lang$maxFixedArity = 3;
        G__13337.cljs$lang$applyTo = function(arglist__13339) {
          var x = cljs.core.first(arglist__13339);
          arglist__13339 = cljs.core.next(arglist__13339);
          var y = cljs.core.first(arglist__13339);
          arglist__13339 = cljs.core.next(arglist__13339);
          var z = cljs.core.first(arglist__13339);
          var args = cljs.core.rest(arglist__13339);
          return G__13337__delegate(x, y, z, args);
        };
        G__13337.cljs$core$IFn$_invoke$arity$variadic = G__13337__delegate;
        return G__13337;
      }();
      G__13336 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13336__0.call(this);
          case 1:
            return G__13336__1.call(this, x);
          case 2:
            return G__13336__2.call(this, x, y);
          case 3:
            return G__13336__3.call(this, x, y, z);
          default:
            var G__13340 = null;
            if (arguments.length > 3) {
              var G__13341__i = 0, G__13341__a = new Array(arguments.length - 3);
              while (G__13341__i < G__13341__a.length) {
                G__13341__a[G__13341__i] = arguments[G__13341__i + 3];
                ++G__13341__i;
              }
              G__13340 = new cljs.core.IndexedSeq(G__13341__a, 0);
            }
            return G__13336__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13340);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13336.cljs$lang$maxFixedArity = 3;
      G__13336.cljs$lang$applyTo = G__13336__4.cljs$lang$applyTo;
      G__13336.cljs$core$IFn$_invoke$arity$0 = G__13336__0;
      G__13336.cljs$core$IFn$_invoke$arity$1 = G__13336__1;
      G__13336.cljs$core$IFn$_invoke$arity$2 = G__13336__2;
      G__13336.cljs$core$IFn$_invoke$arity$3 = G__13336__3;
      G__13336.cljs$core$IFn$_invoke$arity$variadic = G__13336__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13336;
    }();
  };
  var partial__5 = function() {
    var G__13342__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13343__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__13343 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__13344__i = 0, G__13344__a = new Array(arguments.length - 0);
            while (G__13344__i < G__13344__a.length) {
              G__13344__a[G__13344__i] = arguments[G__13344__i + 0];
              ++G__13344__i;
            }
            args = new cljs.core.IndexedSeq(G__13344__a, 0);
          }
          return G__13343__delegate.call(this, args);
        };
        G__13343.cljs$lang$maxFixedArity = 0;
        G__13343.cljs$lang$applyTo = function(arglist__13345) {
          var args = cljs.core.seq(arglist__13345);
          return G__13343__delegate(args);
        };
        G__13343.cljs$core$IFn$_invoke$arity$variadic = G__13343__delegate;
        return G__13343;
      }();
    };
    var G__13342 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13346__i = 0, G__13346__a = new Array(arguments.length - 4);
        while (G__13346__i < G__13346__a.length) {
          G__13346__a[G__13346__i] = arguments[G__13346__i + 4];
          ++G__13346__i;
        }
        more = new cljs.core.IndexedSeq(G__13346__a, 0);
      }
      return G__13342__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__13342.cljs$lang$maxFixedArity = 4;
    G__13342.cljs$lang$applyTo = function(arglist__13347) {
      var f = cljs.core.first(arglist__13347);
      arglist__13347 = cljs.core.next(arglist__13347);
      var arg1 = cljs.core.first(arglist__13347);
      arglist__13347 = cljs.core.next(arglist__13347);
      var arg2 = cljs.core.first(arglist__13347);
      arglist__13347 = cljs.core.next(arglist__13347);
      var arg3 = cljs.core.first(arglist__13347);
      var more = cljs.core.rest(arglist__13347);
      return G__13342__delegate(f, arg1, arg2, arg3, more);
    };
    G__13342.cljs$core$IFn$_invoke$arity$variadic = G__13342__delegate;
    return G__13342;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__13348 = null;
        if (arguments.length > 4) {
          var G__13349__i = 0, G__13349__a = new Array(arguments.length - 4);
          while (G__13349__i < G__13349__a.length) {
            G__13349__a[G__13349__i] = arguments[G__13349__i + 4];
            ++G__13349__i;
          }
          G__13348 = new cljs.core.IndexedSeq(G__13349__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__13348);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13382 = null;
      var G__13382__1 = function(a) {
        var G__13366 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13366) : f.call(null, G__13366);
      };
      var G__13382__2 = function(a, b) {
        var G__13367 = a == null ? x : a;
        var G__13368 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13367, G__13368) : f.call(null, G__13367, G__13368);
      };
      var G__13382__3 = function(a, b, c) {
        var G__13369 = a == null ? x : a;
        var G__13370 = b;
        var G__13371 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13369, G__13370, G__13371) : f.call(null, G__13369, G__13370, G__13371);
      };
      var G__13382__4 = function() {
        var G__13383__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__13383 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13384__i = 0, G__13384__a = new Array(arguments.length - 3);
            while (G__13384__i < G__13384__a.length) {
              G__13384__a[G__13384__i] = arguments[G__13384__i + 3];
              ++G__13384__i;
            }
            ds = new cljs.core.IndexedSeq(G__13384__a, 0);
          }
          return G__13383__delegate.call(this, a, b, c, ds);
        };
        G__13383.cljs$lang$maxFixedArity = 3;
        G__13383.cljs$lang$applyTo = function(arglist__13385) {
          var a = cljs.core.first(arglist__13385);
          arglist__13385 = cljs.core.next(arglist__13385);
          var b = cljs.core.first(arglist__13385);
          arglist__13385 = cljs.core.next(arglist__13385);
          var c = cljs.core.first(arglist__13385);
          var ds = cljs.core.rest(arglist__13385);
          return G__13383__delegate(a, b, c, ds);
        };
        G__13383.cljs$core$IFn$_invoke$arity$variadic = G__13383__delegate;
        return G__13383;
      }();
      G__13382 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13382__1.call(this, a);
          case 2:
            return G__13382__2.call(this, a, b);
          case 3:
            return G__13382__3.call(this, a, b, c);
          default:
            var G__13386 = null;
            if (arguments.length > 3) {
              var G__13387__i = 0, G__13387__a = new Array(arguments.length - 3);
              while (G__13387__i < G__13387__a.length) {
                G__13387__a[G__13387__i] = arguments[G__13387__i + 3];
                ++G__13387__i;
              }
              G__13386 = new cljs.core.IndexedSeq(G__13387__a, 0);
            }
            return G__13382__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13386);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13382.cljs$lang$maxFixedArity = 3;
      G__13382.cljs$lang$applyTo = G__13382__4.cljs$lang$applyTo;
      G__13382.cljs$core$IFn$_invoke$arity$1 = G__13382__1;
      G__13382.cljs$core$IFn$_invoke$arity$2 = G__13382__2;
      G__13382.cljs$core$IFn$_invoke$arity$3 = G__13382__3;
      G__13382.cljs$core$IFn$_invoke$arity$variadic = G__13382__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13382;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13388 = null;
      var G__13388__2 = function(a, b) {
        var G__13372 = a == null ? x : a;
        var G__13373 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13372, G__13373) : f.call(null, G__13372, G__13373);
      };
      var G__13388__3 = function(a, b, c) {
        var G__13374 = a == null ? x : a;
        var G__13375 = b == null ? y : b;
        var G__13376 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13374, G__13375, G__13376) : f.call(null, G__13374, G__13375, G__13376);
      };
      var G__13388__4 = function() {
        var G__13389__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__13389 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13390__i = 0, G__13390__a = new Array(arguments.length - 3);
            while (G__13390__i < G__13390__a.length) {
              G__13390__a[G__13390__i] = arguments[G__13390__i + 3];
              ++G__13390__i;
            }
            ds = new cljs.core.IndexedSeq(G__13390__a, 0);
          }
          return G__13389__delegate.call(this, a, b, c, ds);
        };
        G__13389.cljs$lang$maxFixedArity = 3;
        G__13389.cljs$lang$applyTo = function(arglist__13391) {
          var a = cljs.core.first(arglist__13391);
          arglist__13391 = cljs.core.next(arglist__13391);
          var b = cljs.core.first(arglist__13391);
          arglist__13391 = cljs.core.next(arglist__13391);
          var c = cljs.core.first(arglist__13391);
          var ds = cljs.core.rest(arglist__13391);
          return G__13389__delegate(a, b, c, ds);
        };
        G__13389.cljs$core$IFn$_invoke$arity$variadic = G__13389__delegate;
        return G__13389;
      }();
      G__13388 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13388__2.call(this, a, b);
          case 3:
            return G__13388__3.call(this, a, b, c);
          default:
            var G__13392 = null;
            if (arguments.length > 3) {
              var G__13393__i = 0, G__13393__a = new Array(arguments.length - 3);
              while (G__13393__i < G__13393__a.length) {
                G__13393__a[G__13393__i] = arguments[G__13393__i + 3];
                ++G__13393__i;
              }
              G__13392 = new cljs.core.IndexedSeq(G__13393__a, 0);
            }
            return G__13388__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13392);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13388.cljs$lang$maxFixedArity = 3;
      G__13388.cljs$lang$applyTo = G__13388__4.cljs$lang$applyTo;
      G__13388.cljs$core$IFn$_invoke$arity$2 = G__13388__2;
      G__13388.cljs$core$IFn$_invoke$arity$3 = G__13388__3;
      G__13388.cljs$core$IFn$_invoke$arity$variadic = G__13388__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13388;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13394 = null;
      var G__13394__2 = function(a, b) {
        var G__13377 = a == null ? x : a;
        var G__13378 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13377, G__13378) : f.call(null, G__13377, G__13378);
      };
      var G__13394__3 = function(a, b, c) {
        var G__13379 = a == null ? x : a;
        var G__13380 = b == null ? y : b;
        var G__13381 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13379, G__13380, G__13381) : f.call(null, G__13379, G__13380, G__13381);
      };
      var G__13394__4 = function() {
        var G__13395__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__13395 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13396__i = 0, G__13396__a = new Array(arguments.length - 3);
            while (G__13396__i < G__13396__a.length) {
              G__13396__a[G__13396__i] = arguments[G__13396__i + 3];
              ++G__13396__i;
            }
            ds = new cljs.core.IndexedSeq(G__13396__a, 0);
          }
          return G__13395__delegate.call(this, a, b, c, ds);
        };
        G__13395.cljs$lang$maxFixedArity = 3;
        G__13395.cljs$lang$applyTo = function(arglist__13397) {
          var a = cljs.core.first(arglist__13397);
          arglist__13397 = cljs.core.next(arglist__13397);
          var b = cljs.core.first(arglist__13397);
          arglist__13397 = cljs.core.next(arglist__13397);
          var c = cljs.core.first(arglist__13397);
          var ds = cljs.core.rest(arglist__13397);
          return G__13395__delegate(a, b, c, ds);
        };
        G__13395.cljs$core$IFn$_invoke$arity$variadic = G__13395__delegate;
        return G__13395;
      }();
      G__13394 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13394__2.call(this, a, b);
          case 3:
            return G__13394__3.call(this, a, b, c);
          default:
            var G__13398 = null;
            if (arguments.length > 3) {
              var G__13399__i = 0, G__13399__a = new Array(arguments.length - 3);
              while (G__13399__i < G__13399__a.length) {
                G__13399__a[G__13399__i] = arguments[G__13399__i + 3];
                ++G__13399__i;
              }
              G__13398 = new cljs.core.IndexedSeq(G__13399__a, 0);
            }
            return G__13394__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13398);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13394.cljs$lang$maxFixedArity = 3;
      G__13394.cljs$lang$applyTo = G__13394__4.cljs$lang$applyTo;
      G__13394.cljs$core$IFn$_invoke$arity$2 = G__13394__2;
      G__13394.cljs$core$IFn$_invoke$arity$3 = G__13394__3;
      G__13394.cljs$core$IFn$_invoke$arity$variadic = G__13394__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13394;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4686__auto___13448 = size;
          var i_13449 = 0;
          while (true) {
            if (i_13449 < n__4686__auto___13448) {
              cljs.core.chunk_append(b, function() {
                var G__13444 = idx + i_13449;
                var G__13445 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13449);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13444, G__13445) : f.call(null, G__13444, G__13445);
              }());
              var G__13450 = i_13449 + 1;
              i_13449 = G__13450;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__13446 = idx;
            var G__13447 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13446, G__13447) : f.call(null, G__13446, G__13447);
          }(), mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13469 = null;
        var G__13469__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13469__1 = function(result) {
          var G__13463 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13463) : rf.call(null, G__13463);
        };
        var G__13469__2 = function(result, input) {
          var v = function() {
            var G__13464 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13464) : f.call(null, G__13464);
          }();
          if (v == null) {
            return result;
          } else {
            var G__13465 = result;
            var G__13466 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13465, G__13466) : rf.call(null, G__13465, G__13466);
          }
        };
        G__13469 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13469__0.call(this);
            case 1:
              return G__13469__1.call(this, result);
            case 2:
              return G__13469__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13469.cljs$core$IFn$_invoke$arity$0 = G__13469__0;
        G__13469.cljs$core$IFn$_invoke$arity$1 = G__13469__1;
        G__13469.cljs$core$IFn$_invoke$arity$2 = G__13469__2;
        return G__13469;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4686__auto___13470 = size;
          var i_13471 = 0;
          while (true) {
            if (i_13471 < n__4686__auto___13470) {
              var x_13472 = function() {
                var G__13467 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13471);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13467) : f.call(null, G__13467);
              }();
              if (x_13472 == null) {
              } else {
                cljs.core.chunk_append(b, x_13472);
              }
              var G__13473 = i_13471 + 1;
              i_13471 = G__13473;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__13468 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13468) : f.call(null, G__13468);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__13474 = this$__$1;
  return goog.getUid(G__13474);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__13475 = cljs.core.seq(self__.watches);
  var chunk__13476 = null;
  var count__13477 = 0;
  var i__13478 = 0;
  while (true) {
    if (i__13478 < count__13477) {
      var vec__13479 = chunk__13476.cljs$core$IIndexed$_nth$arity$2(null, i__13478);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13479, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13479, 1, null);
      var G__13480_13489 = key;
      var G__13481_13490 = this$__$1;
      var G__13482_13491 = oldval;
      var G__13483_13492 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13480_13489, G__13481_13490, G__13482_13491, G__13483_13492) : f.call(null, G__13480_13489, G__13481_13490, G__13482_13491, G__13483_13492);
      var G__13493 = seq__13475;
      var G__13494 = chunk__13476;
      var G__13495 = count__13477;
      var G__13496 = i__13478 + 1;
      seq__13475 = G__13493;
      chunk__13476 = G__13494;
      count__13477 = G__13495;
      i__13478 = G__13496;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13475);
      if (temp__4126__auto__) {
        var seq__13475__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13475__$1)) {
          var c__4586__auto__ = cljs.core.chunk_first(seq__13475__$1);
          var G__13497 = cljs.core.chunk_rest(seq__13475__$1);
          var G__13498 = c__4586__auto__;
          var G__13499 = cljs.core.count(c__4586__auto__);
          var G__13500 = 0;
          seq__13475 = G__13497;
          chunk__13476 = G__13498;
          count__13477 = G__13499;
          i__13478 = G__13500;
          continue;
        } else {
          var vec__13484 = cljs.core.first(seq__13475__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13484, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13484, 1, null);
          var G__13485_13501 = key;
          var G__13486_13502 = this$__$1;
          var G__13487_13503 = oldval;
          var G__13488_13504 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13485_13501, G__13486_13502, G__13487_13503, G__13488_13504) : f.call(null, G__13485_13501, G__13486_13502, G__13487_13503, G__13488_13504);
          var G__13505 = cljs.core.next(seq__13475__$1);
          var G__13506 = null;
          var G__13507 = 0;
          var G__13508 = 0;
          seq__13475 = G__13505;
          chunk__13476 = G__13506;
          count__13477 = G__13507;
          i__13478 = G__13508;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__13512__delegate = function(x, p__13509) {
      var map__13511 = p__13509;
      var map__13511__$1 = cljs.core.seq_QMARK_(map__13511) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13511) : map__13511;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13511__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13511__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__13512 = function(x, var_args) {
      var p__13509 = null;
      if (arguments.length > 1) {
        var G__13513__i = 0, G__13513__a = new Array(arguments.length - 1);
        while (G__13513__i < G__13513__a.length) {
          G__13513__a[G__13513__i] = arguments[G__13513__i + 1];
          ++G__13513__i;
        }
        p__13509 = new cljs.core.IndexedSeq(G__13513__a, 0);
      }
      return G__13512__delegate.call(this, x, p__13509);
    };
    G__13512.cljs$lang$maxFixedArity = 1;
    G__13512.cljs$lang$applyTo = function(arglist__13514) {
      var x = cljs.core.first(arglist__13514);
      var p__13509 = cljs.core.rest(arglist__13514);
      return G__13512__delegate(x, p__13509);
    };
    G__13512.cljs$core$IFn$_invoke$arity$variadic = G__13512__delegate;
    return G__13512;
  }();
  atom = function(x, var_args) {
    var p__13509 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__13515 = null;
        if (arguments.length > 1) {
          var G__13516__i = 0, G__13516__a = new Array(arguments.length - 1);
          while (G__13516__i < G__13516__a.length) {
            G__13516__a[G__13516__i] = arguments[G__13516__i + 1];
            ++G__13516__i;
          }
          G__13515 = new cljs.core.IndexedSeq(G__13516__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13515);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__13519 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13519) : validate.call(null, G__13519);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__13520 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13520) : cljs.core.pr_str.call(null, G__13520);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13527 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13527) : f.call(null, G__13527);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13528 = a.state;
        var G__13529 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13528, G__13529) : f.call(null, G__13528, G__13529);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13530 = a.state;
        var G__13531 = x;
        var G__13532 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13530, G__13531, G__13532) : f.call(null, G__13530, G__13531, G__13532);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__13533__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__13533 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13534__i = 0, G__13534__a = new Array(arguments.length - 4);
        while (G__13534__i < G__13534__a.length) {
          G__13534__a[G__13534__i] = arguments[G__13534__i + 4];
          ++G__13534__i;
        }
        more = new cljs.core.IndexedSeq(G__13534__a, 0);
      }
      return G__13533__delegate.call(this, a, f, x, y, more);
    };
    G__13533.cljs$lang$maxFixedArity = 4;
    G__13533.cljs$lang$applyTo = function(arglist__13535) {
      var a = cljs.core.first(arglist__13535);
      arglist__13535 = cljs.core.next(arglist__13535);
      var f = cljs.core.first(arglist__13535);
      arglist__13535 = cljs.core.next(arglist__13535);
      var x = cljs.core.first(arglist__13535);
      arglist__13535 = cljs.core.next(arglist__13535);
      var y = cljs.core.first(arglist__13535);
      var more = cljs.core.rest(arglist__13535);
      return G__13533__delegate(a, f, x, y, more);
    };
    G__13533.cljs$core$IFn$_invoke$arity$variadic = G__13533__delegate;
    return G__13533;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__13536 = null;
        if (arguments.length > 4) {
          var G__13537__i = 0, G__13537__a = new Array(arguments.length - 4);
          while (G__13537__i < G__13537__a.length) {
            G__13537__a[G__13537__i] = arguments[G__13537__i + 4];
            ++G__13537__i;
          }
          G__13536 = new cljs.core.IndexedSeq(G__13537__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__13536);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__13604 = null;
          var G__13604__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13604__1 = function(result) {
            var G__13571 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13571) : rf.call(null, G__13571);
          };
          var G__13604__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__13572 = i;
              var G__13573 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13572, G__13573) : f.call(null, G__13572, G__13573);
            }();
            if (v == null) {
              return result;
            } else {
              var G__13574 = result;
              var G__13575 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13574, G__13575) : rf.call(null, G__13574, G__13575);
            }
          };
          G__13604 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13604__0.call(this);
              case 1:
                return G__13604__1.call(this, result);
              case 2:
                return G__13604__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13604.cljs$core$IFn$_invoke$arity$0 = G__13604__0;
          G__13604.cljs$core$IFn$_invoke$arity$1 = G__13604__1;
          G__13604.cljs$core$IFn$_invoke$arity$2 = G__13604__2;
          return G__13604;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4686__auto___13605 = size;
            var i_13606 = 0;
            while (true) {
              if (i_13606 < n__4686__auto___13605) {
                var x_13607 = function() {
                  var G__13600 = idx + i_13606;
                  var G__13601 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13606);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13600, G__13601) : f.call(null, G__13600, G__13601);
                }();
                if (x_13607 == null) {
                } else {
                  cljs.core.chunk_append(b, x_13607);
                }
                var G__13608 = i_13606 + 1;
                i_13606 = G__13608;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__13602 = idx;
              var G__13603 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13602, G__13603) : f.call(null, G__13602, G__13603);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__13822 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13822) : p.call(null, G__13822);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13824 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13824) : p.call(null, G__13824);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var G__13825 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13825) : p.call(null, G__13825);
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13827 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13827) : p.call(null, G__13827);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var and__3787__auto____$1 = function() {
              var G__13829 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13829) : p.call(null, G__13829);
            }();
            if (cljs.core.truth_(and__3787__auto____$1)) {
              var G__13830 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13830) : p.call(null, G__13830);
            } else {
              return and__3787__auto____$1;
            }
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__13999__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__13999 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14000__i = 0, G__14000__a = new Array(arguments.length - 3);
            while (G__14000__i < G__14000__a.length) {
              G__14000__a[G__14000__i] = arguments[G__14000__i + 3];
              ++G__14000__i;
            }
            args = new cljs.core.IndexedSeq(G__14000__a, 0);
          }
          return G__13999__delegate.call(this, x, y, z, args);
        };
        G__13999.cljs$lang$maxFixedArity = 3;
        G__13999.cljs$lang$applyTo = function(arglist__14001) {
          var x = cljs.core.first(arglist__14001);
          arglist__14001 = cljs.core.next(arglist__14001);
          var y = cljs.core.first(arglist__14001);
          arglist__14001 = cljs.core.next(arglist__14001);
          var z = cljs.core.first(arglist__14001);
          var args = cljs.core.rest(arglist__14001);
          return G__13999__delegate(x, y, z, args);
        };
        G__13999.cljs$core$IFn$_invoke$arity$variadic = G__13999__delegate;
        return G__13999;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__14002 = null;
            if (arguments.length > 3) {
              var G__14003__i = 0, G__14003__a = new Array(arguments.length - 3);
              while (G__14003__i < G__14003__a.length) {
                G__14003__a[G__14003__i] = arguments[G__14003__i + 3];
                ++G__14003__i;
              }
              G__14002 = new cljs.core.IndexedSeq(G__14003__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14002);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13862 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13862) : p1.call(null, G__13862);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var G__13863 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13863) : p2.call(null, G__13863);
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13865 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13865) : p1.call(null, G__13865);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var and__3787__auto____$1 = function() {
              var G__13867 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13867) : p1.call(null, G__13867);
            }();
            if (cljs.core.truth_(and__3787__auto____$1)) {
              var and__3787__auto____$2 = function() {
                var G__13869 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13869) : p2.call(null, G__13869);
              }();
              if (cljs.core.truth_(and__3787__auto____$2)) {
                var G__13870 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13870) : p2.call(null, G__13870);
              } else {
                return and__3787__auto____$2;
              }
            } else {
              return and__3787__auto____$1;
            }
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13872 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13872) : p1.call(null, G__13872);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var and__3787__auto____$1 = function() {
              var G__13874 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13874) : p1.call(null, G__13874);
            }();
            if (cljs.core.truth_(and__3787__auto____$1)) {
              var and__3787__auto____$2 = function() {
                var G__13876 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13876) : p1.call(null, G__13876);
              }();
              if (cljs.core.truth_(and__3787__auto____$2)) {
                var and__3787__auto____$3 = function() {
                  var G__13878 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13878) : p2.call(null, G__13878);
                }();
                if (cljs.core.truth_(and__3787__auto____$3)) {
                  var and__3787__auto____$4 = function() {
                    var G__13880 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13880) : p2.call(null, G__13880);
                  }();
                  if (cljs.core.truth_(and__3787__auto____$4)) {
                    var G__13881 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13881) : p2.call(null, G__13881);
                  } else {
                    return and__3787__auto____$4;
                  }
                } else {
                  return and__3787__auto____$3;
                }
              } else {
                return and__3787__auto____$2;
              }
            } else {
              return and__3787__auto____$1;
            }
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__14004__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13609_SHARP_) {
            var and__3787__auto__ = function() {
              var G__13886 = p1__13609_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13886) : p1.call(null, G__13886);
            }();
            if (cljs.core.truth_(and__3787__auto__)) {
              var G__13887 = p1__13609_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13887) : p2.call(null, G__13887);
            } else {
              return and__3787__auto__;
            }
          }, args));
        };
        var G__14004 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14005__i = 0, G__14005__a = new Array(arguments.length - 3);
            while (G__14005__i < G__14005__a.length) {
              G__14005__a[G__14005__i] = arguments[G__14005__i + 3];
              ++G__14005__i;
            }
            args = new cljs.core.IndexedSeq(G__14005__a, 0);
          }
          return G__14004__delegate.call(this, x, y, z, args);
        };
        G__14004.cljs$lang$maxFixedArity = 3;
        G__14004.cljs$lang$applyTo = function(arglist__14006) {
          var x = cljs.core.first(arglist__14006);
          arglist__14006 = cljs.core.next(arglist__14006);
          var y = cljs.core.first(arglist__14006);
          arglist__14006 = cljs.core.next(arglist__14006);
          var z = cljs.core.first(arglist__14006);
          var args = cljs.core.rest(arglist__14006);
          return G__14004__delegate(x, y, z, args);
        };
        G__14004.cljs$core$IFn$_invoke$arity$variadic = G__14004__delegate;
        return G__14004;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__14007 = null;
            if (arguments.length > 3) {
              var G__14008__i = 0, G__14008__a = new Array(arguments.length - 3);
              while (G__14008__i < G__14008__a.length) {
                G__14008__a[G__14008__i] = arguments[G__14008__i + 3];
                ++G__14008__i;
              }
              G__14007 = new cljs.core.IndexedSeq(G__14008__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14007);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13933 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13933) : p1.call(null, G__13933);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var and__3787__auto____$1 = function() {
              var G__13935 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13935) : p2.call(null, G__13935);
            }();
            if (cljs.core.truth_(and__3787__auto____$1)) {
              var G__13936 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13936) : p3.call(null, G__13936);
            } else {
              return and__3787__auto____$1;
            }
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13938 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13938) : p1.call(null, G__13938);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var and__3787__auto____$1 = function() {
              var G__13940 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13940) : p2.call(null, G__13940);
            }();
            if (cljs.core.truth_(and__3787__auto____$1)) {
              var and__3787__auto____$2 = function() {
                var G__13942 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13942) : p3.call(null, G__13942);
              }();
              if (cljs.core.truth_(and__3787__auto____$2)) {
                var and__3787__auto____$3 = function() {
                  var G__13944 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13944) : p1.call(null, G__13944);
                }();
                if (cljs.core.truth_(and__3787__auto____$3)) {
                  var and__3787__auto____$4 = function() {
                    var G__13946 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13946) : p2.call(null, G__13946);
                  }();
                  if (cljs.core.truth_(and__3787__auto____$4)) {
                    var G__13947 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13947) : p3.call(null, G__13947);
                  } else {
                    return and__3787__auto____$4;
                  }
                } else {
                  return and__3787__auto____$3;
                }
              } else {
                return and__3787__auto____$2;
              }
            } else {
              return and__3787__auto____$1;
            }
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3787__auto__ = function() {
            var G__13949 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13949) : p1.call(null, G__13949);
          }();
          if (cljs.core.truth_(and__3787__auto__)) {
            var and__3787__auto____$1 = function() {
              var G__13951 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13951) : p2.call(null, G__13951);
            }();
            if (cljs.core.truth_(and__3787__auto____$1)) {
              var and__3787__auto____$2 = function() {
                var G__13953 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13953) : p3.call(null, G__13953);
              }();
              if (cljs.core.truth_(and__3787__auto____$2)) {
                var and__3787__auto____$3 = function() {
                  var G__13955 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13955) : p1.call(null, G__13955);
                }();
                if (cljs.core.truth_(and__3787__auto____$3)) {
                  var and__3787__auto____$4 = function() {
                    var G__13957 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13957) : p2.call(null, G__13957);
                  }();
                  if (cljs.core.truth_(and__3787__auto____$4)) {
                    var and__3787__auto____$5 = function() {
                      var G__13959 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13959) : p3.call(null, G__13959);
                    }();
                    if (cljs.core.truth_(and__3787__auto____$5)) {
                      var and__3787__auto____$6 = function() {
                        var G__13961 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13961) : p1.call(null, G__13961);
                      }();
                      if (cljs.core.truth_(and__3787__auto____$6)) {
                        var and__3787__auto____$7 = function() {
                          var G__13963 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13963) : p2.call(null, G__13963);
                        }();
                        if (cljs.core.truth_(and__3787__auto____$7)) {
                          var G__13964 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13964) : p3.call(null, G__13964);
                        } else {
                          return and__3787__auto____$7;
                        }
                      } else {
                        return and__3787__auto____$6;
                      }
                    } else {
                      return and__3787__auto____$5;
                    }
                  } else {
                    return and__3787__auto____$4;
                  }
                } else {
                  return and__3787__auto____$3;
                }
              } else {
                return and__3787__auto____$2;
              }
            } else {
              return and__3787__auto____$1;
            }
          } else {
            return and__3787__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__14009__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13610_SHARP_) {
            var and__3787__auto__ = function() {
              var G__13971 = p1__13610_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13971) : p1.call(null, G__13971);
            }();
            if (cljs.core.truth_(and__3787__auto__)) {
              var and__3787__auto____$1 = function() {
                var G__13973 = p1__13610_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13973) : p2.call(null, G__13973);
              }();
              if (cljs.core.truth_(and__3787__auto____$1)) {
                var G__13974 = p1__13610_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13974) : p3.call(null, G__13974);
              } else {
                return and__3787__auto____$1;
              }
            } else {
              return and__3787__auto__;
            }
          }, args));
        };
        var G__14009 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14010__i = 0, G__14010__a = new Array(arguments.length - 3);
            while (G__14010__i < G__14010__a.length) {
              G__14010__a[G__14010__i] = arguments[G__14010__i + 3];
              ++G__14010__i;
            }
            args = new cljs.core.IndexedSeq(G__14010__a, 0);
          }
          return G__14009__delegate.call(this, x, y, z, args);
        };
        G__14009.cljs$lang$maxFixedArity = 3;
        G__14009.cljs$lang$applyTo = function(arglist__14011) {
          var x = cljs.core.first(arglist__14011);
          arglist__14011 = cljs.core.next(arglist__14011);
          var y = cljs.core.first(arglist__14011);
          arglist__14011 = cljs.core.next(arglist__14011);
          var z = cljs.core.first(arglist__14011);
          var args = cljs.core.rest(arglist__14011);
          return G__14009__delegate(x, y, z, args);
        };
        G__14009.cljs$core$IFn$_invoke$arity$variadic = G__14009__delegate;
        return G__14009;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__14012 = null;
            if (arguments.length > 3) {
              var G__14013__i = 0, G__14013__a = new Array(arguments.length - 3);
              while (G__14013__i < G__14013__a.length) {
                G__14013__a[G__14013__i] = arguments[G__14013__i + 3];
                ++G__14013__i;
              }
              G__14012 = new cljs.core.IndexedSeq(G__14013__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14012);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__14014__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13611_SHARP_) {
                var G__13990 = x;
                return p1__13611_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13611_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13990) : p1__13611_SHARP_.call(null, G__13990);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13612_SHARP_) {
                var and__3787__auto__ = function() {
                  var G__13992 = x;
                  return p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13992) : p1__13612_SHARP_.call(null, G__13992);
                }();
                if (cljs.core.truth_(and__3787__auto__)) {
                  var G__13993 = y;
                  return p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13993) : p1__13612_SHARP_.call(null, G__13993);
                } else {
                  return and__3787__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13613_SHARP_) {
                var and__3787__auto__ = function() {
                  var G__13995 = x;
                  return p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13995) : p1__13613_SHARP_.call(null, G__13995);
                }();
                if (cljs.core.truth_(and__3787__auto__)) {
                  var and__3787__auto____$1 = function() {
                    var G__13997 = y;
                    return p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13997) : p1__13613_SHARP_.call(null, G__13997);
                  }();
                  if (cljs.core.truth_(and__3787__auto____$1)) {
                    var G__13998 = z;
                    return p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13998) : p1__13613_SHARP_.call(null, G__13998);
                  } else {
                    return and__3787__auto____$1;
                  }
                } else {
                  return and__3787__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__14015__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__13614_SHARP_) {
                  return cljs.core.every_QMARK_(p1__13614_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__14015 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14016__i = 0, G__14016__a = new Array(arguments.length - 3);
                while (G__14016__i < G__14016__a.length) {
                  G__14016__a[G__14016__i] = arguments[G__14016__i + 3];
                  ++G__14016__i;
                }
                args = new cljs.core.IndexedSeq(G__14016__a, 0);
              }
              return G__14015__delegate.call(this, x, y, z, args);
            };
            G__14015.cljs$lang$maxFixedArity = 3;
            G__14015.cljs$lang$applyTo = function(arglist__14017) {
              var x = cljs.core.first(arglist__14017);
              arglist__14017 = cljs.core.next(arglist__14017);
              var y = cljs.core.first(arglist__14017);
              arglist__14017 = cljs.core.next(arglist__14017);
              var z = cljs.core.first(arglist__14017);
              var args = cljs.core.rest(arglist__14017);
              return G__14015__delegate(x, y, z, args);
            };
            G__14015.cljs$core$IFn$_invoke$arity$variadic = G__14015__delegate;
            return G__14015;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__14018 = null;
                if (arguments.length > 3) {
                  var G__14019__i = 0, G__14019__a = new Array(arguments.length - 3);
                  while (G__14019__i < G__14019__a.length) {
                    G__14019__a[G__14019__i] = arguments[G__14019__i + 3];
                    ++G__14019__i;
                  }
                  G__14018 = new cljs.core.IndexedSeq(G__14019__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14018);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__14014 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14020__i = 0, G__14020__a = new Array(arguments.length - 3);
        while (G__14020__i < G__14020__a.length) {
          G__14020__a[G__14020__i] = arguments[G__14020__i + 3];
          ++G__14020__i;
        }
        ps = new cljs.core.IndexedSeq(G__14020__a, 0);
      }
      return G__14014__delegate.call(this, p1, p2, p3, ps);
    };
    G__14014.cljs$lang$maxFixedArity = 3;
    G__14014.cljs$lang$applyTo = function(arglist__14021) {
      var p1 = cljs.core.first(arglist__14021);
      arglist__14021 = cljs.core.next(arglist__14021);
      var p2 = cljs.core.first(arglist__14021);
      arglist__14021 = cljs.core.next(arglist__14021);
      var p3 = cljs.core.first(arglist__14021);
      var ps = cljs.core.rest(arglist__14021);
      return G__14014__delegate(p1, p2, p3, ps);
    };
    G__14014.cljs$core$IFn$_invoke$arity$variadic = G__14014__delegate;
    return G__14014;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__14022 = null;
        if (arguments.length > 3) {
          var G__14023__i = 0, G__14023__a = new Array(arguments.length - 3);
          while (G__14023__i < G__14023__a.length) {
            G__14023__a[G__14023__i] = arguments[G__14023__i + 3];
            ++G__14023__i;
          }
          G__14022 = new cljs.core.IndexedSeq(G__14023__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14022);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__14229 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14229) : p.call(null, G__14229);
      };
      var sp1__2 = function(x, y) {
        var or__3799__auto__ = function() {
          var G__14231 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14231) : p.call(null, G__14231);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var G__14232 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14232) : p.call(null, G__14232);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3799__auto__ = function() {
          var G__14234 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14234) : p.call(null, G__14234);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = function() {
            var G__14236 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14236) : p.call(null, G__14236);
          }();
          if (cljs.core.truth_(or__3799__auto____$1)) {
            return or__3799__auto____$1;
          } else {
            var G__14237 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14237) : p.call(null, G__14237);
          }
        }
      };
      var sp1__4 = function() {
        var G__14398__delegate = function(x, y, z, args) {
          var or__3799__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__14398 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14399__i = 0, G__14399__a = new Array(arguments.length - 3);
            while (G__14399__i < G__14399__a.length) {
              G__14399__a[G__14399__i] = arguments[G__14399__i + 3];
              ++G__14399__i;
            }
            args = new cljs.core.IndexedSeq(G__14399__a, 0);
          }
          return G__14398__delegate.call(this, x, y, z, args);
        };
        G__14398.cljs$lang$maxFixedArity = 3;
        G__14398.cljs$lang$applyTo = function(arglist__14400) {
          var x = cljs.core.first(arglist__14400);
          arglist__14400 = cljs.core.next(arglist__14400);
          var y = cljs.core.first(arglist__14400);
          arglist__14400 = cljs.core.next(arglist__14400);
          var z = cljs.core.first(arglist__14400);
          var args = cljs.core.rest(arglist__14400);
          return G__14398__delegate(x, y, z, args);
        };
        G__14398.cljs$core$IFn$_invoke$arity$variadic = G__14398__delegate;
        return G__14398;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__14401 = null;
            if (arguments.length > 3) {
              var G__14402__i = 0, G__14402__a = new Array(arguments.length - 3);
              while (G__14402__i < G__14402__a.length) {
                G__14402__a[G__14402__i] = arguments[G__14402__i + 3];
                ++G__14402__i;
              }
              G__14401 = new cljs.core.IndexedSeq(G__14402__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14401);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3799__auto__ = function() {
          var G__14269 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14269) : p1.call(null, G__14269);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var G__14270 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14270) : p2.call(null, G__14270);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3799__auto__ = function() {
          var G__14272 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14272) : p1.call(null, G__14272);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = function() {
            var G__14274 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14274) : p1.call(null, G__14274);
          }();
          if (cljs.core.truth_(or__3799__auto____$1)) {
            return or__3799__auto____$1;
          } else {
            var or__3799__auto____$2 = function() {
              var G__14276 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14276) : p2.call(null, G__14276);
            }();
            if (cljs.core.truth_(or__3799__auto____$2)) {
              return or__3799__auto____$2;
            } else {
              var G__14277 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14277) : p2.call(null, G__14277);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3799__auto__ = function() {
          var G__14279 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14279) : p1.call(null, G__14279);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = function() {
            var G__14281 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14281) : p1.call(null, G__14281);
          }();
          if (cljs.core.truth_(or__3799__auto____$1)) {
            return or__3799__auto____$1;
          } else {
            var or__3799__auto____$2 = function() {
              var G__14283 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14283) : p1.call(null, G__14283);
            }();
            if (cljs.core.truth_(or__3799__auto____$2)) {
              return or__3799__auto____$2;
            } else {
              var or__3799__auto____$3 = function() {
                var G__14285 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14285) : p2.call(null, G__14285);
              }();
              if (cljs.core.truth_(or__3799__auto____$3)) {
                return or__3799__auto____$3;
              } else {
                var or__3799__auto____$4 = function() {
                  var G__14287 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14287) : p2.call(null, G__14287);
                }();
                if (cljs.core.truth_(or__3799__auto____$4)) {
                  return or__3799__auto____$4;
                } else {
                  var G__14288 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14288) : p2.call(null, G__14288);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14403__delegate = function(x, y, z, args) {
          var or__3799__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return cljs.core.some(function(or__3799__auto__) {
              return function(p1__14024_SHARP_) {
                var or__3799__auto____$1 = function() {
                  var G__14290 = p1__14024_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14290) : p1.call(null, G__14290);
                }();
                if (cljs.core.truth_(or__3799__auto____$1)) {
                  return or__3799__auto____$1;
                } else {
                  var G__14291 = p1__14024_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14291) : p2.call(null, G__14291);
                }
              };
            }(or__3799__auto__), args);
          }
        };
        var G__14403 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14404__i = 0, G__14404__a = new Array(arguments.length - 3);
            while (G__14404__i < G__14404__a.length) {
              G__14404__a[G__14404__i] = arguments[G__14404__i + 3];
              ++G__14404__i;
            }
            args = new cljs.core.IndexedSeq(G__14404__a, 0);
          }
          return G__14403__delegate.call(this, x, y, z, args);
        };
        G__14403.cljs$lang$maxFixedArity = 3;
        G__14403.cljs$lang$applyTo = function(arglist__14405) {
          var x = cljs.core.first(arglist__14405);
          arglist__14405 = cljs.core.next(arglist__14405);
          var y = cljs.core.first(arglist__14405);
          arglist__14405 = cljs.core.next(arglist__14405);
          var z = cljs.core.first(arglist__14405);
          var args = cljs.core.rest(arglist__14405);
          return G__14403__delegate(x, y, z, args);
        };
        G__14403.cljs$core$IFn$_invoke$arity$variadic = G__14403__delegate;
        return G__14403;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__14406 = null;
            if (arguments.length > 3) {
              var G__14407__i = 0, G__14407__a = new Array(arguments.length - 3);
              while (G__14407__i < G__14407__a.length) {
                G__14407__a[G__14407__i] = arguments[G__14407__i + 3];
                ++G__14407__i;
              }
              G__14406 = new cljs.core.IndexedSeq(G__14407__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14406);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3799__auto__ = function() {
          var G__14337 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14337) : p1.call(null, G__14337);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = function() {
            var G__14339 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14339) : p2.call(null, G__14339);
          }();
          if (cljs.core.truth_(or__3799__auto____$1)) {
            return or__3799__auto____$1;
          } else {
            var G__14340 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14340) : p3.call(null, G__14340);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3799__auto__ = function() {
          var G__14342 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14342) : p1.call(null, G__14342);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = function() {
            var G__14344 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14344) : p2.call(null, G__14344);
          }();
          if (cljs.core.truth_(or__3799__auto____$1)) {
            return or__3799__auto____$1;
          } else {
            var or__3799__auto____$2 = function() {
              var G__14346 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14346) : p3.call(null, G__14346);
            }();
            if (cljs.core.truth_(or__3799__auto____$2)) {
              return or__3799__auto____$2;
            } else {
              var or__3799__auto____$3 = function() {
                var G__14348 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14348) : p1.call(null, G__14348);
              }();
              if (cljs.core.truth_(or__3799__auto____$3)) {
                return or__3799__auto____$3;
              } else {
                var or__3799__auto____$4 = function() {
                  var G__14350 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14350) : p2.call(null, G__14350);
                }();
                if (cljs.core.truth_(or__3799__auto____$4)) {
                  return or__3799__auto____$4;
                } else {
                  var G__14351 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14351) : p3.call(null, G__14351);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3799__auto__ = function() {
          var G__14353 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14353) : p1.call(null, G__14353);
        }();
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = function() {
            var G__14355 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14355) : p2.call(null, G__14355);
          }();
          if (cljs.core.truth_(or__3799__auto____$1)) {
            return or__3799__auto____$1;
          } else {
            var or__3799__auto____$2 = function() {
              var G__14357 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14357) : p3.call(null, G__14357);
            }();
            if (cljs.core.truth_(or__3799__auto____$2)) {
              return or__3799__auto____$2;
            } else {
              var or__3799__auto____$3 = function() {
                var G__14359 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14359) : p1.call(null, G__14359);
              }();
              if (cljs.core.truth_(or__3799__auto____$3)) {
                return or__3799__auto____$3;
              } else {
                var or__3799__auto____$4 = function() {
                  var G__14361 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14361) : p2.call(null, G__14361);
                }();
                if (cljs.core.truth_(or__3799__auto____$4)) {
                  return or__3799__auto____$4;
                } else {
                  var or__3799__auto____$5 = function() {
                    var G__14363 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14363) : p3.call(null, G__14363);
                  }();
                  if (cljs.core.truth_(or__3799__auto____$5)) {
                    return or__3799__auto____$5;
                  } else {
                    var or__3799__auto____$6 = function() {
                      var G__14365 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14365) : p1.call(null, G__14365);
                    }();
                    if (cljs.core.truth_(or__3799__auto____$6)) {
                      return or__3799__auto____$6;
                    } else {
                      var or__3799__auto____$7 = function() {
                        var G__14367 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14367) : p2.call(null, G__14367);
                      }();
                      if (cljs.core.truth_(or__3799__auto____$7)) {
                        return or__3799__auto____$7;
                      } else {
                        var G__14368 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14368) : p3.call(null, G__14368);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14408__delegate = function(x, y, z, args) {
          var or__3799__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return cljs.core.some(function(or__3799__auto__) {
              return function(p1__14025_SHARP_) {
                var or__3799__auto____$1 = function() {
                  var G__14370 = p1__14025_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14370) : p1.call(null, G__14370);
                }();
                if (cljs.core.truth_(or__3799__auto____$1)) {
                  return or__3799__auto____$1;
                } else {
                  var or__3799__auto____$2 = function() {
                    var G__14372 = p1__14025_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14372) : p2.call(null, G__14372);
                  }();
                  if (cljs.core.truth_(or__3799__auto____$2)) {
                    return or__3799__auto____$2;
                  } else {
                    var G__14373 = p1__14025_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14373) : p3.call(null, G__14373);
                  }
                }
              };
            }(or__3799__auto__), args);
          }
        };
        var G__14408 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14409__i = 0, G__14409__a = new Array(arguments.length - 3);
            while (G__14409__i < G__14409__a.length) {
              G__14409__a[G__14409__i] = arguments[G__14409__i + 3];
              ++G__14409__i;
            }
            args = new cljs.core.IndexedSeq(G__14409__a, 0);
          }
          return G__14408__delegate.call(this, x, y, z, args);
        };
        G__14408.cljs$lang$maxFixedArity = 3;
        G__14408.cljs$lang$applyTo = function(arglist__14410) {
          var x = cljs.core.first(arglist__14410);
          arglist__14410 = cljs.core.next(arglist__14410);
          var y = cljs.core.first(arglist__14410);
          arglist__14410 = cljs.core.next(arglist__14410);
          var z = cljs.core.first(arglist__14410);
          var args = cljs.core.rest(arglist__14410);
          return G__14408__delegate(x, y, z, args);
        };
        G__14408.cljs$core$IFn$_invoke$arity$variadic = G__14408__delegate;
        return G__14408;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__14411 = null;
            if (arguments.length > 3) {
              var G__14412__i = 0, G__14412__a = new Array(arguments.length - 3);
              while (G__14412__i < G__14412__a.length) {
                G__14412__a[G__14412__i] = arguments[G__14412__i + 3];
                ++G__14412__i;
              }
              G__14411 = new cljs.core.IndexedSeq(G__14412__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14411);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__14413__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14026_SHARP_) {
                var G__14389 = x;
                return p1__14026_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14026_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14389) : p1__14026_SHARP_.call(null, G__14389);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14027_SHARP_) {
                var or__3799__auto__ = function() {
                  var G__14391 = x;
                  return p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14391) : p1__14027_SHARP_.call(null, G__14391);
                }();
                if (cljs.core.truth_(or__3799__auto__)) {
                  return or__3799__auto__;
                } else {
                  var G__14392 = y;
                  return p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14392) : p1__14027_SHARP_.call(null, G__14392);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14028_SHARP_) {
                var or__3799__auto__ = function() {
                  var G__14394 = x;
                  return p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14394) : p1__14028_SHARP_.call(null, G__14394);
                }();
                if (cljs.core.truth_(or__3799__auto__)) {
                  return or__3799__auto__;
                } else {
                  var or__3799__auto____$1 = function() {
                    var G__14396 = y;
                    return p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14396) : p1__14028_SHARP_.call(null, G__14396);
                  }();
                  if (cljs.core.truth_(or__3799__auto____$1)) {
                    return or__3799__auto____$1;
                  } else {
                    var G__14397 = z;
                    return p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14397) : p1__14028_SHARP_.call(null, G__14397);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__14414__delegate = function(x, y, z, args) {
              var or__3799__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3799__auto__)) {
                return or__3799__auto__;
              } else {
                return cljs.core.some(function(or__3799__auto__, ps__$1) {
                  return function(p1__14029_SHARP_) {
                    return cljs.core.some(p1__14029_SHARP_, args);
                  };
                }(or__3799__auto__, ps__$1), ps__$1);
              }
            };
            var G__14414 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14415__i = 0, G__14415__a = new Array(arguments.length - 3);
                while (G__14415__i < G__14415__a.length) {
                  G__14415__a[G__14415__i] = arguments[G__14415__i + 3];
                  ++G__14415__i;
                }
                args = new cljs.core.IndexedSeq(G__14415__a, 0);
              }
              return G__14414__delegate.call(this, x, y, z, args);
            };
            G__14414.cljs$lang$maxFixedArity = 3;
            G__14414.cljs$lang$applyTo = function(arglist__14416) {
              var x = cljs.core.first(arglist__14416);
              arglist__14416 = cljs.core.next(arglist__14416);
              var y = cljs.core.first(arglist__14416);
              arglist__14416 = cljs.core.next(arglist__14416);
              var z = cljs.core.first(arglist__14416);
              var args = cljs.core.rest(arglist__14416);
              return G__14414__delegate(x, y, z, args);
            };
            G__14414.cljs$core$IFn$_invoke$arity$variadic = G__14414__delegate;
            return G__14414;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__14417 = null;
                if (arguments.length > 3) {
                  var G__14418__i = 0, G__14418__a = new Array(arguments.length - 3);
                  while (G__14418__i < G__14418__a.length) {
                    G__14418__a[G__14418__i] = arguments[G__14418__i + 3];
                    ++G__14418__i;
                  }
                  G__14417 = new cljs.core.IndexedSeq(G__14418__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14417);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__14413 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14419__i = 0, G__14419__a = new Array(arguments.length - 3);
        while (G__14419__i < G__14419__a.length) {
          G__14419__a[G__14419__i] = arguments[G__14419__i + 3];
          ++G__14419__i;
        }
        ps = new cljs.core.IndexedSeq(G__14419__a, 0);
      }
      return G__14413__delegate.call(this, p1, p2, p3, ps);
    };
    G__14413.cljs$lang$maxFixedArity = 3;
    G__14413.cljs$lang$applyTo = function(arglist__14420) {
      var p1 = cljs.core.first(arglist__14420);
      arglist__14420 = cljs.core.next(arglist__14420);
      var p2 = cljs.core.first(arglist__14420);
      arglist__14420 = cljs.core.next(arglist__14420);
      var p3 = cljs.core.first(arglist__14420);
      var ps = cljs.core.rest(arglist__14420);
      return G__14413__delegate(p1, p2, p3, ps);
    };
    G__14413.cljs$core$IFn$_invoke$arity$variadic = G__14413__delegate;
    return G__14413;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__14421 = null;
        if (arguments.length > 3) {
          var G__14422__i = 0, G__14422__a = new Array(arguments.length - 3);
          while (G__14422__i < G__14422__a.length) {
            G__14422__a[G__14422__i] = arguments[G__14422__i + 3];
            ++G__14422__i;
          }
          G__14421 = new cljs.core.IndexedSeq(G__14422__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14421);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__14477 = null;
        var G__14477__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14477__1 = function(result) {
          var G__14463 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14463) : rf.call(null, G__14463);
        };
        var G__14477__2 = function(result, input) {
          var G__14464 = result;
          var G__14465 = function() {
            var G__14466 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14466) : f.call(null, G__14466);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14464, G__14465) : rf.call(null, G__14464, G__14465);
        };
        var G__14477__3 = function() {
          var G__14478__delegate = function(result, input, inputs) {
            var G__14467 = result;
            var G__14468 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14467, G__14468) : rf.call(null, G__14467, G__14468);
          };
          var G__14478 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__14479__i = 0, G__14479__a = new Array(arguments.length - 2);
              while (G__14479__i < G__14479__a.length) {
                G__14479__a[G__14479__i] = arguments[G__14479__i + 2];
                ++G__14479__i;
              }
              inputs = new cljs.core.IndexedSeq(G__14479__a, 0);
            }
            return G__14478__delegate.call(this, result, input, inputs);
          };
          G__14478.cljs$lang$maxFixedArity = 2;
          G__14478.cljs$lang$applyTo = function(arglist__14480) {
            var result = cljs.core.first(arglist__14480);
            arglist__14480 = cljs.core.next(arglist__14480);
            var input = cljs.core.first(arglist__14480);
            var inputs = cljs.core.rest(arglist__14480);
            return G__14478__delegate(result, input, inputs);
          };
          G__14478.cljs$core$IFn$_invoke$arity$variadic = G__14478__delegate;
          return G__14478;
        }();
        G__14477 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__14477__0.call(this);
            case 1:
              return G__14477__1.call(this, result);
            case 2:
              return G__14477__2.call(this, result, input);
            default:
              var G__14481 = null;
              if (arguments.length > 2) {
                var G__14482__i = 0, G__14482__a = new Array(arguments.length - 2);
                while (G__14482__i < G__14482__a.length) {
                  G__14482__a[G__14482__i] = arguments[G__14482__i + 2];
                  ++G__14482__i;
                }
                G__14481 = new cljs.core.IndexedSeq(G__14482__a, 0);
              }
              return G__14477__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__14481);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14477.cljs$lang$maxFixedArity = 2;
        G__14477.cljs$lang$applyTo = G__14477__3.cljs$lang$applyTo;
        G__14477.cljs$core$IFn$_invoke$arity$0 = G__14477__0;
        G__14477.cljs$core$IFn$_invoke$arity$1 = G__14477__1;
        G__14477.cljs$core$IFn$_invoke$arity$2 = G__14477__2;
        G__14477.cljs$core$IFn$_invoke$arity$variadic = G__14477__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__14477;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4686__auto___14483 = size;
          var i_14484 = 0;
          while (true) {
            if (i_14484 < n__4686__auto___14483) {
              cljs.core.chunk_append(b, function() {
                var G__14469 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14484);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14469) : f.call(null, G__14469);
              }());
              var G__14485 = i_14484 + 1;
              i_14484 = G__14485;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__14470 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14470) : f.call(null, G__14470);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__14471 = cljs.core.first(s1);
          var G__14472 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14471, G__14472) : f.call(null, G__14471, G__14472);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__14473 = cljs.core.first(s1);
          var G__14474 = cljs.core.first(s2);
          var G__14475 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14473, G__14474, G__14475) : f.call(null, G__14473, G__14474, G__14475);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__14486__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__14423_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__14423_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__14486 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14487__i = 0, G__14487__a = new Array(arguments.length - 4);
        while (G__14487__i < G__14487__a.length) {
          G__14487__a[G__14487__i] = arguments[G__14487__i + 4];
          ++G__14487__i;
        }
        colls = new cljs.core.IndexedSeq(G__14487__a, 0);
      }
      return G__14486__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14486.cljs$lang$maxFixedArity = 4;
    G__14486.cljs$lang$applyTo = function(arglist__14488) {
      var f = cljs.core.first(arglist__14488);
      arglist__14488 = cljs.core.next(arglist__14488);
      var c1 = cljs.core.first(arglist__14488);
      arglist__14488 = cljs.core.next(arglist__14488);
      var c2 = cljs.core.first(arglist__14488);
      arglist__14488 = cljs.core.next(arglist__14488);
      var c3 = cljs.core.first(arglist__14488);
      var colls = cljs.core.rest(arglist__14488);
      return G__14486__delegate(f, c1, c2, c3, colls);
    };
    G__14486.cljs$core$IFn$_invoke$arity$variadic = G__14486__delegate;
    return G__14486;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__14489 = null;
        if (arguments.length > 4) {
          var G__14490__i = 0, G__14490__a = new Array(arguments.length - 4);
          while (G__14490__i < G__14490__a.length) {
            G__14490__a[G__14490__i] = arguments[G__14490__i + 4];
            ++G__14490__i;
          }
          G__14489 = new cljs.core.IndexedSeq(G__14490__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14489);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14499 = null;
          var G__14499__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14499__1 = function(result) {
            var G__14496 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14496) : rf.call(null, G__14496);
          };
          var G__14499__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__14497 = result;
              var G__14498 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14497, G__14498) : rf.call(null, G__14497, G__14498);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__14499 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14499__0.call(this);
              case 1:
                return G__14499__1.call(this, result);
              case 2:
                return G__14499__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14499.cljs$core$IFn$_invoke$arity$0 = G__14499__0;
          G__14499.cljs$core$IFn$_invoke$arity$1 = G__14499__1;
          G__14499.cljs$core$IFn$_invoke$arity$2 = G__14499__2;
          return G__14499;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14506 = null;
          var G__14506__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14506__1 = function(result) {
            var G__14503 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14503) : rf.call(null, G__14503);
          };
          var G__14506__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__14504 = result;
              var G__14505 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14504, G__14505) : rf.call(null, G__14504, G__14505);
            }
          };
          G__14506 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14506__0.call(this);
              case 1:
                return G__14506__1.call(this, result);
              case 2:
                return G__14506__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14506.cljs$core$IFn$_invoke$arity$0 = G__14506__0;
          G__14506.cljs$core$IFn$_invoke$arity$1 = G__14506__1;
          G__14506.cljs$core$IFn$_invoke$arity$2 = G__14506__2;
          return G__14506;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__14507 = n__$1 - 1;
          var G__14508 = cljs.core.rest(s);
          n__$1 = G__14507;
          coll__$1 = G__14508;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__14511 = cljs.core.next(s);
      var G__14512 = cljs.core.next(lead);
      s = G__14511;
      lead = G__14512;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__14525 = null;
          var G__14525__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14525__1 = function(result) {
            var G__14519 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14519) : rf.call(null, G__14519);
          };
          var G__14525__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3787__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3787__auto__)) {
                var G__14520 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14520) : pred.call(null, G__14520);
              } else {
                return and__3787__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__14521 = result;
              var G__14522 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14521, G__14522) : rf.call(null, G__14521, G__14522);
            }
          };
          G__14525 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14525__0.call(this);
              case 1:
                return G__14525__1.call(this, result);
              case 2:
                return G__14525__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14525.cljs$core$IFn$_invoke$arity$0 = G__14525__0;
          G__14525.cljs$core$IFn$_invoke$arity$1 = G__14525__1;
          G__14525.cljs$core$IFn$_invoke$arity$2 = G__14525__2;
          return G__14525;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3787__auto__ = s;
          if (and__3787__auto__) {
            var G__14524 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14524) : pred__$1.call(null, G__14524);
          } else {
            return and__3787__auto__;
          }
        }())) {
          var G__14526 = pred__$1;
          var G__14527 = cljs.core.rest(s);
          pred__$1 = G__14526;
          coll__$1 = G__14527;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__14536 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14536) : f.call(null, G__14536);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__14539__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__14539 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__14540__i = 0, G__14540__a = new Array(arguments.length - 2);
        while (G__14540__i < G__14540__a.length) {
          G__14540__a[G__14540__i] = arguments[G__14540__i + 2];
          ++G__14540__i;
        }
        colls = new cljs.core.IndexedSeq(G__14540__a, 0);
      }
      return G__14539__delegate.call(this, c1, c2, colls);
    };
    G__14539.cljs$lang$maxFixedArity = 2;
    G__14539.cljs$lang$applyTo = function(arglist__14541) {
      var c1 = cljs.core.first(arglist__14541);
      arglist__14541 = cljs.core.next(arglist__14541);
      var c2 = cljs.core.first(arglist__14541);
      var colls = cljs.core.rest(arglist__14541);
      return G__14539__delegate(c1, c2, colls);
    };
    G__14539.cljs$core$IFn$_invoke$arity$variadic = G__14539__delegate;
    return G__14539;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__14542 = null;
        if (arguments.length > 2) {
          var G__14543__i = 0, G__14543__a = new Array(arguments.length - 2);
          while (G__14543__i < G__14543__a.length) {
            G__14543__a[G__14543__i] = arguments[G__14543__i + 2];
            ++G__14543__i;
          }
          G__14542 = new cljs.core.IndexedSeq(G__14543__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__14542);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__14552__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__14552 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__14553__i = 0, G__14553__a = new Array(arguments.length - 1);
        while (G__14553__i < G__14553__a.length) {
          G__14553__a[G__14553__i] = arguments[G__14553__i + 1];
          ++G__14553__i;
        }
        colls = new cljs.core.IndexedSeq(G__14553__a, 0);
      }
      return G__14552__delegate.call(this, f, colls);
    };
    G__14552.cljs$lang$maxFixedArity = 1;
    G__14552.cljs$lang$applyTo = function(arglist__14554) {
      var f = cljs.core.first(arglist__14554);
      var colls = cljs.core.rest(arglist__14554);
      return G__14552__delegate(f, colls);
    };
    G__14552.cljs$core$IFn$_invoke$arity$variadic = G__14552__delegate;
    return G__14552;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__14555 = null;
        if (arguments.length > 1) {
          var G__14556__i = 0, G__14556__a = new Array(arguments.length - 1);
          while (G__14556__i < G__14556__a.length) {
            G__14556__a[G__14556__i] = arguments[G__14556__i + 1];
            ++G__14556__i;
          }
          G__14555 = new cljs.core.IndexedSeq(G__14556__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14555);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__14575 = null;
        var G__14575__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14575__1 = function(result) {
          var G__14569 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14569) : rf.call(null, G__14569);
        };
        var G__14575__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__14570 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14570) : pred.call(null, G__14570);
          }())) {
            var G__14571 = result;
            var G__14572 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14571, G__14572) : rf.call(null, G__14571, G__14572);
          } else {
            return result;
          }
        };
        G__14575 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14575__0.call(this);
            case 1:
              return G__14575__1.call(this, result);
            case 2:
              return G__14575__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14575.cljs$core$IFn$_invoke$arity$0 = G__14575__0;
        G__14575.cljs$core$IFn$_invoke$arity$1 = G__14575__1;
        G__14575.cljs$core$IFn$_invoke$arity$2 = G__14575__2;
        return G__14575;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4686__auto___14576 = size;
          var i_14577 = 0;
          while (true) {
            if (i_14577 < n__4686__auto___14576) {
              if (cljs.core.truth_(function() {
                var G__14573 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14577);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14573) : pred.call(null, G__14573);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14577));
              } else {
              }
              var G__14578 = i_14577 + 1;
              i_14577 = G__14578;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__14574 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14574) : pred.call(null, G__14574);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__14585 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14585) : branch_QMARK_.call(null, G__14585);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__14586 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14586) : children.call(null, G__14586);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__14587_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__14587_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__14590 = to;
        if (G__14590) {
          var bit__4473__auto__ = G__14590.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4473__auto__ || G__14590.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__14591 = to;
      if (G__14591) {
        var bit__4473__auto__ = G__14591.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4473__auto__ || G__14591.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__14593 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14593) : f.call(null, G__14593);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__14594__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__14594 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14595__i = 0, G__14595__a = new Array(arguments.length - 4);
        while (G__14595__i < G__14595__a.length) {
          G__14595__a[G__14595__i] = arguments[G__14595__i + 4];
          ++G__14595__i;
        }
        colls = new cljs.core.IndexedSeq(G__14595__a, 0);
      }
      return G__14594__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14594.cljs$lang$maxFixedArity = 4;
    G__14594.cljs$lang$applyTo = function(arglist__14596) {
      var f = cljs.core.first(arglist__14596);
      arglist__14596 = cljs.core.next(arglist__14596);
      var c1 = cljs.core.first(arglist__14596);
      arglist__14596 = cljs.core.next(arglist__14596);
      var c2 = cljs.core.first(arglist__14596);
      arglist__14596 = cljs.core.next(arglist__14596);
      var c3 = cljs.core.first(arglist__14596);
      var colls = cljs.core.rest(arglist__14596);
      return G__14594__delegate(f, c1, c2, c3, colls);
    };
    G__14594.cljs$core$IFn$_invoke$arity$variadic = G__14594__delegate;
    return G__14594;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__14597 = null;
        if (arguments.length > 4) {
          var G__14598__i = 0, G__14598__a = new Array(arguments.length - 4);
          while (G__14598__i < G__14598__a.length) {
            G__14598__a[G__14598__i] = arguments[G__14598__i + 4];
            ++G__14598__i;
          }
          G__14597 = new cljs.core.IndexedSeq(G__14598__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14597);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__14600 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14600) : pred.call(null, G__14600);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__14615 = m__$1;
          if (G__14615) {
            var bit__4480__auto__ = G__14615.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4480__auto__ || G__14615.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__14615.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14615);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14615);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__14616 = sentinel;
            var G__14617 = m__$2;
            var G__14618 = cljs.core.next(ks__$1);
            sentinel = G__14616;
            m__$1 = G__14617;
            ks__$1 = G__14618;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__14619, v) {
  var vec__14624 = p__14619;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14624, 0, null);
  var ks = cljs.core.nthnext(vec__14624, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14625, f) {
    var vec__14663 = p__14625;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14663, 0, null);
    var ks = cljs.core.nthnext(vec__14663, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14664 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14664) : f.call(null, G__14664);
      }());
    }
  };
  var update_in__4 = function(m, p__14626, f, a) {
    var vec__14665 = p__14626;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14665, 0, null);
    var ks = cljs.core.nthnext(vec__14665, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14666 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14667 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14666, G__14667) : f.call(null, G__14666, G__14667);
      }());
    }
  };
  var update_in__5 = function(m, p__14627, f, a, b) {
    var vec__14668 = p__14627;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14668, 0, null);
    var ks = cljs.core.nthnext(vec__14668, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14669 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14670 = a;
        var G__14671 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14669, G__14670, G__14671) : f.call(null, G__14669, G__14670, G__14671);
      }());
    }
  };
  var update_in__6 = function(m, p__14628, f, a, b, c) {
    var vec__14672 = p__14628;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14672, 0, null);
    var ks = cljs.core.nthnext(vec__14672, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14673 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14674 = a;
        var G__14675 = b;
        var G__14676 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14673, G__14674, G__14675, G__14676) : f.call(null, G__14673, G__14674, G__14675, G__14676);
      }());
    }
  };
  var update_in__7 = function() {
    var G__14678__delegate = function(m, p__14629, f, a, b, c, args) {
      var vec__14677 = p__14629;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14677, 0, null);
      var ks = cljs.core.nthnext(vec__14677, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__14678 = function(m, p__14629, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__14679__i = 0, G__14679__a = new Array(arguments.length - 6);
        while (G__14679__i < G__14679__a.length) {
          G__14679__a[G__14679__i] = arguments[G__14679__i + 6];
          ++G__14679__i;
        }
        args = new cljs.core.IndexedSeq(G__14679__a, 0);
      }
      return G__14678__delegate.call(this, m, p__14629, f, a, b, c, args);
    };
    G__14678.cljs$lang$maxFixedArity = 6;
    G__14678.cljs$lang$applyTo = function(arglist__14680) {
      var m = cljs.core.first(arglist__14680);
      arglist__14680 = cljs.core.next(arglist__14680);
      var p__14629 = cljs.core.first(arglist__14680);
      arglist__14680 = cljs.core.next(arglist__14680);
      var f = cljs.core.first(arglist__14680);
      arglist__14680 = cljs.core.next(arglist__14680);
      var a = cljs.core.first(arglist__14680);
      arglist__14680 = cljs.core.next(arglist__14680);
      var b = cljs.core.first(arglist__14680);
      arglist__14680 = cljs.core.next(arglist__14680);
      var c = cljs.core.first(arglist__14680);
      var args = cljs.core.rest(arglist__14680);
      return G__14678__delegate(m, p__14629, f, a, b, c, args);
    };
    G__14678.cljs$core$IFn$_invoke$arity$variadic = G__14678__delegate;
    return G__14678;
  }();
  update_in = function(m, p__14629, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14629, f);
      case 4:
        return update_in__4.call(this, m, p__14629, f, a);
      case 5:
        return update_in__5.call(this, m, p__14629, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14629, f, a, b, c);
      default:
        var G__14681 = null;
        if (arguments.length > 6) {
          var G__14682__i = 0, G__14682__a = new Array(arguments.length - 6);
          while (G__14682__i < G__14682__a.length) {
            G__14682__a[G__14682__i] = arguments[G__14682__i + 6];
            ++G__14682__i;
          }
          G__14681 = new cljs.core.IndexedSeq(G__14682__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14629, f, a, b, c, G__14681);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14693 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14693) : f.call(null, G__14693);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14694 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14695 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14694, G__14695) : f.call(null, G__14694, G__14695);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14696 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14697 = x;
      var G__14698 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14696, G__14697, G__14698) : f.call(null, G__14696, G__14697, G__14698);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14699 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14700 = x;
      var G__14701 = y;
      var G__14702 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14699, G__14700, G__14701, G__14702) : f.call(null, G__14699, G__14700, G__14701, G__14702);
    }());
  };
  var update__7 = function() {
    var G__14703__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__14703 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__14704__i = 0, G__14704__a = new Array(arguments.length - 6);
        while (G__14704__i < G__14704__a.length) {
          G__14704__a[G__14704__i] = arguments[G__14704__i + 6];
          ++G__14704__i;
        }
        more = new cljs.core.IndexedSeq(G__14704__a, 0);
      }
      return G__14703__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__14703.cljs$lang$maxFixedArity = 6;
    G__14703.cljs$lang$applyTo = function(arglist__14705) {
      var m = cljs.core.first(arglist__14705);
      arglist__14705 = cljs.core.next(arglist__14705);
      var k = cljs.core.first(arglist__14705);
      arglist__14705 = cljs.core.next(arglist__14705);
      var f = cljs.core.first(arglist__14705);
      arglist__14705 = cljs.core.next(arglist__14705);
      var x = cljs.core.first(arglist__14705);
      arglist__14705 = cljs.core.next(arglist__14705);
      var y = cljs.core.first(arglist__14705);
      arglist__14705 = cljs.core.next(arglist__14705);
      var z = cljs.core.first(arglist__14705);
      var more = cljs.core.rest(arglist__14705);
      return G__14703__delegate(m, k, f, x, y, z, more);
    };
    G__14703.cljs$core$IFn$_invoke$arity$variadic = G__14703__delegate;
    return G__14703;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__14706 = null;
        if (arguments.length > 6) {
          var G__14707__i = 0, G__14707__a = new Array(arguments.length - 6);
          while (G__14707__i < G__14707__a.length) {
            G__14707__a[G__14707__i] = arguments[G__14707__i + 6];
            ++G__14707__i;
          }
          G__14706 = new cljs.core.IndexedSeq(G__14707__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__14706);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__14708 = ll - 5;
      var G__14709 = r;
      ll = G__14708;
      ret = G__14709;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__14714 = cljs.core.pv_aget(node, 0);
      var G__14715 = level - 5;
      node = G__14714;
      level = G__14715;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__14716 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__14717 = level - 5;
        node = G__14716;
        level = G__14717;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14727 = init__$2;
              var G__14728 = j + i;
              var G__14729 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14727, G__14728, G__14729) : f.call(null, G__14727, G__14728, G__14729);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14740 = j + 1;
              var G__14741 = init__$3;
              j = G__14740;
              init__$2 = G__14741;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14730 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14730) : cljs.core.deref.call(null, G__14730);
      } else {
        var G__14742 = i + len;
        var G__14743 = init__$2;
        i = G__14742;
        init__$1 = G__14743;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__14731 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14731) : cljs.core.tv_editable_root.call(null, G__14731);
  }(), function() {
    var G__14732 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14732) : cljs.core.tv_editable_tail.call(null, G__14732);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14733 = init__$2;
              var G__14734 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14733, G__14734) : f.call(null, G__14733, G__14734);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14744 = j + 1;
              var G__14745 = init__$3;
              j = G__14744;
              init__$2 = G__14745;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14735 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14735) : cljs.core.deref.call(null, G__14735);
      } else {
        var G__14746 = i + len;
        var G__14747 = init__$2;
        i = G__14746;
        init__$1 = G__14747;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__14736 = coll__$1;
      var G__14737 = cljs.core.first_array_for_longvec(coll__$1);
      var G__14738 = 0;
      var G__14739 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14736, G__14737, G__14738, G__14739) : cljs.core.chunked_seq.call(null, G__14736, G__14737, G__14738, G__14739);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4686__auto___14748 = len;
    var i_14749 = 0;
    while (true) {
      if (i_14749 < n__4686__auto___14748) {
        new_tail[i_14749] = self__.tail[i_14749];
        var G__14750 = i_14749 + 1;
        i_14749 = G__14750;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14751 = null;
  var G__14751__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14751__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14751 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14751__2.call(this, self__, k);
      case 3:
        return G__14751__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14751.cljs$core$IFn$_invoke$arity$2 = G__14751__2;
  G__14751.cljs$core$IFn$_invoke$arity$3 = G__14751__3;
  return G__14751;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14726) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14726)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__14752 = i + 1;
        var G__14753 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__14752;
        out = G__14753;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__14754__i = 0, G__14754__a = new Array(arguments.length - 0);
      while (G__14754__i < G__14754__a.length) {
        G__14754__a[G__14754__i] = arguments[G__14754__i + 0];
        ++G__14754__i;
      }
      args = new cljs.core.IndexedSeq(G__14754__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14755) {
    var args = cljs.core.seq(arglist__14755);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14756 = self__.vec;
      var G__14757 = self__.node;
      var G__14758 = self__.i;
      var G__14759 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14756, G__14757, G__14758, G__14759) : cljs.core.chunked_seq.call(null, G__14756, G__14757, G__14758, G__14759);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__14760 = self__.vec;
    var G__14761 = self__.i + self__.off;
    var G__14762 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14760, G__14761, G__14762) : cljs.core.subvec.call(null, G__14760, G__14761, G__14762);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__14763 = self__.vec;
    var G__14764 = self__.i + self__.off;
    var G__14765 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14763, G__14764, G__14765) : cljs.core.subvec.call(null, G__14763, G__14764, G__14765);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14766 = self__.vec;
      var G__14767 = self__.node;
      var G__14768 = self__.i;
      var G__14769 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14766, G__14767, G__14768, G__14769) : cljs.core.chunked_seq.call(null, G__14766, G__14767, G__14768, G__14769);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__14770 = self__.vec;
    var G__14771 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__14772 = end;
    var G__14773 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14770, G__14771, G__14772, G__14773) : cljs.core.chunked_seq.call(null, G__14770, G__14771, G__14772, G__14773);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__14774 = self__.vec;
  var G__14775 = self__.node;
  var G__14776 = self__.i;
  var G__14777 = self__.off;
  var G__14778 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14774, G__14775, G__14776, G__14777, G__14778) : cljs.core.chunked_seq.call(null, G__14774, G__14775, G__14776, G__14777, G__14778);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__14779 = self__.vec;
    var G__14780 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__14781 = end;
    var G__14782 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14779, G__14780, G__14781, G__14782) : cljs.core.chunked_seq.call(null, G__14779, G__14780, G__14781, G__14782);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__14784 = self__.meta;
  var G__14785 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__14786 = self__.start;
  var G__14787 = function() {
    var x__4116__auto__ = self__.end;
    var y__4117__auto__ = v_pos + 1;
    return x__4116__auto__ > y__4117__auto__ ? x__4116__auto__ : y__4117__auto__;
  }();
  var G__14788 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14784, G__14785, G__14786, G__14787, G__14788) : cljs.core.build_subvec.call(null, G__14784, G__14785, G__14786, G__14787, G__14788);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__14789 = self__.meta;
    var G__14790 = self__.v;
    var G__14791 = self__.start;
    var G__14792 = self__.end - 1;
    var G__14793 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14789, G__14790, G__14791, G__14792, G__14793) : cljs.core.build_subvec.call(null, G__14789, G__14790, G__14791, G__14792, G__14793);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__14795 = meta__$1;
  var G__14796 = self__.v;
  var G__14797 = self__.start;
  var G__14798 = self__.end;
  var G__14799 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14795, G__14796, G__14797, G__14798, G__14799) : cljs.core.build_subvec.call(null, G__14795, G__14796, G__14797, G__14798, G__14799);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__14800 = self__.meta;
  var G__14801 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__14802 = self__.start;
  var G__14803 = self__.end + 1;
  var G__14804 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14800, G__14801, G__14802, G__14803, G__14804) : cljs.core.build_subvec.call(null, G__14800, G__14801, G__14802, G__14803, G__14804);
};
cljs.core.Subvec.prototype.call = function() {
  var G__14805 = null;
  var G__14805__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14805__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14805 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14805__2.call(this, self__, k);
      case 3:
        return G__14805__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14805.cljs$core$IFn$_invoke$arity$2 = G__14805__2;
  G__14805.cljs$core$IFn$_invoke$arity$3 = G__14805__3;
  return G__14805;
}();
cljs.core.Subvec.prototype.apply = function(self__, args14783) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14783)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__14806 = meta;
      var G__14807 = v.v;
      var G__14808 = v.start + start;
      var G__14809 = v.start + end;
      var G__14810 = __hash;
      meta = G__14806;
      v = G__14807;
      start = G__14808;
      end = G__14809;
      __hash = G__14810;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj14817 = {};
    return obj14817;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__14825 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__14826 = level - 5;
        node = G__14825;
        level = G__14826;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14830 = null;
  var G__14830__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14830__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14830 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14830__2.call(this, self__, k);
      case 3:
        return G__14830__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14830.cljs$core$IFn$_invoke$arity$2 = G__14830__2;
  G__14830.cljs$core$IFn$_invoke$arity$3 = G__14830__3;
  return G__14830;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args14827) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14827)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3799__auto__ = self__.front;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3799__auto__ = self__.rear;
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__14831 = i + incr;
        i = G__14831;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__14832 = i + 1;
      var G__14833 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__14832;
      out = G__14833;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj14837 = {};
    return obj14837;
  }();
  var l = ks.length;
  var i_14838 = 0;
  while (true) {
    if (i_14838 < l) {
      var k_14839 = ks[i_14838];
      new_obj[k_14839] = obj[k_14839];
      var G__14840 = i_14838 + 1;
      i_14838 = G__14840;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = function() {
      var G__14844 = k;
      return goog.isString(G__14844);
    }();
    if (cljs.core.truth_(and__3787__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__14845 = init__$1;
        var G__14846 = k;
        var G__14847 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14845, G__14846, G__14847) : f.call(null, G__14845, G__14846, G__14847);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14848 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14848) : cljs.core.deref.call(null, G__14848);
      } else {
        var G__14854 = cljs.core.rest(keys__$1);
        var G__14855 = init__$2;
        keys__$1 = G__14854;
        init__$1 = G__14855;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = function() {
      var G__14850 = k;
      return goog.isString(G__14850);
    }();
    if (cljs.core.truth_(and__3787__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3787__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__14851 = k;
    return goog.isString(G__14851);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = function() {
      var G__14853 = k;
      return goog.isString(G__14853);
    }();
    if (cljs.core.truth_(and__3787__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__14841_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14841_SHARP_, self__.strobj[p1__14841_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14856 = null;
  var G__14856__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14856__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14856 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14856__2.call(this, self__, k);
      case 3:
        return G__14856__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14856.cljs$core$IFn$_invoke$arity$2 = G__14856__2;
  G__14856.cljs$core$IFn$_invoke$arity$3 = G__14856__3;
  return G__14856;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args14842) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14842)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj14858 = {};
  return obj14858;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__14859 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14859, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14859, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__14860 = i + 2;
        i = G__14860;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__14861 = i + 2;
        i = G__14861;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__14862 = i + 2;
        i = G__14862;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__14863 = i + 2;
        i = G__14863;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__14864 = i + 2;
        i = G__14864;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3799__auto__ = function() {
        var G__14868 = k;
        return goog.isString(G__14868);
      }();
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_14869 = 0;
  while (true) {
    if (i_14869 < l) {
      narr[i_14869] = arr[i_14869];
      var G__14870 = i_14869 + 1;
      i_14869 = G__14870;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14872 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14872) : cljs.core.keys.call(null, G__14872);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14873 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14873) : cljs.core.vals.call(null, G__14873);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14874 = cljs.core.seq(coll);
  var chunk__14875 = null;
  var count__14876 = 0;
  var i__14877 = 0;
  while (true) {
    if (i__14877 < count__14876) {
      var vec__14878 = chunk__14875.cljs$core$IIndexed$_nth$arity$2(null, i__14877);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14878, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14878, 1, null);
      var G__14879_14892 = v;
      var G__14880_14893 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14879_14892, G__14880_14893) : f.call(null, G__14879_14892, G__14880_14893);
      var G__14894 = seq__14874;
      var G__14895 = chunk__14875;
      var G__14896 = count__14876;
      var G__14897 = i__14877 + 1;
      seq__14874 = G__14894;
      chunk__14875 = G__14895;
      count__14876 = G__14896;
      i__14877 = G__14897;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14874);
      if (temp__4126__auto__) {
        var seq__14874__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14874__$1)) {
          var c__4586__auto__ = cljs.core.chunk_first(seq__14874__$1);
          var G__14898 = cljs.core.chunk_rest(seq__14874__$1);
          var G__14899 = c__4586__auto__;
          var G__14900 = cljs.core.count(c__4586__auto__);
          var G__14901 = 0;
          seq__14874 = G__14898;
          chunk__14875 = G__14899;
          count__14876 = G__14900;
          i__14877 = G__14901;
          continue;
        } else {
          var vec__14881 = cljs.core.first(seq__14874__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14881, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14881, 1, null);
          var G__14882_14902 = v;
          var G__14883_14903 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14882_14902, G__14883_14903) : f.call(null, G__14882_14902, G__14883_14903);
          var G__14904 = cljs.core.next(seq__14874__$1);
          var G__14905 = null;
          var G__14906 = 0;
          var G__14907 = 0;
          seq__14874 = G__14904;
          chunk__14875 = G__14905;
          count__14876 = G__14906;
          i__14877 = G__14907;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__14884 = init__$1;
        var G__14885 = self__.arr[i];
        var G__14886 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14884, G__14885, G__14886) : f.call(null, G__14884, G__14885, G__14886);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14887 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14887) : cljs.core.deref.call(null, G__14887);
      } else {
        var G__14908 = i + 2;
        var G__14909 = init__$2;
        i = G__14908;
        init__$1 = G__14909;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__14888 = other;
    if (G__14888) {
      var bit__4473__auto__ = G__14888.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4473__auto__ || G__14888.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__14910 = i + 2;
              i = G__14910;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj14890 = {};
    return obj14890;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__14911 = s + 2;
            var G__14912 = d;
            s = G__14911;
            d = G__14912;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__14913 = s + 2;
            var G__14914 = d + 2;
            s = G__14913;
            d = G__14914;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__14891 = cljs.core.aclone(self__.arr);
        G__14891[idx + 1] = v;
        return G__14891;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14915 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14916 = cljs.core.next(es);
          ret = G__14915;
          es = G__14916;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14917 = null;
  var G__14917__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14917__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14917 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14917__2.call(this, self__, k);
      case 3:
        return G__14917__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14917.cljs$core$IFn$_invoke$arity$2 = G__14917__2;
  G__14917.cljs$core$IFn$_invoke$arity$3 = G__14917__3;
  return G__14917;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args14871) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14871)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__14918 = i + 2;
        var G__14919 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__14918;
        ret = G__14919;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__14920_14928 = self__.arr;
      G__14920_14928.pop();
      G__14920_14928.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__14921 = self__.len;
          var G__14922 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__14921, G__14922) : cljs.core.array__GT_transient_hash_map.call(null, G__14921, G__14922);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__14923 = o;
      if (G__14923) {
        var bit__4480__auto__ = G__14923.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4480__auto__ || G__14923.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__14923.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14923);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14923);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__14924 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14924) : cljs.core.key.call(null, G__14924);
      }(), function() {
        var G__14925 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14925) : cljs.core.val.call(null, G__14925);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__14929 = cljs.core.next(es);
          var G__14930 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__14926 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14926) : cljs.core.key.call(null, G__14926);
          }(), function() {
            var G__14927 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14927) : cljs.core.val.call(null, G__14927);
          }());
          es = G__14929;
          tcoll__$2 = G__14930;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__14931 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__14932 = i + 2;
      out = G__14931;
      i = G__14932;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14935 = cljs.core.aclone(arr);
    G__14935[i] = a;
    return G__14935;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14936 = cljs.core.aclone(arr);
    G__14936[i] = a;
    G__14936[j] = b;
    return G__14936;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__14941 = init__$1;
          var G__14942 = k;
          var G__14943 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14941, G__14942, G__14943) : f.call(null, G__14941, G__14942, G__14943);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14944 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14944) : cljs.core.deref.call(null, G__14944);
      } else {
        var G__14945 = i + 2;
        var G__14946 = init__$2;
        i = G__14945;
        init__$1 = G__14946;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__14947 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14947) : cljs.core.create_inode_seq.call(null, G__14947);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_14961 = 0;
        var j_14962 = 0;
        while (true) {
          if (i_14961 < 32) {
            if ((self__.bitmap >>> i_14961 & 1) === 0) {
              var G__14963 = i_14961 + 1;
              var G__14964 = j_14962;
              i_14961 = G__14963;
              j_14962 = G__14964;
              continue;
            } else {
              nodes[i_14961] = !(self__.arr[j_14962] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_14962]), self__.arr[j_14962], self__.arr[j_14962 + 1], added_leaf_QMARK_) : self__.arr[j_14962 + 1];
              var G__14965 = i_14961 + 1;
              var G__14966 = j_14962 + 2;
              i_14961 = G__14965;
              j_14962 = G__14966;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__14948 = edit__$1;
          var G__14949 = shift + 5;
          var G__14950 = key_or_nil;
          var G__14951 = val_or_node;
          var G__14952 = hash;
          var G__14953 = key;
          var G__14954 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__14948, G__14949, G__14950, G__14951, G__14952, G__14953, G__14954) : cljs.core.create_node.call(null, G__14948, G__14949, G__14950, G__14951, G__14952, G__14953, G__14954);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_14967 = 0;
      var j_14968 = 0;
      while (true) {
        if (i_14967 < 32) {
          if ((self__.bitmap >>> i_14967 & 1) === 0) {
            var G__14969 = i_14967 + 1;
            var G__14970 = j_14968;
            i_14967 = G__14969;
            j_14968 = G__14970;
            continue;
          } else {
            nodes[i_14967] = !(self__.arr[j_14968] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_14968]), self__.arr[j_14968], self__.arr[j_14968 + 1], added_leaf_QMARK_) : self__.arr[j_14968 + 1];
            var G__14971 = i_14967 + 1;
            var G__14972 = j_14968 + 2;
            i_14967 = G__14971;
            j_14968 = G__14972;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__14955 = shift + 5;
          var G__14956 = key_or_nil;
          var G__14957 = val_or_node;
          var G__14958 = hash;
          var G__14959 = key;
          var G__14960 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__14955, G__14956, G__14957, G__14958, G__14959, G__14960) : cljs.core.create_node.call(null, G__14955, G__14956, G__14957, G__14958, G__14959, G__14960);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__14973 = i + 1;
        var G__14974 = j + 2;
        var G__14975 = bitmap | 1 << i;
        i = G__14973;
        j = G__14974;
        bitmap = G__14975;
        continue;
      } else {
        var G__14976 = i + 1;
        var G__14977 = j;
        var G__14978 = bitmap;
        i = G__14976;
        j = G__14977;
        bitmap = G__14978;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__14979 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__14979) : cljs.core.create_array_node_seq.call(null, G__14979);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__14980 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14980) : cljs.core.deref.call(null, G__14980);
        } else {
          var G__14981 = i + 1;
          var G__14982 = init__$2;
          i = G__14981;
          init__$1 = G__14982;
          continue;
        }
      } else {
        var G__14983 = i + 1;
        var G__14984 = init__$1;
        i = G__14983;
        init__$1 = G__14984;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__14985 = i + 2;
        i = G__14985;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__14986 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14986) : cljs.core.create_inode_seq.call(null, G__14986);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__14987 = self__.nodes;
    var G__14988 = self__.i + 2;
    var G__14989 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14987, G__14988, G__14989) : cljs.core.create_inode_seq.call(null, G__14987, G__14988, G__14989);
  } else {
    var G__14990 = self__.nodes;
    var G__14991 = self__.i;
    var G__14992 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14990, G__14991, G__14992) : cljs.core.create_inode_seq.call(null, G__14990, G__14991, G__14992);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__14996 = j + 2;
                j = G__14996;
                continue;
              }
            } else {
              var G__14997 = j + 2;
              j = G__14997;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__14998 = null;
  var G__14999 = self__.nodes;
  var G__15000 = self__.i;
  var G__15001 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__14998, G__14999, G__15000, G__15001) : cljs.core.create_array_node_seq.call(null, G__14998, G__14999, G__15000, G__15001);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__15006 = j + 1;
              j = G__15006;
              continue;
            }
          } else {
            var G__15007 = j + 1;
            j = G__15007;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15009 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15009) : cljs.core.keys.call(null, G__15009);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15010 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15010) : cljs.core.vals.call(null, G__15010);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15011 = cljs.core.seq(coll);
  var chunk__15012 = null;
  var count__15013 = 0;
  var i__15014 = 0;
  while (true) {
    if (i__15014 < count__15013) {
      var vec__15015 = chunk__15012.cljs$core$IIndexed$_nth$arity$2(null, i__15014);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15015, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15015, 1, null);
      var G__15016_15027 = v;
      var G__15017_15028 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15016_15027, G__15017_15028) : f.call(null, G__15016_15027, G__15017_15028);
      var G__15029 = seq__15011;
      var G__15030 = chunk__15012;
      var G__15031 = count__15013;
      var G__15032 = i__15014 + 1;
      seq__15011 = G__15029;
      chunk__15012 = G__15030;
      count__15013 = G__15031;
      i__15014 = G__15032;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15011);
      if (temp__4126__auto__) {
        var seq__15011__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15011__$1)) {
          var c__4586__auto__ = cljs.core.chunk_first(seq__15011__$1);
          var G__15033 = cljs.core.chunk_rest(seq__15011__$1);
          var G__15034 = c__4586__auto__;
          var G__15035 = cljs.core.count(c__4586__auto__);
          var G__15036 = 0;
          seq__15011 = G__15033;
          chunk__15012 = G__15034;
          count__15013 = G__15035;
          i__15014 = G__15036;
          continue;
        } else {
          var vec__15018 = cljs.core.first(seq__15011__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15018, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15018, 1, null);
          var G__15019_15037 = v;
          var G__15020_15038 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15019_15037, G__15020_15038) : f.call(null, G__15019_15037, G__15020_15038);
          var G__15039 = cljs.core.next(seq__15011__$1);
          var G__15040 = null;
          var G__15041 = 0;
          var G__15042 = 0;
          seq__15011 = G__15039;
          chunk__15012 = G__15040;
          count__15013 = G__15041;
          i__15014 = G__15042;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__15021 = init;
    var G__15022 = null;
    var G__15023 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15021, G__15022, G__15023) : f.call(null, G__15021, G__15022, G__15023);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15024 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15024) : cljs.core.deref.call(null, G__15024);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15026 = {};
    return obj15026;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15043 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15044 = cljs.core.next(es);
          ret = G__15043;
          es = G__15044;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15045 = null;
  var G__15045__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15045__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15045 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15045__2.call(this, self__, k);
      case 3:
        return G__15045__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15045.cljs$core$IFn$_invoke$arity$2 = G__15045__2;
  G__15045.cljs$core$IFn$_invoke$arity$3 = G__15045__3;
  return G__15045;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15008) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15008)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15046 = i + 1;
      var G__15047 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__15046;
      out = G__15047;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__15048 = o;
      if (G__15048) {
        var bit__4480__auto__ = G__15048.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4480__auto__ || G__15048.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15048.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15048);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15048);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__15049 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15049) : cljs.core.key.call(null, G__15049);
      }(), function() {
        var G__15050 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15050) : cljs.core.val.call(null, G__15050);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15053 = cljs.core.next(es);
          var G__15054 = tcoll__$1.assoc_BANG_(function() {
            var G__15051 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15051) : cljs.core.key.call(null, G__15051);
          }(), function() {
            var G__15052 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15052) : cljs.core.val.call(null, G__15052);
          }());
          es = G__15053;
          tcoll__$1 = G__15054;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15055 = ascending_QMARK_ ? t.left : t.right;
      var G__15056 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__15055;
      stack__$1 = G__15056;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15069 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15069) : cljs.core.deref.call(null, G__15069);
  } else {
    var init__$2 = function() {
      var G__15070 = init__$1;
      var G__15071 = node.key;
      var G__15072 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15070, G__15071, G__15072) : f.call(null, G__15070, G__15071, G__15072);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__15073 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15073) : cljs.core.deref.call(null, G__15073);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__15074 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15074) : cljs.core.deref.call(null, G__15074);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15076 = null;
  var G__15076__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15076__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15076 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15076__2.call(this, self__, k);
      case 3:
        return G__15076__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15076.cljs$core$IFn$_invoke$arity$2 = G__15076__2;
  G__15076.cljs$core$IFn$_invoke$arity$3 = G__15076__3;
  return G__15076;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15075) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15075)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15078 = null;
  var G__15078__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15078__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15078 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15078__2.call(this, self__, k);
      case 3:
        return G__15078__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15078.cljs$core$IFn$_invoke$arity$2 = G__15078__2;
  G__15078.cljs$core$IFn$_invoke$arity$3 = G__15078__3;
  return G__15078;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15077) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15077)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__15091 = k;
      var G__15092 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15091, G__15092) : comp.call(null, G__15091, G__15092);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__15111 = k;
      var G__15112 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15111, G__15112) : comp.call(null, G__15111, G__15112);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__15123 = k;
    var G__15124 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15123, G__15124) : comp.call(null, G__15123, G__15124);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15126 = cljs.core.seq(coll);
  var chunk__15127 = null;
  var count__15128 = 0;
  var i__15129 = 0;
  while (true) {
    if (i__15129 < count__15128) {
      var vec__15130 = chunk__15127.cljs$core$IIndexed$_nth$arity$2(null, i__15129);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15130, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15130, 1, null);
      var G__15131_15143 = v;
      var G__15132_15144 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15131_15143, G__15132_15144) : f.call(null, G__15131_15143, G__15132_15144);
      var G__15145 = seq__15126;
      var G__15146 = chunk__15127;
      var G__15147 = count__15128;
      var G__15148 = i__15129 + 1;
      seq__15126 = G__15145;
      chunk__15127 = G__15146;
      count__15128 = G__15147;
      i__15129 = G__15148;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15126);
      if (temp__4126__auto__) {
        var seq__15126__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15126__$1)) {
          var c__4586__auto__ = cljs.core.chunk_first(seq__15126__$1);
          var G__15149 = cljs.core.chunk_rest(seq__15126__$1);
          var G__15150 = c__4586__auto__;
          var G__15151 = cljs.core.count(c__4586__auto__);
          var G__15152 = 0;
          seq__15126 = G__15149;
          chunk__15127 = G__15150;
          count__15128 = G__15151;
          i__15129 = G__15152;
          continue;
        } else {
          var vec__15133 = cljs.core.first(seq__15126__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15133, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15133, 1, null);
          var G__15134_15153 = v;
          var G__15135_15154 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15134_15153, G__15135_15154) : f.call(null, G__15134_15153, G__15135_15154);
          var G__15155 = cljs.core.next(seq__15126__$1);
          var G__15156 = null;
          var G__15157 = 0;
          var G__15158 = 0;
          seq__15126 = G__15155;
          chunk__15127 = G__15156;
          count__15128 = G__15157;
          i__15129 = G__15158;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15136 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15136) : cljs.core.keys.call(null, G__15136);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15137 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15137) : cljs.core.vals.call(null, G__15137);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__15138 = k;
        var G__15139 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15138, G__15139) : self__.comp.call(null, G__15138, G__15139);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15159 = t.left;
          t = G__15159;
          continue;
        } else {
          var G__15160 = t.right;
          t = G__15160;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15161 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15162 = cljs.core.next(es);
          ret = G__15161;
          es = G__15162;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15163 = null;
  var G__15163__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15163__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15163 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15163__2.call(this, self__, k);
      case 3:
        return G__15163__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15163.cljs$core$IFn$_invoke$arity$2 = G__15163__2;
  G__15163.cljs$core$IFn$_invoke$arity$3 = G__15163__3;
  return G__15163;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15125) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15125)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__15140 = k;
          var G__15141 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15140, G__15141) : self__.comp.call(null, G__15140, G__15141);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15164 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15165 = t.left;
              stack = G__15164;
              t = G__15165;
              continue;
            } else {
              var G__15166 = stack;
              var G__15167 = t.right;
              stack = G__15166;
              t = G__15167;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15168 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15169 = t.right;
              stack = G__15168;
              t = G__15169;
              continue;
            } else {
              var G__15170 = stack;
              var G__15171 = t.left;
              stack = G__15170;
              t = G__15171;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__15142 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15142) : cljs.core.key.call(null, G__15142);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__15172 = cljs.core.nnext(in$);
        var G__15173 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15172;
        out = G__15173;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15174__i = 0, G__15174__a = new Array(arguments.length - 0);
      while (G__15174__i < G__15174__a.length) {
        G__15174__a[G__15174__i] = arguments[G__15174__i + 0];
        ++G__15174__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15174__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15175) {
    var keyvals = cljs.core.seq(arglist__15175);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15176__i = 0, G__15176__a = new Array(arguments.length - 0);
      while (G__15176__i < G__15176__a.length) {
        G__15176__a[G__15176__i] = arguments[G__15176__i + 0];
        ++G__15176__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15176__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15177) {
    var keyvals = cljs.core.seq(arglist__15177);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15181 = {};
      return obj15181;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__15182 = cljs.core.nnext(kvs);
        kvs = G__15182;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15183__i = 0, G__15183__a = new Array(arguments.length - 0);
      while (G__15183__i < G__15183__a.length) {
        G__15183__a[G__15183__i] = arguments[G__15183__i + 0];
        ++G__15183__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15183__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15184) {
    var keyvals = cljs.core.seq(arglist__15184);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__15185 = cljs.core.nnext(in$);
        var G__15186 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15185;
        out = G__15186;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15187__i = 0, G__15187__a = new Array(arguments.length - 0);
      while (G__15187__i < G__15187__a.length) {
        G__15187__a[G__15187__i] = arguments[G__15187__i + 0];
        ++G__15187__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15187__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15188) {
    var keyvals = cljs.core.seq(arglist__15188);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__15189 = cljs.core.nnext(in$);
        var G__15190 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15189;
        out = G__15190;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__15191__i = 0, G__15191__a = new Array(arguments.length - 1);
      while (G__15191__i < G__15191__a.length) {
        G__15191__a[G__15191__i] = arguments[G__15191__i + 1];
        ++G__15191__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15191__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15192) {
    var comparator = cljs.core.first(arglist__15192);
    var keyvals = cljs.core.rest(arglist__15192);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15193 = self__.mseq;
    if (G__15193) {
      var bit__4480__auto__ = G__15193.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4480__auto__ || G__15193.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15193.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15193);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15193);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15194 = self__.mseq;
    if (G__15194) {
      var bit__4480__auto__ = G__15194.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4480__auto__ || G__15194.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15194.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15194);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15194);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15195 = self__.mseq;
    if (G__15195) {
      var bit__4480__auto__ = G__15195.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4480__auto__ || G__15195.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15195.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15195);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15195);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15196 = self__.mseq;
    if (G__15196) {
      var bit__4480__auto__ = G__15196.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4480__auto__ || G__15196.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15196.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15196);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15196);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__15197_SHARP_, p2__15198_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3799__auto__ = p1__15197_SHARP_;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__15198_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__15199__i = 0, G__15199__a = new Array(arguments.length - 0);
      while (G__15199__i < G__15199__a.length) {
        G__15199__a[G__15199__i] = arguments[G__15199__i + 0];
        ++G__15199__i;
      }
      maps = new cljs.core.IndexedSeq(G__15199__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15200) {
    var maps = cljs.core.seq(arglist__15200);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__15203 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__15204 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15203, G__15204) : f.call(null, G__15203, G__15204);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3799__auto__ = m1;
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__15205__i = 0, G__15205__a = new Array(arguments.length - 1);
      while (G__15205__i < G__15205__a.length) {
        G__15205__a[G__15205__i] = arguments[G__15205__i + 1];
        ++G__15205__i;
      }
      maps = new cljs.core.IndexedSeq(G__15205__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15206) {
    var f = cljs.core.first(arglist__15206);
    var maps = cljs.core.rest(arglist__15206);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__15207 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__15208 = cljs.core.next(keys);
      ret = G__15207;
      keys = G__15208;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15211 = cljs.core.seq(coll);
  var chunk__15212 = null;
  var count__15213 = 0;
  var i__15214 = 0;
  while (true) {
    if (i__15214 < count__15213) {
      var vec__15215 = chunk__15212.cljs$core$IIndexed$_nth$arity$2(null, i__15214);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15215, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15215, 1, null);
      var G__15216_15221 = v;
      var G__15217_15222 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15216_15221, G__15217_15222) : f.call(null, G__15216_15221, G__15217_15222);
      var G__15223 = seq__15211;
      var G__15224 = chunk__15212;
      var G__15225 = count__15213;
      var G__15226 = i__15214 + 1;
      seq__15211 = G__15223;
      chunk__15212 = G__15224;
      count__15213 = G__15225;
      i__15214 = G__15226;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15211);
      if (temp__4126__auto__) {
        var seq__15211__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15211__$1)) {
          var c__4586__auto__ = cljs.core.chunk_first(seq__15211__$1);
          var G__15227 = cljs.core.chunk_rest(seq__15211__$1);
          var G__15228 = c__4586__auto__;
          var G__15229 = cljs.core.count(c__4586__auto__);
          var G__15230 = 0;
          seq__15211 = G__15227;
          chunk__15212 = G__15228;
          count__15213 = G__15229;
          i__15214 = G__15230;
          continue;
        } else {
          var vec__15218 = cljs.core.first(seq__15211__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15218, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15218, 1, null);
          var G__15219_15231 = v;
          var G__15220_15232 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15219_15231, G__15220_15232) : f.call(null, G__15219_15231, G__15220_15232);
          var G__15233 = cljs.core.next(seq__15211__$1);
          var G__15234 = null;
          var G__15235 = 0;
          var G__15236 = 0;
          seq__15211 = G__15233;
          chunk__15212 = G__15234;
          count__15213 = G__15235;
          i__15214 = G__15236;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15209_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15209_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15237 = null;
  var G__15237__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15237__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15237 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15237__2.call(this, self__, k);
      case 3:
        return G__15237__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15237.cljs$core$IFn$_invoke$arity$2 = G__15237__2;
  G__15237.cljs$core$IFn$_invoke$arity$3 = G__15237__3;
  return G__15237;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15210) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15210)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15238 = i + 1;
        var G__15239 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__15238;
        out = G__15239;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15240 = i + 1;
        var G__15241 = cljs.core._conj_BANG_(out, items[i]);
        i = G__15240;
        out = G__15241;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15243 = null;
  var G__15243__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15243__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15243 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15243__2.call(this, self__, k);
      case 3:
        return G__15243__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15243.cljs$core$IFn$_invoke$arity$2 = G__15243__2;
  G__15243.cljs$core$IFn$_invoke$arity$3 = G__15243__3;
  return G__15243;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15242) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15242)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15246 = cljs.core.seq(coll);
  var chunk__15247 = null;
  var count__15248 = 0;
  var i__15249 = 0;
  while (true) {
    if (i__15249 < count__15248) {
      var vec__15250 = chunk__15247.cljs$core$IIndexed$_nth$arity$2(null, i__15249);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15250, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15250, 1, null);
      var G__15251_15256 = v;
      var G__15252_15257 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15251_15256, G__15252_15257) : f.call(null, G__15251_15256, G__15252_15257);
      var G__15258 = seq__15246;
      var G__15259 = chunk__15247;
      var G__15260 = count__15248;
      var G__15261 = i__15249 + 1;
      seq__15246 = G__15258;
      chunk__15247 = G__15259;
      count__15248 = G__15260;
      i__15249 = G__15261;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15246);
      if (temp__4126__auto__) {
        var seq__15246__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15246__$1)) {
          var c__4586__auto__ = cljs.core.chunk_first(seq__15246__$1);
          var G__15262 = cljs.core.chunk_rest(seq__15246__$1);
          var G__15263 = c__4586__auto__;
          var G__15264 = cljs.core.count(c__4586__auto__);
          var G__15265 = 0;
          seq__15246 = G__15262;
          chunk__15247 = G__15263;
          count__15248 = G__15264;
          i__15249 = G__15265;
          continue;
        } else {
          var vec__15253 = cljs.core.first(seq__15246__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15253, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15253, 1, null);
          var G__15254_15266 = v;
          var G__15255_15267 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15254_15266, G__15255_15267) : f.call(null, G__15254_15266, G__15255_15267);
          var G__15268 = cljs.core.next(seq__15246__$1);
          var G__15269 = null;
          var G__15270 = 0;
          var G__15271 = 0;
          seq__15246 = G__15268;
          chunk__15247 = G__15269;
          count__15248 = G__15270;
          i__15249 = G__15271;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15244_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15244_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15272 = null;
  var G__15272__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15272__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15272 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15272__2.call(this, self__, k);
      case 3:
        return G__15272__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15272.cljs$core$IFn$_invoke$arity$2 = G__15272__2;
  G__15272.cljs$core$IFn$_invoke$arity$3 = G__15272__3;
  return G__15272;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15245) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15245)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4680__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4680__auto__.length) {
        var G__15273 = i + 1;
        var G__15274 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__15273;
        res = G__15274;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15275 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__15276 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__15275;
          out = G__15276;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__15277__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__15277 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__15278__i = 0, G__15278__a = new Array(arguments.length - 0);
        while (G__15278__i < G__15278__a.length) {
          G__15278__a[G__15278__i] = arguments[G__15278__i + 0];
          ++G__15278__i;
        }
        keys = new cljs.core.IndexedSeq(G__15278__a, 0);
      }
      return G__15277__delegate.call(this, keys);
    };
    G__15277.cljs$lang$maxFixedArity = 0;
    G__15277.cljs$lang$applyTo = function(arglist__15279) {
      var keys = cljs.core.seq(arglist__15279);
      return G__15277__delegate(keys);
    };
    G__15277.cljs$core$IFn$_invoke$arity$variadic = G__15277__delegate;
    return G__15277;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__15280 = null;
        if (arguments.length > 0) {
          var G__15281__i = 0, G__15281__a = new Array(arguments.length - 0);
          while (G__15281__i < G__15281__a.length) {
            G__15281__a[G__15281__i] = arguments[G__15281__i + 0];
            ++G__15281__i;
          }
          G__15280 = new cljs.core.IndexedSeq(G__15281__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15280);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__15282__i = 0, G__15282__a = new Array(arguments.length - 0);
      while (G__15282__i < G__15282__a.length) {
        G__15282__a[G__15282__i] = arguments[G__15282__i + 0];
        ++G__15282__i;
      }
      keys = new cljs.core.IndexedSeq(G__15282__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15283) {
    var keys = cljs.core.seq(arglist__15283);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__15284__i = 0, G__15284__a = new Array(arguments.length - 1);
      while (G__15284__i < G__15284__a.length) {
        G__15284__a[G__15284__i] = arguments[G__15284__i + 1];
        ++G__15284__i;
      }
      keys = new cljs.core.IndexedSeq(G__15284__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15285) {
    var comparator = cljs.core.first(arglist__15285);
    var keys = cljs.core.rest(arglist__15285);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__15286_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__15286_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__15286_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15287_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__15287_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__15287_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__15298, seen__$1) {
        while (true) {
          var vec__15299 = p__15298;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15299, 0, null);
          var xs__$1 = vec__15299;
          var temp__4126__auto__ = cljs.core.seq(xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__15300 = cljs.core.rest(s);
              var G__15301 = seen__$1;
              p__15298 = G__15300;
              seen__$1 = G__15301;
              continue;
            } else {
              return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__15302 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__15303 = cljs.core.next(s__$1);
      ret = G__15302;
      s__$1 = G__15303;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__15305 = x;
    if (G__15305) {
      var bit__4473__auto__ = G__15305.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4473__auto__ || G__15305.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__15306 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__15307 = cljs.core.next(ks);
      var G__15308 = cljs.core.next(vs);
      map = G__15306;
      ks = G__15307;
      vs = G__15308;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__15319 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15319) : k.call(null, G__15319);
    }() > function() {
      var G__15320 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15320) : k.call(null, G__15320);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__15321__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15309_SHARP_, p2__15310_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__15309_SHARP_, p2__15310_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15321 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15322__i = 0, G__15322__a = new Array(arguments.length - 3);
        while (G__15322__i < G__15322__a.length) {
          G__15322__a[G__15322__i] = arguments[G__15322__i + 3];
          ++G__15322__i;
        }
        more = new cljs.core.IndexedSeq(G__15322__a, 0);
      }
      return G__15321__delegate.call(this, k, x, y, more);
    };
    G__15321.cljs$lang$maxFixedArity = 3;
    G__15321.cljs$lang$applyTo = function(arglist__15323) {
      var k = cljs.core.first(arglist__15323);
      arglist__15323 = cljs.core.next(arglist__15323);
      var x = cljs.core.first(arglist__15323);
      arglist__15323 = cljs.core.next(arglist__15323);
      var y = cljs.core.first(arglist__15323);
      var more = cljs.core.rest(arglist__15323);
      return G__15321__delegate(k, x, y, more);
    };
    G__15321.cljs$core$IFn$_invoke$arity$variadic = G__15321__delegate;
    return G__15321;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__15324 = null;
        if (arguments.length > 3) {
          var G__15325__i = 0, G__15325__a = new Array(arguments.length - 3);
          while (G__15325__i < G__15325__a.length) {
            G__15325__a[G__15325__i] = arguments[G__15325__i + 3];
            ++G__15325__i;
          }
          G__15324 = new cljs.core.IndexedSeq(G__15325__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15324);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__15336 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15336) : k.call(null, G__15336);
    }() < function() {
      var G__15337 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15337) : k.call(null, G__15337);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__15338__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15326_SHARP_, p2__15327_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__15326_SHARP_, p2__15327_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15338 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15339__i = 0, G__15339__a = new Array(arguments.length - 3);
        while (G__15339__i < G__15339__a.length) {
          G__15339__a[G__15339__i] = arguments[G__15339__i + 3];
          ++G__15339__i;
        }
        more = new cljs.core.IndexedSeq(G__15339__a, 0);
      }
      return G__15338__delegate.call(this, k, x, y, more);
    };
    G__15338.cljs$lang$maxFixedArity = 3;
    G__15338.cljs$lang$applyTo = function(arglist__15340) {
      var k = cljs.core.first(arglist__15340);
      arglist__15340 = cljs.core.next(arglist__15340);
      var x = cljs.core.first(arglist__15340);
      arglist__15340 = cljs.core.next(arglist__15340);
      var y = cljs.core.first(arglist__15340);
      var more = cljs.core.rest(arglist__15340);
      return G__15338__delegate(k, x, y, more);
    };
    G__15338.cljs$core$IFn$_invoke$arity$variadic = G__15338__delegate;
    return G__15338;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__15341 = null;
        if (arguments.length > 3) {
          var G__15342__i = 0, G__15342__a = new Array(arguments.length - 3);
          while (G__15342__i < G__15342__a.length) {
            G__15342__a[G__15342__i] = arguments[G__15342__i + 3];
            ++G__15342__i;
          }
          G__15341 = new cljs.core.IndexedSeq(G__15342__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15341);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__15359 = null;
          var G__15359__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15359__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15354 = result;
                var G__15355 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15354, G__15355) : rf.call(null, G__15354, G__15355);
              }());
            }();
            var G__15356 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15356) : rf.call(null, G__15356);
          };
          var G__15359__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__15357 = result;
              var G__15358 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15357, G__15358) : rf.call(null, G__15357, G__15358);
            } else {
              return result;
            }
          };
          G__15359 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15359__0.call(this);
              case 1:
                return G__15359__1.call(this, result);
              case 2:
                return G__15359__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15359.cljs$core$IFn$_invoke$arity$0 = G__15359__0;
          G__15359.cljs$core$IFn$_invoke$arity$1 = G__15359__1;
          G__15359.cljs$core$IFn$_invoke$arity$2 = G__15359__2;
          return G__15359;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15372 = null;
        var G__15372__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15372__1 = function(result) {
          var G__15367 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15367) : rf.call(null, G__15367);
        };
        var G__15372__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15368 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15368) : pred.call(null, G__15368);
          }())) {
            var G__15369 = result;
            var G__15370 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15369, G__15370) : rf.call(null, G__15369, G__15370);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__15372 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15372__0.call(this);
            case 1:
              return G__15372__1.call(this, result);
            case 2:
              return G__15372__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15372.cljs$core$IFn$_invoke$arity$0 = G__15372__0;
        G__15372.cljs$core$IFn$_invoke$arity$1 = G__15372__1;
        G__15372.cljs$core$IFn$_invoke$arity$2 = G__15372__2;
        return G__15372;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__15371 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15371) : pred.call(null, G__15371);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__15377 = function() {
      var G__15379 = cljs.core._entry_key(sc, e);
      var G__15380 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15379, G__15380) : comp.call(null, G__15379, G__15380);
    }();
    var G__15378 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15377, G__15378) : test.call(null, G__15377, G__15378);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15384 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15384, 0, null);
        var s = vec__15384;
        if (cljs.core.truth_(function() {
          var G__15385 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15385) : include.call(null, G__15385);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15386 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15386, 0, null);
      var s = vec__15386;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15390 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15390, 0, null);
        var s = vec__15390;
        if (cljs.core.truth_(function() {
          var G__15391 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15391) : include.call(null, G__15391);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15392 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15392, 0, null);
      var s = vec__15392;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__15393 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15393) : Math.ceil.call(null, G__15393);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__15394 = ret;
        var G__15395 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15394, G__15395) : f.call(null, G__15394, G__15395);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__15396 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15396) : cljs.core.deref.call(null, G__15396);
      } else {
        var G__15397 = i + self__.step;
        var G__15398 = ret__$1;
        i = G__15397;
        ret = G__15398;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__15416 = null;
          var G__15416__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15416__1 = function(result) {
            var G__15413 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15413) : rf.call(null, G__15413);
          };
          var G__15416__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__15414 = result;
              var G__15415 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15414, G__15415) : rf.call(null, G__15414, G__15415);
            } else {
              return result;
            }
          };
          G__15416 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15416__0.call(this);
              case 1:
                return G__15416__1.call(this, result);
              case 2:
                return G__15416__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15416.cljs$core$IFn$_invoke$arity$0 = G__15416__0;
          G__15416.cljs$core$IFn$_invoke$arity$1 = G__15416__1;
          G__15416.cljs$core$IFn$_invoke$arity$2 = G__15416__2;
          return G__15416;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__15438 = null;
          var G__15438__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15438__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15429 = result;
                var G__15430 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15429, G__15430) : rf.call(null, G__15429, G__15430);
              }());
            }();
            var G__15431 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15431) : rf.call(null, G__15431);
          };
          var G__15438__2 = function(result, input) {
            var pval = function() {
              var G__15432 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15432) : cljs.core.deref.call(null, G__15432);
            }();
            var val = function() {
              var G__15433 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15433) : f.call(null, G__15433);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__15434 = result;
                var G__15435 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15434, G__15435) : rf.call(null, G__15434, G__15435);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__15438 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15438__0.call(this);
              case 1:
                return G__15438__1.call(this, result);
              case 2:
                return G__15438__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15438.cljs$core$IFn$_invoke$arity$0 = G__15438__0;
          G__15438.cljs$core$IFn$_invoke$arity$1 = G__15438__1;
          G__15438.cljs$core$IFn$_invoke$arity$2 = G__15438__2;
          return G__15438;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__15436 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15436) : f.call(null, G__15436);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__15417_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__15437 = p1__15417_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15437) : f.call(null, G__15437);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__15447 = init;
          var G__15448 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15447, G__15448) : f.call(null, G__15447, G__15448);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15543 = null;
      var G__15543__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__15543__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15501 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15501) : f.call(null, G__15501);
        }()], null);
      };
      var G__15543__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15502 = x;
          var G__15503 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15502, G__15503) : f.call(null, G__15502, G__15503);
        }()], null);
      };
      var G__15543__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15504 = x;
          var G__15505 = y;
          var G__15506 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15504, G__15505, G__15506) : f.call(null, G__15504, G__15505, G__15506);
        }()], null);
      };
      var G__15543__4 = function() {
        var G__15544__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__15544 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15545__i = 0, G__15545__a = new Array(arguments.length - 3);
            while (G__15545__i < G__15545__a.length) {
              G__15545__a[G__15545__i] = arguments[G__15545__i + 3];
              ++G__15545__i;
            }
            args = new cljs.core.IndexedSeq(G__15545__a, 0);
          }
          return G__15544__delegate.call(this, x, y, z, args);
        };
        G__15544.cljs$lang$maxFixedArity = 3;
        G__15544.cljs$lang$applyTo = function(arglist__15546) {
          var x = cljs.core.first(arglist__15546);
          arglist__15546 = cljs.core.next(arglist__15546);
          var y = cljs.core.first(arglist__15546);
          arglist__15546 = cljs.core.next(arglist__15546);
          var z = cljs.core.first(arglist__15546);
          var args = cljs.core.rest(arglist__15546);
          return G__15544__delegate(x, y, z, args);
        };
        G__15544.cljs$core$IFn$_invoke$arity$variadic = G__15544__delegate;
        return G__15544;
      }();
      G__15543 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15543__0.call(this);
          case 1:
            return G__15543__1.call(this, x);
          case 2:
            return G__15543__2.call(this, x, y);
          case 3:
            return G__15543__3.call(this, x, y, z);
          default:
            var G__15547 = null;
            if (arguments.length > 3) {
              var G__15548__i = 0, G__15548__a = new Array(arguments.length - 3);
              while (G__15548__i < G__15548__a.length) {
                G__15548__a[G__15548__i] = arguments[G__15548__i + 3];
                ++G__15548__i;
              }
              G__15547 = new cljs.core.IndexedSeq(G__15548__a, 0);
            }
            return G__15543__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15547);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15543.cljs$lang$maxFixedArity = 3;
      G__15543.cljs$lang$applyTo = G__15543__4.cljs$lang$applyTo;
      G__15543.cljs$core$IFn$_invoke$arity$0 = G__15543__0;
      G__15543.cljs$core$IFn$_invoke$arity$1 = G__15543__1;
      G__15543.cljs$core$IFn$_invoke$arity$2 = G__15543__2;
      G__15543.cljs$core$IFn$_invoke$arity$3 = G__15543__3;
      G__15543.cljs$core$IFn$_invoke$arity$variadic = G__15543__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15543;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15549 = null;
      var G__15549__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__15549__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15507 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15507) : f.call(null, G__15507);
        }(), function() {
          var G__15508 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15508) : g.call(null, G__15508);
        }()], null);
      };
      var G__15549__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15509 = x;
          var G__15510 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15509, G__15510) : f.call(null, G__15509, G__15510);
        }(), function() {
          var G__15511 = x;
          var G__15512 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15511, G__15512) : g.call(null, G__15511, G__15512);
        }()], null);
      };
      var G__15549__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15513 = x;
          var G__15514 = y;
          var G__15515 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15513, G__15514, G__15515) : f.call(null, G__15513, G__15514, G__15515);
        }(), function() {
          var G__15516 = x;
          var G__15517 = y;
          var G__15518 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15516, G__15517, G__15518) : g.call(null, G__15516, G__15517, G__15518);
        }()], null);
      };
      var G__15549__4 = function() {
        var G__15550__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__15550 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15551__i = 0, G__15551__a = new Array(arguments.length - 3);
            while (G__15551__i < G__15551__a.length) {
              G__15551__a[G__15551__i] = arguments[G__15551__i + 3];
              ++G__15551__i;
            }
            args = new cljs.core.IndexedSeq(G__15551__a, 0);
          }
          return G__15550__delegate.call(this, x, y, z, args);
        };
        G__15550.cljs$lang$maxFixedArity = 3;
        G__15550.cljs$lang$applyTo = function(arglist__15552) {
          var x = cljs.core.first(arglist__15552);
          arglist__15552 = cljs.core.next(arglist__15552);
          var y = cljs.core.first(arglist__15552);
          arglist__15552 = cljs.core.next(arglist__15552);
          var z = cljs.core.first(arglist__15552);
          var args = cljs.core.rest(arglist__15552);
          return G__15550__delegate(x, y, z, args);
        };
        G__15550.cljs$core$IFn$_invoke$arity$variadic = G__15550__delegate;
        return G__15550;
      }();
      G__15549 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15549__0.call(this);
          case 1:
            return G__15549__1.call(this, x);
          case 2:
            return G__15549__2.call(this, x, y);
          case 3:
            return G__15549__3.call(this, x, y, z);
          default:
            var G__15553 = null;
            if (arguments.length > 3) {
              var G__15554__i = 0, G__15554__a = new Array(arguments.length - 3);
              while (G__15554__i < G__15554__a.length) {
                G__15554__a[G__15554__i] = arguments[G__15554__i + 3];
                ++G__15554__i;
              }
              G__15553 = new cljs.core.IndexedSeq(G__15554__a, 0);
            }
            return G__15549__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15553);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15549.cljs$lang$maxFixedArity = 3;
      G__15549.cljs$lang$applyTo = G__15549__4.cljs$lang$applyTo;
      G__15549.cljs$core$IFn$_invoke$arity$0 = G__15549__0;
      G__15549.cljs$core$IFn$_invoke$arity$1 = G__15549__1;
      G__15549.cljs$core$IFn$_invoke$arity$2 = G__15549__2;
      G__15549.cljs$core$IFn$_invoke$arity$3 = G__15549__3;
      G__15549.cljs$core$IFn$_invoke$arity$variadic = G__15549__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15549;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15555 = null;
      var G__15555__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__15555__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15519 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15519) : f.call(null, G__15519);
        }(), function() {
          var G__15520 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15520) : g.call(null, G__15520);
        }(), function() {
          var G__15521 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15521) : h.call(null, G__15521);
        }()], null);
      };
      var G__15555__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15522 = x;
          var G__15523 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15522, G__15523) : f.call(null, G__15522, G__15523);
        }(), function() {
          var G__15524 = x;
          var G__15525 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15524, G__15525) : g.call(null, G__15524, G__15525);
        }(), function() {
          var G__15526 = x;
          var G__15527 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15526, G__15527) : h.call(null, G__15526, G__15527);
        }()], null);
      };
      var G__15555__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15528 = x;
          var G__15529 = y;
          var G__15530 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15528, G__15529, G__15530) : f.call(null, G__15528, G__15529, G__15530);
        }(), function() {
          var G__15531 = x;
          var G__15532 = y;
          var G__15533 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15531, G__15532, G__15533) : g.call(null, G__15531, G__15532, G__15533);
        }(), function() {
          var G__15534 = x;
          var G__15535 = y;
          var G__15536 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15534, G__15535, G__15536) : h.call(null, G__15534, G__15535, G__15536);
        }()], null);
      };
      var G__15555__4 = function() {
        var G__15556__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__15556 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15557__i = 0, G__15557__a = new Array(arguments.length - 3);
            while (G__15557__i < G__15557__a.length) {
              G__15557__a[G__15557__i] = arguments[G__15557__i + 3];
              ++G__15557__i;
            }
            args = new cljs.core.IndexedSeq(G__15557__a, 0);
          }
          return G__15556__delegate.call(this, x, y, z, args);
        };
        G__15556.cljs$lang$maxFixedArity = 3;
        G__15556.cljs$lang$applyTo = function(arglist__15558) {
          var x = cljs.core.first(arglist__15558);
          arglist__15558 = cljs.core.next(arglist__15558);
          var y = cljs.core.first(arglist__15558);
          arglist__15558 = cljs.core.next(arglist__15558);
          var z = cljs.core.first(arglist__15558);
          var args = cljs.core.rest(arglist__15558);
          return G__15556__delegate(x, y, z, args);
        };
        G__15556.cljs$core$IFn$_invoke$arity$variadic = G__15556__delegate;
        return G__15556;
      }();
      G__15555 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15555__0.call(this);
          case 1:
            return G__15555__1.call(this, x);
          case 2:
            return G__15555__2.call(this, x, y);
          case 3:
            return G__15555__3.call(this, x, y, z);
          default:
            var G__15559 = null;
            if (arguments.length > 3) {
              var G__15560__i = 0, G__15560__a = new Array(arguments.length - 3);
              while (G__15560__i < G__15560__a.length) {
                G__15560__a[G__15560__i] = arguments[G__15560__i + 3];
                ++G__15560__i;
              }
              G__15559 = new cljs.core.IndexedSeq(G__15560__a, 0);
            }
            return G__15555__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15559);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15555.cljs$lang$maxFixedArity = 3;
      G__15555.cljs$lang$applyTo = G__15555__4.cljs$lang$applyTo;
      G__15555.cljs$core$IFn$_invoke$arity$0 = G__15555__0;
      G__15555.cljs$core$IFn$_invoke$arity$1 = G__15555__1;
      G__15555.cljs$core$IFn$_invoke$arity$2 = G__15555__2;
      G__15555.cljs$core$IFn$_invoke$arity$3 = G__15555__3;
      G__15555.cljs$core$IFn$_invoke$arity$variadic = G__15555__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15555;
    }();
  };
  var juxt__4 = function() {
    var G__15561__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__15562 = null;
          var G__15562__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15449_SHARP_, p2__15450_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15449_SHARP_, function() {
                  return p2__15450_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15450_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15450_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15562__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15451_SHARP_, p2__15452_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15451_SHARP_, function() {
                  var G__15537 = x;
                  return p2__15452_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15452_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15537) : p2__15452_SHARP_.call(null, G__15537);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15562__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15453_SHARP_, p2__15454_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15453_SHARP_, function() {
                  var G__15538 = x;
                  var G__15539 = y;
                  return p2__15454_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15454_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15538, G__15539) : p2__15454_SHARP_.call(null, G__15538, G__15539);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15562__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15455_SHARP_, p2__15456_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15455_SHARP_, function() {
                  var G__15540 = x;
                  var G__15541 = y;
                  var G__15542 = z;
                  return p2__15456_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15456_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15540, G__15541, G__15542) : p2__15456_SHARP_.call(null, G__15540, G__15541, G__15542);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15562__4 = function() {
            var G__15563__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__15457_SHARP_, p2__15458_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15457_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15458_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__15563 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__15564__i = 0, G__15564__a = new Array(arguments.length - 3);
                while (G__15564__i < G__15564__a.length) {
                  G__15564__a[G__15564__i] = arguments[G__15564__i + 3];
                  ++G__15564__i;
                }
                args = new cljs.core.IndexedSeq(G__15564__a, 0);
              }
              return G__15563__delegate.call(this, x, y, z, args);
            };
            G__15563.cljs$lang$maxFixedArity = 3;
            G__15563.cljs$lang$applyTo = function(arglist__15565) {
              var x = cljs.core.first(arglist__15565);
              arglist__15565 = cljs.core.next(arglist__15565);
              var y = cljs.core.first(arglist__15565);
              arglist__15565 = cljs.core.next(arglist__15565);
              var z = cljs.core.first(arglist__15565);
              var args = cljs.core.rest(arglist__15565);
              return G__15563__delegate(x, y, z, args);
            };
            G__15563.cljs$core$IFn$_invoke$arity$variadic = G__15563__delegate;
            return G__15563;
          }();
          G__15562 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__15562__0.call(this);
              case 1:
                return G__15562__1.call(this, x);
              case 2:
                return G__15562__2.call(this, x, y);
              case 3:
                return G__15562__3.call(this, x, y, z);
              default:
                var G__15566 = null;
                if (arguments.length > 3) {
                  var G__15567__i = 0, G__15567__a = new Array(arguments.length - 3);
                  while (G__15567__i < G__15567__a.length) {
                    G__15567__a[G__15567__i] = arguments[G__15567__i + 3];
                    ++G__15567__i;
                  }
                  G__15566 = new cljs.core.IndexedSeq(G__15567__a, 0);
                }
                return G__15562__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15566);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15562.cljs$lang$maxFixedArity = 3;
          G__15562.cljs$lang$applyTo = G__15562__4.cljs$lang$applyTo;
          G__15562.cljs$core$IFn$_invoke$arity$0 = G__15562__0;
          G__15562.cljs$core$IFn$_invoke$arity$1 = G__15562__1;
          G__15562.cljs$core$IFn$_invoke$arity$2 = G__15562__2;
          G__15562.cljs$core$IFn$_invoke$arity$3 = G__15562__3;
          G__15562.cljs$core$IFn$_invoke$arity$variadic = G__15562__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__15562;
        }();
      }(fs__$1);
    };
    var G__15561 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__15568__i = 0, G__15568__a = new Array(arguments.length - 3);
        while (G__15568__i < G__15568__a.length) {
          G__15568__a[G__15568__i] = arguments[G__15568__i + 3];
          ++G__15568__i;
        }
        fs = new cljs.core.IndexedSeq(G__15568__a, 0);
      }
      return G__15561__delegate.call(this, f, g, h, fs);
    };
    G__15561.cljs$lang$maxFixedArity = 3;
    G__15561.cljs$lang$applyTo = function(arglist__15569) {
      var f = cljs.core.first(arglist__15569);
      arglist__15569 = cljs.core.next(arglist__15569);
      var g = cljs.core.first(arglist__15569);
      arglist__15569 = cljs.core.next(arglist__15569);
      var h = cljs.core.first(arglist__15569);
      var fs = cljs.core.rest(arglist__15569);
      return G__15561__delegate(f, g, h, fs);
    };
    G__15561.cljs$core$IFn$_invoke$arity$variadic = G__15561__delegate;
    return G__15561;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__15570 = null;
        if (arguments.length > 3) {
          var G__15571__i = 0, G__15571__a = new Array(arguments.length - 3);
          while (G__15571__i < G__15571__a.length) {
            G__15571__a[G__15571__i] = arguments[G__15571__i + 3];
            ++G__15571__i;
          }
          G__15570 = new cljs.core.IndexedSeq(G__15571__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__15570);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__15572 = cljs.core.next(coll);
        coll = G__15572;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__15573 = n - 1;
        var G__15574 = cljs.core.next(coll);
        n = G__15573;
        coll = G__15574;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__15578 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15578, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15578, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15578, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_15586 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__15587_15593 = cljs.core.first(coll);
        var G__15588_15594 = writer;
        var G__15589_15595 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15587_15593, G__15588_15594, G__15589_15595) : print_one.call(null, G__15587_15593, G__15588_15594, G__15589_15595);
      } else {
      }
      var coll_15596__$1 = cljs.core.next(coll);
      var n_15597 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_15596__$1 && (n_15597 == null || !(n_15597 === 0))) {
          cljs.core._write(writer, sep);
          var G__15590_15598 = cljs.core.first(coll_15596__$1);
          var G__15591_15599 = writer;
          var G__15592_15600 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15590_15598, G__15591_15599, G__15592_15600) : print_one.call(null, G__15590_15598, G__15591_15599, G__15592_15600);
          var G__15601 = cljs.core.next(coll_15596__$1);
          var G__15602 = n_15597 - 1;
          coll_15596__$1 = G__15601;
          n_15597 = G__15602;
          continue;
        } else {
          if (cljs.core.seq(coll_15596__$1) && n_15597 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15586;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__15607 = cljs.core.seq(ss);
    var chunk__15608 = null;
    var count__15609 = 0;
    var i__15610 = 0;
    while (true) {
      if (i__15610 < count__15609) {
        var s = chunk__15608.cljs$core$IIndexed$_nth$arity$2(null, i__15610);
        cljs.core._write(writer, s);
        var G__15611 = seq__15607;
        var G__15612 = chunk__15608;
        var G__15613 = count__15609;
        var G__15614 = i__15610 + 1;
        seq__15607 = G__15611;
        chunk__15608 = G__15612;
        count__15609 = G__15613;
        i__15610 = G__15614;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__15607);
        if (temp__4126__auto__) {
          var seq__15607__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__15607__$1)) {
            var c__4586__auto__ = cljs.core.chunk_first(seq__15607__$1);
            var G__15615 = cljs.core.chunk_rest(seq__15607__$1);
            var G__15616 = c__4586__auto__;
            var G__15617 = cljs.core.count(c__4586__auto__);
            var G__15618 = 0;
            seq__15607 = G__15615;
            chunk__15608 = G__15616;
            count__15609 = G__15617;
            i__15610 = G__15618;
            continue;
          } else {
            var s = cljs.core.first(seq__15607__$1);
            cljs.core._write(writer, s);
            var G__15619 = cljs.core.next(seq__15607__$1);
            var G__15620 = null;
            var G__15621 = 0;
            var G__15622 = 0;
            seq__15607 = G__15619;
            chunk__15608 = G__15620;
            count__15609 = G__15621;
            i__15610 = G__15622;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__15623__i = 0, G__15623__a = new Array(arguments.length - 1);
      while (G__15623__i < G__15623__a.length) {
        G__15623__a[G__15623__i] = arguments[G__15623__i + 1];
        ++G__15623__i;
      }
      ss = new cljs.core.IndexedSeq(G__15623__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__15624) {
    var writer = cljs.core.first(arglist__15624);
    var ss = cljs.core.rest(arglist__15624);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj15626 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15626;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__15629 = '[\\\\"\b\f\n\r\t]';
    var G__15630 = "g";
    return RegExp(G__15629, G__15630);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3787__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3787__auto__)) {
          var and__3787__auto____$1 = function() {
            var G__15644 = obj;
            if (G__15644) {
              var bit__4480__auto__ = G__15644.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4480__auto__ || G__15644.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__15644.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15644);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15644);
            }
          }();
          if (and__3787__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3787__auto____$1;
          }
        } else {
          return and__3787__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__15645 = obj;
            if (G__15645) {
              var bit__4473__auto__ = G__15645.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4473__auto__ || G__15645.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__15646 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__15647 = pr_writer;
                var G__15648 = writer;
                var G__15649 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15646, G__15647, G__15648, G__15649) : cljs.core.print_map.call(null, G__15646, G__15647, G__15648, G__15649);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__15650 = obj;
                    return goog.isString(G__15650);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__15652 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__15652;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__15651 = obj;
                            if (G__15651) {
                              var bit__4480__auto__ = G__15651.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4480__auto__ || G__15651.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__15651.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15651);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15651);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__15657 = cljs.core.seq(cljs.core.next(objs));
  var chunk__15658 = null;
  var count__15659 = 0;
  var i__15660 = 0;
  while (true) {
    if (i__15660 < count__15659) {
      var obj = chunk__15658.cljs$core$IIndexed$_nth$arity$2(null, i__15660);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__15661 = seq__15657;
      var G__15662 = chunk__15658;
      var G__15663 = count__15659;
      var G__15664 = i__15660 + 1;
      seq__15657 = G__15661;
      chunk__15658 = G__15662;
      count__15659 = G__15663;
      i__15660 = G__15664;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15657);
      if (temp__4126__auto__) {
        var seq__15657__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15657__$1)) {
          var c__4586__auto__ = cljs.core.chunk_first(seq__15657__$1);
          var G__15665 = cljs.core.chunk_rest(seq__15657__$1);
          var G__15666 = c__4586__auto__;
          var G__15667 = cljs.core.count(c__4586__auto__);
          var G__15668 = 0;
          seq__15657 = G__15665;
          chunk__15658 = G__15666;
          count__15659 = G__15667;
          i__15660 = G__15668;
          continue;
        } else {
          var obj = cljs.core.first(seq__15657__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__15669 = cljs.core.next(seq__15657__$1);
          var G__15670 = null;
          var G__15671 = 0;
          var G__15672 = 0;
          seq__15657 = G__15669;
          chunk__15658 = G__15670;
          count__15659 = G__15671;
          i__15660 = G__15672;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15673__i = 0, G__15673__a = new Array(arguments.length - 0);
      while (G__15673__i < G__15673__a.length) {
        G__15673__a[G__15673__i] = arguments[G__15673__i + 0];
        ++G__15673__i;
      }
      objs = new cljs.core.IndexedSeq(G__15673__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15674) {
    var objs = cljs.core.seq(arglist__15674);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15675__i = 0, G__15675__a = new Array(arguments.length - 0);
      while (G__15675__i < G__15675__a.length) {
        G__15675__a[G__15675__i] = arguments[G__15675__i + 0];
        ++G__15675__i;
      }
      objs = new cljs.core.IndexedSeq(G__15675__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15676) {
    var objs = cljs.core.seq(arglist__15676);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15677__i = 0, G__15677__a = new Array(arguments.length - 0);
      while (G__15677__i < G__15677__a.length) {
        G__15677__a[G__15677__i] = arguments[G__15677__i + 0];
        ++G__15677__i;
      }
      objs = new cljs.core.IndexedSeq(G__15677__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15678) {
    var objs = cljs.core.seq(arglist__15678);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15679__i = 0, G__15679__a = new Array(arguments.length - 0);
      while (G__15679__i < G__15679__a.length) {
        G__15679__a[G__15679__i] = arguments[G__15679__i + 0];
        ++G__15679__i;
      }
      objs = new cljs.core.IndexedSeq(G__15679__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15680) {
    var objs = cljs.core.seq(arglist__15680);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15681__i = 0, G__15681__a = new Array(arguments.length - 0);
      while (G__15681__i < G__15681__a.length) {
        G__15681__a[G__15681__i] = arguments[G__15681__i + 0];
        ++G__15681__i;
      }
      objs = new cljs.core.IndexedSeq(G__15681__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15682) {
    var objs = cljs.core.seq(arglist__15682);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15683__i = 0, G__15683__a = new Array(arguments.length - 0);
      while (G__15683__i < G__15683__a.length) {
        G__15683__a[G__15683__i] = arguments[G__15683__i + 0];
        ++G__15683__i;
      }
      objs = new cljs.core.IndexedSeq(G__15683__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15684) {
    var objs = cljs.core.seq(arglist__15684);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15685__i = 0, G__15685__a = new Array(arguments.length - 0);
      while (G__15685__i < G__15685__a.length) {
        G__15685__a[G__15685__i] = arguments[G__15685__i + 0];
        ++G__15685__i;
      }
      objs = new cljs.core.IndexedSeq(G__15685__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15686) {
    var objs = cljs.core.seq(arglist__15686);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15687__i = 0, G__15687__a = new Array(arguments.length - 0);
      while (G__15687__i < G__15687__a.length) {
        G__15687__a[G__15687__i] = arguments[G__15687__i + 0];
        ++G__15687__i;
      }
      objs = new cljs.core.IndexedSeq(G__15687__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15688) {
    var objs = cljs.core.seq(arglist__15688);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__15695_15701 = cljs.core.key(e);
    var G__15696_15702 = w;
    var G__15697_15703 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15695_15701, G__15696_15702, G__15697_15703) : print_one.call(null, G__15695_15701, G__15696_15702, G__15697_15703);
    cljs.core._write(w, " ");
    var G__15698 = cljs.core.val(e);
    var G__15699 = w;
    var G__15700 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15698, G__15699, G__15700) : print_one.call(null, G__15698, G__15699, G__15700);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__15704__i = 0, G__15704__a = new Array(arguments.length - 2);
      while (G__15704__i < G__15704__a.length) {
        G__15704__a[G__15704__i] = arguments[G__15704__i + 2];
        ++G__15704__i;
      }
      args = new cljs.core.IndexedSeq(G__15704__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15705) {
    var iref = cljs.core.first(arglist__15705);
    arglist__15705 = cljs.core.next(arglist__15705);
    var f = cljs.core.first(arglist__15705);
    var args = cljs.core.rest(arglist__15705);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__15708 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15708) : cljs.core.atom.call(null, G__15708);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__15710 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15710) : cljs.core.deref.call(null, G__15710);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__15711_SHARP_, p2__15712_SHARP_) {
    var ret = function() {
      var G__15715 = p1__15711_SHARP_;
      var G__15716 = p2__15712_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15715, G__15716) : rf.call(null, G__15715, G__15716);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__15719 = null;
      var G__15719__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15719__1 = function(result) {
        var G__15718 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15718) : rf.call(null, G__15718);
      };
      var G__15719__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__15719 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15719__0.call(this);
          case 1:
            return G__15719__1.call(this, result);
          case 2:
            return G__15719__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15719.cljs$core$IFn$_invoke$arity$0 = G__15719__0;
      G__15719.cljs$core$IFn$_invoke$arity$1 = G__15719__1;
      G__15719.cljs$core$IFn$_invoke$arity$2 = G__15719__2;
      return G__15719;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__15728 = null;
          var G__15728__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15728__1 = function(result) {
            var G__15724 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15724) : rf.call(null, G__15724);
          };
          var G__15728__2 = function(result, input) {
            var prior = function() {
              var G__15725 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15725) : cljs.core.deref.call(null, G__15725);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__15726 = result;
              var G__15727 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15726, G__15727) : rf.call(null, G__15726, G__15727);
            }
          };
          G__15728 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15728__0.call(this);
              case 1:
                return G__15728__1.call(this, result);
              case 2:
                return G__15728__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15728.cljs$core$IFn$_invoke$arity$0 = G__15728__0;
          G__15728.cljs$core$IFn$_invoke$arity$1 = G__15728__1;
          G__15728.cljs$core$IFn$_invoke$arity$2 = G__15728__2;
          return G__15728;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4777__auto__ = this;
  return cljs.core.es6_iterator(this__4777__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15730_SHARP_, p2__15729_SHARP_) {
    var G__15732 = p2__15729_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15732) : proc.call(null, G__15732);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj15734 = {};
  return obj15734;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3787__auto__ = x;
    if (and__3787__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4443__auto__ = x == null ? null : x;
    return function() {
      var or__3799__auto__ = cljs.core._clj__GT_js[function() {
        var G__15738 = x__4443__auto__;
        return goog.typeOf(G__15738);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3787__auto__ = x;
    if (and__3787__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4443__auto__ = x == null ? null : x;
    return function() {
      var or__3799__auto__ = cljs.core._key__GT_js[function() {
        var G__15742 = x__4443__auto__;
        return goog.typeOf(G__15742);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__15745 = k;
    if (G__15745) {
      var bit__4480__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3799__auto__ = bit__4480__auto__;
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return G__15745.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__15745.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15745);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15745);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__15746 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15746) : cljs.core.clj__GT_js.call(null, G__15746);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__15762 = x;
      if (G__15762) {
        var bit__4480__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3799__auto__ = bit__4480__auto__;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return G__15762.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__15762.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15762);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15762);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj15764 = {};
              return obj15764;
            }();
            var seq__15765_15775 = cljs.core.seq(x);
            var chunk__15766_15776 = null;
            var count__15767_15777 = 0;
            var i__15768_15778 = 0;
            while (true) {
              if (i__15768_15778 < count__15767_15777) {
                var vec__15769_15779 = chunk__15766_15776.cljs$core$IIndexed$_nth$arity$2(null, i__15768_15778);
                var k_15780 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15769_15779, 0, null);
                var v_15781 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15769_15779, 1, null);
                m[cljs.core.key__GT_js(k_15780)] = clj__GT_js(v_15781);
                var G__15782 = seq__15765_15775;
                var G__15783 = chunk__15766_15776;
                var G__15784 = count__15767_15777;
                var G__15785 = i__15768_15778 + 1;
                seq__15765_15775 = G__15782;
                chunk__15766_15776 = G__15783;
                count__15767_15777 = G__15784;
                i__15768_15778 = G__15785;
                continue;
              } else {
                var temp__4126__auto___15786 = cljs.core.seq(seq__15765_15775);
                if (temp__4126__auto___15786) {
                  var seq__15765_15787__$1 = temp__4126__auto___15786;
                  if (cljs.core.chunked_seq_QMARK_(seq__15765_15787__$1)) {
                    var c__4586__auto___15788 = cljs.core.chunk_first(seq__15765_15787__$1);
                    var G__15789 = cljs.core.chunk_rest(seq__15765_15787__$1);
                    var G__15790 = c__4586__auto___15788;
                    var G__15791 = cljs.core.count(c__4586__auto___15788);
                    var G__15792 = 0;
                    seq__15765_15775 = G__15789;
                    chunk__15766_15776 = G__15790;
                    count__15767_15777 = G__15791;
                    i__15768_15778 = G__15792;
                    continue;
                  } else {
                    var vec__15770_15793 = cljs.core.first(seq__15765_15787__$1);
                    var k_15794 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15770_15793, 0, null);
                    var v_15795 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15770_15793, 1, null);
                    m[cljs.core.key__GT_js(k_15794)] = clj__GT_js(v_15795);
                    var G__15796 = cljs.core.next(seq__15765_15787__$1);
                    var G__15797 = null;
                    var G__15798 = 0;
                    var G__15799 = 0;
                    seq__15765_15775 = G__15796;
                    chunk__15766_15776 = G__15797;
                    count__15767_15777 = G__15798;
                    i__15768_15778 = G__15799;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__15771_15800 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__15772_15801 = null;
              var count__15773_15802 = 0;
              var i__15774_15803 = 0;
              while (true) {
                if (i__15774_15803 < count__15773_15802) {
                  var x_15804__$1 = chunk__15772_15801.cljs$core$IIndexed$_nth$arity$2(null, i__15774_15803);
                  arr.push(x_15804__$1);
                  var G__15805 = seq__15771_15800;
                  var G__15806 = chunk__15772_15801;
                  var G__15807 = count__15773_15802;
                  var G__15808 = i__15774_15803 + 1;
                  seq__15771_15800 = G__15805;
                  chunk__15772_15801 = G__15806;
                  count__15773_15802 = G__15807;
                  i__15774_15803 = G__15808;
                  continue;
                } else {
                  var temp__4126__auto___15809 = cljs.core.seq(seq__15771_15800);
                  if (temp__4126__auto___15809) {
                    var seq__15771_15810__$1 = temp__4126__auto___15809;
                    if (cljs.core.chunked_seq_QMARK_(seq__15771_15810__$1)) {
                      var c__4586__auto___15811 = cljs.core.chunk_first(seq__15771_15810__$1);
                      var G__15812 = cljs.core.chunk_rest(seq__15771_15810__$1);
                      var G__15813 = c__4586__auto___15811;
                      var G__15814 = cljs.core.count(c__4586__auto___15811);
                      var G__15815 = 0;
                      seq__15771_15800 = G__15812;
                      chunk__15772_15801 = G__15813;
                      count__15773_15802 = G__15814;
                      i__15774_15803 = G__15815;
                      continue;
                    } else {
                      var x_15816__$1 = cljs.core.first(seq__15771_15810__$1);
                      arr.push(x_15816__$1);
                      var G__15817 = cljs.core.next(seq__15771_15810__$1);
                      var G__15818 = null;
                      var G__15819 = 0;
                      var G__15820 = 0;
                      seq__15771_15800 = G__15817;
                      chunk__15772_15801 = G__15818;
                      count__15773_15802 = G__15819;
                      i__15774_15803 = G__15820;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj15822 = {};
  return obj15822;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3787__auto__ = x;
    if (and__3787__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4443__auto__ = x == null ? null : x;
    return function() {
      var or__3799__auto__ = cljs.core._js__GT_clj[function() {
        var G__15826 = x__4443__auto__;
        return goog.typeOf(G__15826);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__15883__delegate = function(x, opts) {
      var map__15856 = opts;
      var map__15856__$1 = cljs.core.seq_QMARK_(map__15856) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15856) : map__15856;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15856__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__15856, map__15856__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__15872 = x__$1;
            if (G__15872) {
              var bit__4480__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3799__auto__ = bit__4480__auto__;
                if (cljs.core.truth_(or__3799__auto__)) {
                  return or__3799__auto__;
                } else {
                  return G__15872.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__15872.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__15872);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__15872);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4555__auto__ = function(map__15856, map__15856__$1, keywordize_keys, keyfn) {
                        return function iter__15873(s__15874) {
                          return new cljs.core.LazySeq(null, function(map__15856, map__15856__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__15874__$1 = s__15874;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__15874__$1);
                                if (temp__4126__auto__) {
                                  var s__15874__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__15874__$2)) {
                                    var c__4553__auto__ = cljs.core.chunk_first(s__15874__$2);
                                    var size__4554__auto__ = cljs.core.count(c__4553__auto__);
                                    var b__15876 = cljs.core.chunk_buffer(size__4554__auto__);
                                    if (function() {
                                      var i__15875 = 0;
                                      while (true) {
                                        if (i__15875 < size__4554__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4553__auto__, i__15875);
                                          cljs.core.chunk_append(b__15876, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__15881 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15881) : keyfn.call(null, G__15881);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__15884 = i__15875 + 1;
                                          i__15875 = G__15884;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__15876), iter__15873(cljs.core.chunk_rest(s__15874__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__15876), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__15874__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__15882 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15882) : keyfn.call(null, G__15882);
                                    }(), thisfn(x__$1[k])], null), iter__15873(cljs.core.rest(s__15874__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__15856, map__15856__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__15856, map__15856__$1, keywordize_keys, keyfn);
                      return iter__4555__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__15856, map__15856__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__15883 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__15885__i = 0, G__15885__a = new Array(arguments.length - 1);
        while (G__15885__i < G__15885__a.length) {
          G__15885__a[G__15885__i] = arguments[G__15885__i + 1];
          ++G__15885__i;
        }
        opts = new cljs.core.IndexedSeq(G__15885__a, 0);
      }
      return G__15883__delegate.call(this, x, opts);
    };
    G__15883.cljs$lang$maxFixedArity = 1;
    G__15883.cljs$lang$applyTo = function(arglist__15886) {
      var x = cljs.core.first(arglist__15886);
      var opts = cljs.core.rest(arglist__15886);
      return G__15883__delegate(x, opts);
    };
    G__15883.cljs$core$IFn$_invoke$arity$variadic = G__15883__delegate;
    return G__15883;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__15887 = null;
        if (arguments.length > 1) {
          var G__15888__i = 0, G__15888__a = new Array(arguments.length - 1);
          while (G__15888__i < G__15888__a.length) {
            G__15888__a[G__15888__i] = arguments[G__15888__i + 1];
            ++G__15888__i;
          }
          G__15887 = new cljs.core.IndexedSeq(G__15888__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15887);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__15891 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15891) : cljs.core.atom.call(null, G__15891);
  }();
  return function(mem) {
    return function() {
      var G__15893__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__15892 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15892) : cljs.core.deref.call(null, G__15892);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__15893 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__15894__i = 0, G__15894__a = new Array(arguments.length - 0);
          while (G__15894__i < G__15894__a.length) {
            G__15894__a[G__15894__i] = arguments[G__15894__i + 0];
            ++G__15894__i;
          }
          args = new cljs.core.IndexedSeq(G__15894__a, 0);
        }
        return G__15893__delegate.call(this, args);
      };
      G__15893.cljs$lang$maxFixedArity = 0;
      G__15893.cljs$lang$applyTo = function(arglist__15895) {
        var args = cljs.core.seq(arglist__15895);
        return G__15893__delegate(args);
      };
      G__15893.cljs$core$IFn$_invoke$arity$variadic = G__15893__delegate;
      return G__15893;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__15897 = ret;
        f = G__15897;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__15898__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__15898 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__15899__i = 0, G__15899__a = new Array(arguments.length - 1);
        while (G__15899__i < G__15899__a.length) {
          G__15899__a[G__15899__i] = arguments[G__15899__i + 1];
          ++G__15899__i;
        }
        args = new cljs.core.IndexedSeq(G__15899__a, 0);
      }
      return G__15898__delegate.call(this, f, args);
    };
    G__15898.cljs$lang$maxFixedArity = 1;
    G__15898.cljs$lang$applyTo = function(arglist__15900) {
      var f = cljs.core.first(arglist__15900);
      var args = cljs.core.rest(arglist__15900);
      return G__15898__delegate(f, args);
    };
    G__15898.cljs$core$IFn$_invoke$arity$variadic = G__15898__delegate;
    return G__15898;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__15901 = null;
        if (arguments.length > 1) {
          var G__15902__i = 0, G__15902__a = new Array(arguments.length - 1);
          while (G__15902__i < G__15902__a.length) {
            G__15902__a[G__15902__i] = arguments[G__15902__i + 1];
            ++G__15902__i;
          }
          G__15901 = new cljs.core.IndexedSeq(G__15902__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15901);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__15905 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__15905) : Math.floor.call(null, G__15905);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__15907 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15907) : f.call(null, G__15907);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__15909 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15909) : cljs.core.atom.call(null, G__15909);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__15910__i = 0, G__15910__a = new Array(arguments.length - 1);
      while (G__15910__i < G__15910__a.length) {
        G__15910__a[G__15910__i] = arguments[G__15910__i + 1];
        ++G__15910__i;
      }
      args = new cljs.core.IndexedSeq(G__15910__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__15911) {
    var f = cljs.core.first(arglist__15911);
    var args = cljs.core.rest(arglist__15911);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__15976 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15976) : cljs.core.deref.call(null, G__15976);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3799__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3799__auto__) {
      return or__3799__auto__;
    } else {
      var or__3799__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3799__auto____$1) {
        return or__3799__auto____$1;
      } else {
        var and__3787__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3787__auto__) {
          var and__3787__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3787__auto____$1) {
            var and__3787__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3787__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__16001 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__15999 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__15999) : child.call(null, G__15999);
                  }(), function() {
                    var G__16000 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16000) : parent.call(null, G__16000);
                  }());
                  var G__16002 = i + 1;
                  ret = G__16001;
                  i = G__16002;
                  continue;
                }
                break;
              }
            } else {
              return and__3787__auto____$2;
            }
          } else {
            return and__3787__auto____$1;
          }
        } else {
          return and__3787__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16006 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16006) : cljs.core.deref.call(null, G__16006);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16010 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16010) : cljs.core.deref.call(null, G__16010);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16014 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16014) : cljs.core.deref.call(null, G__16014);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__16023 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16023) : targets.call(null, G__16023);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__16024 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16024) : sources.call(null, G__16024);
        }()));
      };
    }(tp, td, ta);
    var or__3799__auto__ = cljs.core.contains_QMARK_(function() {
      var G__16028 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16028) : tp.call(null, G__16028);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__16029 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16029) : ta.call(null, G__16029);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__16030 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16030) : ta.call(null, G__16030);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__16037 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16037) : parentMap.call(null, G__16037);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16038 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16038) : parentMap.call(null, G__16038);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__16031_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__16031_SHARP_), cljs.core.interpose(cljs.core.first(p1__16031_SHARP_), cljs.core.second(p1__16031_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__16039 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16039) : parentMap.call(null, G__16039);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__16032_SHARP_, p2__16033_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__16032_SHARP_, p2__16033_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__16042 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16042) : cljs.core.deref.call(null, G__16042);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__16043 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16043) : cljs.core.deref.call(null, G__16043);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__16059 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16059) : cljs.core.deref.call(null, G__16059);
  }().call(null, x);
  var or__3799__auto__ = cljs.core.truth_(function() {
    var and__3787__auto__ = xprefs;
    if (cljs.core.truth_(and__3787__auto__)) {
      var G__16061 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16061) : xprefs.call(null, G__16061);
    } else {
      return and__3787__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var or__3799__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__16062 = cljs.core.rest(ps);
          ps = G__16062;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3799__auto____$1)) {
      return or__3799__auto____$1;
    } else {
      var or__3799__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__16063 = cljs.core.rest(ps);
            ps = G__16063;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3799__auto____$2)) {
        return or__3799__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3799__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__16077) {
    var vec__16078 = p__16077;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16078, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16078, 1, null);
    var e = vec__16078;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16079 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16079) : cljs.core.deref.call(null, G__16079);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3799__auto__ = be == null;
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__16080 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16080) : cljs.core.deref.call(null, G__16080);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16081 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16081) : cljs.core.deref.call(null, G__16081);
    }(), function() {
      var G__16082 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16082) : cljs.core.deref.call(null, G__16082);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj16084 = {};
  return obj16084;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3787__auto__ = mf;
    if (and__3787__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4443__auto__ = mf == null ? null : mf;
    return function() {
      var or__3799__auto__ = cljs.core._reset[function() {
        var G__16088 = x__4443__auto__;
        return goog.typeOf(G__16088);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._reset["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3787__auto__ = mf;
    if (and__3787__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4443__auto__ = mf == null ? null : mf;
    return function() {
      var or__3799__auto__ = cljs.core._add_method[function() {
        var G__16092 = x__4443__auto__;
        return goog.typeOf(G__16092);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._add_method["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3787__auto__ = mf;
    if (and__3787__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4443__auto__ = mf == null ? null : mf;
    return function() {
      var or__3799__auto__ = cljs.core._remove_method[function() {
        var G__16096 = x__4443__auto__;
        return goog.typeOf(G__16096);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._remove_method["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3787__auto__ = mf;
    if (and__3787__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4443__auto__ = mf == null ? null : mf;
    return function() {
      var or__3799__auto__ = cljs.core._prefer_method[function() {
        var G__16100 = x__4443__auto__;
        return goog.typeOf(G__16100);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3787__auto__ = mf;
    if (and__3787__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4443__auto__ = mf == null ? null : mf;
    return function() {
      var or__3799__auto__ = cljs.core._get_method[function() {
        var G__16104 = x__4443__auto__;
        return goog.typeOf(G__16104);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._get_method["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3787__auto__ = mf;
    if (and__3787__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4443__auto__ = mf == null ? null : mf;
    return function() {
      var or__3799__auto__ = cljs.core._methods[function() {
        var G__16108 = x__4443__auto__;
        return goog.typeOf(G__16108);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._methods["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3787__auto__ = mf;
    if (and__3787__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4443__auto__ = mf == null ? null : mf;
    return function() {
      var or__3799__auto__ = cljs.core._prefers[function() {
        var G__16112 = x__4443__auto__;
        return goog.typeOf(G__16112);
      }()];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core._prefers["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__16114 = this$__$1;
  return goog.getUid(G__16114);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16115 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16115) : cljs.core.deref.call(null, G__16115);
  }(), function() {
    var G__16116 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16116) : cljs.core.deref.call(null, G__16116);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__16117 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16117) : cljs.core.deref.call(null, G__16117);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__16118 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16118) : cljs.core.deref.call(null, G__16118);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16119 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16119) : cljs.core.deref.call(null, G__16119);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16120 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16120) : cljs.core.deref.call(null, G__16120);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__16961 = null;
  var G__16961__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__16961__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16121 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16121) : self__.dispatch_fn.call(null, G__16121);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16122 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16122) : target_fn.call(null, G__16122);
  };
  var G__16961__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16123 = a;
      var G__16124 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16123, G__16124) : self__.dispatch_fn.call(null, G__16123, G__16124);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16125 = a;
    var G__16126 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16125, G__16126) : target_fn.call(null, G__16125, G__16126);
  };
  var G__16961__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16127 = a;
      var G__16128 = b;
      var G__16129 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16127, G__16128, G__16129) : self__.dispatch_fn.call(null, G__16127, G__16128, G__16129);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16130 = a;
    var G__16131 = b;
    var G__16132 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16130, G__16131, G__16132) : target_fn.call(null, G__16130, G__16131, G__16132);
  };
  var G__16961__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16133 = a;
      var G__16134 = b;
      var G__16135 = c;
      var G__16136 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16133, G__16134, G__16135, G__16136) : self__.dispatch_fn.call(null, G__16133, G__16134, G__16135, G__16136);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16137 = a;
    var G__16138 = b;
    var G__16139 = c;
    var G__16140 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16137, G__16138, G__16139, G__16140) : target_fn.call(null, G__16137, G__16138, G__16139, G__16140);
  };
  var G__16961__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16141 = a;
      var G__16142 = b;
      var G__16143 = c;
      var G__16144 = d;
      var G__16145 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16141, G__16142, G__16143, G__16144, G__16145) : self__.dispatch_fn.call(null, G__16141, G__16142, G__16143, G__16144, G__16145);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16146 = a;
    var G__16147 = b;
    var G__16148 = c;
    var G__16149 = d;
    var G__16150 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16146, G__16147, G__16148, G__16149, G__16150) : target_fn.call(null, G__16146, G__16147, G__16148, G__16149, G__16150);
  };
  var G__16961__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16151 = a;
      var G__16152 = b;
      var G__16153 = c;
      var G__16154 = d;
      var G__16155 = e;
      var G__16156 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16151, G__16152, G__16153, G__16154, G__16155, G__16156) : self__.dispatch_fn.call(null, G__16151, G__16152, G__16153, G__16154, G__16155, G__16156);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16157 = a;
    var G__16158 = b;
    var G__16159 = c;
    var G__16160 = d;
    var G__16161 = e;
    var G__16162 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16157, G__16158, G__16159, G__16160, G__16161, G__16162) : target_fn.call(null, G__16157, G__16158, G__16159, G__16160, G__16161, G__16162);
  };
  var G__16961__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16163 = a;
      var G__16164 = b;
      var G__16165 = c;
      var G__16166 = d;
      var G__16167 = e;
      var G__16168 = f;
      var G__16169 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16163, G__16164, G__16165, G__16166, G__16167, G__16168, G__16169) : self__.dispatch_fn.call(null, G__16163, G__16164, G__16165, G__16166, G__16167, G__16168, G__16169);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16170 = a;
    var G__16171 = b;
    var G__16172 = c;
    var G__16173 = d;
    var G__16174 = e;
    var G__16175 = f;
    var G__16176 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16170, G__16171, G__16172, G__16173, G__16174, G__16175, G__16176) : target_fn.call(null, G__16170, G__16171, G__16172, G__16173, G__16174, G__16175, G__16176);
  };
  var G__16961__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16177 = a;
      var G__16178 = b;
      var G__16179 = c;
      var G__16180 = d;
      var G__16181 = e;
      var G__16182 = f;
      var G__16183 = g;
      var G__16184 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16177, G__16178, G__16179, G__16180, G__16181, G__16182, G__16183, G__16184) : self__.dispatch_fn.call(null, G__16177, G__16178, G__16179, G__16180, G__16181, G__16182, G__16183, G__16184);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16185 = a;
    var G__16186 = b;
    var G__16187 = c;
    var G__16188 = d;
    var G__16189 = e;
    var G__16190 = f;
    var G__16191 = g;
    var G__16192 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16185, G__16186, G__16187, G__16188, G__16189, G__16190, G__16191, G__16192) : target_fn.call(null, G__16185, G__16186, G__16187, G__16188, G__16189, G__16190, G__16191, G__16192);
  };
  var G__16961__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16193 = a;
      var G__16194 = b;
      var G__16195 = c;
      var G__16196 = d;
      var G__16197 = e;
      var G__16198 = f;
      var G__16199 = g;
      var G__16200 = h;
      var G__16201 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16193, G__16194, G__16195, G__16196, G__16197, G__16198, G__16199, G__16200, G__16201) : self__.dispatch_fn.call(null, G__16193, G__16194, G__16195, G__16196, G__16197, G__16198, G__16199, G__16200, G__16201);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16202 = a;
    var G__16203 = b;
    var G__16204 = c;
    var G__16205 = d;
    var G__16206 = e;
    var G__16207 = f;
    var G__16208 = g;
    var G__16209 = h;
    var G__16210 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16202, G__16203, G__16204, G__16205, G__16206, G__16207, G__16208, G__16209, G__16210) : target_fn.call(null, G__16202, G__16203, G__16204, G__16205, G__16206, G__16207, G__16208, G__16209, G__16210);
  };
  var G__16961__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16211 = a;
      var G__16212 = b;
      var G__16213 = c;
      var G__16214 = d;
      var G__16215 = e;
      var G__16216 = f;
      var G__16217 = g;
      var G__16218 = h;
      var G__16219 = i;
      var G__16220 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16211, G__16212, G__16213, G__16214, G__16215, G__16216, G__16217, G__16218, G__16219, G__16220) : self__.dispatch_fn.call(null, G__16211, G__16212, G__16213, G__16214, G__16215, G__16216, G__16217, G__16218, G__16219, G__16220);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16221 = a;
    var G__16222 = b;
    var G__16223 = c;
    var G__16224 = d;
    var G__16225 = e;
    var G__16226 = f;
    var G__16227 = g;
    var G__16228 = h;
    var G__16229 = i;
    var G__16230 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16221, G__16222, G__16223, G__16224, G__16225, G__16226, G__16227, G__16228, G__16229, G__16230) : target_fn.call(null, G__16221, G__16222, G__16223, G__16224, G__16225, G__16226, G__16227, G__16228, G__16229, G__16230);
  };
  var G__16961__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16231 = a;
      var G__16232 = b;
      var G__16233 = c;
      var G__16234 = d;
      var G__16235 = e;
      var G__16236 = f;
      var G__16237 = g;
      var G__16238 = h;
      var G__16239 = i;
      var G__16240 = j;
      var G__16241 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16231, G__16232, G__16233, G__16234, G__16235, G__16236, G__16237, G__16238, G__16239, G__16240, G__16241) : self__.dispatch_fn.call(null, G__16231, G__16232, G__16233, G__16234, G__16235, G__16236, G__16237, G__16238, G__16239, G__16240, G__16241);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16242 = a;
    var G__16243 = b;
    var G__16244 = c;
    var G__16245 = d;
    var G__16246 = e;
    var G__16247 = f;
    var G__16248 = g;
    var G__16249 = h;
    var G__16250 = i;
    var G__16251 = j;
    var G__16252 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16242, G__16243, G__16244, G__16245, G__16246, G__16247, G__16248, G__16249, G__16250, G__16251, G__16252) : target_fn.call(null, G__16242, G__16243, G__16244, G__16245, G__16246, G__16247, G__16248, G__16249, G__16250, G__16251, G__16252);
  };
  var G__16961__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16253 = a;
      var G__16254 = b;
      var G__16255 = c;
      var G__16256 = d;
      var G__16257 = e;
      var G__16258 = f;
      var G__16259 = g;
      var G__16260 = h;
      var G__16261 = i;
      var G__16262 = j;
      var G__16263 = k;
      var G__16264 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16253, G__16254, G__16255, G__16256, G__16257, G__16258, G__16259, G__16260, G__16261, G__16262, G__16263, G__16264) : self__.dispatch_fn.call(null, G__16253, G__16254, G__16255, G__16256, G__16257, G__16258, G__16259, G__16260, G__16261, G__16262, G__16263, G__16264);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16265 = a;
    var G__16266 = b;
    var G__16267 = c;
    var G__16268 = d;
    var G__16269 = e;
    var G__16270 = f;
    var G__16271 = g;
    var G__16272 = h;
    var G__16273 = i;
    var G__16274 = j;
    var G__16275 = k;
    var G__16276 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16265, G__16266, G__16267, G__16268, G__16269, G__16270, G__16271, G__16272, G__16273, G__16274, G__16275, G__16276) : target_fn.call(null, G__16265, G__16266, G__16267, G__16268, G__16269, G__16270, G__16271, G__16272, G__16273, G__16274, G__16275, G__16276);
  };
  var G__16961__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16277 = a;
      var G__16278 = b;
      var G__16279 = c;
      var G__16280 = d;
      var G__16281 = e;
      var G__16282 = f;
      var G__16283 = g;
      var G__16284 = h;
      var G__16285 = i;
      var G__16286 = j;
      var G__16287 = k;
      var G__16288 = l;
      var G__16289 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16277, G__16278, G__16279, G__16280, G__16281, G__16282, G__16283, G__16284, G__16285, G__16286, G__16287, G__16288, G__16289) : self__.dispatch_fn.call(null, G__16277, G__16278, G__16279, G__16280, G__16281, G__16282, G__16283, G__16284, G__16285, G__16286, G__16287, G__16288, G__16289);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16290 = a;
    var G__16291 = b;
    var G__16292 = c;
    var G__16293 = d;
    var G__16294 = e;
    var G__16295 = f;
    var G__16296 = g;
    var G__16297 = h;
    var G__16298 = i;
    var G__16299 = j;
    var G__16300 = k;
    var G__16301 = l;
    var G__16302 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16290, G__16291, G__16292, G__16293, G__16294, G__16295, G__16296, G__16297, G__16298, G__16299, G__16300, G__16301, G__16302) : target_fn.call(null, G__16290, G__16291, G__16292, G__16293, G__16294, G__16295, G__16296, G__16297, G__16298, G__16299, G__16300, G__16301, G__16302);
  };
  var G__16961__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16303 = a;
      var G__16304 = b;
      var G__16305 = c;
      var G__16306 = d;
      var G__16307 = e;
      var G__16308 = f;
      var G__16309 = g;
      var G__16310 = h;
      var G__16311 = i;
      var G__16312 = j;
      var G__16313 = k;
      var G__16314 = l;
      var G__16315 = m;
      var G__16316 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16303, G__16304, G__16305, G__16306, G__16307, G__16308, G__16309, G__16310, G__16311, G__16312, G__16313, G__16314, G__16315, G__16316) : self__.dispatch_fn.call(null, G__16303, G__16304, G__16305, G__16306, G__16307, G__16308, G__16309, G__16310, G__16311, G__16312, G__16313, G__16314, G__16315, G__16316);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16317 = a;
    var G__16318 = b;
    var G__16319 = c;
    var G__16320 = d;
    var G__16321 = e;
    var G__16322 = f;
    var G__16323 = g;
    var G__16324 = h;
    var G__16325 = i;
    var G__16326 = j;
    var G__16327 = k;
    var G__16328 = l;
    var G__16329 = m;
    var G__16330 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16317, G__16318, G__16319, G__16320, G__16321, G__16322, G__16323, G__16324, G__16325, G__16326, G__16327, G__16328, G__16329, G__16330) : target_fn.call(null, G__16317, G__16318, G__16319, G__16320, G__16321, G__16322, G__16323, G__16324, G__16325, G__16326, G__16327, G__16328, G__16329, G__16330);
  };
  var G__16961__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16331 = a;
      var G__16332 = b;
      var G__16333 = c;
      var G__16334 = d;
      var G__16335 = e;
      var G__16336 = f;
      var G__16337 = g;
      var G__16338 = h;
      var G__16339 = i;
      var G__16340 = j;
      var G__16341 = k;
      var G__16342 = l;
      var G__16343 = m;
      var G__16344 = n;
      var G__16345 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16331, G__16332, G__16333, G__16334, G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341, G__16342, G__16343, G__16344, G__16345) : self__.dispatch_fn.call(null, G__16331, G__16332, G__16333, G__16334, G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341, G__16342, G__16343, G__16344, G__16345);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16346 = a;
    var G__16347 = b;
    var G__16348 = c;
    var G__16349 = d;
    var G__16350 = e;
    var G__16351 = f;
    var G__16352 = g;
    var G__16353 = h;
    var G__16354 = i;
    var G__16355 = j;
    var G__16356 = k;
    var G__16357 = l;
    var G__16358 = m;
    var G__16359 = n;
    var G__16360 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16346, G__16347, G__16348, G__16349, G__16350, G__16351, G__16352, G__16353, G__16354, G__16355, G__16356, G__16357, G__16358, G__16359, G__16360) : target_fn.call(null, G__16346, G__16347, G__16348, G__16349, G__16350, G__16351, G__16352, G__16353, G__16354, G__16355, G__16356, G__16357, G__16358, G__16359, G__16360);
  };
  var G__16961__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16361 = a;
      var G__16362 = b;
      var G__16363 = c;
      var G__16364 = d;
      var G__16365 = e;
      var G__16366 = f;
      var G__16367 = g;
      var G__16368 = h;
      var G__16369 = i;
      var G__16370 = j;
      var G__16371 = k;
      var G__16372 = l;
      var G__16373 = m;
      var G__16374 = n;
      var G__16375 = o;
      var G__16376 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16361, G__16362, G__16363, G__16364, G__16365, G__16366, G__16367, G__16368, G__16369, G__16370, G__16371, G__16372, G__16373, G__16374, G__16375, G__16376) : self__.dispatch_fn.call(null, G__16361, G__16362, G__16363, G__16364, G__16365, G__16366, G__16367, G__16368, G__16369, G__16370, G__16371, G__16372, G__16373, G__16374, G__16375, G__16376);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16377 = a;
    var G__16378 = b;
    var G__16379 = c;
    var G__16380 = d;
    var G__16381 = e;
    var G__16382 = f;
    var G__16383 = g;
    var G__16384 = h;
    var G__16385 = i;
    var G__16386 = j;
    var G__16387 = k;
    var G__16388 = l;
    var G__16389 = m;
    var G__16390 = n;
    var G__16391 = o;
    var G__16392 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16377, G__16378, G__16379, G__16380, G__16381, G__16382, G__16383, G__16384, G__16385, G__16386, G__16387, G__16388, G__16389, G__16390, G__16391, G__16392) : target_fn.call(null, G__16377, G__16378, G__16379, G__16380, G__16381, G__16382, G__16383, G__16384, G__16385, G__16386, G__16387, G__16388, G__16389, G__16390, G__16391, G__16392);
  };
  var G__16961__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16393 = a;
      var G__16394 = b;
      var G__16395 = c;
      var G__16396 = d;
      var G__16397 = e;
      var G__16398 = f;
      var G__16399 = g;
      var G__16400 = h;
      var G__16401 = i;
      var G__16402 = j;
      var G__16403 = k;
      var G__16404 = l;
      var G__16405 = m;
      var G__16406 = n;
      var G__16407 = o;
      var G__16408 = p;
      var G__16409 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16393, G__16394, G__16395, G__16396, G__16397, G__16398, G__16399, G__16400, G__16401, G__16402, G__16403, G__16404, G__16405, G__16406, G__16407, G__16408, G__16409) : self__.dispatch_fn.call(null, G__16393, G__16394, G__16395, G__16396, G__16397, G__16398, G__16399, G__16400, G__16401, G__16402, G__16403, G__16404, G__16405, G__16406, G__16407, G__16408, G__16409);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16410 = a;
    var G__16411 = b;
    var G__16412 = c;
    var G__16413 = d;
    var G__16414 = e;
    var G__16415 = f;
    var G__16416 = g;
    var G__16417 = h;
    var G__16418 = i;
    var G__16419 = j;
    var G__16420 = k;
    var G__16421 = l;
    var G__16422 = m;
    var G__16423 = n;
    var G__16424 = o;
    var G__16425 = p;
    var G__16426 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16410, G__16411, G__16412, G__16413, G__16414, G__16415, G__16416, G__16417, G__16418, G__16419, G__16420, G__16421, G__16422, G__16423, G__16424, G__16425, G__16426) : target_fn.call(null, G__16410, G__16411, G__16412, G__16413, G__16414, G__16415, G__16416, G__16417, G__16418, G__16419, G__16420, G__16421, G__16422, G__16423, G__16424, G__16425, G__16426);
  };
  var G__16961__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16427 = a;
      var G__16428 = b;
      var G__16429 = c;
      var G__16430 = d;
      var G__16431 = e;
      var G__16432 = f;
      var G__16433 = g;
      var G__16434 = h;
      var G__16435 = i;
      var G__16436 = j;
      var G__16437 = k;
      var G__16438 = l;
      var G__16439 = m;
      var G__16440 = n;
      var G__16441 = o;
      var G__16442 = p;
      var G__16443 = q;
      var G__16444 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16427, G__16428, G__16429, G__16430, G__16431, G__16432, G__16433, G__16434, G__16435, G__16436, G__16437, G__16438, G__16439, G__16440, G__16441, G__16442, G__16443, G__16444) : self__.dispatch_fn.call(null, G__16427, G__16428, G__16429, G__16430, G__16431, G__16432, G__16433, G__16434, G__16435, G__16436, G__16437, G__16438, G__16439, G__16440, G__16441, G__16442, G__16443, G__16444);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16445 = a;
    var G__16446 = b;
    var G__16447 = c;
    var G__16448 = d;
    var G__16449 = e;
    var G__16450 = f;
    var G__16451 = g;
    var G__16452 = h;
    var G__16453 = i;
    var G__16454 = j;
    var G__16455 = k;
    var G__16456 = l;
    var G__16457 = m;
    var G__16458 = n;
    var G__16459 = o;
    var G__16460 = p;
    var G__16461 = q;
    var G__16462 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16445, G__16446, G__16447, G__16448, G__16449, G__16450, G__16451, G__16452, G__16453, G__16454, G__16455, G__16456, G__16457, G__16458, G__16459, G__16460, G__16461, G__16462) : target_fn.call(null, G__16445, G__16446, G__16447, G__16448, G__16449, G__16450, G__16451, G__16452, G__16453, G__16454, G__16455, G__16456, G__16457, G__16458, G__16459, G__16460, G__16461, G__16462);
  };
  var G__16961__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16463 = a;
      var G__16464 = b;
      var G__16465 = c;
      var G__16466 = d;
      var G__16467 = e;
      var G__16468 = f;
      var G__16469 = g;
      var G__16470 = h;
      var G__16471 = i;
      var G__16472 = j;
      var G__16473 = k;
      var G__16474 = l;
      var G__16475 = m;
      var G__16476 = n;
      var G__16477 = o;
      var G__16478 = p;
      var G__16479 = q;
      var G__16480 = r;
      var G__16481 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16463, G__16464, G__16465, G__16466, G__16467, G__16468, G__16469, G__16470, G__16471, G__16472, G__16473, G__16474, G__16475, G__16476, G__16477, G__16478, G__16479, G__16480, G__16481) : self__.dispatch_fn.call(null, G__16463, G__16464, G__16465, G__16466, G__16467, G__16468, G__16469, G__16470, G__16471, G__16472, G__16473, G__16474, G__16475, G__16476, G__16477, G__16478, G__16479, 
      G__16480, G__16481);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16482 = a;
    var G__16483 = b;
    var G__16484 = c;
    var G__16485 = d;
    var G__16486 = e;
    var G__16487 = f;
    var G__16488 = g;
    var G__16489 = h;
    var G__16490 = i;
    var G__16491 = j;
    var G__16492 = k;
    var G__16493 = l;
    var G__16494 = m;
    var G__16495 = n;
    var G__16496 = o;
    var G__16497 = p;
    var G__16498 = q;
    var G__16499 = r;
    var G__16500 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16482, G__16483, G__16484, G__16485, G__16486, G__16487, G__16488, G__16489, G__16490, G__16491, G__16492, G__16493, G__16494, G__16495, G__16496, G__16497, G__16498, G__16499, G__16500) : target_fn.call(null, G__16482, G__16483, G__16484, G__16485, G__16486, G__16487, G__16488, G__16489, G__16490, G__16491, G__16492, G__16493, G__16494, G__16495, G__16496, G__16497, G__16498, G__16499, G__16500);
  };
  var G__16961__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16501 = a;
      var G__16502 = b;
      var G__16503 = c;
      var G__16504 = d;
      var G__16505 = e;
      var G__16506 = f;
      var G__16507 = g;
      var G__16508 = h;
      var G__16509 = i;
      var G__16510 = j;
      var G__16511 = k;
      var G__16512 = l;
      var G__16513 = m;
      var G__16514 = n;
      var G__16515 = o;
      var G__16516 = p;
      var G__16517 = q;
      var G__16518 = r;
      var G__16519 = s;
      var G__16520 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16501, G__16502, G__16503, G__16504, G__16505, G__16506, G__16507, G__16508, G__16509, G__16510, G__16511, G__16512, G__16513, G__16514, G__16515, G__16516, G__16517, G__16518, G__16519, G__16520) : self__.dispatch_fn.call(null, G__16501, G__16502, G__16503, G__16504, G__16505, G__16506, G__16507, G__16508, G__16509, G__16510, G__16511, G__16512, G__16513, G__16514, G__16515, G__16516, 
      G__16517, G__16518, G__16519, G__16520);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16521 = a;
    var G__16522 = b;
    var G__16523 = c;
    var G__16524 = d;
    var G__16525 = e;
    var G__16526 = f;
    var G__16527 = g;
    var G__16528 = h;
    var G__16529 = i;
    var G__16530 = j;
    var G__16531 = k;
    var G__16532 = l;
    var G__16533 = m;
    var G__16534 = n;
    var G__16535 = o;
    var G__16536 = p;
    var G__16537 = q;
    var G__16538 = r;
    var G__16539 = s;
    var G__16540 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16521, G__16522, G__16523, G__16524, G__16525, G__16526, G__16527, G__16528, G__16529, G__16530, G__16531, G__16532, G__16533, G__16534, G__16535, G__16536, G__16537, G__16538, G__16539, G__16540) : target_fn.call(null, G__16521, G__16522, G__16523, G__16524, G__16525, G__16526, G__16527, G__16528, G__16529, G__16530, G__16531, G__16532, G__16533, G__16534, G__16535, G__16536, G__16537, G__16538, G__16539, 
    G__16540);
  };
  var G__16961__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__16961 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__16961__1.call(this, self__);
      case 2:
        return G__16961__2.call(this, self__, a);
      case 3:
        return G__16961__3.call(this, self__, a, b);
      case 4:
        return G__16961__4.call(this, self__, a, b, c);
      case 5:
        return G__16961__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16961__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16961__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16961__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16961__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16961__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16961__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16961__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16961__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16961__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16961__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16961__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16961__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16961__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16961__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16961__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16961__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16961__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16961.cljs$core$IFn$_invoke$arity$1 = G__16961__1;
  G__16961.cljs$core$IFn$_invoke$arity$2 = G__16961__2;
  G__16961.cljs$core$IFn$_invoke$arity$3 = G__16961__3;
  G__16961.cljs$core$IFn$_invoke$arity$4 = G__16961__4;
  G__16961.cljs$core$IFn$_invoke$arity$5 = G__16961__5;
  G__16961.cljs$core$IFn$_invoke$arity$6 = G__16961__6;
  G__16961.cljs$core$IFn$_invoke$arity$7 = G__16961__7;
  G__16961.cljs$core$IFn$_invoke$arity$8 = G__16961__8;
  G__16961.cljs$core$IFn$_invoke$arity$9 = G__16961__9;
  G__16961.cljs$core$IFn$_invoke$arity$10 = G__16961__10;
  G__16961.cljs$core$IFn$_invoke$arity$11 = G__16961__11;
  G__16961.cljs$core$IFn$_invoke$arity$12 = G__16961__12;
  G__16961.cljs$core$IFn$_invoke$arity$13 = G__16961__13;
  G__16961.cljs$core$IFn$_invoke$arity$14 = G__16961__14;
  G__16961.cljs$core$IFn$_invoke$arity$15 = G__16961__15;
  G__16961.cljs$core$IFn$_invoke$arity$16 = G__16961__16;
  G__16961.cljs$core$IFn$_invoke$arity$17 = G__16961__17;
  G__16961.cljs$core$IFn$_invoke$arity$18 = G__16961__18;
  G__16961.cljs$core$IFn$_invoke$arity$19 = G__16961__19;
  G__16961.cljs$core$IFn$_invoke$arity$20 = G__16961__20;
  G__16961.cljs$core$IFn$_invoke$arity$21 = G__16961__21;
  G__16961.cljs$core$IFn$_invoke$arity$22 = G__16961__22;
  return G__16961;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args16113) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16113)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16541 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16541) : self__.dispatch_fn.call(null, G__16541);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16542 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16542) : target_fn.call(null, G__16542);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16543 = a;
    var G__16544 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16543, G__16544) : self__.dispatch_fn.call(null, G__16543, G__16544);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16545 = a;
  var G__16546 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16545, G__16546) : target_fn.call(null, G__16545, G__16546);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16547 = a;
    var G__16548 = b;
    var G__16549 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16547, G__16548, G__16549) : self__.dispatch_fn.call(null, G__16547, G__16548, G__16549);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16550 = a;
  var G__16551 = b;
  var G__16552 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16550, G__16551, G__16552) : target_fn.call(null, G__16550, G__16551, G__16552);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16553 = a;
    var G__16554 = b;
    var G__16555 = c;
    var G__16556 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16553, G__16554, G__16555, G__16556) : self__.dispatch_fn.call(null, G__16553, G__16554, G__16555, G__16556);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16557 = a;
  var G__16558 = b;
  var G__16559 = c;
  var G__16560 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16557, G__16558, G__16559, G__16560) : target_fn.call(null, G__16557, G__16558, G__16559, G__16560);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16561 = a;
    var G__16562 = b;
    var G__16563 = c;
    var G__16564 = d;
    var G__16565 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16561, G__16562, G__16563, G__16564, G__16565) : self__.dispatch_fn.call(null, G__16561, G__16562, G__16563, G__16564, G__16565);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16566 = a;
  var G__16567 = b;
  var G__16568 = c;
  var G__16569 = d;
  var G__16570 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16566, G__16567, G__16568, G__16569, G__16570) : target_fn.call(null, G__16566, G__16567, G__16568, G__16569, G__16570);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16571 = a;
    var G__16572 = b;
    var G__16573 = c;
    var G__16574 = d;
    var G__16575 = e;
    var G__16576 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16571, G__16572, G__16573, G__16574, G__16575, G__16576) : self__.dispatch_fn.call(null, G__16571, G__16572, G__16573, G__16574, G__16575, G__16576);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16577 = a;
  var G__16578 = b;
  var G__16579 = c;
  var G__16580 = d;
  var G__16581 = e;
  var G__16582 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16577, G__16578, G__16579, G__16580, G__16581, G__16582) : target_fn.call(null, G__16577, G__16578, G__16579, G__16580, G__16581, G__16582);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16583 = a;
    var G__16584 = b;
    var G__16585 = c;
    var G__16586 = d;
    var G__16587 = e;
    var G__16588 = f;
    var G__16589 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16583, G__16584, G__16585, G__16586, G__16587, G__16588, G__16589) : self__.dispatch_fn.call(null, G__16583, G__16584, G__16585, G__16586, G__16587, G__16588, G__16589);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16590 = a;
  var G__16591 = b;
  var G__16592 = c;
  var G__16593 = d;
  var G__16594 = e;
  var G__16595 = f;
  var G__16596 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596) : target_fn.call(null, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16597 = a;
    var G__16598 = b;
    var G__16599 = c;
    var G__16600 = d;
    var G__16601 = e;
    var G__16602 = f;
    var G__16603 = g;
    var G__16604 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16597, G__16598, G__16599, G__16600, G__16601, G__16602, G__16603, G__16604) : self__.dispatch_fn.call(null, G__16597, G__16598, G__16599, G__16600, G__16601, G__16602, G__16603, G__16604);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16605 = a;
  var G__16606 = b;
  var G__16607 = c;
  var G__16608 = d;
  var G__16609 = e;
  var G__16610 = f;
  var G__16611 = g;
  var G__16612 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16605, G__16606, G__16607, G__16608, G__16609, G__16610, G__16611, G__16612) : target_fn.call(null, G__16605, G__16606, G__16607, G__16608, G__16609, G__16610, G__16611, G__16612);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16613 = a;
    var G__16614 = b;
    var G__16615 = c;
    var G__16616 = d;
    var G__16617 = e;
    var G__16618 = f;
    var G__16619 = g;
    var G__16620 = h;
    var G__16621 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620, G__16621) : self__.dispatch_fn.call(null, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620, G__16621);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16622 = a;
  var G__16623 = b;
  var G__16624 = c;
  var G__16625 = d;
  var G__16626 = e;
  var G__16627 = f;
  var G__16628 = g;
  var G__16629 = h;
  var G__16630 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16622, G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630) : target_fn.call(null, G__16622, G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16631 = a;
    var G__16632 = b;
    var G__16633 = c;
    var G__16634 = d;
    var G__16635 = e;
    var G__16636 = f;
    var G__16637 = g;
    var G__16638 = h;
    var G__16639 = i;
    var G__16640 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16631, G__16632, G__16633, G__16634, G__16635, G__16636, G__16637, G__16638, G__16639, G__16640) : self__.dispatch_fn.call(null, G__16631, G__16632, G__16633, G__16634, G__16635, G__16636, G__16637, G__16638, G__16639, G__16640);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16641 = a;
  var G__16642 = b;
  var G__16643 = c;
  var G__16644 = d;
  var G__16645 = e;
  var G__16646 = f;
  var G__16647 = g;
  var G__16648 = h;
  var G__16649 = i;
  var G__16650 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650) : target_fn.call(null, G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16651 = a;
    var G__16652 = b;
    var G__16653 = c;
    var G__16654 = d;
    var G__16655 = e;
    var G__16656 = f;
    var G__16657 = g;
    var G__16658 = h;
    var G__16659 = i;
    var G__16660 = j;
    var G__16661 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661) : self__.dispatch_fn.call(null, G__16651, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16662 = a;
  var G__16663 = b;
  var G__16664 = c;
  var G__16665 = d;
  var G__16666 = e;
  var G__16667 = f;
  var G__16668 = g;
  var G__16669 = h;
  var G__16670 = i;
  var G__16671 = j;
  var G__16672 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671, G__16672) : target_fn.call(null, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671, G__16672);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16673 = a;
    var G__16674 = b;
    var G__16675 = c;
    var G__16676 = d;
    var G__16677 = e;
    var G__16678 = f;
    var G__16679 = g;
    var G__16680 = h;
    var G__16681 = i;
    var G__16682 = j;
    var G__16683 = k;
    var G__16684 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684) : self__.dispatch_fn.call(null, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16685 = a;
  var G__16686 = b;
  var G__16687 = c;
  var G__16688 = d;
  var G__16689 = e;
  var G__16690 = f;
  var G__16691 = g;
  var G__16692 = h;
  var G__16693 = i;
  var G__16694 = j;
  var G__16695 = k;
  var G__16696 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696) : target_fn.call(null, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16697 = a;
    var G__16698 = b;
    var G__16699 = c;
    var G__16700 = d;
    var G__16701 = e;
    var G__16702 = f;
    var G__16703 = g;
    var G__16704 = h;
    var G__16705 = i;
    var G__16706 = j;
    var G__16707 = k;
    var G__16708 = l;
    var G__16709 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16697, G__16698, G__16699, G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709) : self__.dispatch_fn.call(null, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16710 = a;
  var G__16711 = b;
  var G__16712 = c;
  var G__16713 = d;
  var G__16714 = e;
  var G__16715 = f;
  var G__16716 = g;
  var G__16717 = h;
  var G__16718 = i;
  var G__16719 = j;
  var G__16720 = k;
  var G__16721 = l;
  var G__16722 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722) : target_fn.call(null, G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16723 = a;
    var G__16724 = b;
    var G__16725 = c;
    var G__16726 = d;
    var G__16727 = e;
    var G__16728 = f;
    var G__16729 = g;
    var G__16730 = h;
    var G__16731 = i;
    var G__16732 = j;
    var G__16733 = k;
    var G__16734 = l;
    var G__16735 = m;
    var G__16736 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16723, G__16724, G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736) : self__.dispatch_fn.call(null, G__16723, G__16724, G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16737 = a;
  var G__16738 = b;
  var G__16739 = c;
  var G__16740 = d;
  var G__16741 = e;
  var G__16742 = f;
  var G__16743 = g;
  var G__16744 = h;
  var G__16745 = i;
  var G__16746 = j;
  var G__16747 = k;
  var G__16748 = l;
  var G__16749 = m;
  var G__16750 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16737, G__16738, G__16739, G__16740, G__16741, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750) : target_fn.call(null, G__16737, G__16738, G__16739, G__16740, G__16741, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16751 = a;
    var G__16752 = b;
    var G__16753 = c;
    var G__16754 = d;
    var G__16755 = e;
    var G__16756 = f;
    var G__16757 = g;
    var G__16758 = h;
    var G__16759 = i;
    var G__16760 = j;
    var G__16761 = k;
    var G__16762 = l;
    var G__16763 = m;
    var G__16764 = n;
    var G__16765 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765) : self__.dispatch_fn.call(null, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16766 = a;
  var G__16767 = b;
  var G__16768 = c;
  var G__16769 = d;
  var G__16770 = e;
  var G__16771 = f;
  var G__16772 = g;
  var G__16773 = h;
  var G__16774 = i;
  var G__16775 = j;
  var G__16776 = k;
  var G__16777 = l;
  var G__16778 = m;
  var G__16779 = n;
  var G__16780 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774, G__16775, G__16776, G__16777, G__16778, G__16779, G__16780) : target_fn.call(null, G__16766, G__16767, G__16768, G__16769, G__16770, G__16771, G__16772, G__16773, G__16774, G__16775, G__16776, G__16777, G__16778, G__16779, G__16780);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16781 = a;
    var G__16782 = b;
    var G__16783 = c;
    var G__16784 = d;
    var G__16785 = e;
    var G__16786 = f;
    var G__16787 = g;
    var G__16788 = h;
    var G__16789 = i;
    var G__16790 = j;
    var G__16791 = k;
    var G__16792 = l;
    var G__16793 = m;
    var G__16794 = n;
    var G__16795 = o;
    var G__16796 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791, G__16792, G__16793, G__16794, G__16795, G__16796) : self__.dispatch_fn.call(null, G__16781, G__16782, G__16783, G__16784, G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791, G__16792, G__16793, G__16794, G__16795, G__16796);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16797 = a;
  var G__16798 = b;
  var G__16799 = c;
  var G__16800 = d;
  var G__16801 = e;
  var G__16802 = f;
  var G__16803 = g;
  var G__16804 = h;
  var G__16805 = i;
  var G__16806 = j;
  var G__16807 = k;
  var G__16808 = l;
  var G__16809 = m;
  var G__16810 = n;
  var G__16811 = o;
  var G__16812 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809, G__16810, G__16811, G__16812) : target_fn.call(null, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809, G__16810, G__16811, G__16812);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16813 = a;
    var G__16814 = b;
    var G__16815 = c;
    var G__16816 = d;
    var G__16817 = e;
    var G__16818 = f;
    var G__16819 = g;
    var G__16820 = h;
    var G__16821 = i;
    var G__16822 = j;
    var G__16823 = k;
    var G__16824 = l;
    var G__16825 = m;
    var G__16826 = n;
    var G__16827 = o;
    var G__16828 = p;
    var G__16829 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16813, G__16814, G__16815, G__16816, G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829) : self__.dispatch_fn.call(null, G__16813, G__16814, G__16815, G__16816, G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16830 = a;
  var G__16831 = b;
  var G__16832 = c;
  var G__16833 = d;
  var G__16834 = e;
  var G__16835 = f;
  var G__16836 = g;
  var G__16837 = h;
  var G__16838 = i;
  var G__16839 = j;
  var G__16840 = k;
  var G__16841 = l;
  var G__16842 = m;
  var G__16843 = n;
  var G__16844 = o;
  var G__16845 = p;
  var G__16846 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846) : target_fn.call(null, G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16847 = a;
    var G__16848 = b;
    var G__16849 = c;
    var G__16850 = d;
    var G__16851 = e;
    var G__16852 = f;
    var G__16853 = g;
    var G__16854 = h;
    var G__16855 = i;
    var G__16856 = j;
    var G__16857 = k;
    var G__16858 = l;
    var G__16859 = m;
    var G__16860 = n;
    var G__16861 = o;
    var G__16862 = p;
    var G__16863 = q;
    var G__16864 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16847, G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864) : self__.dispatch_fn.call(null, G__16847, G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16865 = a;
  var G__16866 = b;
  var G__16867 = c;
  var G__16868 = d;
  var G__16869 = e;
  var G__16870 = f;
  var G__16871 = g;
  var G__16872 = h;
  var G__16873 = i;
  var G__16874 = j;
  var G__16875 = k;
  var G__16876 = l;
  var G__16877 = m;
  var G__16878 = n;
  var G__16879 = o;
  var G__16880 = p;
  var G__16881 = q;
  var G__16882 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882) : target_fn.call(null, G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16883 = a;
    var G__16884 = b;
    var G__16885 = c;
    var G__16886 = d;
    var G__16887 = e;
    var G__16888 = f;
    var G__16889 = g;
    var G__16890 = h;
    var G__16891 = i;
    var G__16892 = j;
    var G__16893 = k;
    var G__16894 = l;
    var G__16895 = m;
    var G__16896 = n;
    var G__16897 = o;
    var G__16898 = p;
    var G__16899 = q;
    var G__16900 = r;
    var G__16901 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16883, G__16884, G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, G__16900, G__16901) : self__.dispatch_fn.call(null, G__16883, G__16884, G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, 
    G__16900, G__16901);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16902 = a;
  var G__16903 = b;
  var G__16904 = c;
  var G__16905 = d;
  var G__16906 = e;
  var G__16907 = f;
  var G__16908 = g;
  var G__16909 = h;
  var G__16910 = i;
  var G__16911 = j;
  var G__16912 = k;
  var G__16913 = l;
  var G__16914 = m;
  var G__16915 = n;
  var G__16916 = o;
  var G__16917 = p;
  var G__16918 = q;
  var G__16919 = r;
  var G__16920 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920) : target_fn.call(null, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16921 = a;
    var G__16922 = b;
    var G__16923 = c;
    var G__16924 = d;
    var G__16925 = e;
    var G__16926 = f;
    var G__16927 = g;
    var G__16928 = h;
    var G__16929 = i;
    var G__16930 = j;
    var G__16931 = k;
    var G__16932 = l;
    var G__16933 = m;
    var G__16934 = n;
    var G__16935 = o;
    var G__16936 = p;
    var G__16937 = q;
    var G__16938 = r;
    var G__16939 = s;
    var G__16940 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, G__16937, G__16938, G__16939, G__16940) : self__.dispatch_fn.call(null, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936, 
    G__16937, G__16938, G__16939, G__16940);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16941 = a;
  var G__16942 = b;
  var G__16943 = c;
  var G__16944 = d;
  var G__16945 = e;
  var G__16946 = f;
  var G__16947 = g;
  var G__16948 = h;
  var G__16949 = i;
  var G__16950 = j;
  var G__16951 = k;
  var G__16952 = l;
  var G__16953 = m;
  var G__16954 = n;
  var G__16955 = o;
  var G__16956 = p;
  var G__16957 = q;
  var G__16958 = r;
  var G__16959 = s;
  var G__16960 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960) : target_fn.call(null, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, 
  G__16960);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__16962 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__16962);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write(writer__4387__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__16967 = x;
      var G__16968 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16967, G__16968) : pred.call(null, G__16967, G__16968);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__16969 = y;
        var G__16970 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16969, G__16970) : pred.call(null, G__16969, G__16970);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
// Input 10
goog.provide("reagent.interop");
goog.require("cljs.core");
// Input 11
goog.provide("reagent.debug");
goog.require("cljs.core");
// Input 12
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__20270 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__20271 = cljs.core.next.call(null, coll__$1);
        sb = G__20270;
        coll__$1 = G__20271;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__20272 = sb;
        var G__20273 = coll__$2;
        sb = G__20272;
        coll__$1 = G__20273;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__20274 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__20274;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__20278 = cljs.core._EQ_;
    var expr__20279 = limit;
    if (cljs.core.truth_(pred__20278.call(null, 1, expr__20279))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__20278.call(null, 2, expr__20279))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__20281 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__20282 = limit__$1 - 1;
            var G__20283 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__20281;
            limit__$1 = G__20282;
            parts = G__20283;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__20284 = index - 1;
        index = G__20284;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___20285 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___20285)) {
        var replacement_20286 = temp__4124__auto___20285;
        buffer.append([cljs.core.str(replacement_20286)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__20287 = index + 1;
      index = G__20287;
      continue;
    }
    break;
  }
};
// Input 13
goog.provide("reagent.impl.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.interop");
goog.require("reagent.debug");
reagent.impl.util.is_client = typeof window !== "undefined" && !(window["document"] == null);
reagent.impl.util.extract_props = function extract_props(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  if (cljs.core.map_QMARK_.call(null, p)) {
    return p;
  } else {
    return null;
  }
};
reagent.impl.util.extract_children = function extract_children(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  var first_child = p == null || cljs.core.map_QMARK_.call(null, p) ? 2 : 1;
  if (cljs.core.count.call(null, v) > first_child) {
    return cljs.core.subvec.call(null, v, first_child);
  } else {
    return null;
  }
};
reagent.impl.util.get_argv = function get_argv(c) {
  return c["props"]["argv"];
};
reagent.impl.util.get_props = function get_props(c) {
  return reagent.impl.util.extract_props.call(null, c["props"]["argv"]);
};
reagent.impl.util.get_children = function get_children(c) {
  return reagent.impl.util.extract_children.call(null, c["props"]["argv"]);
};
reagent.impl.util.reagent_component_QMARK_ = function reagent_component_QMARK_(c) {
  return!(c["props"]["argv"] == null);
};
reagent.impl.util.cached_react_class = function cached_react_class(c) {
  return c["cljsReactClass"];
};
reagent.impl.util.cache_react_class = function cache_react_class(c, constructor) {
  return c["cljsReactClass"] = constructor;
};
reagent.impl.util.memoize_1 = function memoize_1(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function(arg) {
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), arg);
      if (!(v == null)) {
        return v;
      } else {
        var ret = f.call(null, arg);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, arg, ret);
        return ret;
      }
    };
  }(mem);
};
reagent.impl.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
reagent.impl.util.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("");
  }
};
reagent.impl.util.dash_to_camel = function dash_to_camel(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__10914 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__10914, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__10914, 1);
    if (cljs.core.truth_(reagent.impl.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, reagent.impl.util.capitalize, parts));
    }
  }
};
reagent.impl.util.partial_ifn = function(f, args, p) {
  this.f = f;
  this.args = args;
  this.p = p;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 6291457;
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f, self__.args], null));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._EQ_.call(null, self__.f, other.f) && cljs.core._EQ_.call(null, self__.args, other.args);
};
reagent.impl.util.partial_ifn.prototype.call = function() {
  var G__10916__delegate = function(self__, a) {
    var self____$1 = this;
    var _ = self____$1;
    var or__3799__auto___10917 = self__.p;
    if (cljs.core.truth_(or__3799__auto___10917)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__10916 = function(self__, var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 1) {
      var G__10918__i = 0, G__10918__a = new Array(arguments.length - 1);
      while (G__10918__i < G__10918__a.length) {
        G__10918__a[G__10918__i] = arguments[G__10918__i + 1];
        ++G__10918__i;
      }
      a = new cljs.core.IndexedSeq(G__10918__a, 0);
    }
    return G__10916__delegate.call(this, self__, a);
  };
  G__10916.cljs$lang$maxFixedArity = 1;
  G__10916.cljs$lang$applyTo = function(arglist__10919) {
    var self__ = cljs.core.first(arglist__10919);
    var a = cljs.core.rest(arglist__10919);
    return G__10916__delegate(self__, a);
  };
  G__10916.cljs$core$IFn$_invoke$arity$variadic = G__10916__delegate;
  return G__10916;
}();
reagent.impl.util.partial_ifn.prototype.apply = function(self__, args10915) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10915)));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
  var G__10920__delegate = function(a) {
    var _ = this;
    var or__3799__auto___10921 = self__.p;
    if (cljs.core.truth_(or__3799__auto___10921)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__10920 = function(var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 0) {
      var G__10922__i = 0, G__10922__a = new Array(arguments.length - 0);
      while (G__10922__i < G__10922__a.length) {
        G__10922__a[G__10922__i] = arguments[G__10922__i + 0];
        ++G__10922__i;
      }
      a = new cljs.core.IndexedSeq(G__10922__a, 0);
    }
    return G__10920__delegate.call(this, a);
  };
  G__10920.cljs$lang$maxFixedArity = 0;
  G__10920.cljs$lang$applyTo = function(arglist__10923) {
    var a = cljs.core.seq(arglist__10923);
    return G__10920__delegate(a);
  };
  G__10920.cljs$core$IFn$_invoke$arity$variadic = G__10920__delegate;
  return G__10920;
}();
reagent.impl.util.partial_ifn.cljs$lang$type = true;
reagent.impl.util.partial_ifn.cljs$lang$ctorStr = "reagent.impl.util/partial-ifn";
reagent.impl.util.partial_ifn.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "reagent.impl.util/partial-ifn");
};
reagent.impl.util.__GT_partial_ifn = function __GT_partial_ifn(f, args, p) {
  return new reagent.impl.util.partial_ifn(f, args, p);
};
reagent.impl.util.merge_class = function merge_class(p1, p2) {
  var class$ = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var c1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var c2 = temp__4126__auto____$1;
        return[cljs.core.str(c1), cljs.core.str(" "), cljs.core.str(c2)].join("");
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (class$ == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "class", "class", -2030961996), class$);
  }
};
reagent.impl.util.merge_style = function merge_style(p1, p2) {
  var style = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var s1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var s2 = temp__4126__auto____$1;
        return cljs.core.merge.call(null, s1, s2);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (style == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "style", "style", -496642736), style);
  }
};
reagent.impl.util.merge_props = function merge_props(p1, p2) {
  if (p1 == null) {
    return p2;
  } else {
    if (cljs.core.map_QMARK_.call(null, p1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "p1", "p1", 703771573, null))))].join(""));
    }
    return reagent.impl.util.merge_style.call(null, p1, reagent.impl.util.merge_class.call(null, p1, cljs.core.merge.call(null, p1, p2)));
  }
};
reagent.impl.util._STAR_always_update_STAR_ = false;
if (typeof reagent.impl.util.roots !== "undefined") {
} else {
  reagent.impl.util.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
reagent.impl.util.clear_container = function clear_container(node) {
  try {
    return React["unmountComponentAtNode"](node);
  } catch (e10925) {
    if (e10925 instanceof Object) {
      var e = e10925;
      if (typeof console !== "undefined") {
        console.warn([cljs.core.str("Warning: "), cljs.core.str("Error unmounting:")].join(""));
      } else {
      }
      if (typeof console !== "undefined") {
        return console.log(e);
      } else {
        return null;
      }
    } else {
      throw e10925;
    }
  }
};
reagent.impl.util.render_component = function render_component(comp, container, callback) {
  try {
    var _STAR_always_update_STAR_10930 = reagent.impl.util._STAR_always_update_STAR_;
    try {
      reagent.impl.util._STAR_always_update_STAR_ = true;
      return React["render"](comp.call(null), container, function(_STAR_always_update_STAR_10930) {
        return function() {
          var _STAR_always_update_STAR_10931 = reagent.impl.util._STAR_always_update_STAR_;
          try {
            reagent.impl.util._STAR_always_update_STAR_ = false;
            cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.assoc, container, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, container], null));
            if (cljs.core.some_QMARK_.call(null, callback)) {
              return callback.call(null);
            } else {
              return null;
            }
          } finally {
            reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_10931;
          }
        };
      }(_STAR_always_update_STAR_10930));
    } finally {
      reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_10930;
    }
  } catch (e10929) {
    if (e10929 instanceof Object) {
      var e = e10929;
      reagent.impl.util.clear_container.call(null, container);
      throw e;
    } else {
      throw e10929;
    }
  }
};
reagent.impl.util.re_render_component = function re_render_component(comp, container) {
  return reagent.impl.util.render_component.call(null, comp, container, null);
};
reagent.impl.util.unmount_component_at_node = function unmount_component_at_node(container) {
  cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.dissoc, container);
  return React["unmountComponentAtNode"](container);
};
reagent.impl.util.force_update_all = function force_update_all() {
  var seq__10936_10940 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, reagent.impl.util.roots)));
  var chunk__10937_10941 = null;
  var count__10938_10942 = 0;
  var i__10939_10943 = 0;
  while (true) {
    if (i__10939_10943 < count__10938_10942) {
      var v_10944 = cljs.core._nth.call(null, chunk__10937_10941, i__10939_10943);
      cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_10944);
      var G__10945 = seq__10936_10940;
      var G__10946 = chunk__10937_10941;
      var G__10947 = count__10938_10942;
      var G__10948 = i__10939_10943 + 1;
      seq__10936_10940 = G__10945;
      chunk__10937_10941 = G__10946;
      count__10938_10942 = G__10947;
      i__10939_10943 = G__10948;
      continue;
    } else {
      var temp__4126__auto___10949 = cljs.core.seq.call(null, seq__10936_10940);
      if (temp__4126__auto___10949) {
        var seq__10936_10950__$1 = temp__4126__auto___10949;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10936_10950__$1)) {
          var c__4586__auto___10951 = cljs.core.chunk_first.call(null, seq__10936_10950__$1);
          var G__10952 = cljs.core.chunk_rest.call(null, seq__10936_10950__$1);
          var G__10953 = c__4586__auto___10951;
          var G__10954 = cljs.core.count.call(null, c__4586__auto___10951);
          var G__10955 = 0;
          seq__10936_10940 = G__10952;
          chunk__10937_10941 = G__10953;
          count__10938_10942 = G__10954;
          i__10939_10943 = G__10955;
          continue;
        } else {
          var v_10956 = cljs.core.first.call(null, seq__10936_10950__$1);
          cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_10956);
          var G__10957 = cljs.core.next.call(null, seq__10936_10950__$1);
          var G__10958 = null;
          var G__10959 = 0;
          var G__10960 = 0;
          seq__10936_10940 = G__10957;
          chunk__10937_10941 = G__10958;
          count__10938_10942 = G__10959;
          i__10939_10943 = G__10960;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return "Updated";
};
// Input 14
goog.provide("reagent.ratom");
goog.require("cljs.core");
goog.require("reagent.impl.util");
if (typeof reagent.ratom.debug !== "undefined") {
} else {
  reagent.ratom.debug = false;
}
if (typeof reagent.ratom._running !== "undefined") {
} else {
  reagent.ratom._running = cljs.core.atom.call(null, 0);
}
reagent.ratom.running = function running() {
  return cljs.core.deref.call(null, reagent.ratom._running);
};
reagent.ratom.capture_derefed = function capture_derefed(f, obj) {
  obj.cljsCaptured = null;
  var _STAR_ratom_context_STAR_10796 = reagent.ratom._STAR_ratom_context_STAR_;
  try {
    reagent.ratom._STAR_ratom_context_STAR_ = obj;
    return f.call(null);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_10796;
  }
};
reagent.ratom.captured = function captured(obj) {
  var c = obj.cljsCaptured;
  obj.cljsCaptured = null;
  return c;
};
reagent.ratom.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  var obj = reagent.ratom._STAR_ratom_context_STAR_;
  if (obj == null) {
    return null;
  } else {
    var captured = obj.cljsCaptured;
    return obj.cljsCaptured = cljs.core.conj.call(null, captured == null ? cljs.core.PersistentHashSet.EMPTY : captured, derefable);
  }
};
reagent.ratom.IReactiveAtom = function() {
  var obj10798 = {};
  return obj10798;
}();
reagent.ratom.RAtom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.validator == null) {
  } else {
    if (cljs.core.truth_(self__.validator.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
    }
  }
  var old_value = self__.state;
  self__.state = new_value;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  }
  return new_value;
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  return self__.state;
};
reagent.ratom.RAtom.cljs$lang$type = true;
reagent.ratom.RAtom.cljs$lang$ctorStr = "reagent.ratom/RAtom";
reagent.ratom.RAtom.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "reagent.ratom/RAtom");
};
reagent.ratom.__GT_RAtom = function __GT_RAtom(state, meta, validator, watches) {
  return new reagent.ratom.RAtom(state, meta, validator, watches);
};
reagent.ratom.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new reagent.ratom.RAtom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__10802__delegate = function(x, p__10799) {
      var map__10801 = p__10799;
      var map__10801__$1 = cljs.core.seq_QMARK_.call(null, map__10801) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10801) : map__10801;
      var validator = cljs.core.get.call(null, map__10801__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__10801__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new reagent.ratom.RAtom(x, meta, validator, null);
    };
    var G__10802 = function(x, var_args) {
      var p__10799 = null;
      if (arguments.length > 1) {
        var G__10803__i = 0, G__10803__a = new Array(arguments.length - 1);
        while (G__10803__i < G__10803__a.length) {
          G__10803__a[G__10803__i] = arguments[G__10803__i + 1];
          ++G__10803__i;
        }
        p__10799 = new cljs.core.IndexedSeq(G__10803__a, 0);
      }
      return G__10802__delegate.call(this, x, p__10799);
    };
    G__10802.cljs$lang$maxFixedArity = 1;
    G__10802.cljs$lang$applyTo = function(arglist__10804) {
      var x = cljs.core.first(arglist__10804);
      var p__10799 = cljs.core.rest(arglist__10804);
      return G__10802__delegate(x, p__10799);
    };
    G__10802.cljs$core$IFn$_invoke$arity$variadic = G__10802__delegate;
    return G__10802;
  }();
  atom = function(x, var_args) {
    var p__10799 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__10805 = null;
        if (arguments.length > 1) {
          var G__10806__i = 0, G__10806__a = new Array(arguments.length - 1);
          while (G__10806__i < G__10806__a.length) {
            G__10806__a[G__10806__i] = arguments[G__10806__i + 1];
            ++G__10806__i;
          }
          G__10805 = new cljs.core.IndexedSeq(G__10806__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10805);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.ratom.RCursor = function(ratom, path, reaction) {
  this.ratom = ratom;
  this.path = path;
  this.reaction = reaction;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RCursor.prototype._reaction = function() {
  var self__ = this;
  var this$ = this;
  if (self__.reaction == null) {
    return self__.reaction = function() {
      var G__10813 = self__.ratom;
      if (G__10813) {
        var bit__4480__auto__ = G__10813.cljs$lang$protocol_mask$partition0$ & 32768;
        if (bit__4480__auto__ || G__10813.cljs$core$IDeref$) {
          return true;
        } else {
          if (!G__10813.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__10813);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__10813);
      }
    }() ? reagent.ratom.make_reaction.call(null, function(this$) {
      return function() {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
      };
    }(this$), new cljs.core.Keyword(null, "on-set", "on-set", -140953470), cljs.core._EQ_.call(null, self__.path, cljs.core.PersistentVector.EMPTY) ? function(this$) {
      return function(p1__10808_SHARP_, p2__10807_SHARP_) {
        return cljs.core.reset_BANG_.call(null, self__.ratom, p2__10807_SHARP_);
      };
    }(this$) : function(this$) {
      return function(p1__10810_SHARP_, p2__10809_SHARP_) {
        return cljs.core.swap_BANG_.call(null, self__.ratom, cljs.core.assoc_in, self__.path, p2__10809_SHARP_);
      };
    }(this$)) : reagent.ratom.make_reaction.call(null, function(this$) {
      return function() {
        return self__.ratom.call(null, self__.path);
      };
    }(this$), new cljs.core.Keyword(null, "on-set", "on-set", -140953470), function(this$) {
      return function(p1__10812_SHARP_, p2__10811_SHARP_) {
        return self__.ratom.call(null, self__.path, p2__10811_SHARP_);
      };
    }(this$));
  } else {
    return self__.reaction;
  }
};
reagent.ratom.RCursor.prototype._peek = function() {
  var self__ = this;
  var this$ = this;
  var _STAR_ratom_context_STAR_10814 = reagent.ratom._STAR_ratom_context_STAR_;
  try {
    reagent.ratom._STAR_ratom_context_STAR_ = null;
    return cljs.core._deref.call(null, this$._reaction());
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_10814;
  }
};
reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cCursor: "), cljs.core.str(self__.path), cljs.core.str(" ")].join(""));
  cljs.core.pr_writer.call(null, a__$1._peek(), writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom, self__.path], null));
};
reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return other instanceof reagent.ratom.RCursor && cljs.core._EQ_.call(null, self__.path, other.path) && cljs.core._EQ_.call(null, self__.ratom, other.ratom);
};
reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, new_value) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reset_BANG_.call(null, this$__$1._reaction(), new_value);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x, y);
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._swap_BANG_.call(null, a__$1._reaction(), f, x, y, more);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._notify_watches.call(null, this$__$1._reaction(), oldval, newval);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._add_watch.call(null, this$__$1._reaction(), key, f);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._remove_watch.call(null, this$__$1._reaction(), key);
};
reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._deref.call(null, this$__$1._reaction());
};
reagent.ratom.RCursor.cljs$lang$type = true;
reagent.ratom.RCursor.cljs$lang$ctorStr = "reagent.ratom/RCursor";
reagent.ratom.RCursor.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "reagent.ratom/RCursor");
};
reagent.ratom.__GT_RCursor = function __GT_RCursor(ratom, path, reaction) {
  return new reagent.ratom.RCursor(ratom, path, reaction);
};
reagent.ratom.cursor = function cursor(src, path) {
  if (function() {
    var G__10819 = path;
    if (G__10819) {
      var bit__4480__auto__ = G__10819.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4480__auto__ || G__10819.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__10819.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__10819);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__10819);
    }
  }()) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Calling cursor with an atom as the second arg is "), cljs.core.str("deprecated, in (cursor "), cljs.core.str(src), cljs.core.str(" "), cljs.core.str(cljs.core.pr_str.call(null, path)), cljs.core.str(")")].join(""));
    } else {
    }
    if (function() {
      var G__10820 = path;
      if (G__10820) {
        var bit__4480__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3799__auto__ = bit__4480__auto__;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return G__10820.reagent$ratom$IReactiveAtom$;
          }
        }())) {
          return true;
        } else {
          if (!G__10820.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__10820);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__10820);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("src must be a reactive atom, not "), cljs.core.str(cljs.core.pr_str.call(null, path))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IReactiveAtom", "IReactiveAtom", -991158427, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null))))].join(""));
    }
    return new reagent.ratom.RCursor(path, src, null);
  } else {
    if (function() {
      var or__3799__auto__ = function() {
        var G__10822 = src;
        if (G__10822) {
          var bit__4480__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3799__auto__ = bit__4480__auto__;
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return G__10822.reagent$ratom$IReactiveAtom$;
            }
          }())) {
            return true;
          } else {
            if (!G__10822.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__10822);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, reagent.ratom.IReactiveAtom, G__10822);
        }
      }();
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        return cljs.core.ifn_QMARK_.call(null, src) && !cljs.core.vector_QMARK_.call(null, src);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("src must be a reactive atom or a function, not "), cljs.core.str(cljs.core.pr_str.call(null, src))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IReactiveAtom", "IReactiveAtom", -991158427, null), 
      new cljs.core.Symbol(null, "src", "src", -10544524, null)), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "src", "src", -10544524, null)), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "src", "src", -10544524, null)))))))].join(""));
    }
    return new reagent.ratom.RCursor(src, path, null);
  }
};
reagent.ratom.IDisposable = function() {
  var obj10824 = {};
  return obj10824;
}();
reagent.ratom.dispose_BANG_ = function dispose_BANG_(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = reagent.ratom.dispose_BANG_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = reagent.ratom.dispose_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IRunnable = function() {
  var obj10826 = {};
  return obj10826;
}();
reagent.ratom.run = function run(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.reagent$ratom$IRunnable$run$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.reagent$ratom$IRunnable$run$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = reagent.ratom.run[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = reagent.ratom.run["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.run", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IComputedImpl = function() {
  var obj10828 = {};
  return obj10828;
}();
reagent.ratom._update_watching = function _update_watching(this$, derefed) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2(this$, derefed);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = reagent.ratom._update_watching[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = reagent.ratom._update_watching["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-update-watching", this$);
        }
      }
    }().call(null, this$, derefed);
  }
};
reagent.ratom._handle_change = function _handle_change(k, sender, oldval, newval) {
  if (function() {
    var and__3787__auto__ = k;
    if (and__3787__auto__) {
      return k.reagent$ratom$IComputedImpl$_handle_change$arity$4;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return k.reagent$ratom$IComputedImpl$_handle_change$arity$4(k, sender, oldval, newval);
  } else {
    var x__4443__auto__ = k == null ? null : k;
    return function() {
      var or__3799__auto__ = reagent.ratom._handle_change[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = reagent.ratom._handle_change["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-handle-change", k);
        }
      }
    }().call(null, k, sender, oldval, newval);
  }
};
reagent.ratom._peek_at = function _peek_at(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.reagent$ratom$IComputedImpl$_peek_at$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_peek_at$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = reagent.ratom._peek_at[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = reagent.ratom._peek_at["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-peek-at", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.Reaction = function(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  this.f = f;
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.active_QMARK_ = active_QMARK_;
  this.watching = watching;
  this.watches = watches;
  this.auto_run = auto_run;
  this.on_set = on_set;
  this.on_dispose = on_dispose;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_handle_change$arity$4 = function(this$, sender, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = self__.active_QMARK_;
    if (cljs.core.truth_(and__3787__auto__)) {
      return cljs.core.not.call(null, self__.dirty_QMARK_) && !(oldval === newval);
    } else {
      return and__3787__auto__;
    }
  }())) {
    self__.dirty_QMARK_ = true;
    return function() {
      var or__3799__auto__ = self__.auto_run;
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return reagent.ratom.run;
      }
    }().call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_update_watching$arity$2 = function(this$, derefed) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10829_10842 = cljs.core.seq.call(null, derefed);
  var chunk__10830_10843 = null;
  var count__10831_10844 = 0;
  var i__10832_10845 = 0;
  while (true) {
    if (i__10832_10845 < count__10831_10844) {
      var w_10846 = cljs.core._nth.call(null, chunk__10830_10843, i__10832_10845);
      if (cljs.core.contains_QMARK_.call(null, self__.watching, w_10846)) {
      } else {
        cljs.core.add_watch.call(null, w_10846, this$__$1, reagent.ratom._handle_change);
      }
      var G__10847 = seq__10829_10842;
      var G__10848 = chunk__10830_10843;
      var G__10849 = count__10831_10844;
      var G__10850 = i__10832_10845 + 1;
      seq__10829_10842 = G__10847;
      chunk__10830_10843 = G__10848;
      count__10831_10844 = G__10849;
      i__10832_10845 = G__10850;
      continue;
    } else {
      var temp__4126__auto___10851 = cljs.core.seq.call(null, seq__10829_10842);
      if (temp__4126__auto___10851) {
        var seq__10829_10852__$1 = temp__4126__auto___10851;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10829_10852__$1)) {
          var c__4586__auto___10853 = cljs.core.chunk_first.call(null, seq__10829_10852__$1);
          var G__10854 = cljs.core.chunk_rest.call(null, seq__10829_10852__$1);
          var G__10855 = c__4586__auto___10853;
          var G__10856 = cljs.core.count.call(null, c__4586__auto___10853);
          var G__10857 = 0;
          seq__10829_10842 = G__10854;
          chunk__10830_10843 = G__10855;
          count__10831_10844 = G__10856;
          i__10832_10845 = G__10857;
          continue;
        } else {
          var w_10858 = cljs.core.first.call(null, seq__10829_10852__$1);
          if (cljs.core.contains_QMARK_.call(null, self__.watching, w_10858)) {
          } else {
            cljs.core.add_watch.call(null, w_10858, this$__$1, reagent.ratom._handle_change);
          }
          var G__10859 = cljs.core.next.call(null, seq__10829_10852__$1);
          var G__10860 = null;
          var G__10861 = 0;
          var G__10862 = 0;
          seq__10829_10842 = G__10859;
          chunk__10830_10843 = G__10860;
          count__10831_10844 = G__10861;
          i__10832_10845 = G__10862;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__10833_10863 = cljs.core.seq.call(null, self__.watching);
  var chunk__10834_10864 = null;
  var count__10835_10865 = 0;
  var i__10836_10866 = 0;
  while (true) {
    if (i__10836_10866 < count__10835_10865) {
      var w_10867 = cljs.core._nth.call(null, chunk__10834_10864, i__10836_10866);
      if (cljs.core.contains_QMARK_.call(null, derefed, w_10867)) {
      } else {
        cljs.core.remove_watch.call(null, w_10867, this$__$1);
      }
      var G__10868 = seq__10833_10863;
      var G__10869 = chunk__10834_10864;
      var G__10870 = count__10835_10865;
      var G__10871 = i__10836_10866 + 1;
      seq__10833_10863 = G__10868;
      chunk__10834_10864 = G__10869;
      count__10835_10865 = G__10870;
      i__10836_10866 = G__10871;
      continue;
    } else {
      var temp__4126__auto___10872 = cljs.core.seq.call(null, seq__10833_10863);
      if (temp__4126__auto___10872) {
        var seq__10833_10873__$1 = temp__4126__auto___10872;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10833_10873__$1)) {
          var c__4586__auto___10874 = cljs.core.chunk_first.call(null, seq__10833_10873__$1);
          var G__10875 = cljs.core.chunk_rest.call(null, seq__10833_10873__$1);
          var G__10876 = c__4586__auto___10874;
          var G__10877 = cljs.core.count.call(null, c__4586__auto___10874);
          var G__10878 = 0;
          seq__10833_10863 = G__10875;
          chunk__10834_10864 = G__10876;
          count__10835_10865 = G__10877;
          i__10836_10866 = G__10878;
          continue;
        } else {
          var w_10879 = cljs.core.first.call(null, seq__10833_10873__$1);
          if (cljs.core.contains_QMARK_.call(null, derefed, w_10879)) {
          } else {
            cljs.core.remove_watch.call(null, w_10879, this$__$1);
          }
          var G__10880 = cljs.core.next.call(null, seq__10833_10873__$1);
          var G__10881 = null;
          var G__10882 = 0;
          var G__10883 = 0;
          seq__10833_10863 = G__10880;
          chunk__10834_10864 = G__10881;
          count__10835_10865 = G__10882;
          i__10836_10866 = G__10883;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return self__.watching = derefed;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_peek_at$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, self__.dirty_QMARK_)) {
    return self__.state;
  } else {
    var _STAR_ratom_context_STAR_10837 = reagent.ratom._STAR_ratom_context_STAR_;
    try {
      reagent.ratom._STAR_ratom_context_STAR_ = null;
      return cljs.core._deref.call(null, this$__$1);
    } finally {
      reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_10837;
    }
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = true;
reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cReaction "), cljs.core.str(cljs.core.hash.call(null, this$__$1)), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10838_10884 = cljs.core.seq.call(null, self__.watching);
  var chunk__10839_10885 = null;
  var count__10840_10886 = 0;
  var i__10841_10887 = 0;
  while (true) {
    if (i__10841_10887 < count__10840_10886) {
      var w_10888 = cljs.core._nth.call(null, chunk__10839_10885, i__10841_10887);
      cljs.core.remove_watch.call(null, w_10888, this$__$1);
      var G__10889 = seq__10838_10884;
      var G__10890 = chunk__10839_10885;
      var G__10891 = count__10840_10886;
      var G__10892 = i__10841_10887 + 1;
      seq__10838_10884 = G__10889;
      chunk__10839_10885 = G__10890;
      count__10840_10886 = G__10891;
      i__10841_10887 = G__10892;
      continue;
    } else {
      var temp__4126__auto___10893 = cljs.core.seq.call(null, seq__10838_10884);
      if (temp__4126__auto___10893) {
        var seq__10838_10894__$1 = temp__4126__auto___10893;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10838_10894__$1)) {
          var c__4586__auto___10895 = cljs.core.chunk_first.call(null, seq__10838_10894__$1);
          var G__10896 = cljs.core.chunk_rest.call(null, seq__10838_10894__$1);
          var G__10897 = c__4586__auto___10895;
          var G__10898 = cljs.core.count.call(null, c__4586__auto___10895);
          var G__10899 = 0;
          seq__10838_10884 = G__10896;
          chunk__10839_10885 = G__10897;
          count__10840_10886 = G__10898;
          i__10841_10887 = G__10899;
          continue;
        } else {
          var w_10900 = cljs.core.first.call(null, seq__10838_10894__$1);
          cljs.core.remove_watch.call(null, w_10900, this$__$1);
          var G__10901 = cljs.core.next.call(null, seq__10838_10894__$1);
          var G__10902 = null;
          var G__10903 = 0;
          var G__10904 = 0;
          seq__10838_10884 = G__10901;
          chunk__10839_10885 = G__10902;
          count__10840_10886 = G__10903;
          i__10841_10887 = G__10904;
          continue;
        }
      } else {
      }
    }
    break;
  }
  self__.watching = null;
  self__.state = null;
  self__.dirty_QMARK_ = true;
  if (cljs.core.truth_(self__.active_QMARK_)) {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.dec);
    } else {
    }
    self__.active_QMARK_ = false;
  } else {
  }
  if (cljs.core.truth_(self__.on_dispose)) {
    return self__.on_dispose.call(null);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, newval) {
  var self__ = this;
  var a__$1 = this;
  var oldval = self__.state;
  self__.state = newval;
  if (cljs.core.truth_(self__.on_set)) {
    self__.dirty_QMARK_ = true;
    self__.on_set.call(null, oldval, newval);
  } else {
  }
  cljs.core._notify_watches.call(null, a__$1, oldval, newval);
  return newval;
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f__$1) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1)));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f__$1, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1), x));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f__$1, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, reagent.ratom._peek_at.call(null, a__$1), x, y));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f__$1, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f__$1, reagent.ratom._peek_at.call(null, a__$1), x, y, more));
};
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var oldstate = self__.state;
  var res = reagent.ratom.capture_derefed.call(null, self__.f, this$__$1);
  var derefed = reagent.ratom.captured.call(null, this$__$1);
  if (cljs.core.not_EQ_.call(null, derefed, self__.watching)) {
    reagent.ratom._update_watching.call(null, this$__$1, derefed);
  } else {
  }
  if (cljs.core.truth_(self__.active_QMARK_)) {
  } else {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
    } else {
    }
    self__.active_QMARK_ = true;
  }
  self__.dirty_QMARK_ = false;
  self__.state = res;
  cljs.core._notify_watches.call(null, this$__$1, oldstate, self__.state);
  return res;
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f__$1) {
      f__$1.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, k, wf) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, k, wf);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  self__.watches = cljs.core.dissoc.call(null, self__.watches, k);
  if (cljs.core.empty_QMARK_.call(null, self__.watches) && cljs.core.not.call(null, self__.auto_run)) {
    return reagent.ratom.dispose_BANG_.call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3799__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return cljs.core.some_QMARK_.call(null, reagent.ratom._STAR_ratom_context_STAR_);
    }
  }())) {
    reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
    if (cljs.core.truth_(self__.dirty_QMARK_)) {
      return reagent.ratom.run.call(null, this$__$1);
    } else {
      return self__.state;
    }
  } else {
    if (cljs.core.truth_(self__.dirty_QMARK_)) {
      var oldstate_10905 = self__.state;
      self__.state = self__.f.call(null);
      if (oldstate_10905 === self__.state) {
      } else {
        cljs.core._notify_watches.call(null, this$__$1, oldstate_10905, self__.state);
      }
    } else {
    }
    return self__.state;
  }
};
reagent.ratom.Reaction.cljs$lang$type = true;
reagent.ratom.Reaction.cljs$lang$ctorStr = "reagent.ratom/Reaction";
reagent.ratom.Reaction.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "reagent.ratom/Reaction");
};
reagent.ratom.__GT_Reaction = function __GT_Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  return new reagent.ratom.Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose);
};
reagent.ratom.make_reaction = function() {
  var make_reaction__delegate = function(f, p__10906) {
    var map__10908 = p__10906;
    var map__10908__$1 = cljs.core.seq_QMARK_.call(null, map__10908) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10908) : map__10908;
    var derefed = cljs.core.get.call(null, map__10908__$1, new cljs.core.Keyword(null, "derefed", "derefed", 590684583));
    var on_dispose = cljs.core.get.call(null, map__10908__$1, new cljs.core.Keyword(null, "on-dispose", "on-dispose", 2105306360));
    var on_set = cljs.core.get.call(null, map__10908__$1, new cljs.core.Keyword(null, "on-set", "on-set", -140953470));
    var auto_run = cljs.core.get.call(null, map__10908__$1, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437));
    var runner = cljs.core._EQ_.call(null, auto_run, true) ? reagent.ratom.run : auto_run;
    var active = !(derefed == null);
    var dirty = !active;
    var reaction = new reagent.ratom.Reaction(f, null, dirty, active, null, null, runner, on_set, on_dispose);
    if (derefed == null) {
    } else {
      if (cljs.core.truth_(reagent.ratom.debug)) {
        cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
      } else {
      }
      reagent.ratom._update_watching.call(null, reaction, derefed);
    }
    return reaction;
  };
  var make_reaction = function(f, var_args) {
    var p__10906 = null;
    if (arguments.length > 1) {
      var G__10909__i = 0, G__10909__a = new Array(arguments.length - 1);
      while (G__10909__i < G__10909__a.length) {
        G__10909__a[G__10909__i] = arguments[G__10909__i + 1];
        ++G__10909__i;
      }
      p__10906 = new cljs.core.IndexedSeq(G__10909__a, 0);
    }
    return make_reaction__delegate.call(this, f, p__10906);
  };
  make_reaction.cljs$lang$maxFixedArity = 1;
  make_reaction.cljs$lang$applyTo = function(arglist__10910) {
    var f = cljs.core.first(arglist__10910);
    var p__10906 = cljs.core.rest(arglist__10910);
    return make_reaction__delegate(f, p__10906);
  };
  make_reaction.cljs$core$IFn$_invoke$arity$variadic = make_reaction__delegate;
  return make_reaction;
}();
reagent.ratom.Wrapper = function(state, callback, changed, watches) {
  this.state = state;
  this.callback = callback;
  this.changed = changed;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2149613568;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  cljs.core._write.call(null, writer, "#\x3cwrap: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof reagent.ratom.Wrapper && cljs.core.not.call(null, self__.changed) && cljs.core.not.call(null, other.changed) && cljs.core._EQ_.call(null, self__.state, other.state) && cljs.core._EQ_.call(null, self__.callback, other.callback);
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, newval) {
  var self__ = this;
  var this$__$1 = this;
  var oldval = self__.state;
  self__.changed = true;
  self__.state = newval;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, this$__$1, oldval, newval);
  }
  self__.callback.call(null, newval);
  return newval;
};
reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = self__.changed;
    if (cljs.core.truth_(and__3787__auto__)) {
      return cljs.core.some_QMARK_.call(null, reagent.ratom._STAR_ratom_context_STAR_);
    } else {
      return and__3787__auto__;
    }
  }())) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("derefing stale wrap: "), cljs.core.str(cljs.core.pr_str.call(null, this$__$1))].join(""));
    } else {
    }
  } else {
  }
  return self__.state;
};
reagent.ratom.Wrapper.cljs$lang$type = true;
reagent.ratom.Wrapper.cljs$lang$ctorStr = "reagent.ratom/Wrapper";
reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "reagent.ratom/Wrapper");
};
reagent.ratom.__GT_Wrapper = function __GT_Wrapper(state, callback, changed, watches) {
  return new reagent.ratom.Wrapper(state, callback, changed, watches);
};
reagent.ratom.make_wrapper = function make_wrapper(value, callback_fn, args) {
  return new reagent.ratom.Wrapper(value, new reagent.impl.util.partial_ifn(callback_fn, args, null), false, null);
};
// Input 15
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
goog.provide("cljsjs.react");
!function(e) {
  if ("object" == typeof exports && "undefined" != typeof module) {
    module.exports = e();
  } else {
    if ("function" == typeof define && define.amd) {
      define([], e);
    } else {
      var f;
      "undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), f.React = e();
    }
  }
}(function() {
  var define, module, exports;
  return function e(t, n, r) {
    function s(o, u) {
      if (!n[o]) {
        if (!t[o]) {
          var a = typeof require == "function" && require;
          if (!u && a) {
            return a(o, !0);
          }
          if (i) {
            return i(o, !0);
          }
          var f = new Error("Cannot find module '" + o + "'");
          throw f.code = "MODULE_NOT_FOUND", f;
        }
        var l = n[o] = {exports:{}};
        t[o][0].call(l.exports, function(e) {
          var n = t[o][1][e];
          return s(n ? n : e);
        }, l, l.exports, e, t, n, r);
      }
      return n[o].exports;
    }
    var i = typeof require == "function" && require;
    for (var o = 0;o < r.length;o++) {
      s(r[o]);
    }
    return s;
  }({1:[function(_dereq_, module, exports) {
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var EventPluginUtils = _dereq_("./EventPluginUtils");
    var ReactChildren = _dereq_("./ReactChildren");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactContext = _dereq_("./ReactContext");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactElement = _dereq_("./ReactElement");
    var ReactElementValidator = _dereq_("./ReactElementValidator");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactDOMComponent = _dereq_("./ReactDOMComponent");
    var ReactDefaultInjection = _dereq_("./ReactDefaultInjection");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactMount = _dereq_("./ReactMount");
    var ReactMultiChild = _dereq_("./ReactMultiChild");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactPropTypes = _dereq_("./ReactPropTypes");
    var ReactServerRendering = _dereq_("./ReactServerRendering");
    var ReactTextComponent = _dereq_("./ReactTextComponent");
    var assign = _dereq_("./Object.assign");
    var deprecated = _dereq_("./deprecated");
    var onlyChild = _dereq_("./onlyChild");
    ReactDefaultInjection.inject();
    var createElement = ReactElement.createElement;
    var createFactory = ReactElement.createFactory;
    if ("production" !== "development") {
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
    }
    createElement = ReactLegacyElement.wrapCreateElement(createElement);
    createFactory = ReactLegacyElement.wrapCreateFactory(createFactory);
    var render = ReactPerf.measure("React", "render", ReactMount.render);
    var React = {Children:{map:ReactChildren.map, forEach:ReactChildren.forEach, count:ReactChildren.count, only:onlyChild}, DOM:ReactDOM, PropTypes:ReactPropTypes, initializeTouchEvents:function(shouldUseTouch) {
      EventPluginUtils.useTouchEvents = shouldUseTouch;
    }, createClass:ReactCompositeComponent.createClass, createElement:createElement, createFactory:createFactory, constructAndRenderComponent:ReactMount.constructAndRenderComponent, constructAndRenderComponentByID:ReactMount.constructAndRenderComponentByID, render:render, renderToString:ReactServerRendering.renderToString, renderToStaticMarkup:ReactServerRendering.renderToStaticMarkup, unmountComponentAtNode:ReactMount.unmountComponentAtNode, isValidClass:ReactLegacyElement.isValidClass, isValidElement:ReactElement.isValidElement, 
    withContext:ReactContext.withContext, __spread:assign, renderComponent:deprecated("React", "renderComponent", "render", this, render), renderComponentToString:deprecated("React", "renderComponentToString", "renderToString", this, ReactServerRendering.renderToString), renderComponentToStaticMarkup:deprecated("React", "renderComponentToStaticMarkup", "renderToStaticMarkup", this, ReactServerRendering.renderToStaticMarkup), isValidComponent:deprecated("React", "isValidComponent", "isValidElement", 
    this, ReactElement.isValidElement)};
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === "function") {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({Component:ReactComponent, CurrentOwner:ReactCurrentOwner, DOMComponent:ReactDOMComponent, DOMPropertyOperations:DOMPropertyOperations, InstanceHandles:ReactInstanceHandles, Mount:ReactMount, MultiChild:ReactMultiChild, TextComponent:ReactTextComponent});
    }
    if ("production" !== "development") {
      var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
      if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
        if (navigator.userAgent.indexOf("Chrome") > -1) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
            console.debug("Download the React DevTools for a better development experience: " + "http://fb.me/react-devtools");
          }
        }
        var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim, Object.create, Object.freeze];
        for (var i = 0;i < expectedFeatures.length;i++) {
          if (!expectedFeatures[i]) {
            console.error("One or more ES5 shim/shams expected by React are not available: " + "http://fb.me/react-warning-polyfills");
            break;
          }
        }
      }
    }
    React.version = "0.12.2";
    module.exports = React;
  }, {"./DOMPropertyOperations":12, "./EventPluginUtils":20, "./ExecutionEnvironment":22, "./Object.assign":27, "./ReactChildren":31, "./ReactComponent":32, "./ReactCompositeComponent":34, "./ReactContext":35, "./ReactCurrentOwner":36, "./ReactDOM":37, "./ReactDOMComponent":39, "./ReactDefaultInjection":49, "./ReactElement":52, "./ReactElementValidator":53, "./ReactInstanceHandles":60, "./ReactLegacyElement":61, "./ReactMount":63, "./ReactMultiChild":64, "./ReactPerf":68, "./ReactPropTypes":72, "./ReactServerRendering":76, 
  "./ReactTextComponent":78, "./deprecated":106, "./onlyChild":137}], 2:[function(_dereq_, module, exports) {
    var focusNode = _dereq_("./focusNode");
    var AutoFocusMixin = {componentDidMount:function() {
      if (this.props.autoFocus) {
        focusNode(this.getDOMNode());
      }
    }};
    module.exports = AutoFocusMixin;
  }, {"./focusNode":111}], 3:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var SyntheticInputEvent = _dereq_("./SyntheticInputEvent");
    var keyOf = _dereq_("./keyOf");
    var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && "TextEvent" in window && !("documentMode" in document || isPresto());
    function isPresto() {
      var opera = window.opera;
      return typeof opera === "object" && typeof opera.version === "function" && parseInt(opera.version(), 10) <= 12;
    }
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {beforeInput:{phasedRegistrationNames:{bubbled:keyOf({onBeforeInput:null}), captured:keyOf({onBeforeInputCapture:null})}, dependencies:[topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]}};
    var fallbackChars = null;
    var hasSpaceKeypress = false;
    function isKeypressCommand(nativeEvent) {
      return(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    var BeforeInputEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var chars;
      if (canUseTextInputEvent) {
        switch(topLevelType) {
          case topLevelTypes.topKeyPress:
            var which = nativeEvent.which;
            if (which !== SPACEBAR_CODE) {
              return;
            }
            hasSpaceKeypress = true;
            chars = SPACEBAR_CHAR;
            break;
          case topLevelTypes.topTextInput:
            chars = nativeEvent.data;
            if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
              return;
            }
            break;
          default:
            return;
        }
      } else {
        switch(topLevelType) {
          case topLevelTypes.topPaste:
            fallbackChars = null;
            break;
          case topLevelTypes.topKeyPress:
            if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
              fallbackChars = String.fromCharCode(nativeEvent.which);
            }
            break;
          case topLevelTypes.topCompositionEnd:
            fallbackChars = nativeEvent.data;
            break;
        }
        if (fallbackChars === null) {
          return;
        }
        chars = fallbackChars;
      }
      if (!chars) {
        return;
      }
      var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent);
      event.data = chars;
      fallbackChars = null;
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }};
    module.exports = BeforeInputEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ExecutionEnvironment":22, "./SyntheticInputEvent":89, "./keyOf":133}], 4:[function(_dereq_, module, exports) {
    var isUnitlessNumber = {columnCount:true, flex:true, flexGrow:true, flexShrink:true, fontWeight:true, lineClamp:true, lineHeight:true, opacity:true, order:true, orphans:true, widows:true, zIndex:true, zoom:true, fillOpacity:true, strokeOpacity:true};
    function prefixKey(prefix, key) {
      return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    var prefixes = ["Webkit", "ms", "Moz", "O"];
    Object.keys(isUnitlessNumber).forEach(function(prop) {
      prefixes.forEach(function(prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    var shorthandPropertyExpansions = {background:{backgroundImage:true, backgroundPosition:true, backgroundRepeat:true, backgroundColor:true}, border:{borderWidth:true, borderStyle:true, borderColor:true}, borderBottom:{borderBottomWidth:true, borderBottomStyle:true, borderBottomColor:true}, borderLeft:{borderLeftWidth:true, borderLeftStyle:true, borderLeftColor:true}, borderRight:{borderRightWidth:true, borderRightStyle:true, borderRightColor:true}, borderTop:{borderTopWidth:true, borderTopStyle:true, 
    borderTopColor:true}, font:{fontStyle:true, fontVariant:true, fontWeight:true, fontSize:true, lineHeight:true, fontFamily:true}};
    var CSSProperty = {isUnitlessNumber:isUnitlessNumber, shorthandPropertyExpansions:shorthandPropertyExpansions};
    module.exports = CSSProperty;
  }, {}], 5:[function(_dereq_, module, exports) {
    var CSSProperty = _dereq_("./CSSProperty");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var camelizeStyleName = _dereq_("./camelizeStyleName");
    var dangerousStyleValue = _dereq_("./dangerousStyleValue");
    var hyphenateStyleName = _dereq_("./hyphenateStyleName");
    var memoizeStringOnly = _dereq_("./memoizeStringOnly");
    var warning = _dereq_("./warning");
    var processStyleName = memoizeStringOnly(function(styleName) {
      return hyphenateStyleName(styleName);
    });
    var styleFloatAccessor = "cssFloat";
    if (ExecutionEnvironment.canUseDOM) {
      if (document.documentElement.style.cssFloat === undefined) {
        styleFloatAccessor = "styleFloat";
      }
    }
    if ("production" !== "development") {
      var warnedStyleNames = {};
      var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        "production" !== "development" ? warning(false, "Unsupported style property " + name + ". Did you mean " + camelizeStyleName(name) + "?") : null;
      };
    }
    var CSSPropertyOperations = {createMarkupForStyles:function(styles) {
      var serialized = "";
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        if ("production" !== "development") {
          if (styleName.indexOf("-") > -1) {
            warnHyphenatedStyleName(styleName);
          }
        }
        var styleValue = styles[styleName];
        if (styleValue != null) {
          serialized += processStyleName(styleName) + ":";
          serialized += dangerousStyleValue(styleName, styleValue) + ";";
        }
      }
      return serialized || null;
    }, setValueForStyles:function(node, styles) {
      var style = node.style;
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        if ("production" !== "development") {
          if (styleName.indexOf("-") > -1) {
            warnHyphenatedStyleName(styleName);
          }
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName]);
        if (styleName === "float") {
          styleName = styleFloatAccessor;
        }
        if (styleValue) {
          style[styleName] = styleValue;
        } else {
          var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
          if (expansion) {
            for (var individualStyleName in expansion) {
              style[individualStyleName] = "";
            }
          } else {
            style[styleName] = "";
          }
        }
      }
    }};
    module.exports = CSSPropertyOperations;
  }, {"./CSSProperty":4, "./ExecutionEnvironment":22, "./camelizeStyleName":100, "./dangerousStyleValue":105, "./hyphenateStyleName":124, "./memoizeStringOnly":135, "./warning":145}], 6:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    function CallbackQueue() {
      this._callbacks = null;
      this._contexts = null;
    }
    assign(CallbackQueue.prototype, {enqueue:function(callback, context) {
      this._callbacks = this._callbacks || [];
      this._contexts = this._contexts || [];
      this._callbacks.push(callback);
      this._contexts.push(context);
    }, notifyAll:function() {
      var callbacks = this._callbacks;
      var contexts = this._contexts;
      if (callbacks) {
        "production" !== "development" ? invariant(callbacks.length === contexts.length, "Mismatched list of contexts in callback queue") : invariant(callbacks.length === contexts.length);
        this._callbacks = null;
        this._contexts = null;
        for (var i = 0, l = callbacks.length;i < l;i++) {
          callbacks[i].call(contexts[i]);
        }
        callbacks.length = 0;
        contexts.length = 0;
      }
    }, reset:function() {
      this._callbacks = null;
      this._contexts = null;
    }, destructor:function() {
      this.reset();
    }});
    PooledClass.addPoolingTo(CallbackQueue);
    module.exports = CallbackQueue;
  }, {"./Object.assign":27, "./PooledClass":28, "./invariant":126}], 7:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var EventPropagators = _dereq_("./EventPropagators");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var isEventSupported = _dereq_("./isEventSupported");
    var isTextInputElement = _dereq_("./isTextInputElement");
    var keyOf = _dereq_("./keyOf");
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {change:{phasedRegistrationNames:{bubbled:keyOf({onChange:null}), captured:keyOf({onChangeCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]}};
    var activeElement = null;
    var activeElementID = null;
    var activeElementValue = null;
    var activeElementValueProp = null;
    function shouldUseChangeEvent(elem) {
      return elem.nodeName === "SELECT" || elem.nodeName === "INPUT" && elem.type === "file";
    }
    var doesChangeEventBubble = false;
    if (ExecutionEnvironment.canUseDOM) {
      doesChangeEventBubble = isEventSupported("change") && (!("documentMode" in document) || document.documentMode > 8);
    }
    function manualDispatchChangeEvent(nativeEvent) {
      var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent);
      EventPropagators.accumulateTwoPhaseDispatches(event);
      ReactUpdates.batchedUpdates(runEventInBatch, event);
    }
    function runEventInBatch(event) {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue();
    }
    function startWatchingForChangeEventIE8(target, targetID) {
      activeElement = target;
      activeElementID = targetID;
      activeElement.attachEvent("onchange", manualDispatchChangeEvent);
    }
    function stopWatchingForChangeEventIE8() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent("onchange", manualDispatchChangeEvent);
      activeElement = null;
      activeElementID = null;
    }
    function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topChange) {
        return topLevelTargetID;
      }
    }
    function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForChangeEventIE8();
        startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
      } else {
        if (topLevelType === topLevelTypes.topBlur) {
          stopWatchingForChangeEventIE8();
        }
      }
    }
    var isInputEventSupported = false;
    if (ExecutionEnvironment.canUseDOM) {
      isInputEventSupported = isEventSupported("input") && (!("documentMode" in document) || document.documentMode > 9);
    }
    var newValueProp = {get:function() {
      return activeElementValueProp.get.call(this);
    }, set:function(val) {
      activeElementValue = "" + val;
      activeElementValueProp.set.call(this, val);
    }};
    function startWatchingForValueChange(target, targetID) {
      activeElement = target;
      activeElementID = targetID;
      activeElementValue = target.value;
      activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, "value");
      Object.defineProperty(activeElement, "value", newValueProp);
      activeElement.attachEvent("onpropertychange", handlePropertyChange);
    }
    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }
      delete activeElement.value;
      activeElement.detachEvent("onpropertychange", handlePropertyChange);
      activeElement = null;
      activeElementID = null;
      activeElementValue = null;
      activeElementValueProp = null;
    }
    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== "value") {
        return;
      }
      var value = nativeEvent.srcElement.value;
      if (value === activeElementValue) {
        return;
      }
      activeElementValue = value;
      manualDispatchChangeEvent(nativeEvent);
    }
    function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topInput) {
        return topLevelTargetID;
      }
    }
    function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForValueChange();
        startWatchingForValueChange(topLevelTarget, topLevelTargetID);
      } else {
        if (topLevelType === topLevelTypes.topBlur) {
          stopWatchingForValueChange();
        }
      }
    }
    function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
        if (activeElement && activeElement.value !== activeElementValue) {
          activeElementValue = activeElement.value;
          return activeElementID;
        }
      }
    }
    function shouldUseClickEvent(elem) {
      return elem.nodeName === "INPUT" && (elem.type === "checkbox" || elem.type === "radio");
    }
    function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topClick) {
        return topLevelTargetID;
      }
    }
    var ChangeEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var getTargetIDFunc, handleEventFunc;
      if (shouldUseChangeEvent(topLevelTarget)) {
        if (doesChangeEventBubble) {
          getTargetIDFunc = getTargetIDForChangeEvent;
        } else {
          handleEventFunc = handleEventsForChangeEventIE8;
        }
      } else {
        if (isTextInputElement(topLevelTarget)) {
          if (isInputEventSupported) {
            getTargetIDFunc = getTargetIDForInputEvent;
          } else {
            getTargetIDFunc = getTargetIDForInputEventIE;
            handleEventFunc = handleEventsForInputEventIE;
          }
        } else {
          if (shouldUseClickEvent(topLevelTarget)) {
            getTargetIDFunc = getTargetIDForClickEvent;
          }
        }
      }
      if (getTargetIDFunc) {
        var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
        if (targetID) {
          var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent);
          EventPropagators.accumulateTwoPhaseDispatches(event);
          return event;
        }
      }
      if (handleEventFunc) {
        handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
      }
    }};
    module.exports = ChangeEventPlugin;
  }, {"./EventConstants":16, "./EventPluginHub":18, "./EventPropagators":21, "./ExecutionEnvironment":22, "./ReactUpdates":79, "./SyntheticEvent":87, "./isEventSupported":127, "./isTextInputElement":129, "./keyOf":133}], 8:[function(_dereq_, module, exports) {
    var nextReactRootIndex = 0;
    var ClientReactRootIndex = {createReactRootIndex:function() {
      return nextReactRootIndex++;
    }};
    module.exports = ClientReactRootIndex;
  }, {}], 9:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var ReactInputSelection = _dereq_("./ReactInputSelection");
    var SyntheticCompositionEvent = _dereq_("./SyntheticCompositionEvent");
    var getTextContentAccessor = _dereq_("./getTextContentAccessor");
    var keyOf = _dereq_("./keyOf");
    var END_KEYCODES = [9, 13, 27, 32];
    var START_KEYCODE = 229;
    var useCompositionEvent = ExecutionEnvironment.canUseDOM && "CompositionEvent" in window;
    var useFallbackData = !useCompositionEvent || "documentMode" in document && document.documentMode > 8 && document.documentMode <= 11;
    var topLevelTypes = EventConstants.topLevelTypes;
    var currentComposition = null;
    var eventTypes = {compositionEnd:{phasedRegistrationNames:{bubbled:keyOf({onCompositionEnd:null}), captured:keyOf({onCompositionEndCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]}, compositionStart:{phasedRegistrationNames:{bubbled:keyOf({onCompositionStart:null}), captured:keyOf({onCompositionStartCapture:null})}, dependencies:[topLevelTypes.topBlur, 
    topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]}, compositionUpdate:{phasedRegistrationNames:{bubbled:keyOf({onCompositionUpdate:null}), captured:keyOf({onCompositionUpdateCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]}};
    function getCompositionEventType(topLevelType) {
      switch(topLevelType) {
        case topLevelTypes.topCompositionStart:
          return eventTypes.compositionStart;
        case topLevelTypes.topCompositionEnd:
          return eventTypes.compositionEnd;
        case topLevelTypes.topCompositionUpdate:
          return eventTypes.compositionUpdate;
      }
    }
    function isFallbackStart(topLevelType, nativeEvent) {
      return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
    }
    function isFallbackEnd(topLevelType, nativeEvent) {
      switch(topLevelType) {
        case topLevelTypes.topKeyUp:
          return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
        case topLevelTypes.topKeyDown:
          return nativeEvent.keyCode !== START_KEYCODE;
        case topLevelTypes.topKeyPress:
        ;
        case topLevelTypes.topMouseDown:
        ;
        case topLevelTypes.topBlur:
          return true;
        default:
          return false;
      }
    }
    function FallbackCompositionState(root) {
      this.root = root;
      this.startSelection = ReactInputSelection.getSelection(root);
      this.startValue = this.getText();
    }
    FallbackCompositionState.prototype.getText = function() {
      return this.root.value || this.root[getTextContentAccessor()];
    };
    FallbackCompositionState.prototype.getData = function() {
      var endValue = this.getText();
      var prefixLength = this.startSelection.start;
      var suffixLength = this.startValue.length - this.startSelection.end;
      return endValue.substr(prefixLength, endValue.length - suffixLength - prefixLength);
    };
    var CompositionEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var eventType;
      var data;
      if (useCompositionEvent) {
        eventType = getCompositionEventType(topLevelType);
      } else {
        if (!currentComposition) {
          if (isFallbackStart(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionStart;
          }
        } else {
          if (isFallbackEnd(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionEnd;
          }
        }
      }
      if (useFallbackData) {
        if (!currentComposition && eventType === eventTypes.compositionStart) {
          currentComposition = new FallbackCompositionState(topLevelTarget);
        } else {
          if (eventType === eventTypes.compositionEnd) {
            if (currentComposition) {
              data = currentComposition.getData();
              currentComposition = null;
            }
          }
        }
      }
      if (eventType) {
        var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent);
        if (data) {
          event.data = data;
        }
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }};
    module.exports = CompositionEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ExecutionEnvironment":22, "./ReactInputSelection":59, "./SyntheticCompositionEvent":85, "./getTextContentAccessor":121, "./keyOf":133}], 10:[function(_dereq_, module, exports) {
    var Danger = _dereq_("./Danger");
    var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");
    var getTextContentAccessor = _dereq_("./getTextContentAccessor");
    var invariant = _dereq_("./invariant");
    var textContentAccessor = getTextContentAccessor();
    function insertChildAt(parentNode, childNode, index) {
      parentNode.insertBefore(childNode, parentNode.childNodes[index] || null);
    }
    var updateTextContent;
    if (textContentAccessor === "textContent") {
      updateTextContent = function(node, text) {
        node.textContent = text;
      };
    } else {
      updateTextContent = function(node, text) {
        while (node.firstChild) {
          node.removeChild(node.firstChild);
        }
        if (text) {
          var doc = node.ownerDocument || document;
          node.appendChild(doc.createTextNode(text));
        }
      };
    }
    var DOMChildrenOperations = {dangerouslyReplaceNodeWithMarkup:Danger.dangerouslyReplaceNodeWithMarkup, updateTextContent:updateTextContent, processUpdates:function(updates, markupList) {
      var update;
      var initialChildren = null;
      var updatedChildren = null;
      for (var i = 0;update = updates[i];i++) {
        if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
          var updatedIndex = update.fromIndex;
          var updatedChild = update.parentNode.childNodes[updatedIndex];
          var parentID = update.parentID;
          "production" !== "development" ? invariant(updatedChild, "processUpdates(): Unable to find child %s of element. This " + "probably means the DOM was unexpectedly mutated (e.g., by the " + "browser), usually due to forgetting a \x3ctbody\x3e when using tables, " + "nesting tags like \x3cform\x3e, \x3cp\x3e, or \x3ca\x3e, or using non-SVG elements " + "in an \x3csvg\x3e parent. Try inspecting the child nodes of the element " + "with React ID `%s`.", updatedIndex, parentID) : invariant(updatedChild);
          initialChildren = initialChildren || {};
          initialChildren[parentID] = initialChildren[parentID] || [];
          initialChildren[parentID][updatedIndex] = updatedChild;
          updatedChildren = updatedChildren || [];
          updatedChildren.push(updatedChild);
        }
      }
      var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
      if (updatedChildren) {
        for (var j = 0;j < updatedChildren.length;j++) {
          updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
        }
      }
      for (var k = 0;update = updates[k];k++) {
        switch(update.type) {
          case ReactMultiChildUpdateTypes.INSERT_MARKUP:
            insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
            break;
          case ReactMultiChildUpdateTypes.MOVE_EXISTING:
            insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
            break;
          case ReactMultiChildUpdateTypes.TEXT_CONTENT:
            updateTextContent(update.parentNode, update.textContent);
            break;
          case ReactMultiChildUpdateTypes.REMOVE_NODE:
            break;
        }
      }
    }};
    module.exports = DOMChildrenOperations;
  }, {"./Danger":13, "./ReactMultiChildUpdateTypes":65, "./getTextContentAccessor":121, "./invariant":126}], 11:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function checkMask(value, bitmask) {
      return(value & bitmask) === bitmask;
    }
    var DOMPropertyInjection = {MUST_USE_ATTRIBUTE:1, MUST_USE_PROPERTY:2, HAS_SIDE_EFFECTS:4, HAS_BOOLEAN_VALUE:8, HAS_NUMERIC_VALUE:16, HAS_POSITIVE_NUMERIC_VALUE:32 | 16, HAS_OVERLOADED_BOOLEAN_VALUE:64, injectDOMPropertyConfig:function(domPropertyConfig) {
      var Properties = domPropertyConfig.Properties || {};
      var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
      var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
      var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
      if (domPropertyConfig.isCustomAttribute) {
        DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
      }
      for (var propName in Properties) {
        "production" !== "development" ? invariant(!DOMProperty.isStandardName.hasOwnProperty(propName), "injectDOMPropertyConfig(...): You're trying to inject DOM property " + "'%s' which has already been injected. You may be accidentally " + "injecting the same DOM property config twice, or you may be " + "injecting two configs that have conflicting property names.", propName) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName));
        DOMProperty.isStandardName[propName] = true;
        var lowerCased = propName.toLowerCase();
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
        if (DOMAttributeNames.hasOwnProperty(propName)) {
          var attributeName = DOMAttributeNames[propName];
          DOMProperty.getPossibleStandardName[attributeName] = propName;
          DOMProperty.getAttributeName[propName] = attributeName;
        } else {
          DOMProperty.getAttributeName[propName] = lowerCased;
        }
        DOMProperty.getPropertyName[propName] = DOMPropertyNames.hasOwnProperty(propName) ? DOMPropertyNames[propName] : propName;
        if (DOMMutationMethods.hasOwnProperty(propName)) {
          DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
        } else {
          DOMProperty.getMutationMethod[propName] = null;
        }
        var propConfig = Properties[propName];
        DOMProperty.mustUseAttribute[propName] = checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
        DOMProperty.mustUseProperty[propName] = checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
        DOMProperty.hasSideEffects[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
        DOMProperty.hasBooleanValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
        DOMProperty.hasNumericValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
        DOMProperty.hasPositiveNumericValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
        DOMProperty.hasOverloadedBooleanValue[propName] = checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);
        "production" !== "development" ? invariant(!DOMProperty.mustUseAttribute[propName] || !DOMProperty.mustUseProperty[propName], "DOMProperty: Cannot require using both attribute and property: %s", propName) : invariant(!DOMProperty.mustUseAttribute[propName] || !DOMProperty.mustUseProperty[propName]);
        "production" !== "development" ? invariant(DOMProperty.mustUseProperty[propName] || !DOMProperty.hasSideEffects[propName], "DOMProperty: Properties that have side effects must use property: %s", propName) : invariant(DOMProperty.mustUseProperty[propName] || !DOMProperty.hasSideEffects[propName]);
        "production" !== "development" ? invariant(!!DOMProperty.hasBooleanValue[propName] + !!DOMProperty.hasNumericValue[propName] + !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1, "DOMProperty: Value can be one of boolean, overloaded boolean, or " + "numeric value, but not a combination: %s", propName) : invariant(!!DOMProperty.hasBooleanValue[propName] + !!DOMProperty.hasNumericValue[propName] + !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1);
      }
    }};
    var defaultValueCache = {};
    var DOMProperty = {ID_ATTRIBUTE_NAME:"data-reactid", isStandardName:{}, getPossibleStandardName:{}, getAttributeName:{}, getPropertyName:{}, getMutationMethod:{}, mustUseAttribute:{}, mustUseProperty:{}, hasSideEffects:{}, hasBooleanValue:{}, hasNumericValue:{}, hasPositiveNumericValue:{}, hasOverloadedBooleanValue:{}, _isCustomAttributeFunctions:[], isCustomAttribute:function(attributeName) {
      for (var i = 0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
        var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
        if (isCustomAttributeFn(attributeName)) {
          return true;
        }
      }
      return false;
    }, getDefaultValueForProperty:function(nodeName, prop) {
      var nodeDefaults = defaultValueCache[nodeName];
      var testElement;
      if (!nodeDefaults) {
        defaultValueCache[nodeName] = nodeDefaults = {};
      }
      if (!(prop in nodeDefaults)) {
        testElement = document.createElement(nodeName);
        nodeDefaults[prop] = testElement[prop];
      }
      return nodeDefaults[prop];
    }, injection:DOMPropertyInjection};
    module.exports = DOMProperty;
  }, {"./invariant":126}], 12:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
    var memoizeStringOnly = _dereq_("./memoizeStringOnly");
    var warning = _dereq_("./warning");
    function shouldIgnoreValue(name, value) {
      return value == null || DOMProperty.hasBooleanValue[name] && !value || DOMProperty.hasNumericValue[name] && isNaN(value) || DOMProperty.hasPositiveNumericValue[name] && value < 1 || DOMProperty.hasOverloadedBooleanValue[name] && value === false;
    }
    var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
      return escapeTextForBrowser(name) + '\x3d"';
    });
    if ("production" !== "development") {
      var reactProps = {children:true, dangerouslySetInnerHTML:true, key:true, ref:true};
      var warnedProperties = {};
      var warnUnknownProperty = function(name) {
        if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
          return;
        }
        warnedProperties[name] = true;
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        "production" !== "development" ? warning(standardName == null, "Unknown DOM property " + name + ". Did you mean " + standardName + "?") : null;
      };
    }
    var DOMPropertyOperations = {createMarkupForID:function(id) {
      return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) + escapeTextForBrowser(id) + '"';
    }, createMarkupForProperty:function(name, value) {
      if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {
        if (shouldIgnoreValue(name, value)) {
          return "";
        }
        var attributeName = DOMProperty.getAttributeName[name];
        if (DOMProperty.hasBooleanValue[name] || DOMProperty.hasOverloadedBooleanValue[name] && value === true) {
          return escapeTextForBrowser(attributeName);
        }
        return processAttributeNameAndPrefix(attributeName) + escapeTextForBrowser(value) + '"';
      } else {
        if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            return "";
          }
          return processAttributeNameAndPrefix(name) + escapeTextForBrowser(value) + '"';
        } else {
          if ("production" !== "development") {
            warnUnknownProperty(name);
          }
        }
      }
      return null;
    }, setValueForProperty:function(node, name, value) {
      if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {
        var mutationMethod = DOMProperty.getMutationMethod[name];
        if (mutationMethod) {
          mutationMethod(node, value);
        } else {
          if (shouldIgnoreValue(name, value)) {
            this.deleteValueForProperty(node, name);
          } else {
            if (DOMProperty.mustUseAttribute[name]) {
              node.setAttribute(DOMProperty.getAttributeName[name], "" + value);
            } else {
              var propName = DOMProperty.getPropertyName[name];
              if (!DOMProperty.hasSideEffects[name] || "" + node[propName] !== "" + value) {
                node[propName] = value;
              }
            }
          }
        }
      } else {
        if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            node.removeAttribute(name);
          } else {
            node.setAttribute(name, "" + value);
          }
        } else {
          if ("production" !== "development") {
            warnUnknownProperty(name);
          }
        }
      }
    }, deleteValueForProperty:function(node, name) {
      if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {
        var mutationMethod = DOMProperty.getMutationMethod[name];
        if (mutationMethod) {
          mutationMethod(node, undefined);
        } else {
          if (DOMProperty.mustUseAttribute[name]) {
            node.removeAttribute(DOMProperty.getAttributeName[name]);
          } else {
            var propName = DOMProperty.getPropertyName[name];
            var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
            if (!DOMProperty.hasSideEffects[name] || "" + node[propName] !== defaultValue) {
              node[propName] = defaultValue;
            }
          }
        }
      } else {
        if (DOMProperty.isCustomAttribute(name)) {
          node.removeAttribute(name);
        } else {
          if ("production" !== "development") {
            warnUnknownProperty(name);
          }
        }
      }
    }};
    module.exports = DOMPropertyOperations;
  }, {"./DOMProperty":11, "./escapeTextForBrowser":109, "./memoizeStringOnly":135, "./warning":145}], 13:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var createNodesFromMarkup = _dereq_("./createNodesFromMarkup");
    var emptyFunction = _dereq_("./emptyFunction");
    var getMarkupWrap = _dereq_("./getMarkupWrap");
    var invariant = _dereq_("./invariant");
    var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
    var RESULT_INDEX_ATTR = "data-danger-index";
    function getNodeName(markup) {
      return markup.substring(1, markup.indexOf(" "));
    }
    var Danger = {dangerouslyRenderMarkup:function(markupList) {
      "production" !== "development" ? invariant(ExecutionEnvironment.canUseDOM, "dangerouslyRenderMarkup(...): Cannot render markup in a worker " + "thread. Make sure `window` and `document` are available globally " + "before requiring React when unit testing or use " + "React.renderToString for server rendering.") : invariant(ExecutionEnvironment.canUseDOM);
      var nodeName;
      var markupByNodeName = {};
      for (var i = 0;i < markupList.length;i++) {
        "production" !== "development" ? invariant(markupList[i], "dangerouslyRenderMarkup(...): Missing markup.") : invariant(markupList[i]);
        nodeName = getNodeName(markupList[i]);
        nodeName = getMarkupWrap(nodeName) ? nodeName : "*";
        markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
        markupByNodeName[nodeName][i] = markupList[i];
      }
      var resultList = [];
      var resultListAssignmentCount = 0;
      for (nodeName in markupByNodeName) {
        if (!markupByNodeName.hasOwnProperty(nodeName)) {
          continue;
        }
        var markupListByNodeName = markupByNodeName[nodeName];
        for (var resultIndex in markupListByNodeName) {
          if (markupListByNodeName.hasOwnProperty(resultIndex)) {
            var markup = markupListByNodeName[resultIndex];
            markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP, "$1 " + RESULT_INDEX_ATTR + '\x3d"' + resultIndex + '" ');
          }
        }
        var renderNodes = createNodesFromMarkup(markupListByNodeName.join(""), emptyFunction);
        for (i = 0;i < renderNodes.length;++i) {
          var renderNode = renderNodes[i];
          if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
            resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
            renderNode.removeAttribute(RESULT_INDEX_ATTR);
            "production" !== "development" ? invariant(!resultList.hasOwnProperty(resultIndex), "Danger: Assigning to an already-occupied result index.") : invariant(!resultList.hasOwnProperty(resultIndex));
            resultList[resultIndex] = renderNode;
            resultListAssignmentCount += 1;
          } else {
            if ("production" !== "development") {
              console.error("Danger: Discarding unexpected node:", renderNode);
            }
          }
        }
      }
      "production" !== "development" ? invariant(resultListAssignmentCount === resultList.length, "Danger: Did not assign to every index of resultList.") : invariant(resultListAssignmentCount === resultList.length);
      "production" !== "development" ? invariant(resultList.length === markupList.length, "Danger: Expected markup to render %s nodes, but rendered %s.", markupList.length, resultList.length) : invariant(resultList.length === markupList.length);
      return resultList;
    }, dangerouslyReplaceNodeWithMarkup:function(oldChild, markup) {
      "production" !== "development" ? invariant(ExecutionEnvironment.canUseDOM, "dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a " + "worker thread. Make sure `window` and `document` are available " + "globally before requiring React when unit testing or use " + "React.renderToString for server rendering.") : invariant(ExecutionEnvironment.canUseDOM);
      "production" !== "development" ? invariant(markup, "dangerouslyReplaceNodeWithMarkup(...): Missing markup.") : invariant(markup);
      "production" !== "development" ? invariant(oldChild.tagName.toLowerCase() !== "html", "dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the " + "\x3chtml\x3e node. This is because browser quirks make this unreliable " + "and/or slow. If you want to render to the root you must use " + "server rendering. See renderComponentToString().") : invariant(oldChild.tagName.toLowerCase() !== "html");
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    }};
    module.exports = Danger;
  }, {"./ExecutionEnvironment":22, "./createNodesFromMarkup":104, "./emptyFunction":107, "./getMarkupWrap":118, "./invariant":126}], 14:[function(_dereq_, module, exports) {
    var keyOf = _dereq_("./keyOf");
    var DefaultEventPluginOrder = [keyOf({ResponderEventPlugin:null}), keyOf({SimpleEventPlugin:null}), keyOf({TapEventPlugin:null}), keyOf({EnterLeaveEventPlugin:null}), keyOf({ChangeEventPlugin:null}), keyOf({SelectEventPlugin:null}), keyOf({CompositionEventPlugin:null}), keyOf({BeforeInputEventPlugin:null}), keyOf({AnalyticsEventPlugin:null}), keyOf({MobileSafariClickEventPlugin:null})];
    module.exports = DefaultEventPluginOrder;
  }, {"./keyOf":133}], 15:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var ReactMount = _dereq_("./ReactMount");
    var keyOf = _dereq_("./keyOf");
    var topLevelTypes = EventConstants.topLevelTypes;
    var getFirstReactDOM = ReactMount.getFirstReactDOM;
    var eventTypes = {mouseEnter:{registrationName:keyOf({onMouseEnter:null}), dependencies:[topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]}, mouseLeave:{registrationName:keyOf({onMouseLeave:null}), dependencies:[topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]}};
    var extractedEvents = [null, null];
    var EnterLeaveEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
        return null;
      }
      var win;
      if (topLevelTarget.window === topLevelTarget) {
        win = topLevelTarget;
      } else {
        var doc = topLevelTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }
      var from, to;
      if (topLevelType === topLevelTypes.topMouseOut) {
        from = topLevelTarget;
        to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) || win;
      } else {
        from = win;
        to = topLevelTarget;
      }
      if (from === to) {
        return null;
      }
      var fromID = from ? ReactMount.getID(from) : "";
      var toID = to ? ReactMount.getID(to) : "";
      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent);
      leave.type = "mouseleave";
      leave.target = from;
      leave.relatedTarget = to;
      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent);
      enter.type = "mouseenter";
      enter.target = to;
      enter.relatedTarget = from;
      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
      extractedEvents[0] = leave;
      extractedEvents[1] = enter;
      return extractedEvents;
    }};
    module.exports = EnterLeaveEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ReactMount":63, "./SyntheticMouseEvent":91, "./keyOf":133}], 16:[function(_dereq_, module, exports) {
    var keyMirror = _dereq_("./keyMirror");
    var PropagationPhases = keyMirror({bubbled:null, captured:null});
    var topLevelTypes = keyMirror({topBlur:null, topChange:null, topClick:null, topCompositionEnd:null, topCompositionStart:null, topCompositionUpdate:null, topContextMenu:null, topCopy:null, topCut:null, topDoubleClick:null, topDrag:null, topDragEnd:null, topDragEnter:null, topDragExit:null, topDragLeave:null, topDragOver:null, topDragStart:null, topDrop:null, topError:null, topFocus:null, topInput:null, topKeyDown:null, topKeyPress:null, topKeyUp:null, topLoad:null, topMouseDown:null, topMouseMove:null, 
    topMouseOut:null, topMouseOver:null, topMouseUp:null, topPaste:null, topReset:null, topScroll:null, topSelectionChange:null, topSubmit:null, topTextInput:null, topTouchCancel:null, topTouchEnd:null, topTouchMove:null, topTouchStart:null, topWheel:null});
    var EventConstants = {topLevelTypes:topLevelTypes, PropagationPhases:PropagationPhases};
    module.exports = EventConstants;
  }, {"./keyMirror":132}], 17:[function(_dereq_, module, exports) {
    var emptyFunction = _dereq_("./emptyFunction");
    var EventListener = {listen:function(target, eventType, callback) {
      if (target.addEventListener) {
        target.addEventListener(eventType, callback, false);
        return{remove:function() {
          target.removeEventListener(eventType, callback, false);
        }};
      } else {
        if (target.attachEvent) {
          target.attachEvent("on" + eventType, callback);
          return{remove:function() {
            target.detachEvent("on" + eventType, callback);
          }};
        }
      }
    }, capture:function(target, eventType, callback) {
      if (!target.addEventListener) {
        if ("production" !== "development") {
          console.error("Attempted to listen to events during the capture phase on a " + "browser that does not support the capture phase. Your application " + "will not receive some events.");
        }
        return{remove:emptyFunction};
      } else {
        target.addEventListener(eventType, callback, true);
        return{remove:function() {
          target.removeEventListener(eventType, callback, true);
        }};
      }
    }, registerDefault:function() {
    }};
    module.exports = EventListener;
  }, {"./emptyFunction":107}], 18:[function(_dereq_, module, exports) {
    var EventPluginRegistry = _dereq_("./EventPluginRegistry");
    var EventPluginUtils = _dereq_("./EventPluginUtils");
    var accumulateInto = _dereq_("./accumulateInto");
    var forEachAccumulated = _dereq_("./forEachAccumulated");
    var invariant = _dereq_("./invariant");
    var listenerBank = {};
    var eventQueue = null;
    var executeDispatchesAndRelease = function(event) {
      if (event) {
        var executeDispatch = EventPluginUtils.executeDispatch;
        var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
        if (PluginModule && PluginModule.executeDispatch) {
          executeDispatch = PluginModule.executeDispatch;
        }
        EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);
        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };
    var InstanceHandle = null;
    function validateInstanceHandle() {
      var invalid = !InstanceHandle || !InstanceHandle.traverseTwoPhase || !InstanceHandle.traverseEnterLeave;
      if (invalid) {
        throw new Error("InstanceHandle not injected before use!");
      }
    }
    var EventPluginHub = {injection:{injectMount:EventPluginUtils.injection.injectMount, injectInstanceHandle:function(InjectedInstanceHandle) {
      InstanceHandle = InjectedInstanceHandle;
      if ("production" !== "development") {
        validateInstanceHandle();
      }
    }, getInstanceHandle:function() {
      if ("production" !== "development") {
        validateInstanceHandle();
      }
      return InstanceHandle;
    }, injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder, injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName}, eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs, registrationNameModules:EventPluginRegistry.registrationNameModules, putListener:function(id, registrationName, listener) {
      "production" !== "development" ? invariant(!listener || typeof listener === "function", "Expected %s listener to be a function, instead got type %s", registrationName, typeof listener) : invariant(!listener || typeof listener === "function");
      var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
      bankForRegistrationName[id] = listener;
    }, getListener:function(id, registrationName) {
      var bankForRegistrationName = listenerBank[registrationName];
      return bankForRegistrationName && bankForRegistrationName[id];
    }, deleteListener:function(id, registrationName) {
      var bankForRegistrationName = listenerBank[registrationName];
      if (bankForRegistrationName) {
        delete bankForRegistrationName[id];
      }
    }, deleteAllListeners:function(id) {
      for (var registrationName in listenerBank) {
        delete listenerBank[registrationName][id];
      }
    }, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var events;
      var plugins = EventPluginRegistry.plugins;
      for (var i = 0, l = plugins.length;i < l;i++) {
        var possiblePlugin = plugins[i];
        if (possiblePlugin) {
          var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent);
          if (extractedEvents) {
            events = accumulateInto(events, extractedEvents);
          }
        }
      }
      return events;
    }, enqueueEvents:function(events) {
      if (events) {
        eventQueue = accumulateInto(eventQueue, events);
      }
    }, processEventQueue:function() {
      var processingEventQueue = eventQueue;
      eventQueue = null;
      forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
      "production" !== "development" ? invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented.") : invariant(!eventQueue);
    }, __purge:function() {
      listenerBank = {};
    }, __getListenerBank:function() {
      return listenerBank;
    }};
    module.exports = EventPluginHub;
  }, {"./EventPluginRegistry":19, "./EventPluginUtils":20, "./accumulateInto":97, "./forEachAccumulated":112, "./invariant":126}], 19:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var EventPluginOrder = null;
    var namesToPlugins = {};
    function recomputePluginOrdering() {
      if (!EventPluginOrder) {
        return;
      }
      for (var pluginName in namesToPlugins) {
        var PluginModule = namesToPlugins[pluginName];
        var pluginIndex = EventPluginOrder.indexOf(pluginName);
        "production" !== "development" ? invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName) : invariant(pluginIndex > -1);
        if (EventPluginRegistry.plugins[pluginIndex]) {
          continue;
        }
        "production" !== "development" ? invariant(PluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName) : invariant(PluginModule.extractEvents);
        EventPluginRegistry.plugins[pluginIndex] = PluginModule;
        var publishedEvents = PluginModule.eventTypes;
        for (var eventName in publishedEvents) {
          "production" !== "development" ? invariant(publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName) : invariant(publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName));
        }
      }
    }
    function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
      "production" !== "development" ? invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName));
      EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
          }
        }
        return true;
      } else {
        if (dispatchConfig.registrationName) {
          publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
          return true;
        }
      }
      return false;
    }
    function publishRegistrationName(registrationName, PluginModule, eventName) {
      "production" !== "development" ? invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]);
      EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
      EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
    }
    var EventPluginRegistry = {plugins:[], eventNameDispatchConfigs:{}, registrationNameModules:{}, registrationNameDependencies:{}, injectEventPluginOrder:function(InjectedEventPluginOrder) {
      "production" !== "development" ? invariant(!EventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React.") : invariant(!EventPluginOrder);
      EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
      recomputePluginOrdering();
    }, injectEventPluginsByName:function(injectedNamesToPlugins) {
      var isOrderingDirty = false;
      for (var pluginName in injectedNamesToPlugins) {
        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          continue;
        }
        var PluginModule = injectedNamesToPlugins[pluginName];
        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
          "production" !== "development" ? invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName) : invariant(!namesToPlugins[pluginName]);
          namesToPlugins[pluginName] = PluginModule;
          isOrderingDirty = true;
        }
      }
      if (isOrderingDirty) {
        recomputePluginOrdering();
      }
    }, getPluginModuleForEvent:function(event) {
      var dispatchConfig = event.dispatchConfig;
      if (dispatchConfig.registrationName) {
        return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
      }
      for (var phase in dispatchConfig.phasedRegistrationNames) {
        if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
        if (PluginModule) {
          return PluginModule;
        }
      }
      return null;
    }, _resetEventPlugins:function() {
      EventPluginOrder = null;
      for (var pluginName in namesToPlugins) {
        if (namesToPlugins.hasOwnProperty(pluginName)) {
          delete namesToPlugins[pluginName];
        }
      }
      EventPluginRegistry.plugins.length = 0;
      var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
      for (var eventName in eventNameDispatchConfigs) {
        if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
          delete eventNameDispatchConfigs[eventName];
        }
      }
      var registrationNameModules = EventPluginRegistry.registrationNameModules;
      for (var registrationName in registrationNameModules) {
        if (registrationNameModules.hasOwnProperty(registrationName)) {
          delete registrationNameModules[registrationName];
        }
      }
    }};
    module.exports = EventPluginRegistry;
  }, {"./invariant":126}], 20:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var invariant = _dereq_("./invariant");
    var injection = {Mount:null, injectMount:function(InjectedMount) {
      injection.Mount = InjectedMount;
      if ("production" !== "development") {
        "production" !== "development" ? invariant(InjectedMount && InjectedMount.getNode, "EventPluginUtils.injection.injectMount(...): Injected Mount module " + "is missing getNode.") : invariant(InjectedMount && InjectedMount.getNode);
      }
    }};
    var topLevelTypes = EventConstants.topLevelTypes;
    function isEndish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
    }
    function isMoveish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
    }
    function isStartish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
    }
    var validateEventDispatches;
    if ("production" !== "development") {
      validateEventDispatches = function(event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchIDs = event._dispatchIDs;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var idsIsArr = Array.isArray(dispatchIDs);
        var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        "production" !== "development" ? invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen, "EventPluginUtils: Invalid `event`.") : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen);
      };
    }
    function forEachEventDispatch(event, cb) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchIDs = event._dispatchIDs;
      if ("production" !== "development") {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0;i < dispatchListeners.length;i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          cb(event, dispatchListeners[i], dispatchIDs[i]);
        }
      } else {
        if (dispatchListeners) {
          cb(event, dispatchListeners, dispatchIDs);
        }
      }
    }
    function executeDispatch(event, listener, domID) {
      event.currentTarget = injection.Mount.getNode(domID);
      var returnValue = listener(event, domID);
      event.currentTarget = null;
      return returnValue;
    }
    function executeDispatchesInOrder(event, executeDispatch) {
      forEachEventDispatch(event, executeDispatch);
      event._dispatchListeners = null;
      event._dispatchIDs = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchIDs = event._dispatchIDs;
      if ("production" !== "development") {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0;i < dispatchListeners.length;i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          if (dispatchListeners[i](event, dispatchIDs[i])) {
            return dispatchIDs[i];
          }
        }
      } else {
        if (dispatchListeners) {
          if (dispatchListeners(event, dispatchIDs)) {
            return dispatchIDs;
          }
        }
      }
      return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
      var ret = executeDispatchesInOrderStopAtTrueImpl(event);
      event._dispatchIDs = null;
      event._dispatchListeners = null;
      return ret;
    }
    function executeDirectDispatch(event) {
      if ("production" !== "development") {
        validateEventDispatches(event);
      }
      var dispatchListener = event._dispatchListeners;
      var dispatchID = event._dispatchIDs;
      "production" !== "development" ? invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`.") : invariant(!Array.isArray(dispatchListener));
      var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
      event._dispatchListeners = null;
      event._dispatchIDs = null;
      return res;
    }
    function hasDispatches(event) {
      return!!event._dispatchListeners;
    }
    var EventPluginUtils = {isEndish:isEndish, isMoveish:isMoveish, isStartish:isStartish, executeDirectDispatch:executeDirectDispatch, executeDispatch:executeDispatch, executeDispatchesInOrder:executeDispatchesInOrder, executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue, hasDispatches:hasDispatches, injection:injection, useTouchEvents:false};
    module.exports = EventPluginUtils;
  }, {"./EventConstants":16, "./invariant":126}], 21:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var accumulateInto = _dereq_("./accumulateInto");
    var forEachAccumulated = _dereq_("./forEachAccumulated");
    var PropagationPhases = EventConstants.PropagationPhases;
    var getListener = EventPluginHub.getListener;
    function listenerAtPhase(id, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(id, registrationName);
    }
    function accumulateDirectionalDispatches(domID, upwards, event) {
      if ("production" !== "development") {
        if (!domID) {
          throw new Error("Dispatching id must not be null");
        }
      }
      var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
      var listener = listenerAtPhase(domID, event, phase);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
      }
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateDispatches(id, ignoredDirection, event) {
      if (event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(id, registrationName);
        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
        }
      }
    }
    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event.dispatchMarker, null, event);
      }
    }
    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
      EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches, accumulateDirectDispatches:accumulateDirectDispatches, accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};
    module.exports = EventPropagators;
  }, {"./EventConstants":16, "./EventPluginHub":18, "./accumulateInto":97, "./forEachAccumulated":112}], 22:[function(_dereq_, module, exports) {
    var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
    var ExecutionEnvironment = {canUseDOM:canUseDOM, canUseWorkers:typeof Worker !== "undefined", canUseEventListeners:canUseDOM && !!(window.addEventListener || window.attachEvent), canUseViewport:canUseDOM && !!window.screen, isInWorker:!canUseDOM};
    module.exports = ExecutionEnvironment;
  }, {}], 23:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
    var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
    var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
    var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
    var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
    var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
    var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
    var hasSVG;
    if (ExecutionEnvironment.canUseDOM) {
      var implementation = document.implementation;
      hasSVG = implementation && implementation.hasFeature && implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1");
    }
    var HTMLDOMPropertyConfig = {isCustomAttribute:RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/), Properties:{accept:null, acceptCharset:null, accessKey:null, action:null, allowFullScreen:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, allowTransparency:MUST_USE_ATTRIBUTE, alt:null, async:HAS_BOOLEAN_VALUE, autoComplete:null, autoPlay:HAS_BOOLEAN_VALUE, cellPadding:null, cellSpacing:null, charSet:MUST_USE_ATTRIBUTE, checked:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, classID:MUST_USE_ATTRIBUTE, 
    className:hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY, cols:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE, colSpan:null, content:null, contentEditable:null, contextMenu:MUST_USE_ATTRIBUTE, controls:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, coords:null, crossOrigin:null, data:null, dateTime:MUST_USE_ATTRIBUTE, defer:HAS_BOOLEAN_VALUE, dir:null, disabled:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, download:HAS_OVERLOADED_BOOLEAN_VALUE, draggable:null, encType:null, form:MUST_USE_ATTRIBUTE, formAction:MUST_USE_ATTRIBUTE, 
    formEncType:MUST_USE_ATTRIBUTE, formMethod:MUST_USE_ATTRIBUTE, formNoValidate:HAS_BOOLEAN_VALUE, formTarget:MUST_USE_ATTRIBUTE, frameBorder:MUST_USE_ATTRIBUTE, height:MUST_USE_ATTRIBUTE, hidden:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, href:null, hrefLang:null, htmlFor:null, httpEquiv:null, icon:null, id:MUST_USE_PROPERTY, label:null, lang:null, list:MUST_USE_ATTRIBUTE, loop:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, manifest:MUST_USE_ATTRIBUTE, marginHeight:null, marginWidth:null, max:null, maxLength:MUST_USE_ATTRIBUTE, 
    media:MUST_USE_ATTRIBUTE, mediaGroup:null, method:null, min:null, multiple:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, muted:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, name:null, noValidate:HAS_BOOLEAN_VALUE, open:null, pattern:null, placeholder:null, poster:null, preload:null, radioGroup:null, readOnly:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, rel:null, required:HAS_BOOLEAN_VALUE, role:MUST_USE_ATTRIBUTE, rows:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE, rowSpan:null, sandbox:null, scope:null, scrolling:null, 
    seamless:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, selected:MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE, shape:null, size:MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE, sizes:MUST_USE_ATTRIBUTE, span:HAS_POSITIVE_NUMERIC_VALUE, spellCheck:null, src:null, srcDoc:MUST_USE_PROPERTY, srcSet:MUST_USE_ATTRIBUTE, start:HAS_NUMERIC_VALUE, step:null, style:null, tabIndex:null, target:null, title:null, type:null, useMap:null, value:MUST_USE_PROPERTY | HAS_SIDE_EFFECTS, width:MUST_USE_ATTRIBUTE, wmode:MUST_USE_ATTRIBUTE, 
    autoCapitalize:null, autoCorrect:null, itemProp:MUST_USE_ATTRIBUTE, itemScope:MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, itemType:MUST_USE_ATTRIBUTE, property:null}, DOMAttributeNames:{acceptCharset:"accept-charset", className:"class", htmlFor:"for", httpEquiv:"http-equiv"}, DOMPropertyNames:{autoCapitalize:"autocapitalize", autoComplete:"autocomplete", autoCorrect:"autocorrect", autoFocus:"autofocus", autoPlay:"autoplay", encType:"enctype", hrefLang:"hreflang", radioGroup:"radiogroup", spellCheck:"spellcheck", 
    srcDoc:"srcdoc", srcSet:"srcset"}};
    module.exports = HTMLDOMPropertyConfig;
  }, {"./DOMProperty":11, "./ExecutionEnvironment":22}], 24:[function(_dereq_, module, exports) {
    var ReactPropTypes = _dereq_("./ReactPropTypes");
    var invariant = _dereq_("./invariant");
    var hasReadOnlyValue = {"button":true, "checkbox":true, "image":true, "hidden":true, "radio":true, "reset":true, "submit":true};
    function _assertSingleLink(input) {
      "production" !== "development" ? invariant(input.props.checkedLink == null || input.props.valueLink == null, "Cannot provide a checkedLink and a valueLink. If you want to use " + "checkedLink, you probably don't want to use valueLink and vice versa.") : invariant(input.props.checkedLink == null || input.props.valueLink == null);
    }
    function _assertValueLink(input) {
      _assertSingleLink(input);
      "production" !== "development" ? invariant(input.props.value == null && input.props.onChange == null, "Cannot provide a valueLink and a value or onChange event. If you want " + "to use value or onChange, you probably don't want to use valueLink.") : invariant(input.props.value == null && input.props.onChange == null);
    }
    function _assertCheckedLink(input) {
      _assertSingleLink(input);
      "production" !== "development" ? invariant(input.props.checked == null && input.props.onChange == null, "Cannot provide a checkedLink and a checked property or onChange event. " + "If you want to use checked or onChange, you probably don't want to " + "use checkedLink") : invariant(input.props.checked == null && input.props.onChange == null);
    }
    function _handleLinkedValueChange(e) {
      this.props.valueLink.requestChange(e.target.value);
    }
    function _handleLinkedCheckChange(e) {
      this.props.checkedLink.requestChange(e.target.checked);
    }
    var LinkedValueUtils = {Mixin:{propTypes:{value:function(props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return;
      }
      return new Error("You provided a `value` prop to a form field without an " + "`onChange` handler. This will render a read-only field. If " + "the field should be mutable use `defaultValue`. Otherwise, " + "set either `onChange` or `readOnly`.");
    }, checked:function(props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return;
      }
      return new Error("You provided a `checked` prop to a form field without an " + "`onChange` handler. This will render a read-only field. If " + "the field should be mutable use `defaultChecked`. Otherwise, " + "set either `onChange` or `readOnly`.");
    }, onChange:ReactPropTypes.func}}, getValue:function(input) {
      if (input.props.valueLink) {
        _assertValueLink(input);
        return input.props.valueLink.value;
      }
      return input.props.value;
    }, getChecked:function(input) {
      if (input.props.checkedLink) {
        _assertCheckedLink(input);
        return input.props.checkedLink.value;
      }
      return input.props.checked;
    }, getOnChange:function(input) {
      if (input.props.valueLink) {
        _assertValueLink(input);
        return _handleLinkedValueChange;
      } else {
        if (input.props.checkedLink) {
          _assertCheckedLink(input);
          return _handleLinkedCheckChange;
        }
      }
      return input.props.onChange;
    }};
    module.exports = LinkedValueUtils;
  }, {"./ReactPropTypes":72, "./invariant":126}], 25:[function(_dereq_, module, exports) {
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var accumulateInto = _dereq_("./accumulateInto");
    var forEachAccumulated = _dereq_("./forEachAccumulated");
    var invariant = _dereq_("./invariant");
    function remove(event) {
      event.remove();
    }
    var LocalEventTrapMixin = {trapBubbledEvent:function(topLevelType, handlerBaseName) {
      "production" !== "development" ? invariant(this.isMounted(), "Must be mounted to trap events") : invariant(this.isMounted());
      var listener = ReactBrowserEventEmitter.trapBubbledEvent(topLevelType, handlerBaseName, this.getDOMNode());
      this._localEventListeners = accumulateInto(this._localEventListeners, listener);
    }, componentWillUnmount:function() {
      if (this._localEventListeners) {
        forEachAccumulated(this._localEventListeners, remove);
      }
    }};
    module.exports = LocalEventTrapMixin;
  }, {"./ReactBrowserEventEmitter":30, "./accumulateInto":97, "./forEachAccumulated":112, "./invariant":126}], 26:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var emptyFunction = _dereq_("./emptyFunction");
    var topLevelTypes = EventConstants.topLevelTypes;
    var MobileSafariClickEventPlugin = {eventTypes:null, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      if (topLevelType === topLevelTypes.topTouchStart) {
        var target = nativeEvent.target;
        if (target && !target.onclick) {
          target.onclick = emptyFunction;
        }
      }
    }};
    module.exports = MobileSafariClickEventPlugin;
  }, {"./EventConstants":16, "./emptyFunction":107}], 27:[function(_dereq_, module, exports) {
    function assign(target, sources) {
      if (target == null) {
        throw new TypeError("Object.assign target cannot be null or undefined");
      }
      var to = Object(target);
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var nextIndex = 1;nextIndex < arguments.length;nextIndex++) {
        var nextSource = arguments[nextIndex];
        if (nextSource == null) {
          continue;
        }
        var from = Object(nextSource);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
      }
      return to;
    }
    module.exports = assign;
  }, {}], 28:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var oneArgumentPooler = function(copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function(a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function(a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4, a5);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4, a5);
      }
    };
    var standardReleaser = function(instance) {
      var Klass = this;
      "production" !== "development" ? invariant(instance instanceof Klass, "Trying to release an instance into a pool of a different type.") : invariant(instance instanceof Klass);
      if (instance.destructor) {
        instance.destructor();
      }
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function(CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {addPoolingTo:addPoolingTo, oneArgumentPooler:oneArgumentPooler, twoArgumentPooler:twoArgumentPooler, threeArgumentPooler:threeArgumentPooler, fiveArgumentPooler:fiveArgumentPooler};
    module.exports = PooledClass;
  }, {"./invariant":126}], 29:[function(_dereq_, module, exports) {
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    var ReactMount = _dereq_("./ReactMount");
    var invariant = _dereq_("./invariant");
    var ReactBrowserComponentMixin = {getDOMNode:function() {
      "production" !== "development" ? invariant(this.isMounted(), "getDOMNode(): A component must be mounted to have a DOM node.") : invariant(this.isMounted());
      if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {
        return null;
      }
      return ReactMount.getNode(this._rootNodeID);
    }};
    module.exports = ReactBrowserComponentMixin;
  }, {"./ReactEmptyComponent":54, "./ReactMount":63, "./invariant":126}], 30:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var EventPluginRegistry = _dereq_("./EventPluginRegistry");
    var ReactEventEmitterMixin = _dereq_("./ReactEventEmitterMixin");
    var ViewportMetrics = _dereq_("./ViewportMetrics");
    var assign = _dereq_("./Object.assign");
    var isEventSupported = _dereq_("./isEventSupported");
    var alreadyListeningTo = {};
    var isMonitoringScrollValue = false;
    var reactTopListenersCounter = 0;
    var topEventMapping = {topBlur:"blur", topChange:"change", topClick:"click", topCompositionEnd:"compositionend", topCompositionStart:"compositionstart", topCompositionUpdate:"compositionupdate", topContextMenu:"contextmenu", topCopy:"copy", topCut:"cut", topDoubleClick:"dblclick", topDrag:"drag", topDragEnd:"dragend", topDragEnter:"dragenter", topDragExit:"dragexit", topDragLeave:"dragleave", topDragOver:"dragover", topDragStart:"dragstart", topDrop:"drop", topFocus:"focus", topInput:"input", 
    topKeyDown:"keydown", topKeyPress:"keypress", topKeyUp:"keyup", topMouseDown:"mousedown", topMouseMove:"mousemove", topMouseOut:"mouseout", topMouseOver:"mouseover", topMouseUp:"mouseup", topPaste:"paste", topScroll:"scroll", topSelectionChange:"selectionchange", topTextInput:"textInput", topTouchCancel:"touchcancel", topTouchEnd:"touchend", topTouchMove:"touchmove", topTouchStart:"touchstart", topWheel:"wheel"};
    var topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2);
    function getListeningForDocument(mountAt) {
      if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
        mountAt[topListenersIDKey] = reactTopListenersCounter++;
        alreadyListeningTo[mountAt[topListenersIDKey]] = {};
      }
      return alreadyListeningTo[mountAt[topListenersIDKey]];
    }
    var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {ReactEventListener:null, injection:{injectReactEventListener:function(ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }}, setEnabled:function(enabled) {
      if (ReactBrowserEventEmitter.ReactEventListener) {
        ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
      }
    }, isEnabled:function() {
      return!!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
    }, listenTo:function(registrationName, contentDocumentHandle) {
      var mountAt = contentDocumentHandle;
      var isListening = getListeningForDocument(mountAt);
      var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
      var topLevelTypes = EventConstants.topLevelTypes;
      for (var i = 0, l = dependencies.length;i < l;i++) {
        var dependency = dependencies[i];
        if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
          if (dependency === topLevelTypes.topWheel) {
            if (isEventSupported("wheel")) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, "wheel", mountAt);
            } else {
              if (isEventSupported("mousewheel")) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, "mousewheel", mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, "DOMMouseScroll", mountAt);
              }
            }
          } else {
            if (dependency === topLevelTypes.topScroll) {
              if (isEventSupported("scroll", true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, "scroll", mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, "scroll", ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
              }
            } else {
              if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
                if (isEventSupported("focus", true)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, "focus", mountAt);
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, "blur", mountAt);
                } else {
                  if (isEventSupported("focusin")) {
                    ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, "focusin", mountAt);
                    ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, "focusout", mountAt);
                  }
                }
                isListening[topLevelTypes.topBlur] = true;
                isListening[topLevelTypes.topFocus] = true;
              } else {
                if (topEventMapping.hasOwnProperty(dependency)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
                }
              }
            }
          }
          isListening[dependency] = true;
        }
      }
    }, trapBubbledEvent:function(topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
    }, trapCapturedEvent:function(topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
    }, ensureScrollValueMonitoring:function() {
      if (!isMonitoringScrollValue) {
        var refresh = ViewportMetrics.refreshScrollValues;
        ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
        isMonitoringScrollValue = true;
      }
    }, eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs, registrationNameModules:EventPluginHub.registrationNameModules, putListener:EventPluginHub.putListener, getListener:EventPluginHub.getListener, deleteListener:EventPluginHub.deleteListener, deleteAllListeners:EventPluginHub.deleteAllListeners});
    module.exports = ReactBrowserEventEmitter;
  }, {"./EventConstants":16, "./EventPluginHub":18, "./EventPluginRegistry":19, "./Object.assign":27, "./ReactEventEmitterMixin":56, "./ViewportMetrics":96, "./isEventSupported":127}], 31:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var traverseAllChildren = _dereq_("./traverseAllChildren");
    var warning = _dereq_("./warning");
    var twoArgumentPooler = PooledClass.twoArgumentPooler;
    var threeArgumentPooler = PooledClass.threeArgumentPooler;
    function ForEachBookKeeping(forEachFunction, forEachContext) {
      this.forEachFunction = forEachFunction;
      this.forEachContext = forEachContext;
    }
    PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
    function forEachSingleChild(traverseContext, child, name, i) {
      var forEachBookKeeping = traverseContext;
      forEachBookKeeping.forEachFunction.call(forEachBookKeeping.forEachContext, child, i);
    }
    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }
      var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
      traverseAllChildren(children, forEachSingleChild, traverseContext);
      ForEachBookKeeping.release(traverseContext);
    }
    function MapBookKeeping(mapResult, mapFunction, mapContext) {
      this.mapResult = mapResult;
      this.mapFunction = mapFunction;
      this.mapContext = mapContext;
    }
    PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);
    function mapSingleChildIntoContext(traverseContext, child, name, i) {
      var mapBookKeeping = traverseContext;
      var mapResult = mapBookKeeping.mapResult;
      var keyUnique = !mapResult.hasOwnProperty(name);
      "production" !== "development" ? warning(keyUnique, "ReactChildren.map(...): Encountered two children with the same key, " + "`%s`. Child keys must be unique; when two children share a key, only " + "the first child will be used.", name) : null;
      if (keyUnique) {
        var mappedChild = mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
        mapResult[name] = mappedChild;
      }
    }
    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }
      var mapResult = {};
      var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
      MapBookKeeping.release(traverseContext);
      return mapResult;
    }
    function forEachSingleChildDummy(traverseContext, child, name, i) {
      return null;
    }
    function countChildren(children, context) {
      return traverseAllChildren(children, forEachSingleChildDummy, null);
    }
    var ReactChildren = {forEach:forEachChildren, map:mapChildren, count:countChildren};
    module.exports = ReactChildren;
  }, {"./PooledClass":28, "./traverseAllChildren":144, "./warning":145}], 32:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactOwner = _dereq_("./ReactOwner");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var keyMirror = _dereq_("./keyMirror");
    var ComponentLifeCycle = keyMirror({MOUNTED:null, UNMOUNTED:null});
    var injected = false;
    var unmountIDFromEnvironment = null;
    var mountImageIntoNode = null;
    var ReactComponent = {injection:{injectEnvironment:function(ReactComponentEnvironment) {
      "production" !== "development" ? invariant(!injected, "ReactComponent: injectEnvironment() can only be called once.") : invariant(!injected);
      mountImageIntoNode = ReactComponentEnvironment.mountImageIntoNode;
      unmountIDFromEnvironment = ReactComponentEnvironment.unmountIDFromEnvironment;
      ReactComponent.BackendIDOperations = ReactComponentEnvironment.BackendIDOperations;
      injected = true;
    }}, LifeCycle:ComponentLifeCycle, BackendIDOperations:null, Mixin:{isMounted:function() {
      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
    }, setProps:function(partialProps, callback) {
      var element = this._pendingElement || this._currentElement;
      this.replaceProps(assign({}, element.props, partialProps), callback);
    }, replaceProps:function(props, callback) {
      "production" !== "development" ? invariant(this.isMounted(), "replaceProps(...): Can only update a mounted component.") : invariant(this.isMounted());
      "production" !== "development" ? invariant(this._mountDepth === 0, "replaceProps(...): You called `setProps` or `replaceProps` on a " + "component with a parent. This is an anti-pattern since props will " + "get reactively updated when rendered. Instead, change the owner's " + "`render` method to pass the correct value as props to the component " + "where it is created.") : invariant(this._mountDepth === 0);
      this._pendingElement = ReactElement.cloneAndReplaceProps(this._pendingElement || this._currentElement, props);
      ReactUpdates.enqueueUpdate(this, callback);
    }, _setPropsInternal:function(partialProps, callback) {
      var element = this._pendingElement || this._currentElement;
      this._pendingElement = ReactElement.cloneAndReplaceProps(element, assign({}, element.props, partialProps));
      ReactUpdates.enqueueUpdate(this, callback);
    }, construct:function(element) {
      this.props = element.props;
      this._owner = element._owner;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
      this._pendingCallbacks = null;
      this._currentElement = element;
      this._pendingElement = null;
    }, mountComponent:function(rootID, transaction, mountDepth) {
      "production" !== "development" ? invariant(!this.isMounted(), "mountComponent(%s, ...): Can only mount an unmounted component. " + "Make sure to avoid storing components between renders or reusing a " + "single component instance in multiple places.", rootID) : invariant(!this.isMounted());
      var ref = this._currentElement.ref;
      if (ref != null) {
        var owner = this._currentElement._owner;
        ReactOwner.addComponentAsRefTo(this, ref, owner);
      }
      this._rootNodeID = rootID;
      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
      this._mountDepth = mountDepth;
    }, unmountComponent:function() {
      "production" !== "development" ? invariant(this.isMounted(), "unmountComponent(): Can only unmount a mounted component.") : invariant(this.isMounted());
      var ref = this._currentElement.ref;
      if (ref != null) {
        ReactOwner.removeComponentAsRefFrom(this, ref, this._owner);
      }
      unmountIDFromEnvironment(this._rootNodeID);
      this._rootNodeID = null;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
    }, receiveComponent:function(nextElement, transaction) {
      "production" !== "development" ? invariant(this.isMounted(), "receiveComponent(...): Can only update a mounted component.") : invariant(this.isMounted());
      this._pendingElement = nextElement;
      this.performUpdateIfNecessary(transaction);
    }, performUpdateIfNecessary:function(transaction) {
      if (this._pendingElement == null) {
        return;
      }
      var prevElement = this._currentElement;
      var nextElement = this._pendingElement;
      this._currentElement = nextElement;
      this.props = nextElement.props;
      this._owner = nextElement._owner;
      this._pendingElement = null;
      this.updateComponent(transaction, prevElement);
    }, updateComponent:function(transaction, prevElement) {
      var nextElement = this._currentElement;
      if (nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref) {
        if (prevElement.ref != null) {
          ReactOwner.removeComponentAsRefFrom(this, prevElement.ref, prevElement._owner);
        }
        if (nextElement.ref != null) {
          ReactOwner.addComponentAsRefTo(this, nextElement.ref, nextElement._owner);
        }
      }
    }, mountComponentIntoNode:function(rootID, container, shouldReuseMarkup) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
      transaction.perform(this._mountComponentIntoNode, this, rootID, container, transaction, shouldReuseMarkup);
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    }, _mountComponentIntoNode:function(rootID, container, transaction, shouldReuseMarkup) {
      var markup = this.mountComponent(rootID, transaction, 0);
      mountImageIntoNode(markup, container, shouldReuseMarkup);
    }, isOwnedBy:function(owner) {
      return this._owner === owner;
    }, getSiblingByRef:function(ref) {
      var owner = this._owner;
      if (!owner || !owner.refs) {
        return null;
      }
      return owner.refs[ref];
    }}};
    module.exports = ReactComponent;
  }, {"./Object.assign":27, "./ReactElement":52, "./ReactOwner":67, "./ReactUpdates":79, "./invariant":126, "./keyMirror":132}], 33:[function(_dereq_, module, exports) {
    var ReactDOMIDOperations = _dereq_("./ReactDOMIDOperations");
    var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
    var ReactMount = _dereq_("./ReactMount");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactReconcileTransaction = _dereq_("./ReactReconcileTransaction");
    var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
    var invariant = _dereq_("./invariant");
    var setInnerHTML = _dereq_("./setInnerHTML");
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var ReactComponentBrowserEnvironment = {ReactReconcileTransaction:ReactReconcileTransaction, BackendIDOperations:ReactDOMIDOperations, unmountIDFromEnvironment:function(rootNodeID) {
      ReactMount.purgeID(rootNodeID);
    }, mountImageIntoNode:ReactPerf.measure("ReactComponentBrowserEnvironment", "mountImageIntoNode", function(markup, container, shouldReuseMarkup) {
      "production" !== "development" ? invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE), "mountComponentIntoNode(...): Target container is not valid.") : invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE));
      if (shouldReuseMarkup) {
        if (ReactMarkupChecksum.canReuseMarkup(markup, getReactRootElementInContainer(container))) {
          return;
        } else {
          "production" !== "development" ? invariant(container.nodeType !== DOC_NODE_TYPE, "You're trying to render a component to the document using " + "server rendering but the checksum was invalid. This usually " + "means you rendered a different component type or props on " + "the client from the one on the server, or your render() " + "methods are impure. React cannot handle this case due to " + "cross-browser quirks by rendering at the document root. You " + "should look for environment dependent code in your components " + 
          "and ensure the props are the same client and server side.") : invariant(container.nodeType !== DOC_NODE_TYPE);
          if ("production" !== "development") {
            console.warn("React attempted to use reuse markup in a container but the " + "checksum was invalid. This generally means that you are " + "using server rendering and the markup generated on the " + "server was not what the client was expecting. React injected " + "new markup to compensate which works but you have lost many " + "of the benefits of server rendering. Instead, figure out " + "why the markup being generated is different on the client " + "or server.");
          }
        }
      }
      "production" !== "development" ? invariant(container.nodeType !== DOC_NODE_TYPE, "You're trying to render a component to the document but " + "you didn't use server rendering. We can't do this " + "without using server rendering due to cross-browser quirks. " + "See renderComponentToString() for server rendering.") : invariant(container.nodeType !== DOC_NODE_TYPE);
      setInnerHTML(container, markup);
    })};
    module.exports = ReactComponentBrowserEnvironment;
  }, {"./ReactDOMIDOperations":41, "./ReactMarkupChecksum":62, "./ReactMount":63, "./ReactPerf":68, "./ReactReconcileTransaction":74, "./getReactRootElementInContainer":120, "./invariant":126, "./setInnerHTML":140}], 34:[function(_dereq_, module, exports) {
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactContext = _dereq_("./ReactContext");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactElement = _dereq_("./ReactElement");
    var ReactElementValidator = _dereq_("./ReactElementValidator");
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    var ReactErrorUtils = _dereq_("./ReactErrorUtils");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactOwner = _dereq_("./ReactOwner");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactPropTransferer = _dereq_("./ReactPropTransferer");
    var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
    var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var invariant = _dereq_("./invariant");
    var keyMirror = _dereq_("./keyMirror");
    var keyOf = _dereq_("./keyOf");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var mapObject = _dereq_("./mapObject");
    var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
    var warning = _dereq_("./warning");
    var MIXINS_KEY = keyOf({mixins:null});
    var SpecPolicy = keyMirror({DEFINE_ONCE:null, DEFINE_MANY:null, OVERRIDE_BASE:null, DEFINE_MANY_MERGED:null});
    var injectedMixins = [];
    var ReactCompositeComponentInterface = {mixins:SpecPolicy.DEFINE_MANY, statics:SpecPolicy.DEFINE_MANY, propTypes:SpecPolicy.DEFINE_MANY, contextTypes:SpecPolicy.DEFINE_MANY, childContextTypes:SpecPolicy.DEFINE_MANY, getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED, getInitialState:SpecPolicy.DEFINE_MANY_MERGED, getChildContext:SpecPolicy.DEFINE_MANY_MERGED, render:SpecPolicy.DEFINE_ONCE, componentWillMount:SpecPolicy.DEFINE_MANY, componentDidMount:SpecPolicy.DEFINE_MANY, componentWillReceiveProps:SpecPolicy.DEFINE_MANY, 
    shouldComponentUpdate:SpecPolicy.DEFINE_ONCE, componentWillUpdate:SpecPolicy.DEFINE_MANY, componentDidUpdate:SpecPolicy.DEFINE_MANY, componentWillUnmount:SpecPolicy.DEFINE_MANY, updateComponent:SpecPolicy.OVERRIDE_BASE};
    var RESERVED_SPEC_KEYS = {displayName:function(Constructor, displayName) {
      Constructor.displayName = displayName;
    }, mixins:function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0;i < mixins.length;i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    }, childContextTypes:function(Constructor, childContextTypes) {
      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
      Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
    }, contextTypes:function(Constructor, contextTypes) {
      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
      Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
    }, getDefaultProps:function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    }, propTypes:function(Constructor, propTypes) {
      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
      Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
    }, statics:function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    }};
    function getDeclarationErrorAddendum(component) {
      var owner = component._owner || null;
      if (owner && owner.constructor && owner.constructor.displayName) {
        return " Check the render method of `" + owner.constructor.displayName + "`.";
      }
      return "";
    }
    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {
          "production" !== "development" ? invariant(typeof typeDef[propName] == "function", "%s: %s type `%s` is invalid; it must be a function, usually from " + "React.PropTypes.", Constructor.displayName || "ReactCompositeComponent", ReactPropTypeLocationNames[location], propName) : invariant(typeof typeDef[propName] == "function");
        }
      }
    }
    function validateMethodOverride(proto, name) {
      var specPolicy = ReactCompositeComponentInterface.hasOwnProperty(name) ? ReactCompositeComponentInterface[name] : null;
      if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
        "production" !== "development" ? invariant(specPolicy === SpecPolicy.OVERRIDE_BASE, "ReactCompositeComponentInterface: You are attempting to override " + "`%s` from your class specification. Ensure that your method names " + "do not overlap with React methods.", name) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE);
      }
      if (proto.hasOwnProperty(name)) {
        "production" !== "development" ? invariant(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED, "ReactCompositeComponentInterface: You are attempting to define " + "`%s` on your component more than once. This conflict may be due " + "to a mixin.", name) : invariant(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED);
      }
    }
    function validateLifeCycleOnReplaceState(instance) {
      var compositeLifeCycleState = instance._compositeLifeCycleState;
      "production" !== "development" ? invariant(instance.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING, "replaceState(...): Can only update a mounted or mounting component.") : invariant(instance.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING);
      "production" !== "development" ? invariant(ReactCurrentOwner.current == null, "replaceState(...): Cannot update during an existing state transition " + "(such as within `render`). Render methods should be a pure function " + "of props and state.") : invariant(ReactCurrentOwner.current == null);
      "production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING, "replaceState(...): Cannot update while unmounting component. This " + "usually means you called setState() on an unmounted component.") : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING);
    }
    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        return;
      }
      "production" !== "development" ? invariant(!ReactLegacyElement.isValidFactory(spec), "ReactCompositeComponent: You're attempting to " + "use a component class as a mixin. Instead, just use a regular object.") : invariant(!ReactLegacyElement.isValidFactory(spec));
      "production" !== "development" ? invariant(!ReactElement.isValidElement(spec), "ReactCompositeComponent: You're attempting to " + "use a component as a mixin. Instead, just use a regular object.") : invariant(!ReactElement.isValidElement(spec));
      var proto = Constructor.prototype;
      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }
      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }
        if (name === MIXINS_KEY) {
          continue;
        }
        var property = spec[name];
        validateMethodOverride(proto, name);
        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isCompositeComponentMethod = ReactCompositeComponentInterface.hasOwnProperty(name);
          var isAlreadyDefined = proto.hasOwnProperty(name);
          var markedDontBind = property && property.__reactDontBind;
          var isFunction = typeof property === "function";
          var shouldAutoBind = isFunction && !isCompositeComponentMethod && !isAlreadyDefined && !markedDontBind;
          if (shouldAutoBind) {
            if (!proto.__reactAutoBindMap) {
              proto.__reactAutoBindMap = {};
            }
            proto.__reactAutoBindMap[name] = property;
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactCompositeComponentInterface[name];
              "production" !== "development" ? invariant(isCompositeComponentMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY), "ReactCompositeComponent: Unexpected spec policy %s for key %s " + "when mixing in component specs.", specPolicy, name) : invariant(isCompositeComponentMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY));
              if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else {
                if (specPolicy === SpecPolicy.DEFINE_MANY) {
                  proto[name] = createChainedFunction(proto[name], property);
                }
              }
            } else {
              proto[name] = property;
              if ("production" !== "development") {
                if (typeof property === "function" && spec.displayName) {
                  proto[name].displayName = spec.displayName + "_" + name;
                }
              }
            }
          }
        }
      }
    }
    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }
      for (var name in statics) {
        var property = statics[name];
        if (!statics.hasOwnProperty(name)) {
          continue;
        }
        var isReserved = name in RESERVED_SPEC_KEYS;
        "production" !== "development" ? invariant(!isReserved, "ReactCompositeComponent: You are attempting to define a reserved " + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + "as an instance property instead; it will still be accessible on the " + "constructor.", name) : invariant(!isReserved);
        var isInherited = name in Constructor;
        "production" !== "development" ? invariant(!isInherited, "ReactCompositeComponent: You are attempting to define " + "`%s` on your component more than once. This conflict may be " + "due to a mixin.", name) : invariant(!isInherited);
        Constructor[name] = property;
      }
    }
    function mergeObjectsWithNoDuplicateKeys(one, two) {
      "production" !== "development" ? invariant(one && two && typeof one === "object" && typeof two === "object", "mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects") : invariant(one && two && typeof one === "object" && typeof two === "object");
      mapObject(two, function(value, key) {
        "production" !== "development" ? invariant(one[key] === undefined, "mergeObjectsWithNoDuplicateKeys(): " + "Tried to merge two objects with the same key: `%s`. This conflict " + "may be due to a mixin; in particular, this may be caused by two " + "getInitialState() or getDefaultProps() methods returning objects " + "with clashing keys.", key) : invariant(one[key] === undefined);
        one[key] = value;
      });
      return one;
    }
    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);
        if (a == null) {
          return b;
        } else {
          if (b == null) {
            return a;
          }
        }
        return mergeObjectsWithNoDuplicateKeys(a, b);
      };
    }
    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }
    var CompositeLifeCycle = keyMirror({MOUNTING:null, UNMOUNTING:null, RECEIVING_PROPS:null});
    var ReactCompositeComponentMixin = {construct:function(element) {
      ReactComponent.Mixin.construct.apply(this, arguments);
      ReactOwner.Mixin.construct.apply(this, arguments);
      this.state = null;
      this._pendingState = null;
      this.context = null;
      this._compositeLifeCycleState = null;
    }, isMounted:function() {
      return ReactComponent.Mixin.isMounted.call(this) && this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
    }, mountComponent:ReactPerf.measure("ReactCompositeComponent", "mountComponent", function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;
      if (this.__reactAutoBindMap) {
        this._bindAutoBindMethods();
      }
      this.context = this._processContext(this._currentElement._context);
      this.props = this._processProps(this.props);
      this.state = this.getInitialState ? this.getInitialState() : null;
      "production" !== "development" ? invariant(typeof this.state === "object" && !Array.isArray(this.state), "%s.getInitialState(): must return an object or null", this.constructor.displayName || "ReactCompositeComponent") : invariant(typeof this.state === "object" && !Array.isArray(this.state));
      this._pendingState = null;
      this._pendingForceUpdate = false;
      if (this.componentWillMount) {
        this.componentWillMount();
        if (this._pendingState) {
          this.state = this._pendingState;
          this._pendingState = null;
        }
      }
      this._renderedComponent = instantiateReactComponent(this._renderValidatedComponent(), this._currentElement.type);
      this._compositeLifeCycleState = null;
      var markup = this._renderedComponent.mountComponent(rootID, transaction, mountDepth + 1);
      if (this.componentDidMount) {
        transaction.getReactMountReady().enqueue(this.componentDidMount, this);
      }
      return markup;
    }), unmountComponent:function() {
      this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
      if (this.componentWillUnmount) {
        this.componentWillUnmount();
      }
      this._compositeLifeCycleState = null;
      this._renderedComponent.unmountComponent();
      this._renderedComponent = null;
      ReactComponent.Mixin.unmountComponent.call(this);
    }, setState:function(partialState, callback) {
      "production" !== "development" ? invariant(typeof partialState === "object" || partialState == null, "setState(...): takes an object of state variables to update.") : invariant(typeof partialState === "object" || partialState == null);
      if ("production" !== "development") {
        "production" !== "development" ? warning(partialState != null, "setState(...): You passed an undefined or null state object; " + "instead, use forceUpdate().") : null;
      }
      this.replaceState(assign({}, this._pendingState || this.state, partialState), callback);
    }, replaceState:function(completeState, callback) {
      validateLifeCycleOnReplaceState(this);
      this._pendingState = completeState;
      if (this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING) {
        ReactUpdates.enqueueUpdate(this, callback);
      }
    }, _processContext:function(context) {
      var maskedContext = null;
      var contextTypes = this.constructor.contextTypes;
      if (contextTypes) {
        maskedContext = {};
        for (var contextName in contextTypes) {
          maskedContext[contextName] = context[contextName];
        }
        if ("production" !== "development") {
          this._checkPropTypes(contextTypes, maskedContext, ReactPropTypeLocations.context);
        }
      }
      return maskedContext;
    }, _processChildContext:function(currentContext) {
      var childContext = this.getChildContext && this.getChildContext();
      var displayName = this.constructor.displayName || "ReactCompositeComponent";
      if (childContext) {
        "production" !== "development" ? invariant(typeof this.constructor.childContextTypes === "object", "%s.getChildContext(): childContextTypes must be defined in order to " + "use getChildContext().", displayName) : invariant(typeof this.constructor.childContextTypes === "object");
        if ("production" !== "development") {
          this._checkPropTypes(this.constructor.childContextTypes, childContext, ReactPropTypeLocations.childContext);
        }
        for (var name in childContext) {
          "production" !== "development" ? invariant(name in this.constructor.childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', displayName, name) : invariant(name in this.constructor.childContextTypes);
        }
        return assign({}, currentContext, childContext);
      }
      return currentContext;
    }, _processProps:function(newProps) {
      if ("production" !== "development") {
        var propTypes = this.constructor.propTypes;
        if (propTypes) {
          this._checkPropTypes(propTypes, newProps, ReactPropTypeLocations.prop);
        }
      }
      return newProps;
    }, _checkPropTypes:function(propTypes, props, location) {
      var componentName = this.constructor.displayName;
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error = propTypes[propName](props, propName, componentName, location);
          if (error instanceof Error) {
            var addendum = getDeclarationErrorAddendum(this);
            "production" !== "development" ? warning(false, error.message + addendum) : null;
          }
        }
      }
    }, performUpdateIfNecessary:function(transaction) {
      var compositeLifeCycleState = this._compositeLifeCycleState;
      if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING || compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
        return;
      }
      if (this._pendingElement == null && this._pendingState == null && !this._pendingForceUpdate) {
        return;
      }
      var nextContext = this.context;
      var nextProps = this.props;
      var nextElement = this._currentElement;
      if (this._pendingElement != null) {
        nextElement = this._pendingElement;
        nextContext = this._processContext(nextElement._context);
        nextProps = this._processProps(nextElement.props);
        this._pendingElement = null;
        this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
        if (this.componentWillReceiveProps) {
          this.componentWillReceiveProps(nextProps, nextContext);
        }
      }
      this._compositeLifeCycleState = null;
      var nextState = this._pendingState || this.state;
      this._pendingState = null;
      var shouldUpdate = this._pendingForceUpdate || !this.shouldComponentUpdate || this.shouldComponentUpdate(nextProps, nextState, nextContext);
      if ("production" !== "development") {
        if (typeof shouldUpdate === "undefined") {
          console.warn((this.constructor.displayName || "ReactCompositeComponent") + ".shouldComponentUpdate(): Returned undefined instead of a " + "boolean value. Make sure to return true or false.");
        }
      }
      if (shouldUpdate) {
        this._pendingForceUpdate = false;
        this._performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction);
      } else {
        this._currentElement = nextElement;
        this.props = nextProps;
        this.state = nextState;
        this.context = nextContext;
        this._owner = nextElement._owner;
      }
    }, _performComponentUpdate:function(nextElement, nextProps, nextState, nextContext, transaction) {
      var prevElement = this._currentElement;
      var prevProps = this.props;
      var prevState = this.state;
      var prevContext = this.context;
      if (this.componentWillUpdate) {
        this.componentWillUpdate(nextProps, nextState, nextContext);
      }
      this._currentElement = nextElement;
      this.props = nextProps;
      this.state = nextState;
      this.context = nextContext;
      this._owner = nextElement._owner;
      this.updateComponent(transaction, prevElement);
      if (this.componentDidUpdate) {
        transaction.getReactMountReady().enqueue(this.componentDidUpdate.bind(this, prevProps, prevState, prevContext), this);
      }
    }, receiveComponent:function(nextElement, transaction) {
      if (nextElement === this._currentElement && nextElement._owner != null) {
        return;
      }
      ReactComponent.Mixin.receiveComponent.call(this, nextElement, transaction);
    }, updateComponent:ReactPerf.measure("ReactCompositeComponent", "updateComponent", function(transaction, prevParentElement) {
      ReactComponent.Mixin.updateComponent.call(this, transaction, prevParentElement);
      var prevComponentInstance = this._renderedComponent;
      var prevElement = prevComponentInstance._currentElement;
      var nextElement = this._renderValidatedComponent();
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        prevComponentInstance.receiveComponent(nextElement, transaction);
      } else {
        var thisID = this._rootNodeID;
        var prevComponentID = prevComponentInstance._rootNodeID;
        prevComponentInstance.unmountComponent();
        this._renderedComponent = instantiateReactComponent(nextElement, this._currentElement.type);
        var nextMarkup = this._renderedComponent.mountComponent(thisID, transaction, this._mountDepth + 1);
        ReactComponent.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(prevComponentID, nextMarkup);
      }
    }), forceUpdate:function(callback) {
      var compositeLifeCycleState = this._compositeLifeCycleState;
      "production" !== "development" ? invariant(this.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING, "forceUpdate(...): Can only force an update on mounted or mounting " + "components.") : invariant(this.isMounted() || compositeLifeCycleState === CompositeLifeCycle.MOUNTING);
      "production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING && ReactCurrentOwner.current == null, "forceUpdate(...): Cannot force an update while unmounting component " + "or within a `render` function.") : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING && ReactCurrentOwner.current == null);
      this._pendingForceUpdate = true;
      ReactUpdates.enqueueUpdate(this, callback);
    }, _renderValidatedComponent:ReactPerf.measure("ReactCompositeComponent", "_renderValidatedComponent", function() {
      var renderedComponent;
      var previousContext = ReactContext.current;
      ReactContext.current = this._processChildContext(this._currentElement._context);
      ReactCurrentOwner.current = this;
      try {
        renderedComponent = this.render();
        if (renderedComponent === null || renderedComponent === false) {
          renderedComponent = ReactEmptyComponent.getEmptyComponent();
          ReactEmptyComponent.registerNullComponentID(this._rootNodeID);
        } else {
          ReactEmptyComponent.deregisterNullComponentID(this._rootNodeID);
        }
      } finally {
        ReactContext.current = previousContext;
        ReactCurrentOwner.current = null;
      }
      "production" !== "development" ? invariant(ReactElement.isValidElement(renderedComponent), "%s.render(): A valid ReactComponent must be returned. You may have " + "returned undefined, an array or some other invalid object.", this.constructor.displayName || "ReactCompositeComponent") : invariant(ReactElement.isValidElement(renderedComponent));
      return renderedComponent;
    }), _bindAutoBindMethods:function() {
      for (var autoBindKey in this.__reactAutoBindMap) {
        if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
          continue;
        }
        var method = this.__reactAutoBindMap[autoBindKey];
        this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(method, this.constructor.displayName + "." + autoBindKey));
      }
    }, _bindAutoBindMethod:function(method) {
      var component = this;
      var boundMethod = method.bind(component);
      if ("production" !== "development") {
        boundMethod.__reactBoundContext = component;
        boundMethod.__reactBoundMethod = method;
        boundMethod.__reactBoundArguments = null;
        var componentName = component.constructor.displayName;
        var _bind = boundMethod.bind;
        boundMethod.bind = function(newThis) {
          for (var args = [], $__0 = 1, $__1 = arguments.length;$__0 < $__1;$__0++) {
            args.push(arguments[$__0]);
          }
          if (newThis !== component && newThis !== null) {
            monitorCodeUse("react_bind_warning", {component:componentName});
            console.warn("bind(): React component methods may only be bound to the " + "component instance. See " + componentName);
          } else {
            if (!args.length) {
              monitorCodeUse("react_bind_warning", {component:componentName});
              console.warn("bind(): You are binding a component method to the component. " + "React does this for you automatically in a high-performance " + "way, so you can safely remove this call. See " + componentName);
              return boundMethod;
            }
          }
          var reboundMethod = _bind.apply(boundMethod, arguments);
          reboundMethod.__reactBoundContext = component;
          reboundMethod.__reactBoundMethod = method;
          reboundMethod.__reactBoundArguments = args;
          return reboundMethod;
        };
      }
      return boundMethod;
    }};
    var ReactCompositeComponentBase = function() {
    };
    assign(ReactCompositeComponentBase.prototype, ReactComponent.Mixin, ReactOwner.Mixin, ReactPropTransferer.Mixin, ReactCompositeComponentMixin);
    var ReactCompositeComponent = {LifeCycle:CompositeLifeCycle, Base:ReactCompositeComponentBase, createClass:function(spec) {
      var Constructor = function(props) {
      };
      Constructor.prototype = new ReactCompositeComponentBase;
      Constructor.prototype.constructor = Constructor;
      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
      mixSpecIntoComponent(Constructor, spec);
      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }
      "production" !== "development" ? invariant(Constructor.prototype.render, "createClass(...): Class specification must implement a `render` method.") : invariant(Constructor.prototype.render);
      if ("production" !== "development") {
        if (Constructor.prototype.componentShouldUpdate) {
          monitorCodeUse("react_component_should_update_warning", {component:spec.displayName});
          console.warn((spec.displayName || "A component") + " has a method called " + "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " + "The name is phrased as a question because the function is " + "expected to return a value.");
        }
      }
      for (var methodName in ReactCompositeComponentInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }
      if ("production" !== "development") {
        return ReactLegacyElement.wrapFactory(ReactElementValidator.createFactory(Constructor));
      }
      return ReactLegacyElement.wrapFactory(ReactElement.createFactory(Constructor));
    }, injection:{injectMixin:function(mixin) {
      injectedMixins.push(mixin);
    }}};
    module.exports = ReactCompositeComponent;
  }, {"./Object.assign":27, "./ReactComponent":32, "./ReactContext":35, "./ReactCurrentOwner":36, "./ReactElement":52, "./ReactElementValidator":53, "./ReactEmptyComponent":54, "./ReactErrorUtils":55, "./ReactLegacyElement":61, "./ReactOwner":67, "./ReactPerf":68, "./ReactPropTransferer":69, "./ReactPropTypeLocationNames":70, "./ReactPropTypeLocations":71, "./ReactUpdates":79, "./instantiateReactComponent":125, "./invariant":126, "./keyMirror":132, "./keyOf":133, "./mapObject":134, "./monitorCodeUse":136, 
  "./shouldUpdateReactComponent":142, "./warning":145}], 35:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var ReactContext = {current:{}, withContext:function(newContext, scopedCallback) {
      var result;
      var previousContext = ReactContext.current;
      ReactContext.current = assign({}, previousContext, newContext);
      try {
        result = scopedCallback();
      } finally {
        ReactContext.current = previousContext;
      }
      return result;
    }};
    module.exports = ReactContext;
  }, {"./Object.assign":27}], 36:[function(_dereq_, module, exports) {
    var ReactCurrentOwner = {current:null};
    module.exports = ReactCurrentOwner;
  }, {}], 37:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactElementValidator = _dereq_("./ReactElementValidator");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var mapObject = _dereq_("./mapObject");
    function createDOMFactory(tag) {
      if ("production" !== "development") {
        return ReactLegacyElement.markNonLegacyFactory(ReactElementValidator.createFactory(tag));
      }
      return ReactLegacyElement.markNonLegacyFactory(ReactElement.createFactory(tag));
    }
    var ReactDOM = mapObject({a:"a", abbr:"abbr", address:"address", area:"area", article:"article", aside:"aside", audio:"audio", b:"b", base:"base", bdi:"bdi", bdo:"bdo", big:"big", blockquote:"blockquote", body:"body", br:"br", button:"button", canvas:"canvas", caption:"caption", cite:"cite", code:"code", col:"col", colgroup:"colgroup", data:"data", datalist:"datalist", dd:"dd", del:"del", details:"details", dfn:"dfn", dialog:"dialog", div:"div", dl:"dl", dt:"dt", em:"em", embed:"embed", fieldset:"fieldset", 
    figcaption:"figcaption", figure:"figure", footer:"footer", form:"form", h1:"h1", h2:"h2", h3:"h3", h4:"h4", h5:"h5", h6:"h6", head:"head", header:"header", hr:"hr", html:"html", i:"i", iframe:"iframe", img:"img", input:"input", ins:"ins", kbd:"kbd", keygen:"keygen", label:"label", legend:"legend", li:"li", link:"link", main:"main", map:"map", mark:"mark", menu:"menu", menuitem:"menuitem", meta:"meta", meter:"meter", nav:"nav", noscript:"noscript", object:"object", ol:"ol", optgroup:"optgroup", 
    option:"option", output:"output", p:"p", param:"param", picture:"picture", pre:"pre", progress:"progress", q:"q", rp:"rp", rt:"rt", ruby:"ruby", s:"s", samp:"samp", script:"script", section:"section", select:"select", small:"small", source:"source", span:"span", strong:"strong", style:"style", sub:"sub", summary:"summary", sup:"sup", table:"table", tbody:"tbody", td:"td", textarea:"textarea", tfoot:"tfoot", th:"th", thead:"thead", time:"time", title:"title", tr:"tr", track:"track", u:"u", ul:"ul", 
    "var":"var", video:"video", wbr:"wbr", circle:"circle", defs:"defs", ellipse:"ellipse", g:"g", line:"line", linearGradient:"linearGradient", mask:"mask", path:"path", pattern:"pattern", polygon:"polygon", polyline:"polyline", radialGradient:"radialGradient", rect:"rect", stop:"stop", svg:"svg", text:"text", tspan:"tspan"}, createDOMFactory);
    module.exports = ReactDOM;
  }, {"./ReactElement":52, "./ReactElementValidator":53, "./ReactLegacyElement":61, "./mapObject":134}], 38:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var keyMirror = _dereq_("./keyMirror");
    var button = ReactElement.createFactory(ReactDOM.button.type);
    var mouseListenerNames = keyMirror({onClick:true, onDoubleClick:true, onMouseDown:true, onMouseMove:true, onMouseUp:true, onClickCapture:true, onDoubleClickCapture:true, onMouseDownCapture:true, onMouseMoveCapture:true, onMouseUpCapture:true});
    var ReactDOMButton = ReactCompositeComponent.createClass({displayName:"ReactDOMButton", mixins:[AutoFocusMixin, ReactBrowserComponentMixin], render:function() {
      var props = {};
      for (var key in this.props) {
        if (this.props.hasOwnProperty(key) && (!this.props.disabled || !mouseListenerNames[key])) {
          props[key] = this.props[key];
        }
      }
      return button(props, this.props.children);
    }});
    module.exports = ReactDOMButton;
  }, {"./AutoFocusMixin":2, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./keyMirror":132}], 39:[function(_dereq_, module, exports) {
    var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
    var DOMProperty = _dereq_("./DOMProperty");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactMount = _dereq_("./ReactMount");
    var ReactMultiChild = _dereq_("./ReactMultiChild");
    var ReactPerf = _dereq_("./ReactPerf");
    var assign = _dereq_("./Object.assign");
    var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
    var invariant = _dereq_("./invariant");
    var isEventSupported = _dereq_("./isEventSupported");
    var keyOf = _dereq_("./keyOf");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var deleteListener = ReactBrowserEventEmitter.deleteListener;
    var listenTo = ReactBrowserEventEmitter.listenTo;
    var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
    var CONTENT_TYPES = {"string":true, "number":true};
    var STYLE = keyOf({style:null});
    var ELEMENT_NODE_TYPE = 1;
    function assertValidProps(props) {
      if (!props) {
        return;
      }
      "production" !== "development" ? invariant(props.children == null || props.dangerouslySetInnerHTML == null, "Can only set one of `children` or `props.dangerouslySetInnerHTML`.") : invariant(props.children == null || props.dangerouslySetInnerHTML == null);
      if ("production" !== "development") {
        if (props.contentEditable && props.children != null) {
          console.warn("A component is `contentEditable` and contains `children` managed by " + "React. It is now your responsibility to guarantee that none of those " + "nodes are unexpectedly modified or duplicated. This is probably not " + "intentional.");
        }
      }
      "production" !== "development" ? invariant(props.style == null || typeof props.style === "object", "The `style` prop expects a mapping from style properties to values, " + "not a string.") : invariant(props.style == null || typeof props.style === "object");
    }
    function putListener(id, registrationName, listener, transaction) {
      if ("production" !== "development") {
        if (registrationName === "onScroll" && !isEventSupported("scroll", true)) {
          monitorCodeUse("react_no_scroll_event");
          console.warn("This browser doesn't support the `onScroll` event");
        }
      }
      var container = ReactMount.findReactContainerForID(id);
      if (container) {
        var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
        listenTo(registrationName, doc);
      }
      transaction.getPutListenerQueue().enqueuePutListener(id, registrationName, listener);
    }
    var omittedCloseTags = {"area":true, "base":true, "br":true, "col":true, "embed":true, "hr":true, "img":true, "input":true, "keygen":true, "link":true, "meta":true, "param":true, "source":true, "track":true, "wbr":true};
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = {};
    var hasOwnProperty = {}.hasOwnProperty;
    function validateDangerousTag(tag) {
      if (!hasOwnProperty.call(validatedTagCache, tag)) {
        "production" !== "development" ? invariant(VALID_TAG_REGEX.test(tag), "Invalid tag: %s", tag) : invariant(VALID_TAG_REGEX.test(tag));
        validatedTagCache[tag] = true;
      }
    }
    function ReactDOMComponent(tag) {
      validateDangerousTag(tag);
      this._tag = tag;
      this.tagName = tag.toUpperCase();
    }
    ReactDOMComponent.displayName = "ReactDOMComponent";
    ReactDOMComponent.Mixin = {mountComponent:ReactPerf.measure("ReactDOMComponent", "mountComponent", function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
      assertValidProps(this.props);
      var closeTag = omittedCloseTags[this._tag] ? "" : "\x3c/" + this._tag + "\x3e";
      return this._createOpenTagMarkupAndPutListeners(transaction) + this._createContentMarkup(transaction) + closeTag;
    }), _createOpenTagMarkupAndPutListeners:function(transaction) {
      var props = this.props;
      var ret = "\x3c" + this._tag;
      for (var propKey in props) {
        if (!props.hasOwnProperty(propKey)) {
          continue;
        }
        var propValue = props[propKey];
        if (propValue == null) {
          continue;
        }
        if (registrationNameModules.hasOwnProperty(propKey)) {
          putListener(this._rootNodeID, propKey, propValue, transaction);
        } else {
          if (propKey === STYLE) {
            if (propValue) {
              propValue = props.style = assign({}, props.style);
            }
            propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
          }
          var markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
          if (markup) {
            ret += " " + markup;
          }
        }
      }
      if (transaction.renderToStaticMarkup) {
        return ret + "\x3e";
      }
      var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
      return ret + " " + markupForID + "\x3e";
    }, _createContentMarkup:function(transaction) {
      var innerHTML = this.props.dangerouslySetInnerHTML;
      if (innerHTML != null) {
        if (innerHTML.__html != null) {
          return innerHTML.__html;
        }
      } else {
        var contentToUse = CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
        var childrenToUse = contentToUse != null ? null : this.props.children;
        if (contentToUse != null) {
          return escapeTextForBrowser(contentToUse);
        } else {
          if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction);
            return mountImages.join("");
          }
        }
      }
      return "";
    }, receiveComponent:function(nextElement, transaction) {
      if (nextElement === this._currentElement && nextElement._owner != null) {
        return;
      }
      ReactComponent.Mixin.receiveComponent.call(this, nextElement, transaction);
    }, updateComponent:ReactPerf.measure("ReactDOMComponent", "updateComponent", function(transaction, prevElement) {
      assertValidProps(this._currentElement.props);
      ReactComponent.Mixin.updateComponent.call(this, transaction, prevElement);
      this._updateDOMProperties(prevElement.props, transaction);
      this._updateDOMChildren(prevElement.props, transaction);
    }), _updateDOMProperties:function(lastProps, transaction) {
      var nextProps = this.props;
      var propKey;
      var styleName;
      var styleUpdates;
      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
          continue;
        }
        if (propKey === STYLE) {
          var lastStyle = lastProps[propKey];
          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = "";
            }
          }
        } else {
          if (registrationNameModules.hasOwnProperty(propKey)) {
            deleteListener(this._rootNodeID, propKey);
          } else {
            if (DOMProperty.isStandardName[propKey] || DOMProperty.isCustomAttribute(propKey)) {
              ReactComponent.BackendIDOperations.deletePropertyByID(this._rootNodeID, propKey);
            }
          }
        }
      }
      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = lastProps[propKey];
        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
          continue;
        }
        if (propKey === STYLE) {
          if (nextProp) {
            nextProp = nextProps.style = assign({}, nextProp);
          }
          if (lastProp) {
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = "";
              }
            }
            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            styleUpdates = nextProp;
          }
        } else {
          if (registrationNameModules.hasOwnProperty(propKey)) {
            putListener(this._rootNodeID, propKey, nextProp, transaction);
          } else {
            if (DOMProperty.isStandardName[propKey] || DOMProperty.isCustomAttribute(propKey)) {
              ReactComponent.BackendIDOperations.updatePropertyByID(this._rootNodeID, propKey, nextProp);
            }
          }
        }
      }
      if (styleUpdates) {
        ReactComponent.BackendIDOperations.updateStylesByID(this._rootNodeID, styleUpdates);
      }
    }, _updateDOMChildren:function(lastProps, transaction) {
      var nextProps = this.props;
      var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
      var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
      var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
      var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
      var lastChildren = lastContent != null ? null : lastProps.children;
      var nextChildren = nextContent != null ? null : nextProps.children;
      var lastHasContentOrHtml = lastContent != null || lastHtml != null;
      var nextHasContentOrHtml = nextContent != null || nextHtml != null;
      if (lastChildren != null && nextChildren == null) {
        this.updateChildren(null, transaction);
      } else {
        if (lastHasContentOrHtml && !nextHasContentOrHtml) {
          this.updateTextContent("");
        }
      }
      if (nextContent != null) {
        if (lastContent !== nextContent) {
          this.updateTextContent("" + nextContent);
        }
      } else {
        if (nextHtml != null) {
          if (lastHtml !== nextHtml) {
            ReactComponent.BackendIDOperations.updateInnerHTMLByID(this._rootNodeID, nextHtml);
          }
        } else {
          if (nextChildren != null) {
            this.updateChildren(nextChildren, transaction);
          }
        }
      }
    }, unmountComponent:function() {
      this.unmountChildren();
      ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
      ReactComponent.Mixin.unmountComponent.call(this);
    }};
    assign(ReactDOMComponent.prototype, ReactComponent.Mixin, ReactDOMComponent.Mixin, ReactMultiChild.Mixin, ReactBrowserComponentMixin);
    module.exports = ReactDOMComponent;
  }, {"./CSSPropertyOperations":5, "./DOMProperty":11, "./DOMPropertyOperations":12, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactBrowserEventEmitter":30, "./ReactComponent":32, "./ReactMount":63, "./ReactMultiChild":64, "./ReactPerf":68, "./escapeTextForBrowser":109, "./invariant":126, "./isEventSupported":127, "./keyOf":133, "./monitorCodeUse":136}], 40:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var form = ReactElement.createFactory(ReactDOM.form.type);
    var ReactDOMForm = ReactCompositeComponent.createClass({displayName:"ReactDOMForm", mixins:[ReactBrowserComponentMixin, LocalEventTrapMixin], render:function() {
      return form(this.props);
    }, componentDidMount:function() {
      this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, "reset");
      this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, "submit");
    }});
    module.exports = ReactDOMForm;
  }, {"./EventConstants":16, "./LocalEventTrapMixin":25, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52}], 41:[function(_dereq_, module, exports) {
    var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
    var DOMChildrenOperations = _dereq_("./DOMChildrenOperations");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var ReactMount = _dereq_("./ReactMount");
    var ReactPerf = _dereq_("./ReactPerf");
    var invariant = _dereq_("./invariant");
    var setInnerHTML = _dereq_("./setInnerHTML");
    var INVALID_PROPERTY_ERRORS = {dangerouslySetInnerHTML:"`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.", style:"`style` must be set using `updateStylesByID()`."};
    var ReactDOMIDOperations = {updatePropertyByID:ReactPerf.measure("ReactDOMIDOperations", "updatePropertyByID", function(id, name, value) {
      var node = ReactMount.getNode(id);
      "production" !== "development" ? invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name), "updatePropertyByID(...): %s", INVALID_PROPERTY_ERRORS[name]) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name));
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(node, name, value);
      } else {
        DOMPropertyOperations.deleteValueForProperty(node, name);
      }
    }), deletePropertyByID:ReactPerf.measure("ReactDOMIDOperations", "deletePropertyByID", function(id, name, value) {
      var node = ReactMount.getNode(id);
      "production" !== "development" ? invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name), "updatePropertyByID(...): %s", INVALID_PROPERTY_ERRORS[name]) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name));
      DOMPropertyOperations.deleteValueForProperty(node, name, value);
    }), updateStylesByID:ReactPerf.measure("ReactDOMIDOperations", "updateStylesByID", function(id, styles) {
      var node = ReactMount.getNode(id);
      CSSPropertyOperations.setValueForStyles(node, styles);
    }), updateInnerHTMLByID:ReactPerf.measure("ReactDOMIDOperations", "updateInnerHTMLByID", function(id, html) {
      var node = ReactMount.getNode(id);
      setInnerHTML(node, html);
    }), updateTextContentByID:ReactPerf.measure("ReactDOMIDOperations", "updateTextContentByID", function(id, content) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.updateTextContent(node, content);
    }), dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure("ReactDOMIDOperations", "dangerouslyReplaceNodeWithMarkupByID", function(id, markup) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
    }), dangerouslyProcessChildrenUpdates:ReactPerf.measure("ReactDOMIDOperations", "dangerouslyProcessChildrenUpdates", function(updates, markup) {
      for (var i = 0;i < updates.length;i++) {
        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
      }
      DOMChildrenOperations.processUpdates(updates, markup);
    })};
    module.exports = ReactDOMIDOperations;
  }, {"./CSSPropertyOperations":5, "./DOMChildrenOperations":10, "./DOMPropertyOperations":12, "./ReactMount":63, "./ReactPerf":68, "./invariant":126, "./setInnerHTML":140}], 42:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var img = ReactElement.createFactory(ReactDOM.img.type);
    var ReactDOMImg = ReactCompositeComponent.createClass({displayName:"ReactDOMImg", tagName:"IMG", mixins:[ReactBrowserComponentMixin, LocalEventTrapMixin], render:function() {
      return img(this.props);
    }, componentDidMount:function() {
      this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, "load");
      this.trapBubbledEvent(EventConstants.topLevelTypes.topError, "error");
    }});
    module.exports = ReactDOMImg;
  }, {"./EventConstants":16, "./LocalEventTrapMixin":25, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52}], 43:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var LinkedValueUtils = _dereq_("./LinkedValueUtils");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactMount = _dereq_("./ReactMount");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var input = ReactElement.createFactory(ReactDOM.input.type);
    var instancesByReactID = {};
    function forceUpdateIfMounted() {
      if (this.isMounted()) {
        this.forceUpdate();
      }
    }
    var ReactDOMInput = ReactCompositeComponent.createClass({displayName:"ReactDOMInput", mixins:[AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin], getInitialState:function() {
      var defaultValue = this.props.defaultValue;
      return{initialChecked:this.props.defaultChecked || false, initialValue:defaultValue != null ? defaultValue : null};
    }, render:function() {
      var props = assign({}, this.props);
      props.defaultChecked = null;
      props.defaultValue = null;
      var value = LinkedValueUtils.getValue(this);
      props.value = value != null ? value : this.state.initialValue;
      var checked = LinkedValueUtils.getChecked(this);
      props.checked = checked != null ? checked : this.state.initialChecked;
      props.onChange = this._handleChange;
      return input(props, this.props.children);
    }, componentDidMount:function() {
      var id = ReactMount.getID(this.getDOMNode());
      instancesByReactID[id] = this;
    }, componentWillUnmount:function() {
      var rootNode = this.getDOMNode();
      var id = ReactMount.getID(rootNode);
      delete instancesByReactID[id];
    }, componentDidUpdate:function(prevProps, prevState, prevContext) {
      var rootNode = this.getDOMNode();
      if (this.props.checked != null) {
        DOMPropertyOperations.setValueForProperty(rootNode, "checked", this.props.checked || false);
      }
      var value = LinkedValueUtils.getValue(this);
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(rootNode, "value", "" + value);
      }
    }, _handleChange:function(event) {
      var returnValue;
      var onChange = LinkedValueUtils.getOnChange(this);
      if (onChange) {
        returnValue = onChange.call(this, event);
      }
      ReactUpdates.asap(forceUpdateIfMounted, this);
      var name = this.props.name;
      if (this.props.type === "radio" && name != null) {
        var rootNode = this.getDOMNode();
        var queryRoot = rootNode;
        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        }
        var group = queryRoot.querySelectorAll("input[name\x3d" + JSON.stringify("" + name) + '][type\x3d"radio"]');
        for (var i = 0, groupLen = group.length;i < groupLen;i++) {
          var otherNode = group[i];
          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          }
          var otherID = ReactMount.getID(otherNode);
          "production" !== "development" ? invariant(otherID, "ReactDOMInput: Mixing React and non-React radio inputs with the " + "same `name` is not supported.") : invariant(otherID);
          var otherInstance = instancesByReactID[otherID];
          "production" !== "development" ? invariant(otherInstance, "ReactDOMInput: Unknown radio button ID %s.", otherID) : invariant(otherInstance);
          ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
        }
      }
      return returnValue;
    }});
    module.exports = ReactDOMInput;
  }, {"./AutoFocusMixin":2, "./DOMPropertyOperations":12, "./LinkedValueUtils":24, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./ReactMount":63, "./ReactUpdates":79, "./invariant":126}], 44:[function(_dereq_, module, exports) {
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var warning = _dereq_("./warning");
    var option = ReactElement.createFactory(ReactDOM.option.type);
    var ReactDOMOption = ReactCompositeComponent.createClass({displayName:"ReactDOMOption", mixins:[ReactBrowserComponentMixin], componentWillMount:function() {
      if ("production" !== "development") {
        "production" !== "development" ? warning(this.props.selected == null, "Use the `defaultValue` or `value` props on \x3cselect\x3e instead of " + "setting `selected` on \x3coption\x3e.") : null;
      }
    }, render:function() {
      return option(this.props, this.props.children);
    }});
    module.exports = ReactDOMOption;
  }, {"./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./warning":145}], 45:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var LinkedValueUtils = _dereq_("./LinkedValueUtils");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var select = ReactElement.createFactory(ReactDOM.select.type);
    function updateWithPendingValueIfMounted() {
      if (this.isMounted()) {
        this.setState({value:this._pendingValue});
        this._pendingValue = 0;
      }
    }
    function selectValueType(props, propName, componentName) {
      if (props[propName] == null) {
        return;
      }
      if (props.multiple) {
        if (!Array.isArray(props[propName])) {
          return new Error("The `" + propName + "` prop supplied to \x3cselect\x3e must be an array if " + "`multiple` is true.");
        }
      } else {
        if (Array.isArray(props[propName])) {
          return new Error("The `" + propName + "` prop supplied to \x3cselect\x3e must be a scalar " + "value if `multiple` is false.");
        }
      }
    }
    function updateOptions(component, propValue) {
      var multiple = component.props.multiple;
      var value = propValue != null ? propValue : component.state.value;
      var options = component.getDOMNode().options;
      var selectedValue, i, l;
      if (multiple) {
        selectedValue = {};
        for (i = 0, l = value.length;i < l;++i) {
          selectedValue["" + value[i]] = true;
        }
      } else {
        selectedValue = "" + value;
      }
      for (i = 0, l = options.length;i < l;i++) {
        var selected = multiple ? selectedValue.hasOwnProperty(options[i].value) : options[i].value === selectedValue;
        if (selected !== options[i].selected) {
          options[i].selected = selected;
        }
      }
    }
    var ReactDOMSelect = ReactCompositeComponent.createClass({displayName:"ReactDOMSelect", mixins:[AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin], propTypes:{defaultValue:selectValueType, value:selectValueType}, getInitialState:function() {
      return{value:this.props.defaultValue || (this.props.multiple ? [] : "")};
    }, componentWillMount:function() {
      this._pendingValue = null;
    }, componentWillReceiveProps:function(nextProps) {
      if (!this.props.multiple && nextProps.multiple) {
        this.setState({value:[this.state.value]});
      } else {
        if (this.props.multiple && !nextProps.multiple) {
          this.setState({value:this.state.value[0]});
        }
      }
    }, render:function() {
      var props = assign({}, this.props);
      props.onChange = this._handleChange;
      props.value = null;
      return select(props, this.props.children);
    }, componentDidMount:function() {
      updateOptions(this, LinkedValueUtils.getValue(this));
    }, componentDidUpdate:function(prevProps) {
      var value = LinkedValueUtils.getValue(this);
      var prevMultiple = !!prevProps.multiple;
      var multiple = !!this.props.multiple;
      if (value != null || prevMultiple !== multiple) {
        updateOptions(this, value);
      }
    }, _handleChange:function(event) {
      var returnValue;
      var onChange = LinkedValueUtils.getOnChange(this);
      if (onChange) {
        returnValue = onChange.call(this, event);
      }
      var selectedValue;
      if (this.props.multiple) {
        selectedValue = [];
        var options = event.target.options;
        for (var i = 0, l = options.length;i < l;i++) {
          if (options[i].selected) {
            selectedValue.push(options[i].value);
          }
        }
      } else {
        selectedValue = event.target.value;
      }
      this._pendingValue = selectedValue;
      ReactUpdates.asap(updateWithPendingValueIfMounted, this);
      return returnValue;
    }});
    module.exports = ReactDOMSelect;
  }, {"./AutoFocusMixin":2, "./LinkedValueUtils":24, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./ReactUpdates":79}], 46:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var getNodeForCharacterOffset = _dereq_("./getNodeForCharacterOffset");
    var getTextContentAccessor = _dereq_("./getTextContentAccessor");
    function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
      return anchorNode === focusNode && anchorOffset === focusOffset;
    }
    function getIEOffsets(node) {
      var selection = document.selection;
      var selectedRange = selection.createRange();
      var selectedLength = selectedRange.text.length;
      var fromStart = selectedRange.duplicate();
      fromStart.moveToElementText(node);
      fromStart.setEndPoint("EndToStart", selectedRange);
      var startOffset = fromStart.text.length;
      var endOffset = startOffset + selectedLength;
      return{start:startOffset, end:endOffset};
    }
    function getModernOffsets(node) {
      var selection = window.getSelection && window.getSelection();
      if (!selection || selection.rangeCount === 0) {
        return null;
      }
      var anchorNode = selection.anchorNode;
      var anchorOffset = selection.anchorOffset;
      var focusNode = selection.focusNode;
      var focusOffset = selection.focusOffset;
      var currentRange = selection.getRangeAt(0);
      var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
      var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
      var tempRange = currentRange.cloneRange();
      tempRange.selectNodeContents(node);
      tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
      var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
      var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
      var end = start + rangeLength;
      var detectionRange = document.createRange();
      detectionRange.setStart(anchorNode, anchorOffset);
      detectionRange.setEnd(focusNode, focusOffset);
      var isBackward = detectionRange.collapsed;
      return{start:isBackward ? end : start, end:isBackward ? start : end};
    }
    function setIEOffsets(node, offsets) {
      var range = document.selection.createRange().duplicate();
      var start, end;
      if (typeof offsets.end === "undefined") {
        start = offsets.start;
        end = start;
      } else {
        if (offsets.start > offsets.end) {
          start = offsets.end;
          end = offsets.start;
        } else {
          start = offsets.start;
          end = offsets.end;
        }
      }
      range.moveToElementText(node);
      range.moveStart("character", start);
      range.setEndPoint("EndToStart", range);
      range.moveEnd("character", end - start);
      range.select();
    }
    function setModernOffsets(node, offsets) {
      if (!window.getSelection) {
        return;
      }
      var selection = window.getSelection();
      var length = node[getTextContentAccessor()].length;
      var start = Math.min(offsets.start, length);
      var end = typeof offsets.end === "undefined" ? start : Math.min(offsets.end, length);
      if (!selection.extend && start > end) {
        var temp = end;
        end = start;
        start = temp;
      }
      var startMarker = getNodeForCharacterOffset(node, start);
      var endMarker = getNodeForCharacterOffset(node, end);
      if (startMarker && endMarker) {
        var range = document.createRange();
        range.setStart(startMarker.node, startMarker.offset);
        selection.removeAllRanges();
        if (start > end) {
          selection.addRange(range);
          selection.extend(endMarker.node, endMarker.offset);
        } else {
          range.setEnd(endMarker.node, endMarker.offset);
          selection.addRange(range);
        }
      }
    }
    var useIEOffsets = ExecutionEnvironment.canUseDOM && document.selection;
    var ReactDOMSelection = {getOffsets:useIEOffsets ? getIEOffsets : getModernOffsets, setOffsets:useIEOffsets ? setIEOffsets : setModernOffsets};
    module.exports = ReactDOMSelection;
  }, {"./ExecutionEnvironment":22, "./getNodeForCharacterOffset":119, "./getTextContentAccessor":121}], 47:[function(_dereq_, module, exports) {
    var AutoFocusMixin = _dereq_("./AutoFocusMixin");
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var LinkedValueUtils = _dereq_("./LinkedValueUtils");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var ReactDOM = _dereq_("./ReactDOM");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var warning = _dereq_("./warning");
    var textarea = ReactElement.createFactory(ReactDOM.textarea.type);
    function forceUpdateIfMounted() {
      if (this.isMounted()) {
        this.forceUpdate();
      }
    }
    var ReactDOMTextarea = ReactCompositeComponent.createClass({displayName:"ReactDOMTextarea", mixins:[AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin], getInitialState:function() {
      var defaultValue = this.props.defaultValue;
      var children = this.props.children;
      if (children != null) {
        if ("production" !== "development") {
          "production" !== "development" ? warning(false, "Use the `defaultValue` or `value` props instead of setting " + "children on \x3ctextarea\x3e.") : null;
        }
        "production" !== "development" ? invariant(defaultValue == null, "If you supply `defaultValue` on a \x3ctextarea\x3e, do not pass children.") : invariant(defaultValue == null);
        if (Array.isArray(children)) {
          "production" !== "development" ? invariant(children.length <= 1, "\x3ctextarea\x3e can only have at most one child.") : invariant(children.length <= 1);
          children = children[0];
        }
        defaultValue = "" + children;
      }
      if (defaultValue == null) {
        defaultValue = "";
      }
      var value = LinkedValueUtils.getValue(this);
      return{initialValue:"" + (value != null ? value : defaultValue)};
    }, render:function() {
      var props = assign({}, this.props);
      "production" !== "development" ? invariant(props.dangerouslySetInnerHTML == null, "`dangerouslySetInnerHTML` does not make sense on \x3ctextarea\x3e.") : invariant(props.dangerouslySetInnerHTML == null);
      props.defaultValue = null;
      props.value = null;
      props.onChange = this._handleChange;
      return textarea(props, this.state.initialValue);
    }, componentDidUpdate:function(prevProps, prevState, prevContext) {
      var value = LinkedValueUtils.getValue(this);
      if (value != null) {
        var rootNode = this.getDOMNode();
        DOMPropertyOperations.setValueForProperty(rootNode, "value", "" + value);
      }
    }, _handleChange:function(event) {
      var returnValue;
      var onChange = LinkedValueUtils.getOnChange(this);
      if (onChange) {
        returnValue = onChange.call(this, event);
      }
      ReactUpdates.asap(forceUpdateIfMounted, this);
      return returnValue;
    }});
    module.exports = ReactDOMTextarea;
  }, {"./AutoFocusMixin":2, "./DOMPropertyOperations":12, "./LinkedValueUtils":24, "./Object.assign":27, "./ReactBrowserComponentMixin":29, "./ReactCompositeComponent":34, "./ReactDOM":37, "./ReactElement":52, "./ReactUpdates":79, "./invariant":126, "./warning":145}], 48:[function(_dereq_, module, exports) {
    var ReactUpdates = _dereq_("./ReactUpdates");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var RESET_BATCHED_UPDATES = {initialize:emptyFunction, close:function() {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }};
    var FLUSH_BATCHED_UPDATES = {initialize:emptyFunction, close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};
    var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
    function ReactDefaultBatchingStrategyTransaction() {
      this.reinitializeTransaction();
    }
    assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }});
    var transaction = new ReactDefaultBatchingStrategyTransaction;
    var ReactDefaultBatchingStrategy = {isBatchingUpdates:false, batchedUpdates:function(callback, a, b) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
      ReactDefaultBatchingStrategy.isBatchingUpdates = true;
      if (alreadyBatchingUpdates) {
        callback(a, b);
      } else {
        transaction.perform(callback, null, a, b);
      }
    }};
    module.exports = ReactDefaultBatchingStrategy;
  }, {"./Object.assign":27, "./ReactUpdates":79, "./Transaction":95, "./emptyFunction":107}], 49:[function(_dereq_, module, exports) {
    var BeforeInputEventPlugin = _dereq_("./BeforeInputEventPlugin");
    var ChangeEventPlugin = _dereq_("./ChangeEventPlugin");
    var ClientReactRootIndex = _dereq_("./ClientReactRootIndex");
    var CompositionEventPlugin = _dereq_("./CompositionEventPlugin");
    var DefaultEventPluginOrder = _dereq_("./DefaultEventPluginOrder");
    var EnterLeaveEventPlugin = _dereq_("./EnterLeaveEventPlugin");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var HTMLDOMPropertyConfig = _dereq_("./HTMLDOMPropertyConfig");
    var MobileSafariClickEventPlugin = _dereq_("./MobileSafariClickEventPlugin");
    var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
    var ReactComponentBrowserEnvironment = _dereq_("./ReactComponentBrowserEnvironment");
    var ReactDefaultBatchingStrategy = _dereq_("./ReactDefaultBatchingStrategy");
    var ReactDOMComponent = _dereq_("./ReactDOMComponent");
    var ReactDOMButton = _dereq_("./ReactDOMButton");
    var ReactDOMForm = _dereq_("./ReactDOMForm");
    var ReactDOMImg = _dereq_("./ReactDOMImg");
    var ReactDOMInput = _dereq_("./ReactDOMInput");
    var ReactDOMOption = _dereq_("./ReactDOMOption");
    var ReactDOMSelect = _dereq_("./ReactDOMSelect");
    var ReactDOMTextarea = _dereq_("./ReactDOMTextarea");
    var ReactEventListener = _dereq_("./ReactEventListener");
    var ReactInjection = _dereq_("./ReactInjection");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactMount = _dereq_("./ReactMount");
    var SelectEventPlugin = _dereq_("./SelectEventPlugin");
    var ServerReactRootIndex = _dereq_("./ServerReactRootIndex");
    var SimpleEventPlugin = _dereq_("./SimpleEventPlugin");
    var SVGDOMPropertyConfig = _dereq_("./SVGDOMPropertyConfig");
    var createFullPageComponent = _dereq_("./createFullPageComponent");
    function inject() {
      ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
      ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
      ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
      ReactInjection.EventPluginHub.injectMount(ReactMount);
      ReactInjection.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:SimpleEventPlugin, EnterLeaveEventPlugin:EnterLeaveEventPlugin, ChangeEventPlugin:ChangeEventPlugin, CompositionEventPlugin:CompositionEventPlugin, MobileSafariClickEventPlugin:MobileSafariClickEventPlugin, SelectEventPlugin:SelectEventPlugin, BeforeInputEventPlugin:BeforeInputEventPlugin});
      ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
      ReactInjection.NativeComponent.injectComponentClasses({"button":ReactDOMButton, "form":ReactDOMForm, "img":ReactDOMImg, "input":ReactDOMInput, "option":ReactDOMOption, "select":ReactDOMSelect, "textarea":ReactDOMTextarea, "html":createFullPageComponent("html"), "head":createFullPageComponent("head"), "body":createFullPageComponent("body")});
      ReactInjection.CompositeComponent.injectMixin(ReactBrowserComponentMixin);
      ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
      ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
      ReactInjection.EmptyComponent.injectEmptyComponent("noscript");
      ReactInjection.Updates.injectReconcileTransaction(ReactComponentBrowserEnvironment.ReactReconcileTransaction);
      ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
      ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
      ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
      if ("production" !== "development") {
        var url = ExecutionEnvironment.canUseDOM && window.location.href || "";
        if (/[?&]react_perf\b/.test(url)) {
          var ReactDefaultPerf = _dereq_("./ReactDefaultPerf");
          ReactDefaultPerf.start();
        }
      }
    }
    module.exports = {inject:inject};
  }, {"./BeforeInputEventPlugin":3, "./ChangeEventPlugin":7, "./ClientReactRootIndex":8, "./CompositionEventPlugin":9, "./DefaultEventPluginOrder":14, "./EnterLeaveEventPlugin":15, "./ExecutionEnvironment":22, "./HTMLDOMPropertyConfig":23, "./MobileSafariClickEventPlugin":26, "./ReactBrowserComponentMixin":29, "./ReactComponentBrowserEnvironment":33, "./ReactDOMButton":38, "./ReactDOMComponent":39, "./ReactDOMForm":40, "./ReactDOMImg":42, "./ReactDOMInput":43, "./ReactDOMOption":44, "./ReactDOMSelect":45, 
  "./ReactDOMTextarea":47, "./ReactDefaultBatchingStrategy":48, "./ReactDefaultPerf":50, "./ReactEventListener":57, "./ReactInjection":58, "./ReactInstanceHandles":60, "./ReactMount":63, "./SVGDOMPropertyConfig":80, "./SelectEventPlugin":81, "./ServerReactRootIndex":82, "./SimpleEventPlugin":83, "./createFullPageComponent":103}], 50:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var ReactDefaultPerfAnalysis = _dereq_("./ReactDefaultPerfAnalysis");
    var ReactMount = _dereq_("./ReactMount");
    var ReactPerf = _dereq_("./ReactPerf");
    var performanceNow = _dereq_("./performanceNow");
    function roundFloat(val) {
      return Math.floor(val * 100) / 100;
    }
    function addValue(obj, key, val) {
      obj[key] = (obj[key] || 0) + val;
    }
    var ReactDefaultPerf = {_allMeasurements:[], _mountStack:[0], _injected:false, start:function() {
      if (!ReactDefaultPerf._injected) {
        ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
      }
      ReactDefaultPerf._allMeasurements.length = 0;
      ReactPerf.enableMeasure = true;
    }, stop:function() {
      ReactPerf.enableMeasure = false;
    }, getLastMeasurements:function() {
      return ReactDefaultPerf._allMeasurements;
    }, printExclusive:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
      console.table(summary.map(function(item) {
        return{"Component class name":item.componentName, "Total inclusive time (ms)":roundFloat(item.inclusive), "Exclusive mount time (ms)":roundFloat(item.exclusive), "Exclusive render time (ms)":roundFloat(item.render), "Mount time per instance (ms)":roundFloat(item.exclusive / item.count), "Render time per instance (ms)":roundFloat(item.render / item.count), "Instances":item.count};
      }));
    }, printInclusive:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
      console.table(summary.map(function(item) {
        return{"Owner \x3e component":item.componentName, "Inclusive time (ms)":roundFloat(item.time), "Instances":item.count};
      }));
      console.log("Total time:", ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + " ms");
    }, getMeasurementsSummaryMap:function(measurements) {
      var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
      return summary.map(function(item) {
        return{"Owner \x3e component":item.componentName, "Wasted time (ms)":item.time, "Instances":item.count};
      });
    }, printWasted:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
      console.log("Total time:", ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + " ms");
    }, printDOM:function(measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
      console.table(summary.map(function(item) {
        var result = {};
        result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
        result["type"] = item.type;
        result["args"] = JSON.stringify(item.args);
        return result;
      }));
      console.log("Total time:", ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + " ms");
    }, _recordWrite:function(id, fnName, totalTime, args) {
      var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
      writes[id] = writes[id] || [];
      writes[id].push({type:fnName, time:totalTime, args:args});
    }, measure:function(moduleName, fnName, func) {
      return function() {
        for (var args = [], $__0 = 0, $__1 = arguments.length;$__0 < $__1;$__0++) {
          args.push(arguments[$__0]);
        }
        var totalTime;
        var rv;
        var start;
        if (fnName === "_renderNewRootComponent" || fnName === "flushBatchedUpdates") {
          ReactDefaultPerf._allMeasurements.push({exclusive:{}, inclusive:{}, render:{}, counts:{}, writes:{}, displayNames:{}, totalTime:0});
          start = performanceNow();
          rv = func.apply(this, args);
          ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
          return rv;
        } else {
          if (moduleName === "ReactDOMIDOperations" || moduleName === "ReactComponentBrowserEnvironment") {
            start = performanceNow();
            rv = func.apply(this, args);
            totalTime = performanceNow() - start;
            if (fnName === "mountImageIntoNode") {
              var mountID = ReactMount.getID(args[1]);
              ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
            } else {
              if (fnName === "dangerouslyProcessChildrenUpdates") {
                args[0].forEach(function(update) {
                  var writeArgs = {};
                  if (update.fromIndex !== null) {
                    writeArgs.fromIndex = update.fromIndex;
                  }
                  if (update.toIndex !== null) {
                    writeArgs.toIndex = update.toIndex;
                  }
                  if (update.textContent !== null) {
                    writeArgs.textContent = update.textContent;
                  }
                  if (update.markupIndex !== null) {
                    writeArgs.markup = args[1][update.markupIndex];
                  }
                  ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
                });
              } else {
                ReactDefaultPerf._recordWrite(args[0], fnName, totalTime, Array.prototype.slice.call(args, 1));
              }
            }
            return rv;
          } else {
            if (moduleName === "ReactCompositeComponent" && (fnName === "mountComponent" || fnName === "updateComponent" || fnName === "_renderValidatedComponent")) {
              var rootNodeID = fnName === "mountComponent" ? args[0] : this._rootNodeID;
              var isRender = fnName === "_renderValidatedComponent";
              var isMount = fnName === "mountComponent";
              var mountStack = ReactDefaultPerf._mountStack;
              var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
              if (isRender) {
                addValue(entry.counts, rootNodeID, 1);
              } else {
                if (isMount) {
                  mountStack.push(0);
                }
              }
              start = performanceNow();
              rv = func.apply(this, args);
              totalTime = performanceNow() - start;
              if (isRender) {
                addValue(entry.render, rootNodeID, totalTime);
              } else {
                if (isMount) {
                  var subMountTime = mountStack.pop();
                  mountStack[mountStack.length - 1] += totalTime;
                  addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
                  addValue(entry.inclusive, rootNodeID, totalTime);
                } else {
                  addValue(entry.inclusive, rootNodeID, totalTime);
                }
              }
              entry.displayNames[rootNodeID] = {current:this.constructor.displayName, owner:this._owner ? this._owner.constructor.displayName : "\x3croot\x3e"};
              return rv;
            } else {
              return func.apply(this, args);
            }
          }
        }
      };
    }};
    module.exports = ReactDefaultPerf;
  }, {"./DOMProperty":11, "./ReactDefaultPerfAnalysis":51, "./ReactMount":63, "./ReactPerf":68, "./performanceNow":139}], 51:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var DONT_CARE_THRESHOLD = 1.2;
    var DOM_OPERATION_TYPES = {"mountImageIntoNode":"set innerHTML", INSERT_MARKUP:"set innerHTML", MOVE_EXISTING:"move", REMOVE_NODE:"remove", TEXT_CONTENT:"set textContent", "updatePropertyByID":"update attribute", "deletePropertyByID":"delete attribute", "updateStylesByID":"update styles", "updateInnerHTMLByID":"set innerHTML", "dangerouslyReplaceNodeWithMarkupByID":"replace"};
    function getTotalTime(measurements) {
      var totalTime = 0;
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        totalTime += measurement.totalTime;
      }
      return totalTime;
    }
    function getDOMSummary(measurements) {
      var items = [];
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        var id;
        for (id in measurement.writes) {
          measurement.writes[id].forEach(function(write) {
            items.push({id:id, type:DOM_OPERATION_TYPES[write.type] || write.type, args:write.args});
          });
        }
      }
      return items;
    }
    function getExclusiveSummary(measurements) {
      var candidates = {};
      var displayName;
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
        for (var id in allIDs) {
          displayName = measurement.displayNames[id].current;
          candidates[displayName] = candidates[displayName] || {componentName:displayName, inclusive:0, exclusive:0, render:0, count:0};
          if (measurement.render[id]) {
            candidates[displayName].render += measurement.render[id];
          }
          if (measurement.exclusive[id]) {
            candidates[displayName].exclusive += measurement.exclusive[id];
          }
          if (measurement.inclusive[id]) {
            candidates[displayName].inclusive += measurement.inclusive[id];
          }
          if (measurement.counts[id]) {
            candidates[displayName].count += measurement.counts[id];
          }
        }
      }
      var arr = [];
      for (displayName in candidates) {
        if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
          arr.push(candidates[displayName]);
        }
      }
      arr.sort(function(a, b) {
        return b.exclusive - a.exclusive;
      });
      return arr;
    }
    function getInclusiveSummary(measurements, onlyClean) {
      var candidates = {};
      var inclusiveKey;
      for (var i = 0;i < measurements.length;i++) {
        var measurement = measurements[i];
        var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
        var cleanComponents;
        if (onlyClean) {
          cleanComponents = getUnchangedComponents(measurement);
        }
        for (var id in allIDs) {
          if (onlyClean && !cleanComponents[id]) {
            continue;
          }
          var displayName = measurement.displayNames[id];
          inclusiveKey = displayName.owner + " \x3e " + displayName.current;
          candidates[inclusiveKey] = candidates[inclusiveKey] || {componentName:inclusiveKey, time:0, count:0};
          if (measurement.inclusive[id]) {
            candidates[inclusiveKey].time += measurement.inclusive[id];
          }
          if (measurement.counts[id]) {
            candidates[inclusiveKey].count += measurement.counts[id];
          }
        }
      }
      var arr = [];
      for (inclusiveKey in candidates) {
        if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
          arr.push(candidates[inclusiveKey]);
        }
      }
      arr.sort(function(a, b) {
        return b.time - a.time;
      });
      return arr;
    }
    function getUnchangedComponents(measurement) {
      var cleanComponents = {};
      var dirtyLeafIDs = Object.keys(measurement.writes);
      var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
      for (var id in allIDs) {
        var isDirty = false;
        for (var i = 0;i < dirtyLeafIDs.length;i++) {
          if (dirtyLeafIDs[i].indexOf(id) === 0) {
            isDirty = true;
            break;
          }
        }
        if (!isDirty && measurement.counts[id] > 0) {
          cleanComponents[id] = true;
        }
      }
      return cleanComponents;
    }
    var ReactDefaultPerfAnalysis = {getExclusiveSummary:getExclusiveSummary, getInclusiveSummary:getInclusiveSummary, getDOMSummary:getDOMSummary, getTotalTime:getTotalTime};
    module.exports = ReactDefaultPerfAnalysis;
  }, {"./Object.assign":27}], 52:[function(_dereq_, module, exports) {
    var ReactContext = _dereq_("./ReactContext");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var warning = _dereq_("./warning");
    var RESERVED_PROPS = {key:true, ref:true};
    function defineWarningProperty(object, key) {
      Object.defineProperty(object, key, {configurable:false, enumerable:true, get:function() {
        if (!this._store) {
          return null;
        }
        return this._store[key];
      }, set:function(value) {
        "production" !== "development" ? warning(false, "Don't set the " + key + " property of the component. " + "Mutate the existing props object instead.") : null;
        this._store[key] = value;
      }});
    }
    var useMutationMembrane = false;
    function defineMutationMembrane(prototype) {
      try {
        var pseudoFrozenProperties = {props:true};
        for (var key in pseudoFrozenProperties) {
          defineWarningProperty(prototype, key);
        }
        useMutationMembrane = true;
      } catch (x) {
      }
    }
    var ReactElement = function(type, key, ref, owner, context, props) {
      this.type = type;
      this.key = key;
      this.ref = ref;
      this._owner = owner;
      this._context = context;
      if ("production" !== "development") {
        this._store = {validated:false, props:props};
        if (useMutationMembrane) {
          Object.freeze(this);
          return;
        }
      }
      this.props = props;
    };
    ReactElement.prototype = {_isReactElement:true};
    if ("production" !== "development") {
      defineMutationMembrane(ReactElement.prototype);
    }
    ReactElement.createElement = function(type, config, children) {
      var propName;
      var props = {};
      var key = null;
      var ref = null;
      if (config != null) {
        ref = config.ref === undefined ? null : config.ref;
        if ("production" !== "development") {
          "production" !== "development" ? warning(config.key !== null, "createElement(...): Encountered component with a `key` of null. In " + "a future version, this will be treated as equivalent to the string " + "'null'; instead, provide an explicit key or use undefined.") : null;
        }
        key = config.key == null ? null : "" + config.key;
        for (propName in config) {
          if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else {
        if (childrenLength > 1) {
          var childArray = Array(childrenLength);
          for (var i = 0;i < childrenLength;i++) {
            childArray[i] = arguments[i + 2];
          }
          props.children = childArray;
        }
      }
      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (typeof props[propName] === "undefined") {
            props[propName] = defaultProps[propName];
          }
        }
      }
      return new ReactElement(type, key, ref, ReactCurrentOwner.current, ReactContext.current, props);
    };
    ReactElement.createFactory = function(type) {
      var factory = ReactElement.createElement.bind(null, type);
      factory.type = type;
      return factory;
    };
    ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
      var newElement = new ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._owner, oldElement._context, newProps);
      if ("production" !== "development") {
        newElement._store.validated = oldElement._store.validated;
      }
      return newElement;
    };
    ReactElement.isValidElement = function(object) {
      var isElement = !!(object && object._isReactElement);
      return isElement;
    };
    module.exports = ReactElement;
  }, {"./ReactContext":35, "./ReactCurrentOwner":36, "./warning":145}], 53:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var warning = _dereq_("./warning");
    var ownerHasKeyUseWarning = {"react_key_warning":{}, "react_numeric_key_warning":{}};
    var ownerHasMonitoredObjectMap = {};
    var loggedTypeFailures = {};
    var NUMERIC_PROPERTY_REGEX = /^\d+$/;
    function getCurrentOwnerDisplayName() {
      var current = ReactCurrentOwner.current;
      return current && current.constructor.displayName || undefined;
    }
    function validateExplicitKey(component, parentType) {
      if (component._store.validated || component.key != null) {
        return;
      }
      component._store.validated = true;
      warnAndMonitorForKeyUse("react_key_warning", 'Each child in an array should have a unique "key" prop.', component, parentType);
    }
    function validatePropertyKey(name, component, parentType) {
      if (!NUMERIC_PROPERTY_REGEX.test(name)) {
        return;
      }
      warnAndMonitorForKeyUse("react_numeric_key_warning", "Child objects should have non-numeric keys so ordering is preserved.", component, parentType);
    }
    function warnAndMonitorForKeyUse(warningID, message, component, parentType) {
      var ownerName = getCurrentOwnerDisplayName();
      var parentName = parentType.displayName;
      var useName = ownerName || parentName;
      var memoizer = ownerHasKeyUseWarning[warningID];
      if (memoizer.hasOwnProperty(useName)) {
        return;
      }
      memoizer[useName] = true;
      message += ownerName ? " Check the render method of " + ownerName + "." : " Check the renderComponent call using \x3c" + parentName + "\x3e.";
      var childOwnerName = null;
      if (component._owner && component._owner !== ReactCurrentOwner.current) {
        childOwnerName = component._owner.constructor.displayName;
        message += " It was passed a child from " + childOwnerName + ".";
      }
      message += " See http://fb.me/react-warning-keys for more information.";
      monitorCodeUse(warningID, {component:useName, componentOwner:childOwnerName});
      console.warn(message);
    }
    function monitorUseOfObjectMap() {
      var currentName = getCurrentOwnerDisplayName() || "";
      if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {
        return;
      }
      ownerHasMonitoredObjectMap[currentName] = true;
      monitorCodeUse("react_object_map_children");
    }
    function validateChildKeys(component, parentType) {
      if (Array.isArray(component)) {
        for (var i = 0;i < component.length;i++) {
          var child = component[i];
          if (ReactElement.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else {
        if (ReactElement.isValidElement(component)) {
          component._store.validated = true;
        } else {
          if (component && typeof component === "object") {
            monitorUseOfObjectMap();
            for (var name in component) {
              validatePropertyKey(name, component[name], parentType);
            }
          }
        }
      }
    }
    function checkPropTypes(componentName, propTypes, props, location) {
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error;
          try {
            error = propTypes[propName](props, propName, componentName, location);
          } catch (ex) {
            error = ex;
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            monitorCodeUse("react_failed_descriptor_type_check", {message:error.message});
          }
        }
      }
    }
    var ReactElementValidator = {createElement:function(type, props, children) {
      "production" !== "development" ? warning(type != null, "React.createElement: type should not be null or undefined. It should " + "be a string (for DOM elements) or a ReactClass (for composite " + "components).") : null;
      var element = ReactElement.createElement.apply(this, arguments);
      if (element == null) {
        return element;
      }
      for (var i = 2;i < arguments.length;i++) {
        validateChildKeys(arguments[i], type);
      }
      if (type) {
        var name = type.displayName;
        if (type.propTypes) {
          checkPropTypes(name, type.propTypes, element.props, ReactPropTypeLocations.prop);
        }
        if (type.contextTypes) {
          checkPropTypes(name, type.contextTypes, element._context, ReactPropTypeLocations.context);
        }
      }
      return element;
    }, createFactory:function(type) {
      var validatedFactory = ReactElementValidator.createElement.bind(null, type);
      validatedFactory.type = type;
      return validatedFactory;
    }};
    module.exports = ReactElementValidator;
  }, {"./ReactCurrentOwner":36, "./ReactElement":52, "./ReactPropTypeLocations":71, "./monitorCodeUse":136, "./warning":145}], 54:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var invariant = _dereq_("./invariant");
    var component;
    var nullComponentIdsRegistry = {};
    var ReactEmptyComponentInjection = {injectEmptyComponent:function(emptyComponent) {
      component = ReactElement.createFactory(emptyComponent);
    }};
    function getEmptyComponent() {
      "production" !== "development" ? invariant(component, "Trying to return null from a render, but no null placeholder component " + "was injected.") : invariant(component);
      return component();
    }
    function registerNullComponentID(id) {
      nullComponentIdsRegistry[id] = true;
    }
    function deregisterNullComponentID(id) {
      delete nullComponentIdsRegistry[id];
    }
    function isNullComponentID(id) {
      return nullComponentIdsRegistry[id];
    }
    var ReactEmptyComponent = {deregisterNullComponentID:deregisterNullComponentID, getEmptyComponent:getEmptyComponent, injection:ReactEmptyComponentInjection, isNullComponentID:isNullComponentID, registerNullComponentID:registerNullComponentID};
    module.exports = ReactEmptyComponent;
  }, {"./ReactElement":52, "./invariant":126}], 55:[function(_dereq_, module, exports) {
    var ReactErrorUtils = {guard:function(func, name) {
      return func;
    }};
    module.exports = ReactErrorUtils;
  }, {}], 56:[function(_dereq_, module, exports) {
    var EventPluginHub = _dereq_("./EventPluginHub");
    function runEventQueueInBatch(events) {
      EventPluginHub.enqueueEvents(events);
      EventPluginHub.processEventQueue();
    }
    var ReactEventEmitterMixin = {handleTopLevel:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent);
      runEventQueueInBatch(events);
    }};
    module.exports = ReactEventEmitterMixin;
  }, {"./EventPluginHub":18}], 57:[function(_dereq_, module, exports) {
    var EventListener = _dereq_("./EventListener");
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var PooledClass = _dereq_("./PooledClass");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactMount = _dereq_("./ReactMount");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var assign = _dereq_("./Object.assign");
    var getEventTarget = _dereq_("./getEventTarget");
    var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");
    function findParent(node) {
      var nodeID = ReactMount.getID(node);
      var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
      var container = ReactMount.findReactContainerForID(rootID);
      var parent = ReactMount.getFirstReactDOM(container);
      return parent;
    }
    function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
      this.topLevelType = topLevelType;
      this.nativeEvent = nativeEvent;
      this.ancestors = [];
    }
    assign(TopLevelCallbackBookKeeping.prototype, {destructor:function() {
      this.topLevelType = null;
      this.nativeEvent = null;
      this.ancestors.length = 0;
    }});
    PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
    function handleTopLevelImpl(bookKeeping) {
      var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
      var ancestor = topLevelTarget;
      while (ancestor) {
        bookKeeping.ancestors.push(ancestor);
        ancestor = findParent(ancestor);
      }
      for (var i = 0, l = bookKeeping.ancestors.length;i < l;i++) {
        topLevelTarget = bookKeeping.ancestors[i];
        var topLevelTargetID = ReactMount.getID(topLevelTarget) || "";
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent);
      }
    }
    function scrollValueMonitor(cb) {
      var scrollPosition = getUnboundedScrollPosition(window);
      cb(scrollPosition);
    }
    var ReactEventListener = {_enabled:true, _handleTopLevel:null, WINDOW_HANDLE:ExecutionEnvironment.canUseDOM ? window : null, setHandleTopLevel:function(handleTopLevel) {
      ReactEventListener._handleTopLevel = handleTopLevel;
    }, setEnabled:function(enabled) {
      ReactEventListener._enabled = !!enabled;
    }, isEnabled:function() {
      return ReactEventListener._enabled;
    }, trapBubbledEvent:function(topLevelType, handlerBaseName, handle) {
      var element = handle;
      if (!element) {
        return;
      }
      return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    }, trapCapturedEvent:function(topLevelType, handlerBaseName, handle) {
      var element = handle;
      if (!element) {
        return;
      }
      return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    }, monitorScrollValue:function(refresh) {
      var callback = scrollValueMonitor.bind(null, refresh);
      EventListener.listen(window, "scroll", callback);
      EventListener.listen(window, "resize", callback);
    }, dispatchEvent:function(topLevelType, nativeEvent) {
      if (!ReactEventListener._enabled) {
        return;
      }
      var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
      try {
        ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
      } finally {
        TopLevelCallbackBookKeeping.release(bookKeeping);
      }
    }};
    module.exports = ReactEventListener;
  }, {"./EventListener":17, "./ExecutionEnvironment":22, "./Object.assign":27, "./PooledClass":28, "./ReactInstanceHandles":60, "./ReactMount":63, "./ReactUpdates":79, "./getEventTarget":117, "./getUnboundedScrollPosition":122}], 58:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var EventPluginHub = _dereq_("./EventPluginHub");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactNativeComponent = _dereq_("./ReactNativeComponent");
    var ReactPerf = _dereq_("./ReactPerf");
    var ReactRootIndex = _dereq_("./ReactRootIndex");
    var ReactUpdates = _dereq_("./ReactUpdates");
    var ReactInjection = {Component:ReactComponent.injection, CompositeComponent:ReactCompositeComponent.injection, DOMProperty:DOMProperty.injection, EmptyComponent:ReactEmptyComponent.injection, EventPluginHub:EventPluginHub.injection, EventEmitter:ReactBrowserEventEmitter.injection, NativeComponent:ReactNativeComponent.injection, Perf:ReactPerf.injection, RootIndex:ReactRootIndex.injection, Updates:ReactUpdates.injection};
    module.exports = ReactInjection;
  }, {"./DOMProperty":11, "./EventPluginHub":18, "./ReactBrowserEventEmitter":30, "./ReactComponent":32, "./ReactCompositeComponent":34, "./ReactEmptyComponent":54, "./ReactNativeComponent":66, "./ReactPerf":68, "./ReactRootIndex":75, "./ReactUpdates":79}], 59:[function(_dereq_, module, exports) {
    var ReactDOMSelection = _dereq_("./ReactDOMSelection");
    var containsNode = _dereq_("./containsNode");
    var focusNode = _dereq_("./focusNode");
    var getActiveElement = _dereq_("./getActiveElement");
    function isInDocument(node) {
      return containsNode(document.documentElement, node);
    }
    var ReactInputSelection = {hasSelectionCapabilities:function(elem) {
      return elem && (elem.nodeName === "INPUT" && elem.type === "text" || elem.nodeName === "TEXTAREA" || elem.contentEditable === "true");
    }, getSelectionInformation:function() {
      var focusedElem = getActiveElement();
      return{focusedElem:focusedElem, selectionRange:ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null};
    }, restoreSelection:function(priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    }, getSelection:function(input) {
      var selection;
      if ("selectionStart" in input) {
        selection = {start:input.selectionStart, end:input.selectionEnd};
      } else {
        if (document.selection && input.nodeName === "INPUT") {
          var range = document.selection.createRange();
          if (range.parentElement() === input) {
            selection = {start:-range.moveStart("character", -input.value.length), end:-range.moveEnd("character", -input.value.length)};
          }
        } else {
          selection = ReactDOMSelection.getOffsets(input);
        }
      }
      return selection || {start:0, end:0};
    }, setSelection:function(input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (typeof end === "undefined") {
        end = start;
      }
      if ("selectionStart" in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else {
        if (document.selection && input.nodeName === "INPUT") {
          var range = input.createTextRange();
          range.collapse(true);
          range.moveStart("character", start);
          range.moveEnd("character", end - start);
          range.select();
        } else {
          ReactDOMSelection.setOffsets(input, offsets);
        }
      }
    }};
    module.exports = ReactInputSelection;
  }, {"./ReactDOMSelection":46, "./containsNode":101, "./focusNode":111, "./getActiveElement":113}], 60:[function(_dereq_, module, exports) {
    var ReactRootIndex = _dereq_("./ReactRootIndex");
    var invariant = _dereq_("./invariant");
    var SEPARATOR = ".";
    var SEPARATOR_LENGTH = SEPARATOR.length;
    var MAX_TREE_DEPTH = 100;
    function getReactRootIDString(index) {
      return SEPARATOR + index.toString(36);
    }
    function isBoundary(id, index) {
      return id.charAt(index) === SEPARATOR || index === id.length;
    }
    function isValidID(id) {
      return id === "" || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
    }
    function isAncestorIDOf(ancestorID, descendantID) {
      return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
    }
    function getParentID(id) {
      return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : "";
    }
    function getNextDescendantID(ancestorID, destinationID) {
      "production" !== "development" ? invariant(isValidID(ancestorID) && isValidID(destinationID), "getNextDescendantID(%s, %s): Received an invalid React DOM ID.", ancestorID, destinationID) : invariant(isValidID(ancestorID) && isValidID(destinationID));
      "production" !== "development" ? invariant(isAncestorIDOf(ancestorID, destinationID), "getNextDescendantID(...): React has made an invalid assumption about " + "the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.", ancestorID, destinationID) : invariant(isAncestorIDOf(ancestorID, destinationID));
      if (ancestorID === destinationID) {
        return ancestorID;
      }
      var start = ancestorID.length + SEPARATOR_LENGTH;
      for (var i = start;i < destinationID.length;i++) {
        if (isBoundary(destinationID, i)) {
          break;
        }
      }
      return destinationID.substr(0, i);
    }
    function getFirstCommonAncestorID(oneID, twoID) {
      var minLength = Math.min(oneID.length, twoID.length);
      if (minLength === 0) {
        return "";
      }
      var lastCommonMarkerIndex = 0;
      for (var i = 0;i <= minLength;i++) {
        if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
          lastCommonMarkerIndex = i;
        } else {
          if (oneID.charAt(i) !== twoID.charAt(i)) {
            break;
          }
        }
      }
      var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
      "production" !== "development" ? invariant(isValidID(longestCommonID), "getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s", oneID, twoID, longestCommonID) : invariant(isValidID(longestCommonID));
      return longestCommonID;
    }
    function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
      start = start || "";
      stop = stop || "";
      "production" !== "development" ? invariant(start !== stop, "traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.", start) : invariant(start !== stop);
      var traverseUp = isAncestorIDOf(stop, start);
      "production" !== "development" ? invariant(traverseUp || isAncestorIDOf(start, stop), "traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do " + "not have a parent path.", start, stop) : invariant(traverseUp || isAncestorIDOf(start, stop));
      var depth = 0;
      var traverse = traverseUp ? getParentID : getNextDescendantID;
      for (var id = start;;id = traverse(id, stop)) {
        var ret;
        if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
          ret = cb(id, traverseUp, arg);
        }
        if (ret === false || id === stop) {
          break;
        }
        "production" !== "development" ? invariant(depth++ < MAX_TREE_DEPTH, "traverseParentPath(%s, %s, ...): Detected an infinite loop while " + "traversing the React DOM ID tree. This may be due to malformed IDs: %s", start, stop) : invariant(depth++ < MAX_TREE_DEPTH);
      }
    }
    var ReactInstanceHandles = {createReactRootID:function() {
      return getReactRootIDString(ReactRootIndex.createReactRootIndex());
    }, createReactID:function(rootID, name) {
      return rootID + name;
    }, getReactRootIDFromNodeID:function(id) {
      if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
        var index = id.indexOf(SEPARATOR, 1);
        return index > -1 ? id.substr(0, index) : id;
      }
      return null;
    }, traverseEnterLeave:function(leaveID, enterID, cb, upArg, downArg) {
      var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
      if (ancestorID !== leaveID) {
        traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
      }
      if (ancestorID !== enterID) {
        traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
      }
    }, traverseTwoPhase:function(targetID, cb, arg) {
      if (targetID) {
        traverseParentPath("", targetID, cb, arg, true, false);
        traverseParentPath(targetID, "", cb, arg, false, true);
      }
    }, traverseAncestors:function(targetID, cb, arg) {
      traverseParentPath("", targetID, cb, arg, true, false);
    }, _getFirstCommonAncestorID:getFirstCommonAncestorID, _getNextDescendantID:getNextDescendantID, isAncestorIDOf:isAncestorIDOf, SEPARATOR:SEPARATOR};
    module.exports = ReactInstanceHandles;
  }, {"./ReactRootIndex":75, "./invariant":126}], 61:[function(_dereq_, module, exports) {
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var invariant = _dereq_("./invariant");
    var monitorCodeUse = _dereq_("./monitorCodeUse");
    var warning = _dereq_("./warning");
    var legacyFactoryLogs = {};
    function warnForLegacyFactoryCall() {
      if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {
        return;
      }
      var owner = ReactCurrentOwner.current;
      var name = owner && owner.constructor ? owner.constructor.displayName : "";
      if (!name) {
        name = "Something";
      }
      if (legacyFactoryLogs.hasOwnProperty(name)) {
        return;
      }
      legacyFactoryLogs[name] = true;
      "production" !== "development" ? warning(false, name + " is calling a React component directly. " + "Use a factory or JSX instead. See: http://fb.me/react-legacyfactory") : null;
      monitorCodeUse("react_legacy_factory_call", {version:3, name:name});
    }
    function warnForPlainFunctionType(type) {
      var isReactClass = type.prototype && typeof type.prototype.mountComponent === "function" && typeof type.prototype.receiveComponent === "function";
      if (isReactClass) {
        "production" !== "development" ? warning(false, "Did not expect to get a React class here. Use `Component` instead " + "of `Component.type` or `this.constructor`.") : null;
      } else {
        if (!type._reactWarnedForThisType) {
          try {
            type._reactWarnedForThisType = true;
          } catch (x) {
          }
          monitorCodeUse("react_non_component_in_jsx", {version:3, name:type.name});
        }
        "production" !== "development" ? warning(false, "This JSX uses a plain function. Only React components are " + "valid in React's JSX transform.") : null;
      }
    }
    function warnForNonLegacyFactory(type) {
      "production" !== "development" ? warning(false, "Do not pass React.DOM." + type.type + " to JSX or createFactory. " + 'Use the string "' + type.type + '" instead.') : null;
    }
    function proxyStaticMethods(target, source) {
      if (typeof source !== "function") {
        return;
      }
      for (var key in source) {
        if (source.hasOwnProperty(key)) {
          var value = source[key];
          if (typeof value === "function") {
            var bound = value.bind(source);
            for (var k in value) {
              if (value.hasOwnProperty(k)) {
                bound[k] = value[k];
              }
            }
            target[key] = bound;
          } else {
            target[key] = value;
          }
        }
      }
    }
    var LEGACY_MARKER = {};
    var NON_LEGACY_MARKER = {};
    var ReactLegacyElementFactory = {};
    ReactLegacyElementFactory.wrapCreateFactory = function(createFactory) {
      var legacyCreateFactory = function(type) {
        if (typeof type !== "function") {
          return createFactory(type);
        }
        if (type.isReactNonLegacyFactory) {
          if ("production" !== "development") {
            warnForNonLegacyFactory(type);
          }
          return createFactory(type.type);
        }
        if (type.isReactLegacyFactory) {
          return createFactory(type.type);
        }
        if ("production" !== "development") {
          warnForPlainFunctionType(type);
        }
        return type;
      };
      return legacyCreateFactory;
    };
    ReactLegacyElementFactory.wrapCreateElement = function(createElement) {
      var legacyCreateElement = function(type, props, children) {
        if (typeof type !== "function") {
          return createElement.apply(this, arguments);
        }
        var args;
        if (type.isReactNonLegacyFactory) {
          if ("production" !== "development") {
            warnForNonLegacyFactory(type);
          }
          args = Array.prototype.slice.call(arguments, 0);
          args[0] = type.type;
          return createElement.apply(this, args);
        }
        if (type.isReactLegacyFactory) {
          if (type._isMockFunction) {
            type.type._mockedReactClassConstructor = type;
          }
          args = Array.prototype.slice.call(arguments, 0);
          args[0] = type.type;
          return createElement.apply(this, args);
        }
        if ("production" !== "development") {
          warnForPlainFunctionType(type);
        }
        return type.apply(null, Array.prototype.slice.call(arguments, 1));
      };
      return legacyCreateElement;
    };
    ReactLegacyElementFactory.wrapFactory = function(factory) {
      "production" !== "development" ? invariant(typeof factory === "function", "This is suppose to accept a element factory") : invariant(typeof factory === "function");
      var legacyElementFactory = function(config, children) {
        if ("production" !== "development") {
          warnForLegacyFactoryCall();
        }
        return factory.apply(this, arguments);
      };
      proxyStaticMethods(legacyElementFactory, factory.type);
      legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;
      legacyElementFactory.type = factory.type;
      return legacyElementFactory;
    };
    ReactLegacyElementFactory.markNonLegacyFactory = function(factory) {
      factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;
      return factory;
    };
    ReactLegacyElementFactory.isValidFactory = function(factory) {
      return typeof factory === "function" && factory.isReactLegacyFactory === LEGACY_MARKER;
    };
    ReactLegacyElementFactory.isValidClass = function(factory) {
      if ("production" !== "development") {
        "production" !== "development" ? warning(false, "isValidClass is deprecated and will be removed in a future release. " + "Use a more specific validator instead.") : null;
      }
      return ReactLegacyElementFactory.isValidFactory(factory);
    };
    ReactLegacyElementFactory._isLegacyCallWarningEnabled = true;
    module.exports = ReactLegacyElementFactory;
  }, {"./ReactCurrentOwner":36, "./invariant":126, "./monitorCodeUse":136, "./warning":145}], 62:[function(_dereq_, module, exports) {
    var adler32 = _dereq_("./adler32");
    var ReactMarkupChecksum = {CHECKSUM_ATTR_NAME:"data-react-checksum", addChecksumToMarkup:function(markup) {
      var checksum = adler32(markup);
      return markup.replace("\x3e", " " + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '\x3d"' + checksum + '"\x3e');
    }, canReuseMarkup:function(markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }};
    module.exports = ReactMarkupChecksum;
  }, {"./adler32":98}], 63:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactElement = _dereq_("./ReactElement");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactPerf = _dereq_("./ReactPerf");
    var containsNode = _dereq_("./containsNode");
    var deprecated = _dereq_("./deprecated");
    var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var invariant = _dereq_("./invariant");
    var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
    var warning = _dereq_("./warning");
    var createElement = ReactLegacyElement.wrapCreateElement(ReactElement.createElement);
    var SEPARATOR = ReactInstanceHandles.SEPARATOR;
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var nodeCache = {};
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var instancesByReactRootID = {};
    var containersByReactRootID = {};
    if ("production" !== "development") {
      var rootElementsByReactRootID = {}
    }
    var findComponentRootReusableArray = [];
    function getReactRootID(container) {
      var rootElement = getReactRootElementInContainer(container);
      return rootElement && ReactMount.getID(rootElement);
    }
    function getID(node) {
      var id = internalGetID(node);
      if (id) {
        if (nodeCache.hasOwnProperty(id)) {
          var cached = nodeCache[id];
          if (cached !== node) {
            "production" !== "development" ? invariant(!isValid(cached, id), "ReactMount: Two valid but unequal nodes with the same `%s`: %s", ATTR_NAME, id) : invariant(!isValid(cached, id));
            nodeCache[id] = node;
          }
        } else {
          nodeCache[id] = node;
        }
      }
      return id;
    }
    function internalGetID(node) {
      return node && node.getAttribute && node.getAttribute(ATTR_NAME) || "";
    }
    function setID(node, id) {
      var oldID = internalGetID(node);
      if (oldID !== id) {
        delete nodeCache[oldID];
      }
      node.setAttribute(ATTR_NAME, id);
      nodeCache[id] = node;
    }
    function getNode(id) {
      if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
        nodeCache[id] = ReactMount.findReactNodeByID(id);
      }
      return nodeCache[id];
    }
    function isValid(node, id) {
      if (node) {
        "production" !== "development" ? invariant(internalGetID(node) === id, "ReactMount: Unexpected modification of `%s`", ATTR_NAME) : invariant(internalGetID(node) === id);
        var container = ReactMount.findReactContainerForID(id);
        if (container && containsNode(container, node)) {
          return true;
        }
      }
      return false;
    }
    function purgeID(id) {
      delete nodeCache[id];
    }
    var deepestNodeSoFar = null;
    function findDeepestCachedAncestorImpl(ancestorID) {
      var ancestor = nodeCache[ancestorID];
      if (ancestor && isValid(ancestor, ancestorID)) {
        deepestNodeSoFar = ancestor;
      } else {
        return false;
      }
    }
    function findDeepestCachedAncestor(targetID) {
      deepestNodeSoFar = null;
      ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
      var foundNode = deepestNodeSoFar;
      deepestNodeSoFar = null;
      return foundNode;
    }
    var ReactMount = {_instancesByReactRootID:instancesByReactRootID, scrollMonitor:function(container, renderCallback) {
      renderCallback();
    }, _updateRootComponent:function(prevComponent, nextComponent, container, callback) {
      var nextProps = nextComponent.props;
      ReactMount.scrollMonitor(container, function() {
        prevComponent.replaceProps(nextProps, callback);
      });
      if ("production" !== "development") {
        rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
      }
      return prevComponent;
    }, _registerComponent:function(nextComponent, container) {
      "production" !== "development" ? invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE), "_registerComponent(...): Target container is not a DOM element.") : invariant(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE));
      ReactBrowserEventEmitter.ensureScrollValueMonitoring();
      var reactRootID = ReactMount.registerContainer(container);
      instancesByReactRootID[reactRootID] = nextComponent;
      return reactRootID;
    }, _renderNewRootComponent:ReactPerf.measure("ReactMount", "_renderNewRootComponent", function(nextComponent, container, shouldReuseMarkup) {
      "production" !== "development" ? warning(ReactCurrentOwner.current == null, "_renderNewRootComponent(): Render methods should be a pure function " + "of props and state; triggering nested component updates from " + "render is not allowed. If necessary, trigger nested updates in " + "componentDidUpdate.") : null;
      var componentInstance = instantiateReactComponent(nextComponent, null);
      var reactRootID = ReactMount._registerComponent(componentInstance, container);
      componentInstance.mountComponentIntoNode(reactRootID, container, shouldReuseMarkup);
      if ("production" !== "development") {
        rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
      }
      return componentInstance;
    }), render:function(nextElement, container, callback) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(nextElement), "renderComponent(): Invalid component element.%s", typeof nextElement === "string" ? " Instead of passing an element string, make sure to instantiate " + "it by passing it to React.createElement." : ReactLegacyElement.isValidFactory(nextElement) ? " Instead of passing a component class, make sure to instantiate " + "it by passing it to React.createElement." : typeof nextElement.props !== "undefined" ? " This may be caused by unintentionally loading two independent " + 
      "copies of React." : "") : invariant(ReactElement.isValidElement(nextElement));
      var prevComponent = instancesByReactRootID[getReactRootID(container)];
      if (prevComponent) {
        var prevElement = prevComponent._currentElement;
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          return ReactMount._updateRootComponent(prevComponent, nextElement, container, callback);
        } else {
          ReactMount.unmountComponentAtNode(container);
        }
      }
      var reactRootElement = getReactRootElementInContainer(container);
      var containerHasReactMarkup = reactRootElement && ReactMount.isRenderedByReact(reactRootElement);
      var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;
      var component = ReactMount._renderNewRootComponent(nextElement, container, shouldReuseMarkup);
      callback && callback.call(component);
      return component;
    }, constructAndRenderComponent:function(constructor, props, container) {
      var element = createElement(constructor, props);
      return ReactMount.render(element, container);
    }, constructAndRenderComponentByID:function(constructor, props, id) {
      var domNode = document.getElementById(id);
      "production" !== "development" ? invariant(domNode, 'Tried to get element with id of "%s" but it is not present on the page.', id) : invariant(domNode);
      return ReactMount.constructAndRenderComponent(constructor, props, domNode);
    }, registerContainer:function(container) {
      var reactRootID = getReactRootID(container);
      if (reactRootID) {
        reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
      }
      if (!reactRootID) {
        reactRootID = ReactInstanceHandles.createReactRootID();
      }
      containersByReactRootID[reactRootID] = container;
      return reactRootID;
    }, unmountComponentAtNode:function(container) {
      "production" !== "development" ? warning(ReactCurrentOwner.current == null, "unmountComponentAtNode(): Render methods should be a pure function of " + "props and state; triggering nested component updates from render is " + "not allowed. If necessary, trigger nested updates in " + "componentDidUpdate.") : null;
      var reactRootID = getReactRootID(container);
      var component = instancesByReactRootID[reactRootID];
      if (!component) {
        return false;
      }
      ReactMount.unmountComponentFromNode(component, container);
      delete instancesByReactRootID[reactRootID];
      delete containersByReactRootID[reactRootID];
      if ("production" !== "development") {
        delete rootElementsByReactRootID[reactRootID];
      }
      return true;
    }, unmountComponentFromNode:function(instance, container) {
      instance.unmountComponent();
      if (container.nodeType === DOC_NODE_TYPE) {
        container = container.documentElement;
      }
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
    }, findReactContainerForID:function(id) {
      var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
      var container = containersByReactRootID[reactRootID];
      if ("production" !== "development") {
        var rootElement = rootElementsByReactRootID[reactRootID];
        if (rootElement && rootElement.parentNode !== container) {
          "production" !== "development" ? invariant(internalGetID(rootElement) === reactRootID, "ReactMount: Root element ID differed from reactRootID.") : invariant(internalGetID(rootElement) === reactRootID);
          var containerChild = container.firstChild;
          if (containerChild && reactRootID === internalGetID(containerChild)) {
            rootElementsByReactRootID[reactRootID] = containerChild;
          } else {
            console.warn("ReactMount: Root element has been removed from its original " + "container. New container:", rootElement.parentNode);
          }
        }
      }
      return container;
    }, findReactNodeByID:function(id) {
      var reactRoot = ReactMount.findReactContainerForID(id);
      return ReactMount.findComponentRoot(reactRoot, id);
    }, isRenderedByReact:function(node) {
      if (node.nodeType !== 1) {
        return false;
      }
      var id = ReactMount.getID(node);
      return id ? id.charAt(0) === SEPARATOR : false;
    }, getFirstReactDOM:function(node) {
      var current = node;
      while (current && current.parentNode !== current) {
        if (ReactMount.isRenderedByReact(current)) {
          return current;
        }
        current = current.parentNode;
      }
      return null;
    }, findComponentRoot:function(ancestorNode, targetID) {
      var firstChildren = findComponentRootReusableArray;
      var childIndex = 0;
      var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
      firstChildren[0] = deepestAncestor.firstChild;
      firstChildren.length = 1;
      while (childIndex < firstChildren.length) {
        var child = firstChildren[childIndex++];
        var targetChild;
        while (child) {
          var childID = ReactMount.getID(child);
          if (childID) {
            if (targetID === childID) {
              targetChild = child;
            } else {
              if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
                firstChildren.length = childIndex = 0;
                firstChildren.push(child.firstChild);
              }
            }
          } else {
            firstChildren.push(child.firstChild);
          }
          child = child.nextSibling;
        }
        if (targetChild) {
          firstChildren.length = 0;
          return targetChild;
        }
      }
      firstChildren.length = 0;
      "production" !== "development" ? invariant(false, "findComponentRoot(..., %s): Unable to find element. This probably " + "means the DOM was unexpectedly mutated (e.g., by the browser), " + "usually due to forgetting a \x3ctbody\x3e when using tables, nesting tags " + "like \x3cform\x3e, \x3cp\x3e, or \x3ca\x3e, or using non-SVG elements in an \x3csvg\x3e " + "parent. " + "Try inspecting the child nodes of the element with React ID `%s`.", targetID, ReactMount.getID(ancestorNode)) : invariant(false);
    }, getReactRootID:getReactRootID, getID:getID, setID:setID, getNode:getNode, purgeID:purgeID};
    ReactMount.renderComponent = deprecated("ReactMount", "renderComponent", "render", this, ReactMount.render);
    module.exports = ReactMount;
  }, {"./DOMProperty":11, "./ReactBrowserEventEmitter":30, "./ReactCurrentOwner":36, "./ReactElement":52, "./ReactInstanceHandles":60, "./ReactLegacyElement":61, "./ReactPerf":68, "./containsNode":101, "./deprecated":106, "./getReactRootElementInContainer":120, "./instantiateReactComponent":125, "./invariant":126, "./shouldUpdateReactComponent":142, "./warning":145}], 64:[function(_dereq_, module, exports) {
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");
    var flattenChildren = _dereq_("./flattenChildren");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
    var updateDepth = 0;
    var updateQueue = [];
    var markupQueue = [];
    function enqueueMarkup(parentID, markup, toIndex) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.INSERT_MARKUP, markupIndex:markupQueue.push(markup) - 1, textContent:null, fromIndex:null, toIndex:toIndex});
    }
    function enqueueMove(parentID, fromIndex, toIndex) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.MOVE_EXISTING, markupIndex:null, textContent:null, fromIndex:fromIndex, toIndex:toIndex});
    }
    function enqueueRemove(parentID, fromIndex) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.REMOVE_NODE, markupIndex:null, textContent:null, fromIndex:fromIndex, toIndex:null});
    }
    function enqueueTextContent(parentID, textContent) {
      updateQueue.push({parentID:parentID, parentNode:null, type:ReactMultiChildUpdateTypes.TEXT_CONTENT, markupIndex:null, textContent:textContent, fromIndex:null, toIndex:null});
    }
    function processQueue() {
      if (updateQueue.length) {
        ReactComponent.BackendIDOperations.dangerouslyProcessChildrenUpdates(updateQueue, markupQueue);
        clearQueue();
      }
    }
    function clearQueue() {
      updateQueue.length = 0;
      markupQueue.length = 0;
    }
    var ReactMultiChild = {Mixin:{mountChildren:function(nestedChildren, transaction) {
      var children = flattenChildren(nestedChildren);
      var mountImages = [];
      var index = 0;
      this._renderedChildren = children;
      for (var name in children) {
        var child = children[name];
        if (children.hasOwnProperty(name)) {
          var childInstance = instantiateReactComponent(child, null);
          children[name] = childInstance;
          var rootID = this._rootNodeID + name;
          var mountImage = childInstance.mountComponent(rootID, transaction, this._mountDepth + 1);
          childInstance._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    }, updateTextContent:function(nextContent) {
      updateDepth++;
      var errorThrown = true;
      try {
        var prevChildren = this._renderedChildren;
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        this.setTextContent(nextContent);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    }, updateChildren:function(nextNestedChildren, transaction) {
      updateDepth++;
      var errorThrown = true;
      try {
        this._updateChildren(nextNestedChildren, transaction);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    }, _updateChildren:function(nextNestedChildren, transaction) {
      var nextChildren = flattenChildren(nextNestedChildren);
      var prevChildren = this._renderedChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var prevElement = prevChild && prevChild._currentElement;
        var nextElement = nextChildren[name];
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild.receiveComponent(nextElement, transaction);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          var nextChildInstance = instantiateReactComponent(nextElement, null);
          this._mountChildByNameAtIndex(nextChildInstance, name, nextIndex, transaction);
        }
        nextIndex++;
      }
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren[name])) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    }, unmountChildren:function() {
      var renderedChildren = this._renderedChildren;
      for (var name in renderedChildren) {
        var renderedChild = renderedChildren[name];
        if (renderedChild.unmountComponent) {
          renderedChild.unmountComponent();
        }
      }
      this._renderedChildren = null;
    }, moveChild:function(child, toIndex, lastIndex) {
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    }, createChild:function(child, mountImage) {
      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
    }, removeChild:function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    }, setTextContent:function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    }, _mountChildByNameAtIndex:function(child, name, index, transaction) {
      var rootID = this._rootNodeID + name;
      var mountImage = child.mountComponent(rootID, transaction, this._mountDepth + 1);
      child._mountIndex = index;
      this.createChild(child, mountImage);
      this._renderedChildren = this._renderedChildren || {};
      this._renderedChildren[name] = child;
    }, _unmountChildByName:function(child, name) {
      this.removeChild(child);
      child._mountIndex = null;
      child.unmountComponent();
      delete this._renderedChildren[name];
    }}};
    module.exports = ReactMultiChild;
  }, {"./ReactComponent":32, "./ReactMultiChildUpdateTypes":65, "./flattenChildren":110, "./instantiateReactComponent":125, "./shouldUpdateReactComponent":142}], 65:[function(_dereq_, module, exports) {
    var keyMirror = _dereq_("./keyMirror");
    var ReactMultiChildUpdateTypes = keyMirror({INSERT_MARKUP:null, MOVE_EXISTING:null, REMOVE_NODE:null, TEXT_CONTENT:null});
    module.exports = ReactMultiChildUpdateTypes;
  }, {"./keyMirror":132}], 66:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var genericComponentClass = null;
    var tagToComponentClass = {};
    var ReactNativeComponentInjection = {injectGenericComponentClass:function(componentClass) {
      genericComponentClass = componentClass;
    }, injectComponentClasses:function(componentClasses) {
      assign(tagToComponentClass, componentClasses);
    }};
    function createInstanceForTag(tag, props, parentType) {
      var componentClass = tagToComponentClass[tag];
      if (componentClass == null) {
        "production" !== "development" ? invariant(genericComponentClass, "There is no registered component for the tag %s", tag) : invariant(genericComponentClass);
        return new genericComponentClass(tag, props);
      }
      if (parentType === tag) {
        "production" !== "development" ? invariant(genericComponentClass, "There is no registered component for the tag %s", tag) : invariant(genericComponentClass);
        return new genericComponentClass(tag, props);
      }
      return new componentClass.type(props);
    }
    var ReactNativeComponent = {createInstanceForTag:createInstanceForTag, injection:ReactNativeComponentInjection};
    module.exports = ReactNativeComponent;
  }, {"./Object.assign":27, "./invariant":126}], 67:[function(_dereq_, module, exports) {
    var emptyObject = _dereq_("./emptyObject");
    var invariant = _dereq_("./invariant");
    var ReactOwner = {isValidOwner:function(object) {
      return!!(object && typeof object.attachRef === "function" && typeof object.detachRef === "function");
    }, addComponentAsRefTo:function(component, ref, owner) {
      "production" !== "development" ? invariant(ReactOwner.isValidOwner(owner), "addComponentAsRefTo(...): Only a ReactOwner can have refs. This " + "usually means that you're trying to add a ref to a component that " + "doesn't have an owner (that is, was not created inside of another " + "component's `render` method). Try rendering this component inside of " + "a new top-level component which will hold the ref.") : invariant(ReactOwner.isValidOwner(owner));
      owner.attachRef(ref, component);
    }, removeComponentAsRefFrom:function(component, ref, owner) {
      "production" !== "development" ? invariant(ReactOwner.isValidOwner(owner), "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This " + "usually means that you're trying to remove a ref to a component that " + "doesn't have an owner (that is, was not created inside of another " + "component's `render` method). Try rendering this component inside of " + "a new top-level component which will hold the ref.") : invariant(ReactOwner.isValidOwner(owner));
      if (owner.refs[ref] === component) {
        owner.detachRef(ref);
      }
    }, Mixin:{construct:function() {
      this.refs = emptyObject;
    }, attachRef:function(ref, component) {
      "production" !== "development" ? invariant(component.isOwnedBy(this), "attachRef(%s, ...): Only a component's owner can store a ref to it.", ref) : invariant(component.isOwnedBy(this));
      var refs = this.refs === emptyObject ? this.refs = {} : this.refs;
      refs[ref] = component;
    }, detachRef:function(ref) {
      delete this.refs[ref];
    }}};
    module.exports = ReactOwner;
  }, {"./emptyObject":108, "./invariant":126}], 68:[function(_dereq_, module, exports) {
    var ReactPerf = {enableMeasure:false, storedMeasure:_noMeasure, measure:function(objName, fnName, func) {
      if ("production" !== "development") {
        var measuredFunc = null;
        var wrapper = function() {
          if (ReactPerf.enableMeasure) {
            if (!measuredFunc) {
              measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
            }
            return measuredFunc.apply(this, arguments);
          }
          return func.apply(this, arguments);
        };
        wrapper.displayName = objName + "_" + fnName;
        return wrapper;
      }
      return func;
    }, injection:{injectMeasure:function(measure) {
      ReactPerf.storedMeasure = measure;
    }}};
    function _noMeasure(objName, fnName, func) {
      return func;
    }
    module.exports = ReactPerf;
  }, {}], 69:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var invariant = _dereq_("./invariant");
    var joinClasses = _dereq_("./joinClasses");
    var warning = _dereq_("./warning");
    var didWarn = false;
    function createTransferStrategy(mergeStrategy) {
      return function(props, key, value) {
        if (!props.hasOwnProperty(key)) {
          props[key] = value;
        } else {
          props[key] = mergeStrategy(props[key], value);
        }
      };
    }
    var transferStrategyMerge = createTransferStrategy(function(a, b) {
      return assign({}, b, a);
    });
    var TransferStrategies = {children:emptyFunction, className:createTransferStrategy(joinClasses), style:transferStrategyMerge};
    function transferInto(props, newProps) {
      for (var thisKey in newProps) {
        if (!newProps.hasOwnProperty(thisKey)) {
          continue;
        }
        var transferStrategy = TransferStrategies[thisKey];
        if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
          transferStrategy(props, thisKey, newProps[thisKey]);
        } else {
          if (!props.hasOwnProperty(thisKey)) {
            props[thisKey] = newProps[thisKey];
          }
        }
      }
      return props;
    }
    var ReactPropTransferer = {TransferStrategies:TransferStrategies, mergeProps:function(oldProps, newProps) {
      return transferInto(assign({}, oldProps), newProps);
    }, Mixin:{transferPropsTo:function(element) {
      "production" !== "development" ? invariant(element._owner === this, "%s: You can't call transferPropsTo() on a component that you " + "don't own, %s. This usually means you are calling " + "transferPropsTo() on a component passed in as props or children.", this.constructor.displayName, typeof element.type === "string" ? element.type : element.type.displayName) : invariant(element._owner === this);
      if ("production" !== "development") {
        if (!didWarn) {
          didWarn = true;
          "production" !== "development" ? warning(false, "transferPropsTo is deprecated. " + "See http://fb.me/react-transferpropsto for more information.") : null;
        }
      }
      transferInto(element.props, this.props);
      return element;
    }}};
    module.exports = ReactPropTransferer;
  }, {"./Object.assign":27, "./emptyFunction":107, "./invariant":126, "./joinClasses":131, "./warning":145}], 70:[function(_dereq_, module, exports) {
    var ReactPropTypeLocationNames = {};
    if ("production" !== "development") {
      ReactPropTypeLocationNames = {prop:"prop", context:"context", childContext:"child context"};
    }
    module.exports = ReactPropTypeLocationNames;
  }, {}], 71:[function(_dereq_, module, exports) {
    var keyMirror = _dereq_("./keyMirror");
    var ReactPropTypeLocations = keyMirror({prop:null, context:null, childContext:null});
    module.exports = ReactPropTypeLocations;
  }, {"./keyMirror":132}], 72:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");
    var deprecated = _dereq_("./deprecated");
    var emptyFunction = _dereq_("./emptyFunction");
    var ANONYMOUS = "\x3c\x3canonymous\x3e\x3e";
    var elementTypeChecker = createElementTypeChecker();
    var nodeTypeChecker = createNodeChecker();
    var ReactPropTypes = {array:createPrimitiveTypeChecker("array"), bool:createPrimitiveTypeChecker("boolean"), func:createPrimitiveTypeChecker("function"), number:createPrimitiveTypeChecker("number"), object:createPrimitiveTypeChecker("object"), string:createPrimitiveTypeChecker("string"), any:createAnyTypeChecker(), arrayOf:createArrayOfTypeChecker, element:elementTypeChecker, instanceOf:createInstanceTypeChecker, node:nodeTypeChecker, objectOf:createObjectOfTypeChecker, oneOf:createEnumTypeChecker, 
    oneOfType:createUnionTypeChecker, shape:createShapeTypeChecker, component:deprecated("React.PropTypes", "component", "element", this, elementTypeChecker), renderable:deprecated("React.PropTypes", "renderable", "node", this, nodeTypeChecker)};
    function createChainableTypeChecker(validate) {
      function checkType(isRequired, props, propName, componentName, location) {
        componentName = componentName || ANONYMOUS;
        if (props[propName] == null) {
          var locationName = ReactPropTypeLocationNames[location];
          if (isRequired) {
            return new Error("Required " + locationName + " `" + propName + "` was not specified in " + ("`" + componentName + "`."));
          }
        } else {
          return validate(props, propName, componentName, location);
        }
      }
      var chainedCheckType = checkType.bind(null, false);
      chainedCheckType.isRequired = checkType.bind(null, true);
      return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== expectedType) {
          var locationName = ReactPropTypeLocationNames[location];
          var preciseType = getPreciseType(propValue);
          return new Error("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` " + ("supplied to `" + componentName + "`, expected `" + expectedType + "`."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
      return createChainableTypeChecker(emptyFunction.thatReturns());
    }
    function createArrayOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        if (!Array.isArray(propValue)) {
          var locationName = ReactPropTypeLocationNames[location];
          var propType = getPropType(propValue);
          return new Error("Invalid " + locationName + " `" + propName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
        }
        for (var i = 0;i < propValue.length;i++) {
          var error = typeChecker(propValue, i, componentName, location);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
      function validate(props, propName, componentName, location) {
        if (!ReactElement.isValidElement(props[propName])) {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`, expected a ReactElement."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
      function validate(props, propName, componentName, location) {
        if (!(props[propName] instanceof expectedClass)) {
          var locationName = ReactPropTypeLocationNames[location];
          var expectedClassName = expectedClass.name || ANONYMOUS;
          return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`, expected instance of `" + expectedClassName + "`."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        for (var i = 0;i < expectedValues.length;i++) {
          if (propValue === expectedValues[i]) {
            return;
          }
        }
        var locationName = ReactPropTypeLocationNames[location];
        var valuesString = JSON.stringify(expectedValues);
        return new Error("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
      }
      return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== "object") {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
        }
        for (var key in propValue) {
          if (propValue.hasOwnProperty(key)) {
            var error = typeChecker(propValue, key, componentName, location);
            if (error instanceof Error) {
              return error;
            }
          }
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
      function validate(props, propName, componentName, location) {
        for (var i = 0;i < arrayOfTypeCheckers.length;i++) {
          var checker = arrayOfTypeCheckers[i];
          if (checker(props, propName, componentName, location) == null) {
            return;
          }
        }
        var locationName = ReactPropTypeLocationNames[location];
        return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`."));
      }
      return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
      function validate(props, propName, componentName, location) {
        if (!isNode(props[propName])) {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
        }
      }
      return createChainableTypeChecker(validate);
    }
    function createShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== "object") {
          var locationName = ReactPropTypeLocationNames[location];
          return new Error("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
        }
        for (var key in shapeTypes) {
          var checker = shapeTypes[key];
          if (!checker) {
            continue;
          }
          var error = checker(propValue, key, componentName, location);
          if (error) {
            return error;
          }
        }
      }
      return createChainableTypeChecker(validate, "expected `object`");
    }
    function isNode(propValue) {
      switch(typeof propValue) {
        case "number":
        ;
        case "string":
          return true;
        case "boolean":
          return!propValue;
        case "object":
          if (Array.isArray(propValue)) {
            return propValue.every(isNode);
          }
          if (ReactElement.isValidElement(propValue)) {
            return true;
          }
          for (var k in propValue) {
            if (!isNode(propValue[k])) {
              return false;
            }
          }
          return true;
        default:
          return false;
      }
    }
    function getPropType(propValue) {
      var propType = typeof propValue;
      if (Array.isArray(propValue)) {
        return "array";
      }
      if (propValue instanceof RegExp) {
        return "object";
      }
      return propType;
    }
    function getPreciseType(propValue) {
      var propType = getPropType(propValue);
      if (propType === "object") {
        if (propValue instanceof Date) {
          return "date";
        } else {
          if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
      }
      return propType;
    }
    module.exports = ReactPropTypes;
  }, {"./ReactElement":52, "./ReactPropTypeLocationNames":70, "./deprecated":106, "./emptyFunction":107}], 73:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var assign = _dereq_("./Object.assign");
    function ReactPutListenerQueue() {
      this.listenersToPut = [];
    }
    assign(ReactPutListenerQueue.prototype, {enqueuePutListener:function(rootNodeID, propKey, propValue) {
      this.listenersToPut.push({rootNodeID:rootNodeID, propKey:propKey, propValue:propValue});
    }, putListeners:function() {
      for (var i = 0;i < this.listenersToPut.length;i++) {
        var listenerToPut = this.listenersToPut[i];
        ReactBrowserEventEmitter.putListener(listenerToPut.rootNodeID, listenerToPut.propKey, listenerToPut.propValue);
      }
    }, reset:function() {
      this.listenersToPut.length = 0;
    }, destructor:function() {
      this.reset();
    }});
    PooledClass.addPoolingTo(ReactPutListenerQueue);
    module.exports = ReactPutListenerQueue;
  }, {"./Object.assign":27, "./PooledClass":28, "./ReactBrowserEventEmitter":30}], 74:[function(_dereq_, module, exports) {
    var CallbackQueue = _dereq_("./CallbackQueue");
    var PooledClass = _dereq_("./PooledClass");
    var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
    var ReactInputSelection = _dereq_("./ReactInputSelection");
    var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var SELECTION_RESTORATION = {initialize:ReactInputSelection.getSelectionInformation, close:ReactInputSelection.restoreSelection};
    var EVENT_SUPPRESSION = {initialize:function() {
      var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
      ReactBrowserEventEmitter.setEnabled(false);
      return currentlyEnabled;
    }, close:function(previouslyEnabled) {
      ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
    }};
    var ON_DOM_READY_QUEUEING = {initialize:function() {
      this.reactMountReady.reset();
    }, close:function() {
      this.reactMountReady.notifyAll();
    }};
    var PUT_LISTENER_QUEUEING = {initialize:function() {
      this.putListenerQueue.reset();
    }, close:function() {
      this.putListenerQueue.putListeners();
    }};
    var TRANSACTION_WRAPPERS = [PUT_LISTENER_QUEUEING, SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
    function ReactReconcileTransaction() {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = false;
      this.reactMountReady = CallbackQueue.getPooled(null);
      this.putListenerQueue = ReactPutListenerQueue.getPooled();
    }
    var Mixin = {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }, getReactMountReady:function() {
      return this.reactMountReady;
    }, getPutListenerQueue:function() {
      return this.putListenerQueue;
    }, destructor:function() {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
      ReactPutListenerQueue.release(this.putListenerQueue);
      this.putListenerQueue = null;
    }};
    assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
    PooledClass.addPoolingTo(ReactReconcileTransaction);
    module.exports = ReactReconcileTransaction;
  }, {"./CallbackQueue":6, "./Object.assign":27, "./PooledClass":28, "./ReactBrowserEventEmitter":30, "./ReactInputSelection":59, "./ReactPutListenerQueue":73, "./Transaction":95}], 75:[function(_dereq_, module, exports) {
    var ReactRootIndexInjection = {injectCreateReactRootIndex:function(_createReactRootIndex) {
      ReactRootIndex.createReactRootIndex = _createReactRootIndex;
    }};
    var ReactRootIndex = {createReactRootIndex:null, injection:ReactRootIndexInjection};
    module.exports = ReactRootIndex;
  }, {}], 76:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
    var ReactServerRenderingTransaction = _dereq_("./ReactServerRenderingTransaction");
    var instantiateReactComponent = _dereq_("./instantiateReactComponent");
    var invariant = _dereq_("./invariant");
    function renderToString(element) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(element), "renderToString(): You must pass a valid ReactElement.") : invariant(ReactElement.isValidElement(element));
      var transaction;
      try {
        var id = ReactInstanceHandles.createReactRootID();
        transaction = ReactServerRenderingTransaction.getPooled(false);
        return transaction.perform(function() {
          var componentInstance = instantiateReactComponent(element, null);
          var markup = componentInstance.mountComponent(id, transaction, 0);
          return ReactMarkupChecksum.addChecksumToMarkup(markup);
        }, null);
      } finally {
        ReactServerRenderingTransaction.release(transaction);
      }
    }
    function renderToStaticMarkup(element) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(element), "renderToStaticMarkup(): You must pass a valid ReactElement.") : invariant(ReactElement.isValidElement(element));
      var transaction;
      try {
        var id = ReactInstanceHandles.createReactRootID();
        transaction = ReactServerRenderingTransaction.getPooled(true);
        return transaction.perform(function() {
          var componentInstance = instantiateReactComponent(element, null);
          return componentInstance.mountComponent(id, transaction, 0);
        }, null);
      } finally {
        ReactServerRenderingTransaction.release(transaction);
      }
    }
    module.exports = {renderToString:renderToString, renderToStaticMarkup:renderToStaticMarkup};
  }, {"./ReactElement":52, "./ReactInstanceHandles":60, "./ReactMarkupChecksum":62, "./ReactServerRenderingTransaction":77, "./instantiateReactComponent":125, "./invariant":126}], 77:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var CallbackQueue = _dereq_("./CallbackQueue");
    var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var ON_DOM_READY_QUEUEING = {initialize:function() {
      this.reactMountReady.reset();
    }, close:emptyFunction};
    var PUT_LISTENER_QUEUEING = {initialize:function() {
      this.putListenerQueue.reset();
    }, close:emptyFunction};
    var TRANSACTION_WRAPPERS = [PUT_LISTENER_QUEUEING, ON_DOM_READY_QUEUEING];
    function ReactServerRenderingTransaction(renderToStaticMarkup) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = renderToStaticMarkup;
      this.reactMountReady = CallbackQueue.getPooled(null);
      this.putListenerQueue = ReactPutListenerQueue.getPooled();
    }
    var Mixin = {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }, getReactMountReady:function() {
      return this.reactMountReady;
    }, getPutListenerQueue:function() {
      return this.putListenerQueue;
    }, destructor:function() {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
      ReactPutListenerQueue.release(this.putListenerQueue);
      this.putListenerQueue = null;
    }};
    assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
    PooledClass.addPoolingTo(ReactServerRenderingTransaction);
    module.exports = ReactServerRenderingTransaction;
  }, {"./CallbackQueue":6, "./Object.assign":27, "./PooledClass":28, "./ReactPutListenerQueue":73, "./Transaction":95, "./emptyFunction":107}], 78:[function(_dereq_, module, exports) {
    var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
    var ReactComponent = _dereq_("./ReactComponent");
    var ReactElement = _dereq_("./ReactElement");
    var assign = _dereq_("./Object.assign");
    var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
    var ReactTextComponent = function(props) {
    };
    assign(ReactTextComponent.prototype, ReactComponent.Mixin, {mountComponent:function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(this, rootID, transaction, mountDepth);
      var escapedText = escapeTextForBrowser(this.props);
      if (transaction.renderToStaticMarkup) {
        return escapedText;
      }
      return "\x3cspan " + DOMPropertyOperations.createMarkupForID(rootID) + "\x3e" + escapedText + "\x3c/span\x3e";
    }, receiveComponent:function(nextComponent, transaction) {
      var nextProps = nextComponent.props;
      if (nextProps !== this.props) {
        this.props = nextProps;
        ReactComponent.BackendIDOperations.updateTextContentByID(this._rootNodeID, nextProps);
      }
    }});
    var ReactTextComponentFactory = function(text) {
      return new ReactElement(ReactTextComponent, null, null, null, null, text);
    };
    ReactTextComponentFactory.type = ReactTextComponent;
    module.exports = ReactTextComponentFactory;
  }, {"./DOMPropertyOperations":12, "./Object.assign":27, "./ReactComponent":32, "./ReactElement":52, "./escapeTextForBrowser":109}], 79:[function(_dereq_, module, exports) {
    var CallbackQueue = _dereq_("./CallbackQueue");
    var PooledClass = _dereq_("./PooledClass");
    var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
    var ReactPerf = _dereq_("./ReactPerf");
    var Transaction = _dereq_("./Transaction");
    var assign = _dereq_("./Object.assign");
    var invariant = _dereq_("./invariant");
    var warning = _dereq_("./warning");
    var dirtyComponents = [];
    var asapCallbackQueue = CallbackQueue.getPooled();
    var asapEnqueued = false;
    var batchingStrategy = null;
    function ensureInjected() {
      "production" !== "development" ? invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy, "ReactUpdates: must inject a reconcile transaction class and batching " + "strategy") : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy);
    }
    var NESTED_UPDATES = {initialize:function() {
      this.dirtyComponentsLength = dirtyComponents.length;
    }, close:function() {
      if (this.dirtyComponentsLength !== dirtyComponents.length) {
        dirtyComponents.splice(0, this.dirtyComponentsLength);
        flushBatchedUpdates();
      } else {
        dirtyComponents.length = 0;
      }
    }};
    var UPDATE_QUEUEING = {initialize:function() {
      this.callbackQueue.reset();
    }, close:function() {
      this.callbackQueue.notifyAll();
    }};
    var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
    function ReactUpdatesFlushTransaction() {
      this.reinitializeTransaction();
      this.dirtyComponentsLength = null;
      this.callbackQueue = CallbackQueue.getPooled();
      this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled();
    }
    assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {getTransactionWrappers:function() {
      return TRANSACTION_WRAPPERS;
    }, destructor:function() {
      this.dirtyComponentsLength = null;
      CallbackQueue.release(this.callbackQueue);
      this.callbackQueue = null;
      ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
      this.reconcileTransaction = null;
    }, perform:function(method, scope, a) {
      return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
    }});
    PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
    function batchedUpdates(callback, a, b) {
      ensureInjected();
      batchingStrategy.batchedUpdates(callback, a, b);
    }
    function mountDepthComparator(c1, c2) {
      return c1._mountDepth - c2._mountDepth;
    }
    function runBatchedUpdates(transaction) {
      var len = transaction.dirtyComponentsLength;
      "production" !== "development" ? invariant(len === dirtyComponents.length, "Expected flush transaction's stored dirty-components length (%s) to " + "match dirty-components array length (%s).", len, dirtyComponents.length) : invariant(len === dirtyComponents.length);
      dirtyComponents.sort(mountDepthComparator);
      for (var i = 0;i < len;i++) {
        var component = dirtyComponents[i];
        if (component.isMounted()) {
          var callbacks = component._pendingCallbacks;
          component._pendingCallbacks = null;
          component.performUpdateIfNecessary(transaction.reconcileTransaction);
          if (callbacks) {
            for (var j = 0;j < callbacks.length;j++) {
              transaction.callbackQueue.enqueue(callbacks[j], component);
            }
          }
        }
      }
    }
    var flushBatchedUpdates = ReactPerf.measure("ReactUpdates", "flushBatchedUpdates", function() {
      while (dirtyComponents.length || asapEnqueued) {
        if (dirtyComponents.length) {
          var transaction = ReactUpdatesFlushTransaction.getPooled();
          transaction.perform(runBatchedUpdates, null, transaction);
          ReactUpdatesFlushTransaction.release(transaction);
        }
        if (asapEnqueued) {
          asapEnqueued = false;
          var queue = asapCallbackQueue;
          asapCallbackQueue = CallbackQueue.getPooled();
          queue.notifyAll();
          CallbackQueue.release(queue);
        }
      }
    });
    function enqueueUpdate(component, callback) {
      "production" !== "development" ? invariant(!callback || typeof callback === "function", "enqueueUpdate(...): You called `setProps`, `replaceProps`, " + "`setState`, `replaceState`, or `forceUpdate` with a callback that " + "isn't callable.") : invariant(!callback || typeof callback === "function");
      ensureInjected();
      "production" !== "development" ? warning(ReactCurrentOwner.current == null, "enqueueUpdate(): Render methods should be a pure function of props " + "and state; triggering nested component updates from render is not " + "allowed. If necessary, trigger nested updates in " + "componentDidUpdate.") : null;
      if (!batchingStrategy.isBatchingUpdates) {
        batchingStrategy.batchedUpdates(enqueueUpdate, component, callback);
        return;
      }
      dirtyComponents.push(component);
      if (callback) {
        if (component._pendingCallbacks) {
          component._pendingCallbacks.push(callback);
        } else {
          component._pendingCallbacks = [callback];
        }
      }
    }
    function asap(callback, context) {
      "production" !== "development" ? invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + "updates are not being batched.") : invariant(batchingStrategy.isBatchingUpdates);
      asapCallbackQueue.enqueue(callback, context);
      asapEnqueued = true;
    }
    var ReactUpdatesInjection = {injectReconcileTransaction:function(ReconcileTransaction) {
      "production" !== "development" ? invariant(ReconcileTransaction, "ReactUpdates: must provide a reconcile transaction class") : invariant(ReconcileTransaction);
      ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
    }, injectBatchingStrategy:function(_batchingStrategy) {
      "production" !== "development" ? invariant(_batchingStrategy, "ReactUpdates: must provide a batching strategy") : invariant(_batchingStrategy);
      "production" !== "development" ? invariant(typeof _batchingStrategy.batchedUpdates === "function", "ReactUpdates: must provide a batchedUpdates() function") : invariant(typeof _batchingStrategy.batchedUpdates === "function");
      "production" !== "development" ? invariant(typeof _batchingStrategy.isBatchingUpdates === "boolean", "ReactUpdates: must provide an isBatchingUpdates boolean attribute") : invariant(typeof _batchingStrategy.isBatchingUpdates === "boolean");
      batchingStrategy = _batchingStrategy;
    }};
    var ReactUpdates = {ReactReconcileTransaction:null, batchedUpdates:batchedUpdates, enqueueUpdate:enqueueUpdate, flushBatchedUpdates:flushBatchedUpdates, injection:ReactUpdatesInjection, asap:asap};
    module.exports = ReactUpdates;
  }, {"./CallbackQueue":6, "./Object.assign":27, "./PooledClass":28, "./ReactCurrentOwner":36, "./ReactPerf":68, "./Transaction":95, "./invariant":126, "./warning":145}], 80:[function(_dereq_, module, exports) {
    var DOMProperty = _dereq_("./DOMProperty");
    var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
    var SVGDOMPropertyConfig = {Properties:{cx:MUST_USE_ATTRIBUTE, cy:MUST_USE_ATTRIBUTE, d:MUST_USE_ATTRIBUTE, dx:MUST_USE_ATTRIBUTE, dy:MUST_USE_ATTRIBUTE, fill:MUST_USE_ATTRIBUTE, fillOpacity:MUST_USE_ATTRIBUTE, fontFamily:MUST_USE_ATTRIBUTE, fontSize:MUST_USE_ATTRIBUTE, fx:MUST_USE_ATTRIBUTE, fy:MUST_USE_ATTRIBUTE, gradientTransform:MUST_USE_ATTRIBUTE, gradientUnits:MUST_USE_ATTRIBUTE, markerEnd:MUST_USE_ATTRIBUTE, markerMid:MUST_USE_ATTRIBUTE, markerStart:MUST_USE_ATTRIBUTE, offset:MUST_USE_ATTRIBUTE, 
    opacity:MUST_USE_ATTRIBUTE, patternContentUnits:MUST_USE_ATTRIBUTE, patternUnits:MUST_USE_ATTRIBUTE, points:MUST_USE_ATTRIBUTE, preserveAspectRatio:MUST_USE_ATTRIBUTE, r:MUST_USE_ATTRIBUTE, rx:MUST_USE_ATTRIBUTE, ry:MUST_USE_ATTRIBUTE, spreadMethod:MUST_USE_ATTRIBUTE, stopColor:MUST_USE_ATTRIBUTE, stopOpacity:MUST_USE_ATTRIBUTE, stroke:MUST_USE_ATTRIBUTE, strokeDasharray:MUST_USE_ATTRIBUTE, strokeLinecap:MUST_USE_ATTRIBUTE, strokeOpacity:MUST_USE_ATTRIBUTE, strokeWidth:MUST_USE_ATTRIBUTE, textAnchor:MUST_USE_ATTRIBUTE, 
    transform:MUST_USE_ATTRIBUTE, version:MUST_USE_ATTRIBUTE, viewBox:MUST_USE_ATTRIBUTE, x1:MUST_USE_ATTRIBUTE, x2:MUST_USE_ATTRIBUTE, x:MUST_USE_ATTRIBUTE, y1:MUST_USE_ATTRIBUTE, y2:MUST_USE_ATTRIBUTE, y:MUST_USE_ATTRIBUTE}, DOMAttributeNames:{fillOpacity:"fill-opacity", fontFamily:"font-family", fontSize:"font-size", gradientTransform:"gradientTransform", gradientUnits:"gradientUnits", markerEnd:"marker-end", markerMid:"marker-mid", markerStart:"marker-start", patternContentUnits:"patternContentUnits", 
    patternUnits:"patternUnits", preserveAspectRatio:"preserveAspectRatio", spreadMethod:"spreadMethod", stopColor:"stop-color", stopOpacity:"stop-opacity", strokeDasharray:"stroke-dasharray", strokeLinecap:"stroke-linecap", strokeOpacity:"stroke-opacity", strokeWidth:"stroke-width", textAnchor:"text-anchor", viewBox:"viewBox"}};
    module.exports = SVGDOMPropertyConfig;
  }, {"./DOMProperty":11}], 81:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPropagators = _dereq_("./EventPropagators");
    var ReactInputSelection = _dereq_("./ReactInputSelection");
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var getActiveElement = _dereq_("./getActiveElement");
    var isTextInputElement = _dereq_("./isTextInputElement");
    var keyOf = _dereq_("./keyOf");
    var shallowEqual = _dereq_("./shallowEqual");
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {select:{phasedRegistrationNames:{bubbled:keyOf({onSelect:null}), captured:keyOf({onSelectCapture:null})}, dependencies:[topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]}};
    var activeElement = null;
    var activeElementID = null;
    var lastSelection = null;
    var mouseDown = false;
    function getSelection(node) {
      if ("selectionStart" in node && ReactInputSelection.hasSelectionCapabilities(node)) {
        return{start:node.selectionStart, end:node.selectionEnd};
      } else {
        if (window.getSelection) {
          var selection = window.getSelection();
          return{anchorNode:selection.anchorNode, anchorOffset:selection.anchorOffset, focusNode:selection.focusNode, focusOffset:selection.focusOffset};
        } else {
          if (document.selection) {
            var range = document.selection.createRange();
            return{parentElement:range.parentElement(), text:range.text, top:range.boundingTop, left:range.boundingLeft};
          }
        }
      }
    }
    function constructSelectEvent(nativeEvent) {
      if (mouseDown || activeElement == null || activeElement != getActiveElement()) {
        return;
      }
      var currentSelection = getSelection(activeElement);
      if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
        lastSelection = currentSelection;
        var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent);
        syntheticEvent.type = "select";
        syntheticEvent.target = activeElement;
        EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
        return syntheticEvent;
      }
    }
    var SelectEventPlugin = {eventTypes:eventTypes, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      switch(topLevelType) {
        case topLevelTypes.topFocus:
          if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === "true") {
            activeElement = topLevelTarget;
            activeElementID = topLevelTargetID;
            lastSelection = null;
          }
          break;
        case topLevelTypes.topBlur:
          activeElement = null;
          activeElementID = null;
          lastSelection = null;
          break;
        case topLevelTypes.topMouseDown:
          mouseDown = true;
          break;
        case topLevelTypes.topContextMenu:
        ;
        case topLevelTypes.topMouseUp:
          mouseDown = false;
          return constructSelectEvent(nativeEvent);
        case topLevelTypes.topSelectionChange:
        ;
        case topLevelTypes.topKeyDown:
        ;
        case topLevelTypes.topKeyUp:
          return constructSelectEvent(nativeEvent);
      }
    }};
    module.exports = SelectEventPlugin;
  }, {"./EventConstants":16, "./EventPropagators":21, "./ReactInputSelection":59, "./SyntheticEvent":87, "./getActiveElement":113, "./isTextInputElement":129, "./keyOf":133, "./shallowEqual":141}], 82:[function(_dereq_, module, exports) {
    var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
    var ServerReactRootIndex = {createReactRootIndex:function() {
      return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
    }};
    module.exports = ServerReactRootIndex;
  }, {}], 83:[function(_dereq_, module, exports) {
    var EventConstants = _dereq_("./EventConstants");
    var EventPluginUtils = _dereq_("./EventPluginUtils");
    var EventPropagators = _dereq_("./EventPropagators");
    var SyntheticClipboardEvent = _dereq_("./SyntheticClipboardEvent");
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var SyntheticFocusEvent = _dereq_("./SyntheticFocusEvent");
    var SyntheticKeyboardEvent = _dereq_("./SyntheticKeyboardEvent");
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var SyntheticDragEvent = _dereq_("./SyntheticDragEvent");
    var SyntheticTouchEvent = _dereq_("./SyntheticTouchEvent");
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var SyntheticWheelEvent = _dereq_("./SyntheticWheelEvent");
    var getEventCharCode = _dereq_("./getEventCharCode");
    var invariant = _dereq_("./invariant");
    var keyOf = _dereq_("./keyOf");
    var warning = _dereq_("./warning");
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {blur:{phasedRegistrationNames:{bubbled:keyOf({onBlur:true}), captured:keyOf({onBlurCapture:true})}}, click:{phasedRegistrationNames:{bubbled:keyOf({onClick:true}), captured:keyOf({onClickCapture:true})}}, contextMenu:{phasedRegistrationNames:{bubbled:keyOf({onContextMenu:true}), captured:keyOf({onContextMenuCapture:true})}}, copy:{phasedRegistrationNames:{bubbled:keyOf({onCopy:true}), captured:keyOf({onCopyCapture:true})}}, cut:{phasedRegistrationNames:{bubbled:keyOf({onCut:true}), 
    captured:keyOf({onCutCapture:true})}}, doubleClick:{phasedRegistrationNames:{bubbled:keyOf({onDoubleClick:true}), captured:keyOf({onDoubleClickCapture:true})}}, drag:{phasedRegistrationNames:{bubbled:keyOf({onDrag:true}), captured:keyOf({onDragCapture:true})}}, dragEnd:{phasedRegistrationNames:{bubbled:keyOf({onDragEnd:true}), captured:keyOf({onDragEndCapture:true})}}, dragEnter:{phasedRegistrationNames:{bubbled:keyOf({onDragEnter:true}), captured:keyOf({onDragEnterCapture:true})}}, dragExit:{phasedRegistrationNames:{bubbled:keyOf({onDragExit:true}), 
    captured:keyOf({onDragExitCapture:true})}}, dragLeave:{phasedRegistrationNames:{bubbled:keyOf({onDragLeave:true}), captured:keyOf({onDragLeaveCapture:true})}}, dragOver:{phasedRegistrationNames:{bubbled:keyOf({onDragOver:true}), captured:keyOf({onDragOverCapture:true})}}, dragStart:{phasedRegistrationNames:{bubbled:keyOf({onDragStart:true}), captured:keyOf({onDragStartCapture:true})}}, drop:{phasedRegistrationNames:{bubbled:keyOf({onDrop:true}), captured:keyOf({onDropCapture:true})}}, focus:{phasedRegistrationNames:{bubbled:keyOf({onFocus:true}), 
    captured:keyOf({onFocusCapture:true})}}, input:{phasedRegistrationNames:{bubbled:keyOf({onInput:true}), captured:keyOf({onInputCapture:true})}}, keyDown:{phasedRegistrationNames:{bubbled:keyOf({onKeyDown:true}), captured:keyOf({onKeyDownCapture:true})}}, keyPress:{phasedRegistrationNames:{bubbled:keyOf({onKeyPress:true}), captured:keyOf({onKeyPressCapture:true})}}, keyUp:{phasedRegistrationNames:{bubbled:keyOf({onKeyUp:true}), captured:keyOf({onKeyUpCapture:true})}}, load:{phasedRegistrationNames:{bubbled:keyOf({onLoad:true}), 
    captured:keyOf({onLoadCapture:true})}}, error:{phasedRegistrationNames:{bubbled:keyOf({onError:true}), captured:keyOf({onErrorCapture:true})}}, mouseDown:{phasedRegistrationNames:{bubbled:keyOf({onMouseDown:true}), captured:keyOf({onMouseDownCapture:true})}}, mouseMove:{phasedRegistrationNames:{bubbled:keyOf({onMouseMove:true}), captured:keyOf({onMouseMoveCapture:true})}}, mouseOut:{phasedRegistrationNames:{bubbled:keyOf({onMouseOut:true}), captured:keyOf({onMouseOutCapture:true})}}, mouseOver:{phasedRegistrationNames:{bubbled:keyOf({onMouseOver:true}), 
    captured:keyOf({onMouseOverCapture:true})}}, mouseUp:{phasedRegistrationNames:{bubbled:keyOf({onMouseUp:true}), captured:keyOf({onMouseUpCapture:true})}}, paste:{phasedRegistrationNames:{bubbled:keyOf({onPaste:true}), captured:keyOf({onPasteCapture:true})}}, reset:{phasedRegistrationNames:{bubbled:keyOf({onReset:true}), captured:keyOf({onResetCapture:true})}}, scroll:{phasedRegistrationNames:{bubbled:keyOf({onScroll:true}), captured:keyOf({onScrollCapture:true})}}, submit:{phasedRegistrationNames:{bubbled:keyOf({onSubmit:true}), 
    captured:keyOf({onSubmitCapture:true})}}, touchCancel:{phasedRegistrationNames:{bubbled:keyOf({onTouchCancel:true}), captured:keyOf({onTouchCancelCapture:true})}}, touchEnd:{phasedRegistrationNames:{bubbled:keyOf({onTouchEnd:true}), captured:keyOf({onTouchEndCapture:true})}}, touchMove:{phasedRegistrationNames:{bubbled:keyOf({onTouchMove:true}), captured:keyOf({onTouchMoveCapture:true})}}, touchStart:{phasedRegistrationNames:{bubbled:keyOf({onTouchStart:true}), captured:keyOf({onTouchStartCapture:true})}}, 
    wheel:{phasedRegistrationNames:{bubbled:keyOf({onWheel:true}), captured:keyOf({onWheelCapture:true})}}};
    var topLevelEventsToDispatchConfig = {topBlur:eventTypes.blur, topClick:eventTypes.click, topContextMenu:eventTypes.contextMenu, topCopy:eventTypes.copy, topCut:eventTypes.cut, topDoubleClick:eventTypes.doubleClick, topDrag:eventTypes.drag, topDragEnd:eventTypes.dragEnd, topDragEnter:eventTypes.dragEnter, topDragExit:eventTypes.dragExit, topDragLeave:eventTypes.dragLeave, topDragOver:eventTypes.dragOver, topDragStart:eventTypes.dragStart, topDrop:eventTypes.drop, topError:eventTypes.error, topFocus:eventTypes.focus, 
    topInput:eventTypes.input, topKeyDown:eventTypes.keyDown, topKeyPress:eventTypes.keyPress, topKeyUp:eventTypes.keyUp, topLoad:eventTypes.load, topMouseDown:eventTypes.mouseDown, topMouseMove:eventTypes.mouseMove, topMouseOut:eventTypes.mouseOut, topMouseOver:eventTypes.mouseOver, topMouseUp:eventTypes.mouseUp, topPaste:eventTypes.paste, topReset:eventTypes.reset, topScroll:eventTypes.scroll, topSubmit:eventTypes.submit, topTouchCancel:eventTypes.touchCancel, topTouchEnd:eventTypes.touchEnd, topTouchMove:eventTypes.touchMove, 
    topTouchStart:eventTypes.touchStart, topWheel:eventTypes.wheel};
    for (var topLevelType in topLevelEventsToDispatchConfig) {
      topLevelEventsToDispatchConfig[topLevelType].dependencies = [topLevelType];
    }
    var SimpleEventPlugin = {eventTypes:eventTypes, executeDispatch:function(event, listener, domID) {
      var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);
      "production" !== "development" ? warning(typeof returnValue !== "boolean", "Returning `false` from an event handler is deprecated and will be " + "ignored in a future release. Instead, manually call " + "e.stopPropagation() or e.preventDefault(), as appropriate.") : null;
      if (returnValue === false) {
        event.stopPropagation();
        event.preventDefault();
      }
    }, extractEvents:function(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent) {
      var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
      if (!dispatchConfig) {
        return null;
      }
      var EventConstructor;
      switch(topLevelType) {
        case topLevelTypes.topInput:
        ;
        case topLevelTypes.topLoad:
        ;
        case topLevelTypes.topError:
        ;
        case topLevelTypes.topReset:
        ;
        case topLevelTypes.topSubmit:
          EventConstructor = SyntheticEvent;
          break;
        case topLevelTypes.topKeyPress:
          if (getEventCharCode(nativeEvent) === 0) {
            return null;
          }
        ;
        case topLevelTypes.topKeyDown:
        ;
        case topLevelTypes.topKeyUp:
          EventConstructor = SyntheticKeyboardEvent;
          break;
        case topLevelTypes.topBlur:
        ;
        case topLevelTypes.topFocus:
          EventConstructor = SyntheticFocusEvent;
          break;
        case topLevelTypes.topClick:
          if (nativeEvent.button === 2) {
            return null;
          }
        ;
        case topLevelTypes.topContextMenu:
        ;
        case topLevelTypes.topDoubleClick:
        ;
        case topLevelTypes.topMouseDown:
        ;
        case topLevelTypes.topMouseMove:
        ;
        case topLevelTypes.topMouseOut:
        ;
        case topLevelTypes.topMouseOver:
        ;
        case topLevelTypes.topMouseUp:
          EventConstructor = SyntheticMouseEvent;
          break;
        case topLevelTypes.topDrag:
        ;
        case topLevelTypes.topDragEnd:
        ;
        case topLevelTypes.topDragEnter:
        ;
        case topLevelTypes.topDragExit:
        ;
        case topLevelTypes.topDragLeave:
        ;
        case topLevelTypes.topDragOver:
        ;
        case topLevelTypes.topDragStart:
        ;
        case topLevelTypes.topDrop:
          EventConstructor = SyntheticDragEvent;
          break;
        case topLevelTypes.topTouchCancel:
        ;
        case topLevelTypes.topTouchEnd:
        ;
        case topLevelTypes.topTouchMove:
        ;
        case topLevelTypes.topTouchStart:
          EventConstructor = SyntheticTouchEvent;
          break;
        case topLevelTypes.topScroll:
          EventConstructor = SyntheticUIEvent;
          break;
        case topLevelTypes.topWheel:
          EventConstructor = SyntheticWheelEvent;
          break;
        case topLevelTypes.topCopy:
        ;
        case topLevelTypes.topCut:
        ;
        case topLevelTypes.topPaste:
          EventConstructor = SyntheticClipboardEvent;
          break;
      }
      "production" !== "development" ? invariant(EventConstructor, "SimpleEventPlugin: Unhandled event type, `%s`.", topLevelType) : invariant(EventConstructor);
      var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent);
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }};
    module.exports = SimpleEventPlugin;
  }, {"./EventConstants":16, "./EventPluginUtils":20, "./EventPropagators":21, "./SyntheticClipboardEvent":84, "./SyntheticDragEvent":86, "./SyntheticEvent":87, "./SyntheticFocusEvent":88, "./SyntheticKeyboardEvent":90, "./SyntheticMouseEvent":91, "./SyntheticTouchEvent":92, "./SyntheticUIEvent":93, "./SyntheticWheelEvent":94, "./getEventCharCode":114, "./invariant":126, "./keyOf":133, "./warning":145}], 84:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var ClipboardEventInterface = {clipboardData:function(event) {
      return "clipboardData" in event ? event.clipboardData : window.clipboardData;
    }};
    function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
    module.exports = SyntheticClipboardEvent;
  }, {"./SyntheticEvent":87}], 85:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var CompositionEventInterface = {data:null};
    function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
    module.exports = SyntheticCompositionEvent;
  }, {"./SyntheticEvent":87}], 86:[function(_dereq_, module, exports) {
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var DragEventInterface = {dataTransfer:null};
    function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
    module.exports = SyntheticDragEvent;
  }, {"./SyntheticMouseEvent":91}], 87:[function(_dereq_, module, exports) {
    var PooledClass = _dereq_("./PooledClass");
    var assign = _dereq_("./Object.assign");
    var emptyFunction = _dereq_("./emptyFunction");
    var getEventTarget = _dereq_("./getEventTarget");
    var EventInterface = {type:null, target:getEventTarget, currentTarget:emptyFunction.thatReturnsNull, eventPhase:null, bubbles:null, cancelable:null, timeStamp:function(event) {
      return event.timeStamp || Date.now();
    }, defaultPrevented:null, isTrusted:null};
    function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      this.dispatchConfig = dispatchConfig;
      this.dispatchMarker = dispatchMarker;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }
        var normalize = Interface[propName];
        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          this[propName] = nativeEvent[propName];
        }
      }
      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
      if (defaultPrevented) {
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      } else {
        this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
      }
      this.isPropagationStopped = emptyFunction.thatReturnsFalse;
    }
    assign(SyntheticEvent.prototype, {preventDefault:function() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event.preventDefault ? event.preventDefault() : event.returnValue = false;
      this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
    }, stopPropagation:function() {
      var event = this.nativeEvent;
      event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
      this.isPropagationStopped = emptyFunction.thatReturnsTrue;
    }, persist:function() {
      this.isPersistent = emptyFunction.thatReturnsTrue;
    }, isPersistent:emptyFunction.thatReturnsFalse, destructor:function() {
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        this[propName] = null;
      }
      this.dispatchConfig = null;
      this.dispatchMarker = null;
      this.nativeEvent = null;
    }});
    SyntheticEvent.Interface = EventInterface;
    SyntheticEvent.augmentClass = function(Class, Interface) {
      var Super = this;
      var prototype = Object.create(Super.prototype);
      assign(prototype, Class.prototype);
      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = assign({}, Super.Interface, Interface);
      Class.augmentClass = Super.augmentClass;
      PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
    };
    PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);
    module.exports = SyntheticEvent;
  }, {"./Object.assign":27, "./PooledClass":28, "./emptyFunction":107, "./getEventTarget":117}], 88:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var FocusEventInterface = {relatedTarget:null};
    function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
    module.exports = SyntheticFocusEvent;
  }, {"./SyntheticUIEvent":93}], 89:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var InputEventInterface = {data:null};
    function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
    module.exports = SyntheticInputEvent;
  }, {"./SyntheticEvent":87}], 90:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var getEventCharCode = _dereq_("./getEventCharCode");
    var getEventKey = _dereq_("./getEventKey");
    var getEventModifierState = _dereq_("./getEventModifierState");
    var KeyboardEventInterface = {key:getEventKey, location:null, ctrlKey:null, shiftKey:null, altKey:null, metaKey:null, repeat:null, locale:null, getModifierState:getEventModifierState, charCode:function(event) {
      if (event.type === "keypress") {
        return getEventCharCode(event);
      }
      return 0;
    }, keyCode:function(event) {
      if (event.type === "keydown" || event.type === "keyup") {
        return event.keyCode;
      }
      return 0;
    }, which:function(event) {
      if (event.type === "keypress") {
        return getEventCharCode(event);
      }
      if (event.type === "keydown" || event.type === "keyup") {
        return event.keyCode;
      }
      return 0;
    }};
    function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
    module.exports = SyntheticKeyboardEvent;
  }, {"./SyntheticUIEvent":93, "./getEventCharCode":114, "./getEventKey":115, "./getEventModifierState":116}], 91:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var ViewportMetrics = _dereq_("./ViewportMetrics");
    var getEventModifierState = _dereq_("./getEventModifierState");
    var MouseEventInterface = {screenX:null, screenY:null, clientX:null, clientY:null, ctrlKey:null, shiftKey:null, altKey:null, metaKey:null, getModifierState:getEventModifierState, button:function(event) {
      var button = event.button;
      if ("which" in event) {
        return button;
      }
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    }, buttons:null, relatedTarget:function(event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    }, pageX:function(event) {
      return "pageX" in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    }, pageY:function(event) {
      return "pageY" in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }};
    function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
    module.exports = SyntheticMouseEvent;
  }, {"./SyntheticUIEvent":93, "./ViewportMetrics":96, "./getEventModifierState":116}], 92:[function(_dereq_, module, exports) {
    var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
    var getEventModifierState = _dereq_("./getEventModifierState");
    var TouchEventInterface = {touches:null, targetTouches:null, changedTouches:null, altKey:null, metaKey:null, ctrlKey:null, shiftKey:null, getModifierState:getEventModifierState};
    function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
    module.exports = SyntheticTouchEvent;
  }, {"./SyntheticUIEvent":93, "./getEventModifierState":116}], 93:[function(_dereq_, module, exports) {
    var SyntheticEvent = _dereq_("./SyntheticEvent");
    var getEventTarget = _dereq_("./getEventTarget");
    var UIEventInterface = {view:function(event) {
      if (event.view) {
        return event.view;
      }
      var target = getEventTarget(event);
      if (target != null && target.window === target) {
        return target;
      }
      var doc = target.ownerDocument;
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    }, detail:function(event) {
      return event.detail || 0;
    }};
    function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
    module.exports = SyntheticUIEvent;
  }, {"./SyntheticEvent":87, "./getEventTarget":117}], 94:[function(_dereq_, module, exports) {
    var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
    var WheelEventInterface = {deltaX:function(event) {
      return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
    }, deltaY:function(event) {
      return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
    }, deltaZ:null, deltaMode:null};
    function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
      SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
    }
    SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
    module.exports = SyntheticWheelEvent;
  }, {"./SyntheticMouseEvent":91}], 95:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var Mixin = {reinitializeTransaction:function() {
      this.transactionWrappers = this.getTransactionWrappers();
      if (!this.wrapperInitData) {
        this.wrapperInitData = [];
      } else {
        this.wrapperInitData.length = 0;
      }
      this._isInTransaction = false;
    }, _isInTransaction:false, getTransactionWrappers:null, isInTransaction:function() {
      return!!this._isInTransaction;
    }, perform:function(method, scope, a, b, c, d, e, f) {
      "production" !== "development" ? invariant(!this.isInTransaction(), "Transaction.perform(...): Cannot initialize a transaction when there " + "is already an outstanding transaction.") : invariant(!this.isInTransaction());
      var errorThrown;
      var ret;
      try {
        this._isInTransaction = true;
        errorThrown = true;
        this.initializeAll(0);
        ret = method.call(scope, a, b, c, d, e, f);
        errorThrown = false;
      } finally {
        try {
          if (errorThrown) {
            try {
              this.closeAll(0);
            } catch (err) {
            }
          } else {
            this.closeAll(0);
          }
        } finally {
          this._isInTransaction = false;
        }
      }
      return ret;
    }, initializeAll:function(startIndex) {
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex;i < transactionWrappers.length;i++) {
        var wrapper = transactionWrappers[i];
        try {
          this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
          this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
        } finally {
          if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
            try {
              this.initializeAll(i + 1);
            } catch (err) {
            }
          }
        }
      }
    }, closeAll:function(startIndex) {
      "production" !== "development" ? invariant(this.isInTransaction(), "Transaction.closeAll(): Cannot close transaction when none are open.") : invariant(this.isInTransaction());
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex;i < transactionWrappers.length;i++) {
        var wrapper = transactionWrappers[i];
        var initData = this.wrapperInitData[i];
        var errorThrown;
        try {
          errorThrown = true;
          if (initData !== Transaction.OBSERVED_ERROR) {
            wrapper.close && wrapper.close.call(this, initData);
          }
          errorThrown = false;
        } finally {
          if (errorThrown) {
            try {
              this.closeAll(i + 1);
            } catch (e) {
            }
          }
        }
      }
      this.wrapperInitData.length = 0;
    }};
    var Transaction = {Mixin:Mixin, OBSERVED_ERROR:{}};
    module.exports = Transaction;
  }, {"./invariant":126}], 96:[function(_dereq_, module, exports) {
    var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");
    var ViewportMetrics = {currentScrollLeft:0, currentScrollTop:0, refreshScrollValues:function() {
      var scrollPosition = getUnboundedScrollPosition(window);
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }};
    module.exports = ViewportMetrics;
  }, {"./getUnboundedScrollPosition":122}], 97:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function accumulateInto(current, next) {
      "production" !== "development" ? invariant(next != null, "accumulateInto(...): Accumulated items must not be null or undefined.") : invariant(next != null);
      if (current == null) {
        return next;
      }
      var currentIsArray = Array.isArray(current);
      var nextIsArray = Array.isArray(next);
      if (currentIsArray && nextIsArray) {
        current.push.apply(current, next);
        return current;
      }
      if (currentIsArray) {
        current.push(next);
        return current;
      }
      if (nextIsArray) {
        return[current].concat(next);
      }
      return[current, next];
    }
    module.exports = accumulateInto;
  }, {"./invariant":126}], 98:[function(_dereq_, module, exports) {
    var MOD = 65521;
    function adler32(data) {
      var a = 1;
      var b = 0;
      for (var i = 0;i < data.length;i++) {
        a = (a + data.charCodeAt(i)) % MOD;
        b = (b + a) % MOD;
      }
      return a | b << 16;
    }
    module.exports = adler32;
  }, {}], 99:[function(_dereq_, module, exports) {
    var _hyphenPattern = /-(.)/g;
    function camelize(string) {
      return string.replace(_hyphenPattern, function(_, character) {
        return character.toUpperCase();
      });
    }
    module.exports = camelize;
  }, {}], 100:[function(_dereq_, module, exports) {
    var camelize = _dereq_("./camelize");
    var msPattern = /^-ms-/;
    function camelizeStyleName(string) {
      return camelize(string.replace(msPattern, "ms-"));
    }
    module.exports = camelizeStyleName;
  }, {"./camelize":99}], 101:[function(_dereq_, module, exports) {
    var isTextNode = _dereq_("./isTextNode");
    function containsNode(outerNode, innerNode) {
      if (!outerNode || !innerNode) {
        return false;
      } else {
        if (outerNode === innerNode) {
          return true;
        } else {
          if (isTextNode(outerNode)) {
            return false;
          } else {
            if (isTextNode(innerNode)) {
              return containsNode(outerNode, innerNode.parentNode);
            } else {
              if (outerNode.contains) {
                return outerNode.contains(innerNode);
              } else {
                if (outerNode.compareDocumentPosition) {
                  return!!(outerNode.compareDocumentPosition(innerNode) & 16);
                } else {
                  return false;
                }
              }
            }
          }
        }
      }
    }
    module.exports = containsNode;
  }, {"./isTextNode":130}], 102:[function(_dereq_, module, exports) {
    var toArray = _dereq_("./toArray");
    function hasArrayNature(obj) {
      return!!obj && (typeof obj == "object" || typeof obj == "function") && "length" in obj && !("setInterval" in obj) && typeof obj.nodeType != "number" && (Array.isArray(obj) || "callee" in obj || "item" in obj);
    }
    function createArrayFrom(obj) {
      if (!hasArrayNature(obj)) {
        return[obj];
      } else {
        if (Array.isArray(obj)) {
          return obj.slice();
        } else {
          return toArray(obj);
        }
      }
    }
    module.exports = createArrayFrom;
  }, {"./toArray":143}], 103:[function(_dereq_, module, exports) {
    var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
    var ReactElement = _dereq_("./ReactElement");
    var invariant = _dereq_("./invariant");
    function createFullPageComponent(tag) {
      var elementFactory = ReactElement.createFactory(tag);
      var FullPageComponent = ReactCompositeComponent.createClass({displayName:"ReactFullPageComponent" + tag, componentWillUnmount:function() {
        "production" !== "development" ? invariant(false, "%s tried to unmount. Because of cross-browser quirks it is " + "impossible to unmount some top-level components (eg \x3chtml\x3e, \x3chead\x3e, " + "and \x3cbody\x3e) reliably and efficiently. To fix this, have a single " + "top-level component that never unmounts render these elements.", this.constructor.displayName) : invariant(false);
      }, render:function() {
        return elementFactory(this.props);
      }});
      return FullPageComponent;
    }
    module.exports = createFullPageComponent;
  }, {"./ReactCompositeComponent":34, "./ReactElement":52, "./invariant":126}], 104:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var createArrayFrom = _dereq_("./createArrayFrom");
    var getMarkupWrap = _dereq_("./getMarkupWrap");
    var invariant = _dereq_("./invariant");
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement("div") : null;
    var nodeNamePattern = /^\s*<(\w+)/;
    function getNodeName(markup) {
      var nodeNameMatch = markup.match(nodeNamePattern);
      return nodeNameMatch && nodeNameMatch[1].toLowerCase();
    }
    function createNodesFromMarkup(markup, handleScript) {
      var node = dummyNode;
      "production" !== "development" ? invariant(!!dummyNode, "createNodesFromMarkup dummy not initialized") : invariant(!!dummyNode);
      var nodeName = getNodeName(markup);
      var wrap = nodeName && getMarkupWrap(nodeName);
      if (wrap) {
        node.innerHTML = wrap[1] + markup + wrap[2];
        var wrapDepth = wrap[0];
        while (wrapDepth--) {
          node = node.lastChild;
        }
      } else {
        node.innerHTML = markup;
      }
      var scripts = node.getElementsByTagName("script");
      if (scripts.length) {
        "production" !== "development" ? invariant(handleScript, "createNodesFromMarkup(...): Unexpected \x3cscript\x3e element rendered.") : invariant(handleScript);
        createArrayFrom(scripts).forEach(handleScript);
      }
      var nodes = createArrayFrom(node.childNodes);
      while (node.lastChild) {
        node.removeChild(node.lastChild);
      }
      return nodes;
    }
    module.exports = createNodesFromMarkup;
  }, {"./ExecutionEnvironment":22, "./createArrayFrom":102, "./getMarkupWrap":118, "./invariant":126}], 105:[function(_dereq_, module, exports) {
    var CSSProperty = _dereq_("./CSSProperty");
    var isUnitlessNumber = CSSProperty.isUnitlessNumber;
    function dangerousStyleValue(name, value) {
      var isEmpty = value == null || typeof value === "boolean" || value === "";
      if (isEmpty) {
        return "";
      }
      var isNonNumeric = isNaN(value);
      if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
        return "" + value;
      }
      if (typeof value === "string") {
        value = value.trim();
      }
      return value + "px";
    }
    module.exports = dangerousStyleValue;
  }, {"./CSSProperty":4}], 106:[function(_dereq_, module, exports) {
    var assign = _dereq_("./Object.assign");
    var warning = _dereq_("./warning");
    function deprecated(namespace, oldName, newName, ctx, fn) {
      var warned = false;
      if ("production" !== "development") {
        var newFn = function() {
          "production" !== "development" ? warning(warned, namespace + "." + oldName + " will be deprecated in a future version. " + ("Use " + namespace + "." + newName + " instead.")) : null;
          warned = true;
          return fn.apply(ctx, arguments);
        };
        newFn.displayName = namespace + "_" + oldName;
        return assign(newFn, fn);
      }
      return fn;
    }
    module.exports = deprecated;
  }, {"./Object.assign":27, "./warning":145}], 107:[function(_dereq_, module, exports) {
    function makeEmptyFunction(arg) {
      return function() {
        return arg;
      };
    }
    function emptyFunction() {
    }
    emptyFunction.thatReturns = makeEmptyFunction;
    emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
    emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
    emptyFunction.thatReturnsNull = makeEmptyFunction(null);
    emptyFunction.thatReturnsThis = function() {
      return this;
    };
    emptyFunction.thatReturnsArgument = function(arg) {
      return arg;
    };
    module.exports = emptyFunction;
  }, {}], 108:[function(_dereq_, module, exports) {
    var emptyObject = {};
    if ("production" !== "development") {
      Object.freeze(emptyObject);
    }
    module.exports = emptyObject;
  }, {}], 109:[function(_dereq_, module, exports) {
    var ESCAPE_LOOKUP = {"\x26":"\x26amp;", "\x3e":"\x26gt;", "\x3c":"\x26lt;", '"':"\x26quot;", "'":"\x26#x27;"};
    var ESCAPE_REGEX = /[&><"']/g;
    function escaper(match) {
      return ESCAPE_LOOKUP[match];
    }
    function escapeTextForBrowser(text) {
      return("" + text).replace(ESCAPE_REGEX, escaper);
    }
    module.exports = escapeTextForBrowser;
  }, {}], 110:[function(_dereq_, module, exports) {
    var ReactTextComponent = _dereq_("./ReactTextComponent");
    var traverseAllChildren = _dereq_("./traverseAllChildren");
    var warning = _dereq_("./warning");
    function flattenSingleChildIntoContext(traverseContext, child, name) {
      var result = traverseContext;
      var keyUnique = !result.hasOwnProperty(name);
      "production" !== "development" ? warning(keyUnique, "flattenChildren(...): Encountered two children with the same key, " + "`%s`. Child keys must be unique; when two children share a key, only " + "the first child will be used.", name) : null;
      if (keyUnique && child != null) {
        var type = typeof child;
        var normalizedValue;
        if (type === "string") {
          normalizedValue = ReactTextComponent(child);
        } else {
          if (type === "number") {
            normalizedValue = ReactTextComponent("" + child);
          } else {
            normalizedValue = child;
          }
        }
        result[name] = normalizedValue;
      }
    }
    function flattenChildren(children) {
      if (children == null) {
        return children;
      }
      var result = {};
      traverseAllChildren(children, flattenSingleChildIntoContext, result);
      return result;
    }
    module.exports = flattenChildren;
  }, {"./ReactTextComponent":78, "./traverseAllChildren":144, "./warning":145}], 111:[function(_dereq_, module, exports) {
    function focusNode(node) {
      try {
        node.focus();
      } catch (e) {
      }
    }
    module.exports = focusNode;
  }, {}], 112:[function(_dereq_, module, exports) {
    var forEachAccumulated = function(arr, cb, scope) {
      if (Array.isArray(arr)) {
        arr.forEach(cb, scope);
      } else {
        if (arr) {
          cb.call(scope, arr);
        }
      }
    };
    module.exports = forEachAccumulated;
  }, {}], 113:[function(_dereq_, module, exports) {
    function getActiveElement() {
      try {
        return document.activeElement || document.body;
      } catch (e) {
        return document.body;
      }
    }
    module.exports = getActiveElement;
  }, {}], 114:[function(_dereq_, module, exports) {
    function getEventCharCode(nativeEvent) {
      var charCode;
      var keyCode = nativeEvent.keyCode;
      if ("charCode" in nativeEvent) {
        charCode = nativeEvent.charCode;
        if (charCode === 0 && keyCode === 13) {
          charCode = 13;
        }
      } else {
        charCode = keyCode;
      }
      if (charCode >= 32 || charCode === 13) {
        return charCode;
      }
      return 0;
    }
    module.exports = getEventCharCode;
  }, {}], 115:[function(_dereq_, module, exports) {
    var getEventCharCode = _dereq_("./getEventCharCode");
    var normalizeKey = {"Esc":"Escape", "Spacebar":" ", "Left":"ArrowLeft", "Up":"ArrowUp", "Right":"ArrowRight", "Down":"ArrowDown", "Del":"Delete", "Win":"OS", "Menu":"ContextMenu", "Apps":"ContextMenu", "Scroll":"ScrollLock", "MozPrintableKey":"Unidentified"};
    var translateToKey = {8:"Backspace", 9:"Tab", 12:"Clear", 13:"Enter", 16:"Shift", 17:"Control", 18:"Alt", 19:"Pause", 20:"CapsLock", 27:"Escape", 32:" ", 33:"PageUp", 34:"PageDown", 35:"End", 36:"Home", 37:"ArrowLeft", 38:"ArrowUp", 39:"ArrowRight", 40:"ArrowDown", 45:"Insert", 46:"Delete", 112:"F1", 113:"F2", 114:"F3", 115:"F4", 116:"F5", 117:"F6", 118:"F7", 119:"F8", 120:"F9", 121:"F10", 122:"F11", 123:"F12", 144:"NumLock", 145:"ScrollLock", 224:"Meta"};
    function getEventKey(nativeEvent) {
      if (nativeEvent.key) {
        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
        if (key !== "Unidentified") {
          return key;
        }
      }
      if (nativeEvent.type === "keypress") {
        var charCode = getEventCharCode(nativeEvent);
        return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
      }
      if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
        return translateToKey[nativeEvent.keyCode] || "Unidentified";
      }
      return "";
    }
    module.exports = getEventKey;
  }, {"./getEventCharCode":114}], 116:[function(_dereq_, module, exports) {
    var modifierKeyToProp = {"Alt":"altKey", "Control":"ctrlKey", "Meta":"metaKey", "Shift":"shiftKey"};
    function modifierStateGetter(keyArg) {
      var syntheticEvent = this;
      var nativeEvent = syntheticEvent.nativeEvent;
      if (nativeEvent.getModifierState) {
        return nativeEvent.getModifierState(keyArg);
      }
      var keyProp = modifierKeyToProp[keyArg];
      return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
      return modifierStateGetter;
    }
    module.exports = getEventModifierState;
  }, {}], 117:[function(_dereq_, module, exports) {
    function getEventTarget(nativeEvent) {
      var target = nativeEvent.target || nativeEvent.srcElement || window;
      return target.nodeType === 3 ? target.parentNode : target;
    }
    module.exports = getEventTarget;
  }, {}], 118:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var invariant = _dereq_("./invariant");
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement("div") : null;
    var shouldWrap = {"circle":true, "defs":true, "ellipse":true, "g":true, "line":true, "linearGradient":true, "path":true, "polygon":true, "polyline":true, "radialGradient":true, "rect":true, "stop":true, "text":true};
    var selectWrap = [1, '\x3cselect multiple\x3d"true"\x3e', "\x3c/select\x3e"];
    var tableWrap = [1, "\x3ctable\x3e", "\x3c/table\x3e"];
    var trWrap = [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"];
    var svgWrap = [1, "\x3csvg\x3e", "\x3c/svg\x3e"];
    var markupWrap = {"*":[1, "?\x3cdiv\x3e", "\x3c/div\x3e"], "area":[1, "\x3cmap\x3e", "\x3c/map\x3e"], "col":[2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"], "legend":[1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], "param":[1, "\x3cobject\x3e", "\x3c/object\x3e"], "tr":[2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], "optgroup":selectWrap, "option":selectWrap, "caption":tableWrap, "colgroup":tableWrap, "tbody":tableWrap, "tfoot":tableWrap, 
    "thead":tableWrap, "td":trWrap, "th":trWrap, "circle":svgWrap, "defs":svgWrap, "ellipse":svgWrap, "g":svgWrap, "line":svgWrap, "linearGradient":svgWrap, "path":svgWrap, "polygon":svgWrap, "polyline":svgWrap, "radialGradient":svgWrap, "rect":svgWrap, "stop":svgWrap, "text":svgWrap};
    function getMarkupWrap(nodeName) {
      "production" !== "development" ? invariant(!!dummyNode, "Markup wrapping node not initialized") : invariant(!!dummyNode);
      if (!markupWrap.hasOwnProperty(nodeName)) {
        nodeName = "*";
      }
      if (!shouldWrap.hasOwnProperty(nodeName)) {
        if (nodeName === "*") {
          dummyNode.innerHTML = "\x3clink /\x3e";
        } else {
          dummyNode.innerHTML = "\x3c" + nodeName + "\x3e\x3c/" + nodeName + "\x3e";
        }
        shouldWrap[nodeName] = !dummyNode.firstChild;
      }
      return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
    }
    module.exports = getMarkupWrap;
  }, {"./ExecutionEnvironment":22, "./invariant":126}], 119:[function(_dereq_, module, exports) {
    function getLeafNode(node) {
      while (node && node.firstChild) {
        node = node.firstChild;
      }
      return node;
    }
    function getSiblingNode(node) {
      while (node) {
        if (node.nextSibling) {
          return node.nextSibling;
        }
        node = node.parentNode;
      }
    }
    function getNodeForCharacterOffset(root, offset) {
      var node = getLeafNode(root);
      var nodeStart = 0;
      var nodeEnd = 0;
      while (node) {
        if (node.nodeType == 3) {
          nodeEnd = nodeStart + node.textContent.length;
          if (nodeStart <= offset && nodeEnd >= offset) {
            return{node:node, offset:offset - nodeStart};
          }
          nodeStart = nodeEnd;
        }
        node = getLeafNode(getSiblingNode(node));
      }
    }
    module.exports = getNodeForCharacterOffset;
  }, {}], 120:[function(_dereq_, module, exports) {
    var DOC_NODE_TYPE = 9;
    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }
    module.exports = getReactRootElementInContainer;
  }, {}], 121:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var contentKey = null;
    function getTextContentAccessor() {
      if (!contentKey && ExecutionEnvironment.canUseDOM) {
        contentKey = "textContent" in document.documentElement ? "textContent" : "innerText";
      }
      return contentKey;
    }
    module.exports = getTextContentAccessor;
  }, {"./ExecutionEnvironment":22}], 122:[function(_dereq_, module, exports) {
    function getUnboundedScrollPosition(scrollable) {
      if (scrollable === window) {
        return{x:window.pageXOffset || document.documentElement.scrollLeft, y:window.pageYOffset || document.documentElement.scrollTop};
      }
      return{x:scrollable.scrollLeft, y:scrollable.scrollTop};
    }
    module.exports = getUnboundedScrollPosition;
  }, {}], 123:[function(_dereq_, module, exports) {
    var _uppercasePattern = /([A-Z])/g;
    function hyphenate(string) {
      return string.replace(_uppercasePattern, "-$1").toLowerCase();
    }
    module.exports = hyphenate;
  }, {}], 124:[function(_dereq_, module, exports) {
    var hyphenate = _dereq_("./hyphenate");
    var msPattern = /^ms-/;
    function hyphenateStyleName(string) {
      return hyphenate(string).replace(msPattern, "-ms-");
    }
    module.exports = hyphenateStyleName;
  }, {"./hyphenate":123}], 125:[function(_dereq_, module, exports) {
    var warning = _dereq_("./warning");
    var ReactElement = _dereq_("./ReactElement");
    var ReactLegacyElement = _dereq_("./ReactLegacyElement");
    var ReactNativeComponent = _dereq_("./ReactNativeComponent");
    var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
    function instantiateReactComponent(element, parentCompositeType) {
      var instance;
      if ("production" !== "development") {
        "production" !== "development" ? warning(element && (typeof element.type === "function" || typeof element.type === "string"), "Only functions or strings can be mounted as React components.") : null;
        if (element.type._mockedReactClassConstructor) {
          ReactLegacyElement._isLegacyCallWarningEnabled = false;
          try {
            instance = new element.type._mockedReactClassConstructor(element.props);
          } finally {
            ReactLegacyElement._isLegacyCallWarningEnabled = true;
          }
          if (ReactElement.isValidElement(instance)) {
            instance = new instance.type(instance.props);
          }
          var render = instance.render;
          if (!render) {
            element = ReactEmptyComponent.getEmptyComponent();
          } else {
            if (render._isMockFunction && !render._getMockImplementation()) {
              render.mockImplementation(ReactEmptyComponent.getEmptyComponent);
            }
            instance.construct(element);
            return instance;
          }
        }
      }
      if (typeof element.type === "string") {
        instance = ReactNativeComponent.createInstanceForTag(element.type, element.props, parentCompositeType);
      } else {
        instance = new element.type(element.props);
      }
      if ("production" !== "development") {
        "production" !== "development" ? warning(typeof instance.construct === "function" && typeof instance.mountComponent === "function" && typeof instance.receiveComponent === "function", "Only React Components can be mounted.") : null;
      }
      instance.construct(element);
      return instance;
    }
    module.exports = instantiateReactComponent;
  }, {"./ReactElement":52, "./ReactEmptyComponent":54, "./ReactLegacyElement":61, "./ReactNativeComponent":66, "./warning":145}], 126:[function(_dereq_, module, exports) {
    var invariant = function(condition, format, a, b, c, d, e, f) {
      if ("production" !== "development") {
        if (format === undefined) {
          throw new Error("invariant requires an error message argument");
        }
      }
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error("Minified exception occurred; use the non-minified dev environment " + "for the full error message and additional helpful warnings.");
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error("Invariant Violation: " + format.replace(/%s/g, function() {
            return args[argIndex++];
          }));
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant;
  }, {}], 127:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var useHasFeature;
    if (ExecutionEnvironment.canUseDOM) {
      useHasFeature = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== true;
    }
    function isEventSupported(eventNameSuffix, capture) {
      if (!ExecutionEnvironment.canUseDOM || capture && !("addEventListener" in document)) {
        return false;
      }
      var eventName = "on" + eventNameSuffix;
      var isSupported = eventName in document;
      if (!isSupported) {
        var element = document.createElement("div");
        element.setAttribute(eventName, "return;");
        isSupported = typeof element[eventName] === "function";
      }
      if (!isSupported && useHasFeature && eventNameSuffix === "wheel") {
        isSupported = document.implementation.hasFeature("Events.wheel", "3.0");
      }
      return isSupported;
    }
    module.exports = isEventSupported;
  }, {"./ExecutionEnvironment":22}], 128:[function(_dereq_, module, exports) {
    function isNode(object) {
      return!!(object && (typeof Node === "function" ? object instanceof Node : typeof object === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string"));
    }
    module.exports = isNode;
  }, {}], 129:[function(_dereq_, module, exports) {
    var supportedInputTypes = {"color":true, "date":true, "datetime":true, "datetime-local":true, "email":true, "month":true, "number":true, "password":true, "range":true, "search":true, "tel":true, "text":true, "time":true, "url":true, "week":true};
    function isTextInputElement(elem) {
      return elem && (elem.nodeName === "INPUT" && supportedInputTypes[elem.type] || elem.nodeName === "TEXTAREA");
    }
    module.exports = isTextInputElement;
  }, {}], 130:[function(_dereq_, module, exports) {
    var isNode = _dereq_("./isNode");
    function isTextNode(object) {
      return isNode(object) && object.nodeType == 3;
    }
    module.exports = isTextNode;
  }, {"./isNode":128}], 131:[function(_dereq_, module, exports) {
    function joinClasses(className) {
      if (!className) {
        className = "";
      }
      var nextClass;
      var argLength = arguments.length;
      if (argLength > 1) {
        for (var ii = 1;ii < argLength;ii++) {
          nextClass = arguments[ii];
          if (nextClass) {
            className = (className ? className + " " : "") + nextClass;
          }
        }
      }
      return className;
    }
    module.exports = joinClasses;
  }, {}], 132:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    var keyMirror = function(obj) {
      var ret = {};
      var key;
      "production" !== "development" ? invariant(obj instanceof Object && !Array.isArray(obj), "keyMirror(...): Argument must be an object.") : invariant(obj instanceof Object && !Array.isArray(obj));
      for (key in obj) {
        if (!obj.hasOwnProperty(key)) {
          continue;
        }
        ret[key] = key;
      }
      return ret;
    };
    module.exports = keyMirror;
  }, {"./invariant":126}], 133:[function(_dereq_, module, exports) {
    var keyOf = function(oneKeyObj) {
      var key;
      for (key in oneKeyObj) {
        if (!oneKeyObj.hasOwnProperty(key)) {
          continue;
        }
        return key;
      }
      return null;
    };
    module.exports = keyOf;
  }, {}], 134:[function(_dereq_, module, exports) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function mapObject(object, callback, context) {
      if (!object) {
        return null;
      }
      var result = {};
      for (var name in object) {
        if (hasOwnProperty.call(object, name)) {
          result[name] = callback.call(context, object[name], name, object);
        }
      }
      return result;
    }
    module.exports = mapObject;
  }, {}], 135:[function(_dereq_, module, exports) {
    function memoizeStringOnly(callback) {
      var cache = {};
      return function(string) {
        if (cache.hasOwnProperty(string)) {
          return cache[string];
        } else {
          return cache[string] = callback.call(this, string);
        }
      };
    }
    module.exports = memoizeStringOnly;
  }, {}], 136:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function monitorCodeUse(eventName, data) {
      "production" !== "development" ? invariant(eventName && !/[^a-z0-9_]/.test(eventName), "You must provide an eventName using only the characters [a-z0-9_]") : invariant(eventName && !/[^a-z0-9_]/.test(eventName));
    }
    module.exports = monitorCodeUse;
  }, {"./invariant":126}], 137:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var invariant = _dereq_("./invariant");
    function onlyChild(children) {
      "production" !== "development" ? invariant(ReactElement.isValidElement(children), "onlyChild must be passed a children with exactly one child.") : invariant(ReactElement.isValidElement(children));
      return children;
    }
    module.exports = onlyChild;
  }, {"./ReactElement":52, "./invariant":126}], 138:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var performance;
    if (ExecutionEnvironment.canUseDOM) {
      performance = window.performance || window.msPerformance || window.webkitPerformance;
    }
    module.exports = performance || {};
  }, {"./ExecutionEnvironment":22}], 139:[function(_dereq_, module, exports) {
    var performance = _dereq_("./performance");
    if (!performance || !performance.now) {
      performance = Date;
    }
    var performanceNow = performance.now.bind(performance);
    module.exports = performanceNow;
  }, {"./performance":138}], 140:[function(_dereq_, module, exports) {
    var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
    var WHITESPACE_TEST = /^[ \r\n\t\f]/;
    var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
    var setInnerHTML = function(node, html) {
      node.innerHTML = html;
    };
    if (ExecutionEnvironment.canUseDOM) {
      var testElement = document.createElement("div");
      testElement.innerHTML = " ";
      if (testElement.innerHTML === "") {
        setInnerHTML = function(node, html) {
          if (node.parentNode) {
            node.parentNode.replaceChild(node, node);
          }
          if (WHITESPACE_TEST.test(html) || html[0] === "\x3c" && NONVISIBLE_TEST.test(html)) {
            node.innerHTML = "\ufeff" + html;
            var textNode = node.firstChild;
            if (textNode.data.length === 1) {
              node.removeChild(textNode);
            } else {
              textNode.deleteData(0, 1);
            }
          } else {
            node.innerHTML = html;
          }
        };
      }
    }
    module.exports = setInnerHTML;
  }, {"./ExecutionEnvironment":22}], 141:[function(_dereq_, module, exports) {
    function shallowEqual(objA, objB) {
      if (objA === objB) {
        return true;
      }
      var key;
      for (key in objA) {
        if (objA.hasOwnProperty(key) && (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
          return false;
        }
      }
      for (key in objB) {
        if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
          return false;
        }
      }
      return true;
    }
    module.exports = shallowEqual;
  }, {}], 142:[function(_dereq_, module, exports) {
    function shouldUpdateReactComponent(prevElement, nextElement) {
      if (prevElement && nextElement && prevElement.type === nextElement.type && prevElement.key === nextElement.key && prevElement._owner === nextElement._owner) {
        return true;
      }
      return false;
    }
    module.exports = shouldUpdateReactComponent;
  }, {}], 143:[function(_dereq_, module, exports) {
    var invariant = _dereq_("./invariant");
    function toArray(obj) {
      var length = obj.length;
      "production" !== "development" ? invariant(!Array.isArray(obj) && (typeof obj === "object" || typeof obj === "function"), "toArray: Array-like object expected") : invariant(!Array.isArray(obj) && (typeof obj === "object" || typeof obj === "function"));
      "production" !== "development" ? invariant(typeof length === "number", "toArray: Object needs a length property") : invariant(typeof length === "number");
      "production" !== "development" ? invariant(length === 0 || length - 1 in obj, "toArray: Object should have keys for indices") : invariant(length === 0 || length - 1 in obj);
      if (obj.hasOwnProperty) {
        try {
          return Array.prototype.slice.call(obj);
        } catch (e) {
        }
      }
      var ret = Array(length);
      for (var ii = 0;ii < length;ii++) {
        ret[ii] = obj[ii];
      }
      return ret;
    }
    module.exports = toArray;
  }, {"./invariant":126}], 144:[function(_dereq_, module, exports) {
    var ReactElement = _dereq_("./ReactElement");
    var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
    var invariant = _dereq_("./invariant");
    var SEPARATOR = ReactInstanceHandles.SEPARATOR;
    var SUBSEPARATOR = ":";
    var userProvidedKeyEscaperLookup = {"\x3d":"\x3d0", ".":"\x3d1", ":":"\x3d2"};
    var userProvidedKeyEscapeRegex = /[=.:]/g;
    function userProvidedKeyEscaper(match) {
      return userProvidedKeyEscaperLookup[match];
    }
    function getComponentKey(component, index) {
      if (component && component.key != null) {
        return wrapUserProvidedKey(component.key);
      }
      return index.toString(36);
    }
    function escapeUserProvidedKey(text) {
      return("" + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
    }
    function wrapUserProvidedKey(key) {
      return "$" + escapeUserProvidedKey(key);
    }
    var traverseAllChildrenImpl = function(children, nameSoFar, indexSoFar, callback, traverseContext) {
      var nextName, nextIndex;
      var subtreeCount = 0;
      if (Array.isArray(children)) {
        for (var i = 0;i < children.length;i++) {
          var child = children[i];
          nextName = nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) + getComponentKey(child, i);
          nextIndex = indexSoFar + subtreeCount;
          subtreeCount += traverseAllChildrenImpl(child, nextName, nextIndex, callback, traverseContext);
        }
      } else {
        var type = typeof children;
        var isOnlyChild = nameSoFar === "";
        var storageName = isOnlyChild ? SEPARATOR + getComponentKey(children, 0) : nameSoFar;
        if (children == null || type === "boolean") {
          callback(traverseContext, null, storageName, indexSoFar);
          subtreeCount = 1;
        } else {
          if (type === "string" || type === "number" || ReactElement.isValidElement(children)) {
            callback(traverseContext, children, storageName, indexSoFar);
            subtreeCount = 1;
          } else {
            if (type === "object") {
              "production" !== "development" ? invariant(!children || children.nodeType !== 1, "traverseAllChildren(...): Encountered an invalid child; DOM " + "elements are not valid children of React components.") : invariant(!children || children.nodeType !== 1);
              for (var key in children) {
                if (children.hasOwnProperty(key)) {
                  nextName = nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) + wrapUserProvidedKey(key) + SUBSEPARATOR + getComponentKey(children[key], 0);
                  nextIndex = indexSoFar + subtreeCount;
                  subtreeCount += traverseAllChildrenImpl(children[key], nextName, nextIndex, callback, traverseContext);
                }
              }
            }
          }
        }
      }
      return subtreeCount;
    };
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, "", 0, callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  }, {"./ReactElement":52, "./ReactInstanceHandles":60, "./invariant":126}], 145:[function(_dereq_, module, exports) {
    var emptyFunction = _dereq_("./emptyFunction");
    var warning = emptyFunction;
    if ("production" !== "development") {
      warning = function(condition, format) {
        for (var args = [], $__0 = 2, $__1 = arguments.length;$__0 < $__1;$__0++) {
          args.push(arguments[$__0]);
        }
        if (format === undefined) {
          throw new Error("`warning(condition, format, ...args)` requires a warning " + "message argument");
        }
        if (!condition) {
          var argIndex = 0;
          console.warn("Warning: " + format.replace(/%s/g, function() {
            return args[argIndex++];
          }));
        }
      };
    }
    module.exports = warning;
  }, {"./emptyFunction":107}]}, {}, [1])(1);
});
// Input 16
goog.provide("reagent.impl.batching");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("reagent.interop");
goog.require("reagent.debug");
if (typeof reagent.impl.batching.mount_count !== "undefined") {
} else {
  reagent.impl.batching.mount_count = 0;
}
reagent.impl.batching.next_mount_count = function next_mount_count() {
  return reagent.impl.batching.mount_count = reagent.impl.batching.mount_count + 1;
};
reagent.impl.batching.fake_raf = function fake_raf(f) {
  return setTimeout(f, 16);
};
reagent.impl.batching.next_tick = cljs.core.not.call(null, reagent.impl.util.is_client) ? reagent.impl.batching.fake_raf : function() {
  var w = window;
  var or__3799__auto__ = w["requestAnimationFrame"];
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var or__3799__auto____$1 = w["webkitRequestAnimationFrame"];
    if (cljs.core.truth_(or__3799__auto____$1)) {
      return or__3799__auto____$1;
    } else {
      var or__3799__auto____$2 = w["mozRequestAnimationFrame"];
      if (cljs.core.truth_(or__3799__auto____$2)) {
        return or__3799__auto____$2;
      } else {
        var or__3799__auto____$3 = w["msRequestAnimationFrame"];
        if (cljs.core.truth_(or__3799__auto____$3)) {
          return or__3799__auto____$3;
        } else {
          return reagent.impl.batching.fake_raf;
        }
      }
    }
  }
}();
reagent.impl.batching.compare_mount_order = function compare_mount_order(c1, c2) {
  return c1["cljsMountOrder"] - c2["cljsMountOrder"];
};
reagent.impl.batching.run_queue = function run_queue(a) {
  a.sort(reagent.impl.batching.compare_mount_order);
  var n__4686__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4686__auto__) {
      var c_10752 = a[i];
      if (cljs.core.truth_(c_10752["cljsIsDirty"])) {
        c_10752["forceUpdate"]();
      } else {
      }
      var G__10753 = i + 1;
      i = G__10753;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.run_funs = function run_funs(a) {
  var n__4686__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4686__auto__) {
      a[i].call(null);
      var G__10754 = i + 1;
      i = G__10754;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.RenderQueue = function(queue, scheduled_QMARK_, after_render) {
  this.queue = queue;
  this.scheduled_QMARK_ = scheduled_QMARK_;
  this.after_render = after_render;
};
reagent.impl.batching.RenderQueue.prototype.queue_render = function(c) {
  var self__ = this;
  var this$ = this;
  self__.queue.push(c);
  return this$.schedule();
};
reagent.impl.batching.RenderQueue.prototype.add_after_render = function(f) {
  var self__ = this;
  var _ = this;
  return self__.after_render.push(f);
};
reagent.impl.batching.RenderQueue.prototype.schedule = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.truth_(self__.scheduled_QMARK_)) {
    return null;
  } else {
    self__.scheduled_QMARK_ = true;
    return reagent.impl.batching.next_tick.call(null, function(this$) {
      return function() {
        return this$.run_queue();
      };
    }(this$));
  }
};
reagent.impl.batching.RenderQueue.prototype.run_queue = function() {
  var self__ = this;
  var _ = this;
  var q = self__.queue;
  var aq = self__.after_render;
  self__.queue = [];
  self__.after_render = [];
  self__.scheduled_QMARK_ = false;
  reagent.impl.batching.run_queue.call(null, q);
  return reagent.impl.batching.run_funs.call(null, aq);
};
reagent.impl.batching.RenderQueue.cljs$lang$type = true;
reagent.impl.batching.RenderQueue.cljs$lang$ctorStr = "reagent.impl.batching/RenderQueue";
reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "reagent.impl.batching/RenderQueue");
};
reagent.impl.batching.__GT_RenderQueue = function __GT_RenderQueue(queue, scheduled_QMARK_, after_render) {
  return new reagent.impl.batching.RenderQueue(queue, scheduled_QMARK_, after_render);
};
reagent.impl.batching.render_queue = new reagent.impl.batching.RenderQueue([], false, []);
reagent.impl.batching.flush = function flush() {
  return reagent.impl.batching.render_queue.run_queue();
};
reagent.impl.batching.queue_render = function queue_render(c) {
  c["cljsIsDirty"] = true;
  return reagent.impl.batching.render_queue.queue_render(c);
};
reagent.impl.batching.mark_rendered = function mark_rendered(c) {
  return c["cljsIsDirty"] = false;
};
reagent.impl.batching.do_after_flush = function do_after_flush(f) {
  return reagent.impl.batching.render_queue.add_after_render(f);
};
reagent.impl.batching.do_later = function do_later(f) {
  reagent.impl.batching.do_after_flush.call(null, f);
  return reagent.impl.batching.render_queue.schedule();
};
reagent.impl.batching.is_reagent_component = function is_reagent_component(c) {
  var G__10756 = c;
  var G__10756__$1 = G__10756 == null ? null : G__10756["props"];
  var G__10756__$2 = G__10756__$1 == null ? null : G__10756__$1["argv"];
  return G__10756__$2;
};
reagent.impl.batching.run_reactively = function run_reactively(c, run) {
  if (cljs.core.truth_(reagent.impl.batching.is_reagent_component.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "is-reagent-component", "is-reagent-component", -1856228005, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  reagent.impl.batching.mark_rendered.call(null, c);
  var rat = c["cljsRatom"];
  if (rat == null) {
    var res = reagent.ratom.capture_derefed.call(null, run, c);
    var derefed = reagent.ratom.captured.call(null, c);
    if (!(derefed == null)) {
      c["cljsRatom"] = reagent.ratom.make_reaction.call(null, run, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437), function(res, derefed, rat) {
        return function() {
          return reagent.impl.batching.queue_render.call(null, c);
        };
      }(res, derefed, rat), new cljs.core.Keyword(null, "derefed", "derefed", 590684583), derefed);
    } else {
    }
    return res;
  } else {
    return reagent.ratom.run.call(null, rat);
  }
};
reagent.impl.batching.dispose = function dispose(c) {
  var G__10758_10759 = c["cljsRatom"];
  var G__10758_10760__$1 = G__10758_10759 == null ? null : reagent.ratom.dispose_BANG_.call(null, G__10758_10759);
  return reagent.impl.batching.mark_rendered.call(null, c);
};
// Input 17
goog.provide("reagent.impl.component");
goog.require("cljs.core");
goog.require("reagent.debug");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.util");
reagent.impl.component.state_atom = function state_atom(this$) {
  var sa = this$["cljsState"];
  if (!(sa == null)) {
    return sa;
  } else {
    return this$["cljsState"] = reagent.ratom.atom.call(null, null);
  }
};
reagent.impl.component.as_element = function as_element(x) {
  return reagent.impl.template.as_element(x);
};
reagent.impl.component.do_render = function do_render(c) {
  var _STAR_current_component_STAR_10716 = reagent.impl.component._STAR_current_component_STAR_;
  try {
    reagent.impl.component._STAR_current_component_STAR_ = c;
    var f = c["cljsRender"];
    var _ = cljs.core.ifn_QMARK_.call(null, f) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }();
    var p = c["props"];
    var res = c["reagentRender"] == null ? f.call(null, c) : function() {
      var argv = p["argv"];
      var n = cljs.core.count.call(null, argv);
      var G__10717 = n;
      switch(G__10717) {
        case 1:
          return f.call(null);
          break;
        case 2:
          return f.call(null, cljs.core.nth.call(null, argv, 1));
          break;
        case 3:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2));
          break;
        case 4:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3));
          break;
        case 5:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3), cljs.core.nth.call(null, argv, 4));
          break;
        default:
          return cljs.core.apply.call(null, f, cljs.core.subvec.call(null, argv, 1));
      }
    }();
    if (cljs.core.vector_QMARK_.call(null, res)) {
      return reagent.impl.component.as_element.call(null, res);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, res)) {
        c["cljsRender"] = res;
        return do_render.call(null, c);
      } else {
        return res;
      }
    }
  } finally {
    reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR_10716;
  }
};
reagent.impl.component.static_fns = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "render", "render", -1408033454), function() {
  var c = this;
  if (cljs.core.not.call(null, reagent.impl.component._STAR_non_reactive_STAR_)) {
    return reagent.impl.batching.run_reactively.call(null, c, function(c) {
      return function() {
        return reagent.impl.component.do_render.call(null, c);
      };
    }(c));
  } else {
    return reagent.impl.component.do_render.call(null, c);
  }
}], null);
reagent.impl.component.custom_wrapper = function custom_wrapper(key, f) {
  var G__10720 = key instanceof cljs.core.Keyword ? key.fqn : null;
  switch(G__10720) {
    case "componentWillUnmount":
      return function(G__10720) {
        return function() {
          var c = this;
          reagent.impl.batching.dispose.call(null, c);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__10720);
      break;
    case "componentWillMount":
      return function(G__10720) {
        return function() {
          var c = this;
          c["cljsMountOrder"] = reagent.impl.batching.next_mount_count.call(null);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__10720);
      break;
    case "componentDidUpdate":
      return function(G__10720) {
        return function(oldprops) {
          var c = this;
          return f.call(null, c, oldprops["argv"]);
        };
      }(G__10720);
      break;
    case "componentWillUpdate":
      return function(G__10720) {
        return function(nextprops) {
          var c = this;
          return f.call(null, c, nextprops["argv"]);
        };
      }(G__10720);
      break;
    case "shouldComponentUpdate":
      return function(G__10720) {
        return function(nextprops, nextstate) {
          var or__3799__auto__ = reagent.impl.util._STAR_always_update_STAR_;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            var c = this;
            var old_argv = c["props"]["argv"];
            var new_argv = nextprops["argv"];
            if (f == null) {
              return old_argv == null || new_argv == null || cljs.core.not_EQ_.call(null, old_argv, new_argv);
            } else {
              return f.call(null, c, old_argv, new_argv);
            }
          }
        };
      }(G__10720);
      break;
    case "componentWillReceiveProps":
      return function(G__10720) {
        return function(props) {
          var c = this;
          return f.call(null, c, props["argv"]);
        };
      }(G__10720);
      break;
    case "getInitialState":
      return function(G__10720) {
        return function() {
          var c = this;
          return cljs.core.reset_BANG_.call(null, reagent.impl.component.state_atom.call(null, c), f.call(null, c));
        };
      }(G__10720);
      break;
    case "getDefaultProps":
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("getDefaultProps not supported yet"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));break;
    default:
      return null;
  }
};
reagent.impl.component.default_wrapper = function default_wrapper(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    return function() {
      var G__10722__delegate = function(args) {
        var c = this;
        return cljs.core.apply.call(null, f, c, args);
      };
      var G__10722 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10723__i = 0, G__10723__a = new Array(arguments.length - 0);
          while (G__10723__i < G__10723__a.length) {
            G__10723__a[G__10723__i] = arguments[G__10723__i + 0];
            ++G__10723__i;
          }
          args = new cljs.core.IndexedSeq(G__10723__a, 0);
        }
        return G__10722__delegate.call(this, args);
      };
      G__10722.cljs$lang$maxFixedArity = 0;
      G__10722.cljs$lang$applyTo = function(arglist__10724) {
        var args = cljs.core.seq(arglist__10724);
        return G__10722__delegate(args);
      };
      G__10722.cljs$core$IFn$_invoke$arity$variadic = G__10722__delegate;
      return G__10722;
    }();
  } else {
    return f;
  }
};
reagent.impl.component.dont_wrap = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), null, new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383), null, new cljs.core.Keyword(null, "render", "render", -1408033454), null, new cljs.core.Keyword(null, "cljsName", "cljsName", 999824949), null], null), null);
reagent.impl.component.dont_bind = function dont_bind(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
    var G__10726 = f;
    G__10726["__reactDontBind"] = true;
    return G__10726;
  } else {
    return f;
  }
};
reagent.impl.component.get_wrapper = function get_wrapper(key, f, name) {
  if (cljs.core.truth_(reagent.impl.component.dont_wrap.call(null, key))) {
    return reagent.impl.component.dont_bind.call(null, f);
  } else {
    var wrap = reagent.impl.component.custom_wrapper.call(null, key, f);
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = wrap;
      if (cljs.core.truth_(and__3787__auto__)) {
        return f;
      } else {
        return and__3787__auto__;
      }
    }())) {
      if (cljs.core.ifn_QMARK_.call(null, f)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected function in "), cljs.core.str(name), cljs.core.str(key), cljs.core.str(" but got "), cljs.core.str(f)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
      }
    } else {
    }
    var or__3799__auto__ = wrap;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return reagent.impl.component.default_wrapper.call(null, f);
    }
  }
};
reagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), null, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), null, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), null], null);
reagent.impl.component.dash_to_camel = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.component.camelify_map_keys = function camelify_map_keys(fun_map) {
  return cljs.core.reduce_kv.call(null, function(m, k, v) {
    return cljs.core.assoc.call(null, m, cljs.core.keyword.call(null, reagent.impl.component.dash_to_camel.call(null, k)), v);
  }, cljs.core.PersistentArrayMap.EMPTY, fun_map);
};
reagent.impl.component.add_obligatory = function add_obligatory(fun_map) {
  return cljs.core.merge.call(null, reagent.impl.component.obligatory, fun_map);
};
reagent.impl.component.add_render = function add_render(fun_map, render_f, name) {
  var fm = cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), render_f, new cljs.core.Keyword(null, "render", "render", -1408033454), (new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(reagent.impl.component.static_fns));
  return cljs.core.assoc.call(null, fm, new cljs.core.Keyword(null, "cljsName", "cljsName", 999824949), function(fm) {
    return function() {
      return name;
    };
  }(fm));
};
reagent.impl.component.fun_name = function fun_name(f) {
  var or__3799__auto__ = function() {
    var and__3787__auto__ = cljs.core.fn_QMARK_.call(null, f);
    if (and__3787__auto__) {
      var or__3799__auto__ = f["displayName"];
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return f["name"];
      }
    } else {
      return and__3787__auto__;
    }
  }();
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var or__3799__auto____$1 = function() {
      var and__3787__auto__ = function() {
        var G__10734 = f;
        if (G__10734) {
          var bit__4473__auto__ = G__10734.cljs$lang$protocol_mask$partition1$ & 4096;
          if (bit__4473__auto__ || G__10734.cljs$core$INamed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }();
      if (and__3787__auto__) {
        return cljs.core.name.call(null, f);
      } else {
        return and__3787__auto__;
      }
    }();
    if (cljs.core.truth_(or__3799__auto____$1)) {
      return or__3799__auto____$1;
    } else {
      var m = cljs.core.meta.call(null, f);
      if (cljs.core.map_QMARK_.call(null, m)) {
        return(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(m);
      } else {
        return null;
      }
    }
  }
};
reagent.impl.component.wrap_funs = function wrap_funs(fmap) {
  var fun_map = function() {
    var temp__4128__auto__ = (new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104)).cljs$core$IFn$_invoke$arity$1(fmap);
    if (temp__4128__auto__ == null) {
      return fmap;
    } else {
      var cf = temp__4128__auto__;
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, fmap, new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383), cf), new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104));
    }
  }();
  var render_fun = function() {
    var or__3799__auto__ = (new cljs.core.Keyword(null, "reagentRender", "reagentRender", -358306383)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return(new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(fun_map);
    }
  }();
  var _ = cljs.core.ifn_QMARK_.call(null, render_fun) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Render must be a function, not "), cljs.core.str(cljs.core.pr_str.call(null, render_fun))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "render-fun", "render-fun", -1209513086, null))))].join(""));
  }();
  var name = [cljs.core.str(function() {
    var or__3799__auto__ = (new cljs.core.Keyword(null, "displayName", "displayName", -809144601)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return reagent.impl.component.fun_name.call(null, render_fun);
    }
  }())].join("");
  var name_SINGLEQUOTE_ = cljs.core.empty_QMARK_.call(null, name) ? [cljs.core.str(cljs.core.gensym.call(null, "reagent"))].join("") : name;
  var fmap__$1 = reagent.impl.component.add_render.call(null, cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "displayName", "displayName", -809144601), name_SINGLEQUOTE_), render_fun, name_SINGLEQUOTE_);
  return cljs.core.reduce_kv.call(null, function(fun_map, render_fun, _, name, name_SINGLEQUOTE_, fmap__$1) {
    return function(m, k, v) {
      return cljs.core.assoc.call(null, m, k, reagent.impl.component.get_wrapper.call(null, k, v, name_SINGLEQUOTE_));
    };
  }(fun_map, render_fun, _, name, name_SINGLEQUOTE_, fmap__$1), cljs.core.PersistentArrayMap.EMPTY, fmap__$1);
};
reagent.impl.component.map_to_js = function map_to_js(m) {
  return cljs.core.reduce_kv.call(null, function(o, k, v) {
    var G__10736 = o;
    G__10736[cljs.core.name.call(null, k)] = v;
    return G__10736;
  }, {}, m);
};
reagent.impl.component.cljsify = function cljsify(body) {
  return reagent.impl.component.map_to_js.call(null, reagent.impl.component.wrap_funs.call(null, reagent.impl.component.add_obligatory.call(null, reagent.impl.component.camelify_map_keys.call(null, body))));
};
reagent.impl.component.create_class = function create_class(body) {
  if (cljs.core.map_QMARK_.call(null, body)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "body", "body", -408674142, null))))].join(""));
  }
  var spec = reagent.impl.component.cljsify.call(null, body);
  var res = React["createClass"](spec);
  var f = function(spec, res) {
    return function() {
      var G__10737__delegate = function(args) {
        return reagent.impl.component.as_element.call(null, cljs.core.apply.call(null, cljs.core.vector, res, args));
      };
      var G__10737 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10738__i = 0, G__10738__a = new Array(arguments.length - 0);
          while (G__10738__i < G__10738__a.length) {
            G__10738__a[G__10738__i] = arguments[G__10738__i + 0];
            ++G__10738__i;
          }
          args = new cljs.core.IndexedSeq(G__10738__a, 0);
        }
        return G__10737__delegate.call(this, args);
      };
      G__10737.cljs$lang$maxFixedArity = 0;
      G__10737.cljs$lang$applyTo = function(arglist__10739) {
        var args = cljs.core.seq(arglist__10739);
        return G__10737__delegate(args);
      };
      G__10737.cljs$core$IFn$_invoke$arity$variadic = G__10737__delegate;
      return G__10737;
    }();
  }(spec, res);
  reagent.impl.util.cache_react_class.call(null, f, res);
  reagent.impl.util.cache_react_class.call(null, res, res);
  return f;
};
reagent.impl.component.comp_name = function comp_name() {
  var n = function() {
    var G__10741 = reagent.impl.component._STAR_current_component_STAR_;
    var G__10741__$1 = G__10741 == null ? null : G__10741["cljsName"]();
    return G__10741__$1;
  }();
  if (!cljs.core.empty_QMARK_.call(null, n)) {
    return[cljs.core.str(" (in "), cljs.core.str(n), cljs.core.str(")")].join("");
  } else {
    return "";
  }
};
reagent.impl.component.shallow_obj_to_map = function shallow_obj_to_map(o) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4555__auto__ = function iter__10746(s__10747) {
      return new cljs.core.LazySeq(null, function() {
        var s__10747__$1 = s__10747;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__10747__$1);
          if (temp__4126__auto__) {
            var s__10747__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__10747__$2)) {
              var c__4553__auto__ = cljs.core.chunk_first.call(null, s__10747__$2);
              var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
              var b__10749 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
              if (function() {
                var i__10748 = 0;
                while (true) {
                  if (i__10748 < size__4554__auto__) {
                    var k = cljs.core._nth.call(null, c__4553__auto__, i__10748);
                    cljs.core.chunk_append.call(null, b__10749, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), o[k]], null));
                    var G__10750 = i__10748 + 1;
                    i__10748 = G__10750;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10749), iter__10746.call(null, cljs.core.chunk_rest.call(null, s__10747__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10749), null);
              }
            } else {
              var k = cljs.core.first.call(null, s__10747__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), o[k]], null), iter__10746.call(null, cljs.core.rest.call(null, s__10747__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4555__auto__.call(null, cljs.core.js_keys.call(null, o));
  }());
};
reagent.impl.component.elem_counter = 0;
reagent.impl.component.reactify_component = function reactify_component(comp) {
  return React["createClass"]({"render":function() {
    var this$ = this;
    return reagent.impl.component.as_element.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, cljs.core.assoc.call(null, reagent.impl.component.shallow_obj_to_map.call(null, this$["props"]), new cljs.core.Keyword(null, "-elem-count", "-elem-count", 663797079), reagent.impl.component.elem_counter = reagent.impl.component.elem_counter + 1)], null));
  }, "displayName":"react-wrapper"});
};
// Input 18
goog.provide("reagent.impl.template");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("clojure.string");
goog.require("reagent.debug");
reagent.impl.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
reagent.impl.template.NativeWrapper = function(comp) {
  this.comp = comp;
};
reagent.impl.template.NativeWrapper.cljs$lang$type = true;
reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = "reagent.impl.template/NativeWrapper";
reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "reagent.impl.template/NativeWrapper");
};
reagent.impl.template.__GT_NativeWrapper = function __GT_NativeWrapper(comp) {
  return new reagent.impl.template.NativeWrapper(comp);
};
reagent.impl.template.named_QMARK_ = function named_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
reagent.impl.template.hiccup_tag_QMARK_ = function hiccup_tag_QMARK_(x) {
  return reagent.impl.template.named_QMARK_.call(null, x) || typeof x === "string";
};
reagent.impl.template.valid_tag_QMARK_ = function valid_tag_QMARK_(x) {
  return reagent.impl.template.hiccup_tag_QMARK_.call(null, x) || cljs.core.ifn_QMARK_.call(null, x) || x instanceof reagent.impl.template.NativeWrapper;
};
reagent.impl.template.prop_name_cache = {"charset":"charSet", "for":"htmlFor", "class":"className"};
reagent.impl.template.obj_get = function obj_get(o, k) {
  if (cljs.core.truth_(o.hasOwnProperty(k))) {
    return o[k];
  } else {
    return null;
  }
};
reagent.impl.template.cached_prop_name = function cached_prop_name(k) {
  if (reagent.impl.template.named_QMARK_.call(null, k)) {
    var temp__4128__auto__ = reagent.impl.template.obj_get.call(null, reagent.impl.template.prop_name_cache, cljs.core.name.call(null, k));
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.prop_name_cache[cljs.core.name.call(null, k)] = reagent.impl.util.dash_to_camel.call(null, k);
    } else {
      var k_SINGLEQUOTE_ = temp__4128__auto__;
      return k_SINGLEQUOTE_;
    }
  } else {
    return k;
  }
};
reagent.impl.template.convert_prop_value = function convert_prop_value(x) {
  if (typeof x === "string" || typeof x === "number" || cljs.core.fn_QMARK_.call(null, x)) {
    return x;
  } else {
    if (reagent.impl.template.named_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x);
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce_kv.call(null, function(o, k, v) {
          var G__10763 = o;
          G__10763[reagent.impl.template.cached_prop_name.call(null, k)] = convert_prop_value.call(null, v);
          return G__10763;
        }, {}, x);
      } else {
        if (cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.clj__GT_js.call(null, x);
        } else {
          if (cljs.core.ifn_QMARK_.call(null, x)) {
            return function() {
              var G__10764__delegate = function(args) {
                return cljs.core.apply.call(null, x, args);
              };
              var G__10764 = function(var_args) {
                var args = null;
                if (arguments.length > 0) {
                  var G__10765__i = 0, G__10765__a = new Array(arguments.length - 0);
                  while (G__10765__i < G__10765__a.length) {
                    G__10765__a[G__10765__i] = arguments[G__10765__i + 0];
                    ++G__10765__i;
                  }
                  args = new cljs.core.IndexedSeq(G__10765__a, 0);
                }
                return G__10764__delegate.call(this, args);
              };
              G__10764.cljs$lang$maxFixedArity = 0;
              G__10764.cljs$lang$applyTo = function(arglist__10766) {
                var args = cljs.core.seq(arglist__10766);
                return G__10764__delegate(args);
              };
              G__10764.cljs$core$IFn$_invoke$arity$variadic = G__10764__delegate;
              return G__10764;
            }();
          } else {
            return cljs.core.clj__GT_js.call(null, x);
          }
        }
      }
    }
  }
};
reagent.impl.template.set_id_class = function set_id_class(props, id, class$) {
  var p = props == null ? {} : props;
  if (cljs.core.some_QMARK_.call(null, id) && p["id"] == null) {
    p["id"] = id;
  } else {
  }
  if (cljs.core.some_QMARK_.call(null, class$)) {
    var old_10767 = p["className"];
    p["className"] = cljs.core.some_QMARK_.call(null, old_10767) ? [cljs.core.str(class$), cljs.core.str(" "), cljs.core.str(old_10767)].join("") : class$;
  } else {
  }
  return p;
};
reagent.impl.template.convert_props = function convert_props(props, id_class) {
  var id = id_class["id"];
  var class$ = id_class["className"];
  var no_id_class = id == null && class$ == null;
  if (no_id_class && cljs.core.empty_QMARK_.call(null, props)) {
    return null;
  } else {
    var objprops = reagent.impl.template.convert_prop_value.call(null, props);
    if (no_id_class) {
      return objprops;
    } else {
      return reagent.impl.template.set_id_class.call(null, objprops, id, class$);
    }
  }
};
reagent.impl.template.input_unmount = function input_unmount(this$) {
  return this$["cljsInputValue"] = null;
};
reagent.impl.template.input_set_value = function input_set_value(this$) {
  var temp__4130__auto__ = this$["cljsInputValue"];
  if (temp__4130__auto__ == null) {
    return null;
  } else {
    var value = temp__4130__auto__;
    this$["cljsInputDirty"] = false;
    var node = this$["getDOMNode"]();
    if (cljs.core.not_EQ_.call(null, value, node["value"])) {
      return node["value"] = value;
    } else {
      return null;
    }
  }
};
reagent.impl.template.input_handle_change = function input_handle_change(this$, on_change, e) {
  var res = on_change.call(null, e);
  if (cljs.core.truth_(this$["cljsInputDirty"])) {
  } else {
    this$["cljsInputDirty"] = true;
    reagent.impl.batching.do_later.call(null, function(res) {
      return function() {
        return reagent.impl.template.input_set_value.call(null, this$);
      };
    }(res));
  }
  return res;
};
reagent.impl.template.input_render_setup = function input_render_setup(this$, jsprops) {
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = jsprops["hasOwnProperty"]("onChange");
    if (cljs.core.truth_(and__3787__auto__)) {
      return jsprops["hasOwnProperty"]("value");
    } else {
      return and__3787__auto__;
    }
  }())) {
    var v = jsprops["value"];
    var value = v == null ? "" : v;
    var on_change = jsprops["onChange"];
    this$["cljsInputValue"] = value;
    delete jsprops["value"];
    var G__10770 = jsprops;
    G__10770["defaultValue"] = value;
    G__10770["onChange"] = function(G__10770, v, value, on_change) {
      return function(p1__10768_SHARP_) {
        return reagent.impl.template.input_handle_change.call(null, this$, on_change, p1__10768_SHARP_);
      };
    }(G__10770, v, value, on_change);
    return G__10770;
  } else {
    return this$["cljsInputValue"] = null;
  }
};
reagent.impl.template.input_component_QMARK_ = function input_component_QMARK_(x) {
  return x === "input" || x === "textarea";
};
reagent.impl.template.reagent_input_class = null;
reagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "display-name", "display-name", 694513143), "ReagentInput", new cljs.core.Keyword(null, "component-did-update", "component-did-update", -1468549173), reagent.impl.template.input_set_value, new cljs.core.Keyword(null, "component-will-unmount", "component-will-unmount", -2058314698), reagent.impl.template.input_unmount, new cljs.core.Keyword(null, "reagent-render", "reagent-render", -985383853), 
function(argv, comp, jsprops, first_child) {
  var this$ = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.template.input_render_setup.call(null, this$, jsprops);
  return reagent.impl.template.make_element.call(null, argv, comp, jsprops, first_child);
}], null);
reagent.impl.template.reagent_input = function reagent_input(argv, comp, jsprops, first_child) {
  if (reagent.impl.template.reagent_input_class == null) {
    reagent.impl.template.reagent_input_class = reagent.impl.component.create_class.call(null, reagent.impl.template.input_spec);
  } else {
  }
  return reagent.impl.template.reagent_input_class.call(null, argv, comp, jsprops, first_child);
};
reagent.impl.template.parse_tag = function parse_tag(hiccup_tag) {
  var vec__10772 = cljs.core.next.call(null, cljs.core.re_matches.call(null, reagent.impl.template.re_tag, cljs.core.name.call(null, hiccup_tag)));
  var tag = cljs.core.nth.call(null, vec__10772, 0, null);
  var id = cljs.core.nth.call(null, vec__10772, 1, null);
  var class$ = cljs.core.nth.call(null, vec__10772, 2, null);
  var class_SINGLEQUOTE_ = cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null;
  if (cljs.core.truth_(tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid tag: '"), cljs.core.str(hiccup_tag), cljs.core.str("'"), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "tag", "tag", 350170304, null)))].join(""));
  }
  return{"className":class_SINGLEQUOTE_, "id":id, "name":tag};
};
reagent.impl.template.fn_to_class = function fn_to_class(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected a function, not "), cljs.core.str(cljs.core.pr_str.call(null, f))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!!(cljs.core.fn_QMARK_.call(null, f) && cljs.core.some_QMARK_.call(null, f["type"])) && typeof console !== "undefined") {
    console.warn([cljs.core.str("Warning: "), cljs.core.str("Using native React classes directly in Hiccup forms "), cljs.core.str("is not supported. Use create-element or "), cljs.core.str("adapt-react-class instead: "), cljs.core.str(f["type"]), cljs.core.str(reagent.impl.component.comp_name.call(null))].join(""));
  } else {
  }
  var spec = cljs.core.meta.call(null, f);
  var withrender = cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "reagent-render", "reagent-render", -985383853), f);
  var res = reagent.impl.component.create_class.call(null, withrender);
  var wrapf = reagent.impl.util.cached_react_class.call(null, res);
  reagent.impl.util.cache_react_class.call(null, f, wrapf);
  return wrapf;
};
reagent.impl.template.as_class = function as_class(tag) {
  var temp__4128__auto__ = reagent.impl.util.cached_react_class.call(null, tag);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.fn_to_class.call(null, tag);
  } else {
    var cached_class = temp__4128__auto__;
    return cached_class;
  }
};
reagent.impl.template.get_key = function get_key(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return null;
  }
};
reagent.impl.template.key_from_vec = function key_from_vec(v) {
  var temp__4128__auto__ = function() {
    var G__10774 = cljs.core.meta.call(null, v);
    var G__10774__$1 = G__10774 == null ? null : reagent.impl.template.get_key.call(null, G__10774);
    return G__10774__$1;
  }();
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.get_key.call(null, cljs.core.nth.call(null, v, 1, null));
  } else {
    var k = temp__4128__auto__;
    return k;
  }
};
reagent.impl.template.reag_element = function reag_element(tag, v) {
  var c = reagent.impl.template.as_class.call(null, tag);
  var jsprops = {"argv":v};
  var G__10776_10777 = v;
  var G__10776_10778__$1 = G__10776_10777 == null ? null : reagent.impl.template.key_from_vec.call(null, G__10776_10777);
  var G__10776_10779__$2 = G__10776_10778__$1 == null ? null : jsprops["key"] = G__10776_10778__$1;
  return React["createElement"](c, jsprops);
};
reagent.impl.template.adapt_react_class = function adapt_react_class(c) {
  return new reagent.impl.template.NativeWrapper({"class":null, "id":null, "name":c});
};
reagent.impl.template.tag_name_cache = {};
reagent.impl.template.cached_parse = function cached_parse(x) {
  if (reagent.impl.template.hiccup_tag_QMARK_.call(null, x)) {
    var temp__4128__auto__ = reagent.impl.template.obj_get.call(null, reagent.impl.template.tag_name_cache, cljs.core.name.call(null, x));
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.tag_name_cache[cljs.core.name.call(null, x)] = reagent.impl.template.parse_tag.call(null, x);
    } else {
      var s = temp__4128__auto__;
      return s;
    }
  } else {
    if (x instanceof reagent.impl.template.NativeWrapper) {
      return x.comp;
    } else {
      return null;
    }
  }
};
reagent.impl.template.native_element = function native_element(tag, argv) {
  var temp__4126__auto__ = reagent.impl.template.cached_parse.call(null, tag);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var parsed = temp__4126__auto__;
    var comp = parsed["name"];
    var props = cljs.core.nth.call(null, argv, 1, null);
    var hasprops = props == null || cljs.core.map_QMARK_.call(null, props);
    var jsprops = reagent.impl.template.convert_props.call(null, hasprops ? props : null, parsed);
    var first_child = hasprops ? 2 : 1;
    if (reagent.impl.template.input_component_QMARK_.call(null, comp)) {
      return reagent.impl.template.as_element.call(null, cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input, argv, comp, jsprops, first_child], null), cljs.core.meta.call(null, argv)));
    } else {
      var p = function() {
        var temp__4128__auto__ = function() {
          var G__10782 = cljs.core.meta.call(null, argv);
          var G__10782__$1 = G__10782 == null ? null : reagent.impl.template.get_key.call(null, G__10782);
          return G__10782__$1;
        }();
        if (temp__4128__auto__ == null) {
          return jsprops;
        } else {
          var key = temp__4128__auto__;
          var G__10783 = jsprops == null ? {} : jsprops;
          G__10783["key"] = key;
          return G__10783;
        }
      }();
      return reagent.impl.template.make_element.call(null, argv, comp, p, first_child);
    }
  } else {
    return null;
  }
};
reagent.impl.template.vec_to_elem = function vec_to_elem(v) {
  if (cljs.core.count.call(null, v) > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Hiccup form should not be empty: "), cljs.core.str(cljs.core.pr_str.call(null, v)), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "v", "v", 1661996586, 
    null)))))].join(""));
  }
  var tag = cljs.core.nth.call(null, v, 0);
  if (reagent.impl.template.valid_tag_QMARK_.call(null, tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Hiccup form: "), cljs.core.str(cljs.core.pr_str.call(null, v)), cljs.core.str(reagent.impl.component.comp_name.call(null))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-tag?", "valid-tag?", 1243064160, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))))].join(""));
  }
  var temp__4128__auto__ = reagent.impl.template.native_element.call(null, tag, v);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.reag_element.call(null, tag, v);
  } else {
    var ne = temp__4128__auto__;
    return ne;
  }
};
reagent.impl.template.as_element = function as_element(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (cljs.core.vector_QMARK_.call(null, x)) {
      return reagent.impl.template.vec_to_elem.call(null, x);
    } else {
      if (cljs.core.seq_QMARK_.call(null, x)) {
        return reagent.impl.template.expand_seq_check.call(null, x);
      } else {
        return x;
      }
    }
  }
};
reagent.impl.template.expand_seq = function expand_seq(s) {
  var a = cljs.core.into_array.call(null, s);
  var n__4686__auto___10784 = a.length;
  var i_10785 = 0;
  while (true) {
    if (i_10785 < n__4686__auto___10784) {
      a[i_10785] = reagent.impl.template.as_element.call(null, a[i_10785]);
      var G__10786 = i_10785 + 1;
      i_10785 = G__10786;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.expand_seq_dev = function expand_seq_dev(s, o) {
  var a = cljs.core.into_array.call(null, s);
  var n__4686__auto___10787 = a.length;
  var i_10788 = 0;
  while (true) {
    if (i_10788 < n__4686__auto___10787) {
      var val_10789 = a[i_10788];
      if (cljs.core.vector_QMARK_.call(null, val_10789) && reagent.impl.template.key_from_vec.call(null, val_10789) == null) {
        o["no-key"] = true;
      } else {
      }
      a[i_10788] = reagent.impl.template.as_element.call(null, val_10789);
      var G__10790 = i_10788 + 1;
      i_10788 = G__10790;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.expand_seq_check = function expand_seq_check(x) {
  var ctx = {};
  var res = reagent.ratom._STAR_ratom_context_STAR_ == null ? reagent.impl.template.expand_seq_dev.call(null, x, ctx) : reagent.ratom.capture_derefed.call(null, function(ctx) {
    return function() {
      return reagent.impl.template.expand_seq_dev.call(null, x, ctx);
    };
  }(ctx), ctx);
  if (cljs.core.truth_(reagent.ratom.captured.call(null, ctx))) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Reactive deref not supported in lazy seq, "), cljs.core.str("it should be wrapped in doall"), cljs.core.str(reagent.impl.component.comp_name.call(null)), cljs.core.str(". Value:\n"), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(ctx["no-key"])) {
    if (typeof console !== "undefined") {
      console.warn([cljs.core.str("Warning: "), cljs.core.str("Every element in a seq should have a unique "), cljs.core.str(":key"), cljs.core.str(reagent.impl.component.comp_name.call(null)), cljs.core.str(". Value: "), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""));
    } else {
    }
  } else {
  }
  return res;
};
reagent.impl.template.make_element = function make_element(argv, comp, jsprops, first_child) {
  var G__10792 = cljs.core.count.call(null, argv) - first_child;
  switch(G__10792) {
    case 0:
      return React["createElement"](comp, jsprops);
      break;
    case 1:
      return React["createElement"](comp, jsprops, reagent.impl.template.as_element.call(null, cljs.core.nth.call(null, argv, first_child)));
      break;
    default:
      return React["createElement"].apply(null, cljs.core.reduce_kv.call(null, function(G__10792) {
        return function(a, k, v) {
          if (k >= first_child) {
            a.push(reagent.impl.template.as_element.call(null, v));
          } else {
          }
          return a;
        };
      }(G__10792), [comp, jsprops], argv));
  }
};
// Input 19
goog.provide("reagent.core");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("cljsjs.react");
goog.require("reagent.impl.template");
goog.require("reagent.impl.batching");
goog.require("reagent.debug");
reagent.core.is_client = reagent.impl.util.is_client;
reagent.core.create_element = function() {
  var create_element = null;
  var create_element__1 = function(type) {
    return create_element.call(null, type, null);
  };
  var create_element__2 = function(type, props) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props);
  };
  var create_element__3 = function(type, props, child) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props, child);
  };
  var create_element__4 = function() {
    var G__10694__delegate = function(type, props, child, children) {
      if (!cljs.core.map_QMARK_.call(null, props)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
      }
      return cljs.core.apply.call(null, React.createElement, type, props, child, children);
    };
    var G__10694 = function(type, props, child, var_args) {
      var children = null;
      if (arguments.length > 3) {
        var G__10695__i = 0, G__10695__a = new Array(arguments.length - 3);
        while (G__10695__i < G__10695__a.length) {
          G__10695__a[G__10695__i] = arguments[G__10695__i + 3];
          ++G__10695__i;
        }
        children = new cljs.core.IndexedSeq(G__10695__a, 0);
      }
      return G__10694__delegate.call(this, type, props, child, children);
    };
    G__10694.cljs$lang$maxFixedArity = 3;
    G__10694.cljs$lang$applyTo = function(arglist__10696) {
      var type = cljs.core.first(arglist__10696);
      arglist__10696 = cljs.core.next(arglist__10696);
      var props = cljs.core.first(arglist__10696);
      arglist__10696 = cljs.core.next(arglist__10696);
      var child = cljs.core.first(arglist__10696);
      var children = cljs.core.rest(arglist__10696);
      return G__10694__delegate(type, props, child, children);
    };
    G__10694.cljs$core$IFn$_invoke$arity$variadic = G__10694__delegate;
    return G__10694;
  }();
  create_element = function(type, props, child, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return create_element__1.call(this, type);
      case 2:
        return create_element__2.call(this, type, props);
      case 3:
        return create_element__3.call(this, type, props, child);
      default:
        var G__10697 = null;
        if (arguments.length > 3) {
          var G__10698__i = 0, G__10698__a = new Array(arguments.length - 3);
          while (G__10698__i < G__10698__a.length) {
            G__10698__a[G__10698__i] = arguments[G__10698__i + 3];
            ++G__10698__i;
          }
          G__10697 = new cljs.core.IndexedSeq(G__10698__a, 0);
        }
        return create_element__4.cljs$core$IFn$_invoke$arity$variadic(type, props, child, G__10697);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_element.cljs$lang$maxFixedArity = 3;
  create_element.cljs$lang$applyTo = create_element__4.cljs$lang$applyTo;
  create_element.cljs$core$IFn$_invoke$arity$1 = create_element__1;
  create_element.cljs$core$IFn$_invoke$arity$2 = create_element__2;
  create_element.cljs$core$IFn$_invoke$arity$3 = create_element__3;
  create_element.cljs$core$IFn$_invoke$arity$variadic = create_element__4.cljs$core$IFn$_invoke$arity$variadic;
  return create_element;
}();
reagent.core.as_element = function as_element(form) {
  return reagent.impl.template.as_element.call(null, form);
};
reagent.core.adapt_react_class = function adapt_react_class(c) {
  return reagent.impl.template.adapt_react_class.call(null, c);
};
reagent.core.reactify_component = function reactify_component(c) {
  return reagent.impl.component.reactify_component.call(null, c);
};
reagent.core.render = function() {
  var render = null;
  var render__2 = function(comp, container) {
    return render.call(null, comp, container, null);
  };
  var render__3 = function(comp, container, callback) {
    var f = function() {
      return reagent.core.as_element.call(null, cljs.core.fn_QMARK_.call(null, comp) ? comp.call(null) : comp);
    };
    return reagent.impl.util.render_component.call(null, f, container, callback);
  };
  render = function(comp, container, callback) {
    switch(arguments.length) {
      case 2:
        return render__2.call(this, comp, container);
      case 3:
        return render__3.call(this, comp, container, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render.cljs$core$IFn$_invoke$arity$2 = render__2;
  render.cljs$core$IFn$_invoke$arity$3 = render__3;
  return render;
}();
reagent.core.unmount_component_at_node = function unmount_component_at_node(container) {
  return reagent.impl.util.unmount_component_at_node.call(null, container);
};
reagent.core.render_to_string = function render_to_string(component) {
  var _STAR_non_reactive_STAR_10700 = reagent.impl.component._STAR_non_reactive_STAR_;
  try {
    reagent.impl.component._STAR_non_reactive_STAR_ = true;
    return React["renderToString"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_10700;
  }
};
reagent.core.as_component = reagent.core.as_element;
reagent.core.render_component = reagent.core.render;
reagent.core.render_component_to_string = reagent.core.render_to_string;
reagent.core.render_to_static_markup = function render_to_static_markup(component) {
  var _STAR_non_reactive_STAR_10702 = reagent.impl.component._STAR_non_reactive_STAR_;
  try {
    reagent.impl.component._STAR_non_reactive_STAR_ = true;
    return React["renderToStaticMarkup"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_10702;
  }
};
reagent.core.force_update_all = function force_update_all() {
  return reagent.impl.util.force_update_all.call(null);
};
goog.exportSymbol("reagent.core.force_update_all", reagent.core.force_update_all);
reagent.core.create_class = function create_class(spec) {
  return reagent.impl.component.create_class.call(null, spec);
};
reagent.core.current_component = function current_component() {
  return reagent.impl.component._STAR_current_component_STAR_;
};
reagent.core.state_atom = function state_atom(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.component.state_atom.call(null, this$);
};
reagent.core.state = function state(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return cljs.core.deref.call(null, reagent.core.state_atom.call(null, this$));
};
reagent.core.replace_state = function replace_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return cljs.core.reset_BANG_.call(null, reagent.core.state_atom.call(null, this$), new_state);
};
reagent.core.set_state = function set_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return cljs.core.swap_BANG_.call(null, reagent.core.state_atom.call(null, this$), cljs.core.merge, new_state);
};
reagent.core.props = function props(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_props.call(null, this$);
};
reagent.core.children = function children(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_children.call(null, this$);
};
reagent.core.argv = function argv(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_argv.call(null, this$);
};
reagent.core.dom_node = function dom_node(this$) {
  return this$["getDOMNode"]();
};
reagent.core.merge_props = function merge_props(defaults, props) {
  return reagent.impl.util.merge_props.call(null, defaults, props);
};
reagent.core.flush = function flush() {
  return reagent.impl.batching.flush.call(null);
};
reagent.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return reagent.ratom.atom.call(null, x);
  };
  var atom__2 = function() {
    var G__10703__delegate = function(x, rest) {
      return cljs.core.apply.call(null, reagent.ratom.atom, x, rest);
    };
    var G__10703 = function(x, var_args) {
      var rest = null;
      if (arguments.length > 1) {
        var G__10704__i = 0, G__10704__a = new Array(arguments.length - 1);
        while (G__10704__i < G__10704__a.length) {
          G__10704__a[G__10704__i] = arguments[G__10704__i + 1];
          ++G__10704__i;
        }
        rest = new cljs.core.IndexedSeq(G__10704__a, 0);
      }
      return G__10703__delegate.call(this, x, rest);
    };
    G__10703.cljs$lang$maxFixedArity = 1;
    G__10703.cljs$lang$applyTo = function(arglist__10705) {
      var x = cljs.core.first(arglist__10705);
      var rest = cljs.core.rest(arglist__10705);
      return G__10703__delegate(x, rest);
    };
    G__10703.cljs$core$IFn$_invoke$arity$variadic = G__10703__delegate;
    return G__10703;
  }();
  atom = function(x, var_args) {
    var rest = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__10706 = null;
        if (arguments.length > 1) {
          var G__10707__i = 0, G__10707__a = new Array(arguments.length - 1);
          while (G__10707__i < G__10707__a.length) {
            G__10707__a[G__10707__i] = arguments[G__10707__i + 1];
            ++G__10707__i;
          }
          G__10706 = new cljs.core.IndexedSeq(G__10707__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10706);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.core.wrap = function() {
  var wrap__delegate = function(value, reset_fn, args) {
    if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
    }
    return reagent.ratom.make_wrapper.call(null, value, reset_fn, args);
  };
  var wrap = function(value, reset_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__10708__i = 0, G__10708__a = new Array(arguments.length - 2);
      while (G__10708__i < G__10708__a.length) {
        G__10708__a[G__10708__i] = arguments[G__10708__i + 2];
        ++G__10708__i;
      }
      args = new cljs.core.IndexedSeq(G__10708__a, 0);
    }
    return wrap__delegate.call(this, value, reset_fn, args);
  };
  wrap.cljs$lang$maxFixedArity = 2;
  wrap.cljs$lang$applyTo = function(arglist__10709) {
    var value = cljs.core.first(arglist__10709);
    arglist__10709 = cljs.core.next(arglist__10709);
    var reset_fn = cljs.core.first(arglist__10709);
    var args = cljs.core.rest(arglist__10709);
    return wrap__delegate(value, reset_fn, args);
  };
  wrap.cljs$core$IFn$_invoke$arity$variadic = wrap__delegate;
  return wrap;
}();
reagent.core.cursor = function cursor(src, path) {
  return reagent.ratom.cursor.call(null, src, path);
};
reagent.core.next_tick = function next_tick(f) {
  return reagent.impl.batching.next_tick.call(null, f);
};
reagent.core.partial = function() {
  var partial__delegate = function(f, args) {
    return new reagent.impl.util.partial_ifn(f, args, null);
  };
  var partial = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__10710__i = 0, G__10710__a = new Array(arguments.length - 1);
      while (G__10710__i < G__10710__a.length) {
        G__10710__a[G__10710__i] = arguments[G__10710__i + 1];
        ++G__10710__i;
      }
      args = new cljs.core.IndexedSeq(G__10710__a, 0);
    }
    return partial__delegate.call(this, f, args);
  };
  partial.cljs$lang$maxFixedArity = 1;
  partial.cljs$lang$applyTo = function(arglist__10711) {
    var f = cljs.core.first(arglist__10711);
    var args = cljs.core.rest(arglist__10711);
    return partial__delegate(f, args);
  };
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__delegate;
  return partial;
}();
// Input 20
goog.provide("reagent.session");
goog.require("cljs.core");
goog.require("reagent.core");
reagent.session.state = reagent.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
reagent.session.get = function() {
  var get__delegate = function(k, p__10667) {
    var vec__10669 = p__10667;
    var default$ = cljs.core.nth.call(null, vec__10669, 0, null);
    return cljs.core.get.call(null, cljs.core.deref.call(null, reagent.session.state), k, default$);
  };
  var get = function(k, var_args) {
    var p__10667 = null;
    if (arguments.length > 1) {
      var G__10670__i = 0, G__10670__a = new Array(arguments.length - 1);
      while (G__10670__i < G__10670__a.length) {
        G__10670__a[G__10670__i] = arguments[G__10670__i + 1];
        ++G__10670__i;
      }
      p__10667 = new cljs.core.IndexedSeq(G__10670__a, 0);
    }
    return get__delegate.call(this, k, p__10667);
  };
  get.cljs$lang$maxFixedArity = 1;
  get.cljs$lang$applyTo = function(arglist__10671) {
    var k = cljs.core.first(arglist__10671);
    var p__10667 = cljs.core.rest(arglist__10671);
    return get__delegate(k, p__10667);
  };
  get.cljs$core$IFn$_invoke$arity$variadic = get__delegate;
  return get;
}();
reagent.session.put_BANG_ = function put_BANG_(k, v) {
  return cljs.core.swap_BANG_.call(null, reagent.session.state, cljs.core.assoc, k, v);
};
reagent.session.get_in = function() {
  var get_in__delegate = function(ks, p__10672) {
    var vec__10674 = p__10672;
    var default$ = cljs.core.nth.call(null, vec__10674, 0, null);
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, reagent.session.state), ks, default$);
  };
  var get_in = function(ks, var_args) {
    var p__10672 = null;
    if (arguments.length > 1) {
      var G__10675__i = 0, G__10675__a = new Array(arguments.length - 1);
      while (G__10675__i < G__10675__a.length) {
        G__10675__a[G__10675__i] = arguments[G__10675__i + 1];
        ++G__10675__i;
      }
      p__10672 = new cljs.core.IndexedSeq(G__10675__a, 0);
    }
    return get_in__delegate.call(this, ks, p__10672);
  };
  get_in.cljs$lang$maxFixedArity = 1;
  get_in.cljs$lang$applyTo = function(arglist__10676) {
    var ks = cljs.core.first(arglist__10676);
    var p__10672 = cljs.core.rest(arglist__10676);
    return get_in__delegate(ks, p__10672);
  };
  get_in.cljs$core$IFn$_invoke$arity$variadic = get_in__delegate;
  return get_in;
}();
reagent.session.swap_BANG_ = function() {
  var swap_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, reagent.session.state, f, args);
  };
  var swap_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__10677__i = 0, G__10677__a = new Array(arguments.length - 1);
      while (G__10677__i < G__10677__a.length) {
        G__10677__a[G__10677__i] = arguments[G__10677__i + 1];
        ++G__10677__i;
      }
      args = new cljs.core.IndexedSeq(G__10677__a, 0);
    }
    return swap_BANG___delegate.call(this, f, args);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 1;
  swap_BANG_.cljs$lang$applyTo = function(arglist__10678) {
    var f = cljs.core.first(arglist__10678);
    var args = cljs.core.rest(arglist__10678);
    return swap_BANG___delegate(f, args);
  };
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___delegate;
  return swap_BANG_;
}();
reagent.session.clear_BANG_ = function clear_BANG_() {
  return cljs.core.reset_BANG_.call(null, reagent.session.state, cljs.core.PersistentArrayMap.EMPTY);
};
reagent.session.reset_BANG_ = function reset_BANG_(m) {
  return cljs.core.reset_BANG_.call(null, reagent.session.state, m);
};
reagent.session.remove_BANG_ = function remove_BANG_(k) {
  return cljs.core.swap_BANG_.call(null, reagent.session.state, cljs.core.dissoc, k);
};
reagent.session.assoc_in_BANG_ = function assoc_in_BANG_(ks, v) {
  return cljs.core.swap_BANG_.call(null, reagent.session.state, function(p1__10679_SHARP_) {
    return cljs.core.assoc_in.call(null, p1__10679_SHARP_, ks, v);
  });
};
reagent.session.get_BANG_ = function() {
  var get_BANG___delegate = function(k, p__10680) {
    var vec__10682 = p__10680;
    var default$ = cljs.core.nth.call(null, vec__10682, 0, null);
    var cur = reagent.session.get.call(null, k, default$);
    reagent.session.remove_BANG_.call(null, k);
    return cur;
  };
  var get_BANG_ = function(k, var_args) {
    var p__10680 = null;
    if (arguments.length > 1) {
      var G__10683__i = 0, G__10683__a = new Array(arguments.length - 1);
      while (G__10683__i < G__10683__a.length) {
        G__10683__a[G__10683__i] = arguments[G__10683__i + 1];
        ++G__10683__i;
      }
      p__10680 = new cljs.core.IndexedSeq(G__10683__a, 0);
    }
    return get_BANG___delegate.call(this, k, p__10680);
  };
  get_BANG_.cljs$lang$maxFixedArity = 1;
  get_BANG_.cljs$lang$applyTo = function(arglist__10684) {
    var k = cljs.core.first(arglist__10684);
    var p__10680 = cljs.core.rest(arglist__10684);
    return get_BANG___delegate(k, p__10680);
  };
  get_BANG_.cljs$core$IFn$_invoke$arity$variadic = get_BANG___delegate;
  return get_BANG_;
}();
reagent.session.get_in_BANG_ = function() {
  var get_in_BANG___delegate = function(ks, p__10685) {
    var vec__10687 = p__10685;
    var default$ = cljs.core.nth.call(null, vec__10687, 0, null);
    var cur = cljs.core.get_in.call(null, cljs.core.deref.call(null, reagent.session.state), ks, default$);
    reagent.session.assoc_in_BANG_.call(null, ks, null);
    return cur;
  };
  var get_in_BANG_ = function(ks, var_args) {
    var p__10685 = null;
    if (arguments.length > 1) {
      var G__10688__i = 0, G__10688__a = new Array(arguments.length - 1);
      while (G__10688__i < G__10688__a.length) {
        G__10688__a[G__10688__i] = arguments[G__10688__i + 1];
        ++G__10688__i;
      }
      p__10685 = new cljs.core.IndexedSeq(G__10688__a, 0);
    }
    return get_in_BANG___delegate.call(this, ks, p__10685);
  };
  get_in_BANG_.cljs$lang$maxFixedArity = 1;
  get_in_BANG_.cljs$lang$applyTo = function(arglist__10689) {
    var ks = cljs.core.first(arglist__10689);
    var p__10685 = cljs.core.rest(arglist__10689);
    return get_in_BANG___delegate(ks, p__10685);
  };
  get_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = get_in_BANG___delegate;
  return get_in_BANG_;
}();
reagent.session.update_in_BANG_ = function() {
  var update_in_BANG___delegate = function(ks, f, args) {
    return cljs.core.swap_BANG_.call(null, reagent.session.state, function(p1__10690_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.partial.call(null, cljs.core.update_in, p1__10690_SHARP_, ks, f), args);
    });
  };
  var update_in_BANG_ = function(ks, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__10691__i = 0, G__10691__a = new Array(arguments.length - 2);
      while (G__10691__i < G__10691__a.length) {
        G__10691__a[G__10691__i] = arguments[G__10691__i + 2];
        ++G__10691__i;
      }
      args = new cljs.core.IndexedSeq(G__10691__a, 0);
    }
    return update_in_BANG___delegate.call(this, ks, f, args);
  };
  update_in_BANG_.cljs$lang$maxFixedArity = 2;
  update_in_BANG_.cljs$lang$applyTo = function(arglist__10692) {
    var ks = cljs.core.first(arglist__10692);
    arglist__10692 = cljs.core.next(arglist__10692);
    var f = cljs.core.first(arglist__10692);
    var args = cljs.core.rest(arglist__10692);
    return update_in_BANG___delegate(ks, f, args);
  };
  update_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_in_BANG___delegate;
  return update_in_BANG_;
}();
// Input 21
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
// Input 22
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
// Input 23
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
// Input 24
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
// Input 25
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
// Input 26
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
// Input 27
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
// Input 28
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
// Input 29
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
// Input 30
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
// Input 31
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
// Input 32
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
// Input 33
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
// Input 34
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
// Input 35
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
// Input 36
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
// Input 37
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
// Input 38
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
// Input 39
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
// Input 40
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
// Input 41
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
// Input 42
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
// Input 43
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
// Input 44
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
// Input 45
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
// Input 46
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
// Input 47
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
// Input 48
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
// Input 49
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
// Input 50
goog.provide("goog.labs.userAgent.device");
goog.require("goog.labs.userAgent.util");
goog.labs.userAgent.device.isMobile = function() {
  return!goog.labs.userAgent.device.isTablet() && (goog.labs.userAgent.util.matchUserAgent("iPod") || goog.labs.userAgent.util.matchUserAgent("iPhone") || goog.labs.userAgent.util.matchUserAgent("Android") || goog.labs.userAgent.util.matchUserAgent("IEMobile"));
};
goog.labs.userAgent.device.isTablet = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Mobile") || goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.device.isDesktop = function() {
  return!goog.labs.userAgent.device.isMobile() && !goog.labs.userAgent.device.isTablet();
};
// Input 51
goog.provide("goog.memoize");
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if (goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global;
      var cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {});
      var key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments);
    } else {
      return f.apply(this, arguments);
    }
  };
};
goog.define("goog.memoize.ENABLE_MEMOIZE", true);
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {};
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  var context = [functionUid];
  for (var i = args.length - 1;i >= 0;--i) {
    context.push(typeof args[i], args[i]);
  }
  return context.join("\x0B");
};
// Input 52
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.labs.userAgent.device");
goog.require("goog.memoize");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.isOnHashChangeSupported = goog.memoize(function() {
  return goog.userAgent.IE ? document.documentMode >= 8 : "onhashchange" in goog.global;
});
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.isOnHashChangeSupported() && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!(goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.isOnHashChangeSupported()) {
        if (goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = loc.href.split("#")[0];
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || hasHash || token) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
// Input 53
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj20132 = {};
  return obj20132;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3787__auto__ = port;
    if (and__3787__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4443__auto__ = port == null ? null : port;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj20134 = {};
  return obj20134;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3787__auto__ = port;
    if (and__3787__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4443__auto__ = port == null ? null : port;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj20136 = {};
  return obj20136;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3787__auto__ = chan;
    if (and__3787__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4443__auto__ = chan == null ? null : chan;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3787__auto__ = chan;
    if (and__3787__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4443__auto__ = chan == null ? null : chan;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj20138 = {};
  return obj20138;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3787__auto__ = h;
    if (and__3787__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4443__auto__ = h == null ? null : h;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3787__auto__ = h;
    if (and__3787__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4443__auto__ = h == null ? null : h;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj20140 = {};
  return obj20140;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3787__auto__ = b;
    if (and__3787__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4443__auto__ = b == null ? null : b;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3787__auto__ = b;
    if (and__3787__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4443__auto__ = b == null ? null : b;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3787__auto__ = b;
    if (and__3787__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4443__auto__ = b == null ? null : b;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj20142 = {};
  return obj20142;
}();
// Input 54
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__20144 = cnt + 1;
      cnt = G__20144;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4686__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4686__auto__) {
      var v_20145 = this$.pop();
      if (keep_QMARK_.call(null, v_20145)) {
        this$.unshift(v_20145);
      } else {
      }
      var G__20146 = x + 1;
      x = G__20146;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
// Input 55
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
// Input 56
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_20148 = 0;
  while (true) {
    var m_20149 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_20149 == null) {
    } else {
      m_20149.call(null);
      if (count_20148 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__20150 = count_20148 + 1;
        count_20148 = G__20150;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3787__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3787__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
// Input 57
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t20155 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t20155 = function(val, box, meta20156) {
      this.val = val;
      this.box = box;
      this.meta20156 = meta20156;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t20155.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t20155.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20157) {
      var self__ = this;
      var _20157__$1 = this;
      return self__.meta20156;
    };
    cljs.core.async.impl.channels.t20155.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20157, meta20156__$1) {
      var self__ = this;
      var _20157__$1 = this;
      return new cljs.core.async.impl.channels.t20155(self__.val, self__.box, meta20156__$1);
    };
    cljs.core.async.impl.channels.t20155.cljs$lang$type = true;
    cljs.core.async.impl.channels.t20155.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t20155";
    cljs.core.async.impl.channels.t20155.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.channels/t20155");
    };
    cljs.core.async.impl.channels.__GT_t20155 = function __GT_t20155(val__$1, box__$1, meta20156) {
      return new cljs.core.async.impl.channels.t20155(val__$1, box__$1, meta20156);
    };
  }
  return new cljs.core.async.impl.channels.t20155(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async/impl/channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj20159 = {};
  return obj20159;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = self__.buf;
      if (cljs.core.truth_(and__3787__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3787__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_20160 = self__.takes.pop();
      if (taker_20160 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_20160)) {
          var take_cb_20161 = cljs.core.async.impl.protocols.commit.call(null, taker_20160);
          var val_20162 = cljs.core.truth_(function() {
            var and__3787__auto__ = self__.buf;
            if (cljs.core.truth_(and__3787__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3787__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_20161, val_20162, taker_20160, this$__$1) {
            return function() {
              return take_cb_20161.call(null, val_20162);
            };
          }(take_cb_20161, val_20162, taker_20160, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_20163 = self__.puts.pop();
          if (putter_20163 == null) {
          } else {
            var put_handler_20164 = putter_20163.handler;
            var val_20165 = putter_20163.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_20164)) {
              var put_cb_20166 = cljs.core.async.impl.protocols.commit.call(null, put_handler_20164);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_20166, put_handler_20164, val_20165, putter_20163, _, retval, this$__$1) {
                return function() {
                  return put_cb_20166.call(null, true);
                };
              }(put_cb_20166, put_handler_20164, val_20165, putter_20163, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_20165))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3787__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3787__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3787__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3787__auto__ = self__.buf;
              if (cljs.core.truth_(and__3787__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3787__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = self__.buf;
      if (cljs.core.truth_(and__3787__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3787__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_20167 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_20167)) {
            var take_cb_20168 = cljs.core.async.impl.protocols.commit.call(null, taker_20167);
            var val_20169__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_20168, val_20169__$1, taker_20167, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_20168.call(null, val_20169__$1);
              };
            }(take_cb_20168, val_20169__$1, taker_20167, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_20170 = self__.puts.pop();
    if (putter_20170 == null) {
    } else {
      var put_handler_20171 = putter_20170.handler;
      var val_20172 = putter_20170.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_20171)) {
        var put_cb_20173 = cljs.core.async.impl.protocols.commit.call(null, put_handler_20171);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_20173, put_handler_20171, val_20172, putter_20170, this$__$1) {
          return function() {
            return put_cb_20173.call(null, true);
          };
        }(put_cb_20173, put_handler_20171, val_20172, putter_20170, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3799__auto__ = exh;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__20178 = null;
          var G__20178__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e20176) {
              var t = e20176;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__20178__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e20177) {
              var t = e20177;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__20178 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__20178__1.call(this, buf__$1);
              case 2:
                return G__20178__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20178.cljs$core$IFn$_invoke$arity$1 = G__20178__1;
          G__20178.cljs$core$IFn$_invoke$arity$2 = G__20178__2;
          return G__20178;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
// Input 58
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t20091 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t20091 = function(f, fn_handler, meta20092) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta20092 = meta20092;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t20091.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t20091.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t20091.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t20091.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20093) {
      var self__ = this;
      var _20093__$1 = this;
      return self__.meta20092;
    };
    cljs.core.async.impl.ioc_helpers.t20091.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20093, meta20092__$1) {
      var self__ = this;
      var _20093__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t20091(self__.f, self__.fn_handler, meta20092__$1);
    };
    cljs.core.async.impl.ioc_helpers.t20091.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t20091.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t20091";
    cljs.core.async.impl.ioc_helpers.t20091.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.ioc-helpers/t20091");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t20091 = function __GT_t20091(f__$1, fn_handler__$1, meta20092) {
      return new cljs.core.async.impl.ioc_helpers.t20091(f__$1, fn_handler__$1, meta20092);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t20091(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async/impl/ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e20095) {
    if (e20095 instanceof Object) {
      var ex = e20095;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e20095;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_20098_20100 = state;
    statearr_20098_20100[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_20098_20100[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_20099_20101 = state;
    statearr_20099_20101[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_20099_20101[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_20104_20106 = state;
    statearr_20104_20106[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_20104_20106[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_20105_20107 = state;
    statearr_20105_20107[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_20105_20107[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4402__auto__, k__4403__auto__) {
  var self__ = this;
  var this__4402__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4402__auto____$1, k__4403__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4404__auto__, k20109, else__4405__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  var G__20111 = k20109 instanceof cljs.core.Keyword ? k20109.fqn : null;
  switch(G__20111) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20109, else__4405__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4416__auto__, writer__4417__auto__, opts__4418__auto__) {
  var self__ = this;
  var this__4416__auto____$1 = this;
  var pr_pair__4419__auto__ = function(this__4416__auto____$1) {
    return function(keyval__4420__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, cljs.core.pr_writer, "", " ", "", opts__4418__auto__, keyval__4420__auto__);
    };
  }(this__4416__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, pr_pair__4419__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4418__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4400__auto__) {
  var self__ = this;
  var this__4400__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4396__auto__) {
  var self__ = this;
  var this__4396__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4406__auto__) {
  var self__ = this;
  var this__4406__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_imap.call(null, this__4397__auto____$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4398__auto__, other__4399__auto__) {
  var self__ = this;
  var this__4398__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = other__4399__auto__;
    if (cljs.core.truth_(and__3787__auto__)) {
      return this__4398__auto____$1.constructor === other__4399__auto__.constructor && cljs.core.equiv_map.call(null, this__4398__auto____$1, other__4399__auto__);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4411__auto__, k__4412__auto__) {
  var self__ = this;
  var this__4411__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4412__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4411__auto____$1), self__.__meta), k__4412__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4412__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4409__auto__, k__4410__auto__, G__20108) {
  var self__ = this;
  var this__4409__auto____$1 = this;
  var pred__20112 = cljs.core.keyword_identical_QMARK_;
  var expr__20113 = k__4410__auto__;
  if (cljs.core.truth_(pred__20112.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__20113))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__20108, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20112.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__20113))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__20108, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20112.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__20113))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__20108, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20112.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__20113))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__20108, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20112.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__20113))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__20108, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4410__auto__, G__20108), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4414__auto__) {
  var self__ = this;
  var this__4414__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4401__auto__, G__20108) {
  var self__ = this;
  var this__4401__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__20108, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4407__auto__, entry__4408__auto__) {
  var self__ = this;
  var this__4407__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4408__auto__)) {
    return cljs.core._assoc.call(null, this__4407__auto____$1, cljs.core._nth.call(null, entry__4408__auto__, 0), cljs.core._nth.call(null, entry__4408__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4407__auto____$1, entry__4408__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4436__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4436__auto__, writer__4437__auto__) {
  return cljs.core._write.call(null, writer__4437__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__20110) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__20110), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__20110), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__20110), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__20110), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__20110), null, cljs.core.dissoc.call(null, G__20110, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_20117 = state;
  statearr_20117[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_20117;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = exception;
      if (cljs.core.truth_(and__3787__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3787__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3787__auto__ = exception;
        if (cljs.core.truth_(and__3787__auto__)) {
          var and__3787__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3787__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3787__auto____$1;
          }
        } else {
          return and__3787__auto__;
        }
      }())) {
        var statearr_20123 = state;
        statearr_20123[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_20123[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_20123[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_20123[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_20123;
      } else {
        if (cljs.core.truth_(function() {
          var and__3787__auto__ = exception;
          if (cljs.core.truth_(and__3787__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3787__auto__;
          }
        }())) {
          var statearr_20124_20128 = state;
          statearr_20124_20128[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__20129 = state;
          state = G__20129;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3787__auto__ = exception;
            if (cljs.core.truth_(and__3787__auto__)) {
              var and__3787__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3787__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3787__auto____$1;
              }
            } else {
              return and__3787__auto__;
            }
          }())) {
            var statearr_20125 = state;
            statearr_20125[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_20125[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_20125;
          } else {
            if (cljs.core.truth_(function() {
              var and__3787__auto__ = cljs.core.not.call(null, exception);
              if (and__3787__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3787__auto__;
              }
            }())) {
              var statearr_20126 = state;
              statearr_20126[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_20126[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_20126;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_20127 = state;
                statearr_20127[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_20127[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_20127;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
// Input 59
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__20063 = level + 1;
        level = G__20063;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_20064 = 0;
    while (true) {
      if (i_20064 < arr.length) {
        arr[i_20064] = null;
        var G__20065 = i_20064 + 1;
        i_20064 = G__20065;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__20066 = x_SINGLEQUOTE_;
                x__$1 = G__20066;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__20067 = x__$1;
        var G__20068 = k;
        var G__20069 = level - 1;
        var G__20070 = update;
        x = G__20067;
        k = G__20068;
        level = G__20069;
        update = G__20070;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_20071 = self__.level + 1;
      while (true) {
        if (i_20071 <= new_level + 1) {
          update[i_20071] = self__.header;
          var G__20072 = i_20071 + 1;
          i_20071 = G__20072;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_20073 = 0;
    while (true) {
      if (i_20073 <= self__.level) {
        var links_20074 = update[i_20073].forward;
        if (links_20074[i_20073] === x__$1) {
          links_20074[i_20073] = x__$1.forward[i_20073];
          var G__20075 = i_20073 + 1;
          i_20073 = G__20075;
          continue;
        } else {
          var G__20076 = i_20073 + 1;
          i_20073 = G__20076;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__20077 = x_SINGLEQUOTE_;
              x__$1 = G__20077;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__20078 = nx;
        var G__20079 = level__$1 - 1;
        x = G__20078;
        level__$1 = G__20079;
        continue;
      } else {
        var G__20080 = x;
        var G__20081 = level__$1 - 1;
        x = G__20080;
        level__$1 = G__20081;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__20082 = x_SINGLEQUOTE_;
              x__$1 = G__20082;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__20083 = nx;
        var G__20084 = level__$1 - 1;
        x = G__20083;
        level__$1 = G__20084;
        continue;
      } else {
        var G__20085 = x;
        var G__20086 = level__$1 - 1;
        x = G__20085;
        level__$1 = G__20086;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3799__auto__ = cljs.core.truth_(function() {
    var and__3787__auto__ = me;
    if (cljs.core.truth_(and__3787__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3787__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3799__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3799__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
// Input 60
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t16975 !== "undefined") {
  } else {
    cljs.core.async.t16975 = function(f, fn_handler, meta16976) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta16976 = meta16976;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t16975.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t16975.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16977) {
      var self__ = this;
      var _16977__$1 = this;
      return self__.meta16976;
    };
    cljs.core.async.t16975.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16977, meta16976__$1) {
      var self__ = this;
      var _16977__$1 = this;
      return new cljs.core.async.t16975(self__.f, self__.fn_handler, meta16976__$1);
    };
    cljs.core.async.t16975.cljs$lang$type = true;
    cljs.core.async.t16975.cljs$lang$ctorStr = "cljs.core.async/t16975";
    cljs.core.async.t16975.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t16975");
    };
    cljs.core.async.__GT_t16975 = function __GT_t16975(f__$1, fn_handler__$1, meta16976) {
      return new cljs.core.async.t16975(f__$1, fn_handler__$1, meta16976);
    };
  }
  return new cljs.core.async.t16975(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__16979 = buff;
  if (G__16979) {
    var bit__4480__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3799__auto__ = bit__4480__auto__;
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return G__16979.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__16979.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__16979);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__16979);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_16980 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_16980);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_16980, ret) {
          return function() {
            return fn1.call(null, val_16980);
          };
        }(val_16980, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4686__auto___16981 = n;
  var x_16982 = 0;
  while (true) {
    if (x_16982 < n__4686__auto___16981) {
      a[x_16982] = 0;
      var G__16983 = x_16982 + 1;
      x_16982 = G__16983;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__16984 = i + 1;
      i = G__16984;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t16988 !== "undefined") {
  } else {
    cljs.core.async.t16988 = function(flag, alt_flag, meta16989) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta16989 = meta16989;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16988.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16988.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t16988.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t16988.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_16990) {
        var self__ = this;
        var _16990__$1 = this;
        return self__.meta16989;
      };
    }(flag);
    cljs.core.async.t16988.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_16990, meta16989__$1) {
        var self__ = this;
        var _16990__$1 = this;
        return new cljs.core.async.t16988(self__.flag, self__.alt_flag, meta16989__$1);
      };
    }(flag);
    cljs.core.async.t16988.cljs$lang$type = true;
    cljs.core.async.t16988.cljs$lang$ctorStr = "cljs.core.async/t16988";
    cljs.core.async.t16988.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
        return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t16988");
      };
    }(flag);
    cljs.core.async.__GT_t16988 = function(flag) {
      return function __GT_t16988(flag__$1, alt_flag__$1, meta16989) {
        return new cljs.core.async.t16988(flag__$1, alt_flag__$1, meta16989);
      };
    }(flag);
  }
  return new cljs.core.async.t16988(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t16994 !== "undefined") {
  } else {
    cljs.core.async.t16994 = function(cb, flag, alt_handler, meta16995) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta16995 = meta16995;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16994.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16994.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t16994.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t16994.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16996) {
      var self__ = this;
      var _16996__$1 = this;
      return self__.meta16995;
    };
    cljs.core.async.t16994.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16996, meta16995__$1) {
      var self__ = this;
      var _16996__$1 = this;
      return new cljs.core.async.t16994(self__.cb, self__.flag, self__.alt_handler, meta16995__$1);
    };
    cljs.core.async.t16994.cljs$lang$type = true;
    cljs.core.async.t16994.cljs$lang$ctorStr = "cljs.core.async/t16994";
    cljs.core.async.t16994.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t16994");
    };
    cljs.core.async.__GT_t16994 = function __GT_t16994(cb__$1, flag__$1, alt_handler__$1, meta16995) {
      return new cljs.core.async.t16994(cb__$1, flag__$1, alt_handler__$1, meta16995);
    };
  }
  return new cljs.core.async.t16994(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__16997_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__16997_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__16998_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__16998_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3799__auto__ = wport;
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__16999 = i + 1;
          i = G__16999;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3799__auto__ = ret;
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3787__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3787__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3787__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__17000) {
    var map__17002 = p__17000;
    var map__17002__$1 = cljs.core.seq_QMARK_.call(null, map__17002) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17002) : map__17002;
    var opts = map__17002__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__17000 = null;
    if (arguments.length > 1) {
      var G__17003__i = 0, G__17003__a = new Array(arguments.length - 1);
      while (G__17003__i < G__17003__a.length) {
        G__17003__a[G__17003__i] = arguments[G__17003__i + 1];
        ++G__17003__i;
      }
      p__17000 = new cljs.core.IndexedSeq(G__17003__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__17000);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__17004) {
    var ports = cljs.core.first(arglist__17004);
    var p__17000 = cljs.core.rest(arglist__17004);
    return alts_BANG___delegate(ports, p__17000);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6777__auto___17099 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___17099) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___17099) {
            return function(state_17075) {
              var state_val_17076 = state_17075[1];
              if (state_val_17076 === 7) {
                var inst_17071 = state_17075[2];
                var state_17075__$1 = state_17075;
                var statearr_17077_17100 = state_17075__$1;
                statearr_17077_17100[2] = inst_17071;
                statearr_17077_17100[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17076 === 1) {
                  var state_17075__$1 = state_17075;
                  var statearr_17078_17101 = state_17075__$1;
                  statearr_17078_17101[2] = null;
                  statearr_17078_17101[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17076 === 4) {
                    var inst_17054 = state_17075[7];
                    var inst_17054__$1 = state_17075[2];
                    var inst_17055 = inst_17054__$1 == null;
                    var state_17075__$1 = function() {
                      var statearr_17079 = state_17075;
                      statearr_17079[7] = inst_17054__$1;
                      return statearr_17079;
                    }();
                    if (cljs.core.truth_(inst_17055)) {
                      var statearr_17080_17102 = state_17075__$1;
                      statearr_17080_17102[1] = 5;
                    } else {
                      var statearr_17081_17103 = state_17075__$1;
                      statearr_17081_17103[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17076 === 13) {
                      var state_17075__$1 = state_17075;
                      var statearr_17082_17104 = state_17075__$1;
                      statearr_17082_17104[2] = null;
                      statearr_17082_17104[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17076 === 6) {
                        var inst_17054 = state_17075[7];
                        var state_17075__$1 = state_17075;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17075__$1, 11, to, inst_17054);
                      } else {
                        if (state_val_17076 === 3) {
                          var inst_17073 = state_17075[2];
                          var state_17075__$1 = state_17075;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17075__$1, inst_17073);
                        } else {
                          if (state_val_17076 === 12) {
                            var state_17075__$1 = state_17075;
                            var statearr_17083_17105 = state_17075__$1;
                            statearr_17083_17105[2] = null;
                            statearr_17083_17105[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17076 === 2) {
                              var state_17075__$1 = state_17075;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17075__$1, 4, from);
                            } else {
                              if (state_val_17076 === 11) {
                                var inst_17064 = state_17075[2];
                                var state_17075__$1 = state_17075;
                                if (cljs.core.truth_(inst_17064)) {
                                  var statearr_17084_17106 = state_17075__$1;
                                  statearr_17084_17106[1] = 12;
                                } else {
                                  var statearr_17085_17107 = state_17075__$1;
                                  statearr_17085_17107[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17076 === 9) {
                                  var state_17075__$1 = state_17075;
                                  var statearr_17086_17108 = state_17075__$1;
                                  statearr_17086_17108[2] = null;
                                  statearr_17086_17108[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17076 === 5) {
                                    var state_17075__$1 = state_17075;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_17087_17109 = state_17075__$1;
                                      statearr_17087_17109[1] = 8;
                                    } else {
                                      var statearr_17088_17110 = state_17075__$1;
                                      statearr_17088_17110[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17076 === 14) {
                                      var inst_17069 = state_17075[2];
                                      var state_17075__$1 = state_17075;
                                      var statearr_17089_17111 = state_17075__$1;
                                      statearr_17089_17111[2] = inst_17069;
                                      statearr_17089_17111[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17076 === 10) {
                                        var inst_17061 = state_17075[2];
                                        var state_17075__$1 = state_17075;
                                        var statearr_17090_17112 = state_17075__$1;
                                        statearr_17090_17112[2] = inst_17061;
                                        statearr_17090_17112[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17076 === 8) {
                                          var inst_17058 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_17075__$1 = state_17075;
                                          var statearr_17091_17113 = state_17075__$1;
                                          statearr_17091_17113[2] = inst_17058;
                                          statearr_17091_17113[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___17099);
          return function(switch__6721__auto__, c__6777__auto___17099) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_17095 = [null, null, null, null, null, null, null, null];
                statearr_17095[0] = state_machine__6722__auto__;
                statearr_17095[1] = 1;
                return statearr_17095;
              };
              var state_machine__6722__auto____1 = function(state_17075) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_17075);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e17096) {
                      if (e17096 instanceof Object) {
                        var ex__6725__auto__ = e17096;
                        var statearr_17097_17114 = state_17075;
                        statearr_17097_17114[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17075);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17096;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17115 = state_17075;
                    state_17075 = G__17115;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_17075) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_17075);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___17099);
        }();
        var state__6779__auto__ = function() {
          var statearr_17098 = f__6778__auto__.call(null);
          statearr_17098[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___17099;
          return statearr_17098;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___17099));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__17299) {
      var vec__17300 = p__17299;
      var v = cljs.core.nth.call(null, vec__17300, 0, null);
      var p = cljs.core.nth.call(null, vec__17300, 1, null);
      var job = vec__17300;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6777__auto___17482 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___17482, res, vec__17300, v, p, job, jobs, results) {
          return function() {
            var f__6778__auto__ = function() {
              var switch__6721__auto__ = function(c__6777__auto___17482, res, vec__17300, v, p, job, jobs, results) {
                return function(state_17305) {
                  var state_val_17306 = state_17305[1];
                  if (state_val_17306 === 2) {
                    var inst_17302 = state_17305[2];
                    var inst_17303 = cljs.core.async.close_BANG_.call(null, res);
                    var state_17305__$1 = function() {
                      var statearr_17307 = state_17305;
                      statearr_17307[7] = inst_17302;
                      return statearr_17307;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17305__$1, inst_17303);
                  } else {
                    if (state_val_17306 === 1) {
                      var state_17305__$1 = state_17305;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17305__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6777__auto___17482, res, vec__17300, v, p, job, jobs, results);
              return function(switch__6721__auto__, c__6777__auto___17482, res, vec__17300, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6722__auto__ = null;
                  var state_machine__6722__auto____0 = function() {
                    var statearr_17311 = [null, null, null, null, null, null, null, null];
                    statearr_17311[0] = state_machine__6722__auto__;
                    statearr_17311[1] = 1;
                    return statearr_17311;
                  };
                  var state_machine__6722__auto____1 = function(state_17305) {
                    while (true) {
                      var ret_value__6723__auto__ = function() {
                        try {
                          while (true) {
                            var result__6724__auto__ = switch__6721__auto__.call(null, state_17305);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6724__auto__;
                            }
                            break;
                          }
                        } catch (e17312) {
                          if (e17312 instanceof Object) {
                            var ex__6725__auto__ = e17312;
                            var statearr_17313_17483 = state_17305;
                            statearr_17313_17483[5] = ex__6725__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17305);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e17312;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__17484 = state_17305;
                        state_17305 = G__17484;
                        continue;
                      } else {
                        return ret_value__6723__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6722__auto__ = function(state_17305) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6722__auto____0.call(this);
                      case 1:
                        return state_machine__6722__auto____1.call(this, state_17305);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
                  state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
                  return state_machine__6722__auto__;
                }();
              }(switch__6721__auto__, c__6777__auto___17482, res, vec__17300, v, p, job, jobs, results);
            }();
            var state__6779__auto__ = function() {
              var statearr_17314 = f__6778__auto__.call(null);
              statearr_17314[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___17482;
              return statearr_17314;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
          };
        }(c__6777__auto___17482, res, vec__17300, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__17315) {
      var vec__17316 = p__17315;
      var v = cljs.core.nth.call(null, vec__17316, 0, null);
      var p = cljs.core.nth.call(null, vec__17316, 1, null);
      var job = vec__17316;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4686__auto___17485 = n;
  var __17486 = 0;
  while (true) {
    if (__17486 < n__4686__auto___17485) {
      var G__17317_17487 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__17317_17487) {
        case "async":
          var c__6777__auto___17489 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__17486, c__6777__auto___17489, G__17317_17487, n__4686__auto___17485, jobs, results, process, async) {
            return function() {
              var f__6778__auto__ = function() {
                var switch__6721__auto__ = function(__17486, c__6777__auto___17489, G__17317_17487, n__4686__auto___17485, jobs, results, process, async) {
                  return function(state_17330) {
                    var state_val_17331 = state_17330[1];
                    if (state_val_17331 === 7) {
                      var inst_17326 = state_17330[2];
                      var state_17330__$1 = state_17330;
                      var statearr_17332_17490 = state_17330__$1;
                      statearr_17332_17490[2] = inst_17326;
                      statearr_17332_17490[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17331 === 6) {
                        var state_17330__$1 = state_17330;
                        var statearr_17333_17491 = state_17330__$1;
                        statearr_17333_17491[2] = null;
                        statearr_17333_17491[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17331 === 5) {
                          var state_17330__$1 = state_17330;
                          var statearr_17334_17492 = state_17330__$1;
                          statearr_17334_17492[2] = null;
                          statearr_17334_17492[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17331 === 4) {
                            var inst_17320 = state_17330[2];
                            var inst_17321 = async.call(null, inst_17320);
                            var state_17330__$1 = state_17330;
                            if (cljs.core.truth_(inst_17321)) {
                              var statearr_17335_17493 = state_17330__$1;
                              statearr_17335_17493[1] = 5;
                            } else {
                              var statearr_17336_17494 = state_17330__$1;
                              statearr_17336_17494[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17331 === 3) {
                              var inst_17328 = state_17330[2];
                              var state_17330__$1 = state_17330;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17330__$1, inst_17328);
                            } else {
                              if (state_val_17331 === 2) {
                                var state_17330__$1 = state_17330;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17330__$1, 4, jobs);
                              } else {
                                if (state_val_17331 === 1) {
                                  var state_17330__$1 = state_17330;
                                  var statearr_17337_17495 = state_17330__$1;
                                  statearr_17337_17495[2] = null;
                                  statearr_17337_17495[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__17486, c__6777__auto___17489, G__17317_17487, n__4686__auto___17485, jobs, results, process, async);
                return function(__17486, switch__6721__auto__, c__6777__auto___17489, G__17317_17487, n__4686__auto___17485, jobs, results, process, async) {
                  return function() {
                    var state_machine__6722__auto__ = null;
                    var state_machine__6722__auto____0 = function() {
                      var statearr_17341 = [null, null, null, null, null, null, null];
                      statearr_17341[0] = state_machine__6722__auto__;
                      statearr_17341[1] = 1;
                      return statearr_17341;
                    };
                    var state_machine__6722__auto____1 = function(state_17330) {
                      while (true) {
                        var ret_value__6723__auto__ = function() {
                          try {
                            while (true) {
                              var result__6724__auto__ = switch__6721__auto__.call(null, state_17330);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6724__auto__;
                              }
                              break;
                            }
                          } catch (e17342) {
                            if (e17342 instanceof Object) {
                              var ex__6725__auto__ = e17342;
                              var statearr_17343_17496 = state_17330;
                              statearr_17343_17496[5] = ex__6725__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17330);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e17342;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__17497 = state_17330;
                          state_17330 = G__17497;
                          continue;
                        } else {
                          return ret_value__6723__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6722__auto__ = function(state_17330) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6722__auto____0.call(this);
                        case 1:
                          return state_machine__6722__auto____1.call(this, state_17330);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
                    state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
                    return state_machine__6722__auto__;
                  }();
                }(__17486, switch__6721__auto__, c__6777__auto___17489, G__17317_17487, n__4686__auto___17485, jobs, results, process, async);
              }();
              var state__6779__auto__ = function() {
                var statearr_17344 = f__6778__auto__.call(null);
                statearr_17344[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___17489;
                return statearr_17344;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
            };
          }(__17486, c__6777__auto___17489, G__17317_17487, n__4686__auto___17485, jobs, results, process, async));
          break;
        case "compute":
          var c__6777__auto___17498 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__17486, c__6777__auto___17498, G__17317_17487, n__4686__auto___17485, jobs, results, process, async) {
            return function() {
              var f__6778__auto__ = function() {
                var switch__6721__auto__ = function(__17486, c__6777__auto___17498, G__17317_17487, n__4686__auto___17485, jobs, results, process, async) {
                  return function(state_17357) {
                    var state_val_17358 = state_17357[1];
                    if (state_val_17358 === 7) {
                      var inst_17353 = state_17357[2];
                      var state_17357__$1 = state_17357;
                      var statearr_17359_17499 = state_17357__$1;
                      statearr_17359_17499[2] = inst_17353;
                      statearr_17359_17499[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17358 === 6) {
                        var state_17357__$1 = state_17357;
                        var statearr_17360_17500 = state_17357__$1;
                        statearr_17360_17500[2] = null;
                        statearr_17360_17500[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17358 === 5) {
                          var state_17357__$1 = state_17357;
                          var statearr_17361_17501 = state_17357__$1;
                          statearr_17361_17501[2] = null;
                          statearr_17361_17501[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17358 === 4) {
                            var inst_17347 = state_17357[2];
                            var inst_17348 = process.call(null, inst_17347);
                            var state_17357__$1 = state_17357;
                            if (cljs.core.truth_(inst_17348)) {
                              var statearr_17362_17502 = state_17357__$1;
                              statearr_17362_17502[1] = 5;
                            } else {
                              var statearr_17363_17503 = state_17357__$1;
                              statearr_17363_17503[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17358 === 3) {
                              var inst_17355 = state_17357[2];
                              var state_17357__$1 = state_17357;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17357__$1, inst_17355);
                            } else {
                              if (state_val_17358 === 2) {
                                var state_17357__$1 = state_17357;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17357__$1, 4, jobs);
                              } else {
                                if (state_val_17358 === 1) {
                                  var state_17357__$1 = state_17357;
                                  var statearr_17364_17504 = state_17357__$1;
                                  statearr_17364_17504[2] = null;
                                  statearr_17364_17504[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__17486, c__6777__auto___17498, G__17317_17487, n__4686__auto___17485, jobs, results, process, async);
                return function(__17486, switch__6721__auto__, c__6777__auto___17498, G__17317_17487, n__4686__auto___17485, jobs, results, process, async) {
                  return function() {
                    var state_machine__6722__auto__ = null;
                    var state_machine__6722__auto____0 = function() {
                      var statearr_17368 = [null, null, null, null, null, null, null];
                      statearr_17368[0] = state_machine__6722__auto__;
                      statearr_17368[1] = 1;
                      return statearr_17368;
                    };
                    var state_machine__6722__auto____1 = function(state_17357) {
                      while (true) {
                        var ret_value__6723__auto__ = function() {
                          try {
                            while (true) {
                              var result__6724__auto__ = switch__6721__auto__.call(null, state_17357);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6724__auto__;
                              }
                              break;
                            }
                          } catch (e17369) {
                            if (e17369 instanceof Object) {
                              var ex__6725__auto__ = e17369;
                              var statearr_17370_17505 = state_17357;
                              statearr_17370_17505[5] = ex__6725__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17357);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e17369;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__17506 = state_17357;
                          state_17357 = G__17506;
                          continue;
                        } else {
                          return ret_value__6723__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6722__auto__ = function(state_17357) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6722__auto____0.call(this);
                        case 1:
                          return state_machine__6722__auto____1.call(this, state_17357);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
                    state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
                    return state_machine__6722__auto__;
                  }();
                }(__17486, switch__6721__auto__, c__6777__auto___17498, G__17317_17487, n__4686__auto___17485, jobs, results, process, async);
              }();
              var state__6779__auto__ = function() {
                var statearr_17371 = f__6778__auto__.call(null);
                statearr_17371[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___17498;
                return statearr_17371;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
            };
          }(__17486, c__6777__auto___17498, G__17317_17487, n__4686__auto___17485, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__17507 = __17486 + 1;
      __17486 = G__17507;
      continue;
    } else {
    }
    break;
  }
  var c__6777__auto___17508 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___17508, jobs, results, process, async) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto___17508, jobs, results, process, async) {
          return function(state_17393) {
            var state_val_17394 = state_17393[1];
            if (state_val_17394 === 9) {
              var inst_17386 = state_17393[2];
              var state_17393__$1 = function() {
                var statearr_17395 = state_17393;
                statearr_17395[7] = inst_17386;
                return statearr_17395;
              }();
              var statearr_17396_17509 = state_17393__$1;
              statearr_17396_17509[2] = null;
              statearr_17396_17509[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17394 === 8) {
                var inst_17379 = state_17393[8];
                var inst_17384 = state_17393[2];
                var state_17393__$1 = function() {
                  var statearr_17397 = state_17393;
                  statearr_17397[9] = inst_17384;
                  return statearr_17397;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17393__$1, 9, results, inst_17379);
              } else {
                if (state_val_17394 === 7) {
                  var inst_17389 = state_17393[2];
                  var state_17393__$1 = state_17393;
                  var statearr_17398_17510 = state_17393__$1;
                  statearr_17398_17510[2] = inst_17389;
                  statearr_17398_17510[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17394 === 6) {
                    var inst_17374 = state_17393[10];
                    var inst_17379 = state_17393[8];
                    var inst_17379__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_17380 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_17381 = [inst_17374, inst_17379__$1];
                    var inst_17382 = new cljs.core.PersistentVector(null, 2, 5, inst_17380, inst_17381, null);
                    var state_17393__$1 = function() {
                      var statearr_17399 = state_17393;
                      statearr_17399[8] = inst_17379__$1;
                      return statearr_17399;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17393__$1, 8, jobs, inst_17382);
                  } else {
                    if (state_val_17394 === 5) {
                      var inst_17377 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_17393__$1 = state_17393;
                      var statearr_17400_17511 = state_17393__$1;
                      statearr_17400_17511[2] = inst_17377;
                      statearr_17400_17511[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17394 === 4) {
                        var inst_17374 = state_17393[10];
                        var inst_17374__$1 = state_17393[2];
                        var inst_17375 = inst_17374__$1 == null;
                        var state_17393__$1 = function() {
                          var statearr_17401 = state_17393;
                          statearr_17401[10] = inst_17374__$1;
                          return statearr_17401;
                        }();
                        if (cljs.core.truth_(inst_17375)) {
                          var statearr_17402_17512 = state_17393__$1;
                          statearr_17402_17512[1] = 5;
                        } else {
                          var statearr_17403_17513 = state_17393__$1;
                          statearr_17403_17513[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17394 === 3) {
                          var inst_17391 = state_17393[2];
                          var state_17393__$1 = state_17393;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17393__$1, inst_17391);
                        } else {
                          if (state_val_17394 === 2) {
                            var state_17393__$1 = state_17393;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17393__$1, 4, from);
                          } else {
                            if (state_val_17394 === 1) {
                              var state_17393__$1 = state_17393;
                              var statearr_17404_17514 = state_17393__$1;
                              statearr_17404_17514[2] = null;
                              statearr_17404_17514[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6777__auto___17508, jobs, results, process, async);
        return function(switch__6721__auto__, c__6777__auto___17508, jobs, results, process, async) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_17408 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_17408[0] = state_machine__6722__auto__;
              statearr_17408[1] = 1;
              return statearr_17408;
            };
            var state_machine__6722__auto____1 = function(state_17393) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_17393);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e17409) {
                    if (e17409 instanceof Object) {
                      var ex__6725__auto__ = e17409;
                      var statearr_17410_17515 = state_17393;
                      statearr_17410_17515[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17393);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17409;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17516 = state_17393;
                  state_17393 = G__17516;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_17393) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_17393);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto___17508, jobs, results, process, async);
      }();
      var state__6779__auto__ = function() {
        var statearr_17411 = f__6778__auto__.call(null);
        statearr_17411[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___17508;
        return statearr_17411;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto___17508, jobs, results, process, async));
  var c__6777__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto__, jobs, results, process, async) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto__, jobs, results, process, async) {
          return function(state_17449) {
            var state_val_17450 = state_17449[1];
            if (state_val_17450 === 7) {
              var inst_17445 = state_17449[2];
              var state_17449__$1 = state_17449;
              var statearr_17451_17517 = state_17449__$1;
              statearr_17451_17517[2] = inst_17445;
              statearr_17451_17517[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17450 === 20) {
                var state_17449__$1 = state_17449;
                var statearr_17452_17518 = state_17449__$1;
                statearr_17452_17518[2] = null;
                statearr_17452_17518[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17450 === 1) {
                  var state_17449__$1 = state_17449;
                  var statearr_17453_17519 = state_17449__$1;
                  statearr_17453_17519[2] = null;
                  statearr_17453_17519[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17450 === 4) {
                    var inst_17414 = state_17449[7];
                    var inst_17414__$1 = state_17449[2];
                    var inst_17415 = inst_17414__$1 == null;
                    var state_17449__$1 = function() {
                      var statearr_17454 = state_17449;
                      statearr_17454[7] = inst_17414__$1;
                      return statearr_17454;
                    }();
                    if (cljs.core.truth_(inst_17415)) {
                      var statearr_17455_17520 = state_17449__$1;
                      statearr_17455_17520[1] = 5;
                    } else {
                      var statearr_17456_17521 = state_17449__$1;
                      statearr_17456_17521[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17450 === 15) {
                      var inst_17427 = state_17449[8];
                      var state_17449__$1 = state_17449;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17449__$1, 18, to, inst_17427);
                    } else {
                      if (state_val_17450 === 21) {
                        var inst_17440 = state_17449[2];
                        var state_17449__$1 = state_17449;
                        var statearr_17457_17522 = state_17449__$1;
                        statearr_17457_17522[2] = inst_17440;
                        statearr_17457_17522[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17450 === 13) {
                          var inst_17442 = state_17449[2];
                          var state_17449__$1 = function() {
                            var statearr_17458 = state_17449;
                            statearr_17458[9] = inst_17442;
                            return statearr_17458;
                          }();
                          var statearr_17459_17523 = state_17449__$1;
                          statearr_17459_17523[2] = null;
                          statearr_17459_17523[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17450 === 6) {
                            var inst_17414 = state_17449[7];
                            var state_17449__$1 = state_17449;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17449__$1, 11, inst_17414);
                          } else {
                            if (state_val_17450 === 17) {
                              var inst_17435 = state_17449[2];
                              var state_17449__$1 = state_17449;
                              if (cljs.core.truth_(inst_17435)) {
                                var statearr_17460_17524 = state_17449__$1;
                                statearr_17460_17524[1] = 19;
                              } else {
                                var statearr_17461_17525 = state_17449__$1;
                                statearr_17461_17525[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17450 === 3) {
                                var inst_17447 = state_17449[2];
                                var state_17449__$1 = state_17449;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17449__$1, inst_17447);
                              } else {
                                if (state_val_17450 === 12) {
                                  var inst_17424 = state_17449[10];
                                  var state_17449__$1 = state_17449;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17449__$1, 14, inst_17424);
                                } else {
                                  if (state_val_17450 === 2) {
                                    var state_17449__$1 = state_17449;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17449__$1, 4, results);
                                  } else {
                                    if (state_val_17450 === 19) {
                                      var state_17449__$1 = state_17449;
                                      var statearr_17462_17526 = state_17449__$1;
                                      statearr_17462_17526[2] = null;
                                      statearr_17462_17526[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17450 === 11) {
                                        var inst_17424 = state_17449[2];
                                        var state_17449__$1 = function() {
                                          var statearr_17463 = state_17449;
                                          statearr_17463[10] = inst_17424;
                                          return statearr_17463;
                                        }();
                                        var statearr_17464_17527 = state_17449__$1;
                                        statearr_17464_17527[2] = null;
                                        statearr_17464_17527[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17450 === 9) {
                                          var state_17449__$1 = state_17449;
                                          var statearr_17465_17528 = state_17449__$1;
                                          statearr_17465_17528[2] = null;
                                          statearr_17465_17528[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17450 === 5) {
                                            var state_17449__$1 = state_17449;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_17466_17529 = state_17449__$1;
                                              statearr_17466_17529[1] = 8;
                                            } else {
                                              var statearr_17467_17530 = state_17449__$1;
                                              statearr_17467_17530[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17450 === 14) {
                                              var inst_17427 = state_17449[8];
                                              var inst_17429 = state_17449[11];
                                              var inst_17427__$1 = state_17449[2];
                                              var inst_17428 = inst_17427__$1 == null;
                                              var inst_17429__$1 = cljs.core.not.call(null, inst_17428);
                                              var state_17449__$1 = function() {
                                                var statearr_17468 = state_17449;
                                                statearr_17468[8] = inst_17427__$1;
                                                statearr_17468[11] = inst_17429__$1;
                                                return statearr_17468;
                                              }();
                                              if (inst_17429__$1) {
                                                var statearr_17469_17531 = state_17449__$1;
                                                statearr_17469_17531[1] = 15;
                                              } else {
                                                var statearr_17470_17532 = state_17449__$1;
                                                statearr_17470_17532[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17450 === 16) {
                                                var inst_17429 = state_17449[11];
                                                var state_17449__$1 = state_17449;
                                                var statearr_17471_17533 = state_17449__$1;
                                                statearr_17471_17533[2] = inst_17429;
                                                statearr_17471_17533[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17450 === 10) {
                                                  var inst_17421 = state_17449[2];
                                                  var state_17449__$1 = state_17449;
                                                  var statearr_17472_17534 = state_17449__$1;
                                                  statearr_17472_17534[2] = inst_17421;
                                                  statearr_17472_17534[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17450 === 18) {
                                                    var inst_17432 = state_17449[2];
                                                    var state_17449__$1 = state_17449;
                                                    var statearr_17473_17535 = state_17449__$1;
                                                    statearr_17473_17535[2] = inst_17432;
                                                    statearr_17473_17535[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17450 === 8) {
                                                      var inst_17418 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_17449__$1 = state_17449;
                                                      var statearr_17474_17536 = state_17449__$1;
                                                      statearr_17474_17536[2] = inst_17418;
                                                      statearr_17474_17536[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6777__auto__, jobs, results, process, async);
        return function(switch__6721__auto__, c__6777__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_17478 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17478[0] = state_machine__6722__auto__;
              statearr_17478[1] = 1;
              return statearr_17478;
            };
            var state_machine__6722__auto____1 = function(state_17449) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_17449);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e17479) {
                    if (e17479 instanceof Object) {
                      var ex__6725__auto__ = e17479;
                      var statearr_17480_17537 = state_17449;
                      statearr_17480_17537[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17449);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17479;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17538 = state_17449;
                  state_17449 = G__17538;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_17449) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_17449);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto__, jobs, results, process, async);
      }();
      var state__6779__auto__ = function() {
        var statearr_17481 = f__6778__auto__.call(null);
        statearr_17481[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto__;
        return statearr_17481;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto__, jobs, results, process, async));
  return c__6777__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6777__auto___17639 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___17639, tc, fc) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___17639, tc, fc) {
            return function(state_17614) {
              var state_val_17615 = state_17614[1];
              if (state_val_17615 === 7) {
                var inst_17610 = state_17614[2];
                var state_17614__$1 = state_17614;
                var statearr_17616_17640 = state_17614__$1;
                statearr_17616_17640[2] = inst_17610;
                statearr_17616_17640[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17615 === 1) {
                  var state_17614__$1 = state_17614;
                  var statearr_17617_17641 = state_17614__$1;
                  statearr_17617_17641[2] = null;
                  statearr_17617_17641[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17615 === 4) {
                    var inst_17591 = state_17614[7];
                    var inst_17591__$1 = state_17614[2];
                    var inst_17592 = inst_17591__$1 == null;
                    var state_17614__$1 = function() {
                      var statearr_17618 = state_17614;
                      statearr_17618[7] = inst_17591__$1;
                      return statearr_17618;
                    }();
                    if (cljs.core.truth_(inst_17592)) {
                      var statearr_17619_17642 = state_17614__$1;
                      statearr_17619_17642[1] = 5;
                    } else {
                      var statearr_17620_17643 = state_17614__$1;
                      statearr_17620_17643[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17615 === 13) {
                      var state_17614__$1 = state_17614;
                      var statearr_17621_17644 = state_17614__$1;
                      statearr_17621_17644[2] = null;
                      statearr_17621_17644[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17615 === 6) {
                        var inst_17591 = state_17614[7];
                        var inst_17597 = p.call(null, inst_17591);
                        var state_17614__$1 = state_17614;
                        if (cljs.core.truth_(inst_17597)) {
                          var statearr_17622_17645 = state_17614__$1;
                          statearr_17622_17645[1] = 9;
                        } else {
                          var statearr_17623_17646 = state_17614__$1;
                          statearr_17623_17646[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17615 === 3) {
                          var inst_17612 = state_17614[2];
                          var state_17614__$1 = state_17614;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17614__$1, inst_17612);
                        } else {
                          if (state_val_17615 === 12) {
                            var state_17614__$1 = state_17614;
                            var statearr_17624_17647 = state_17614__$1;
                            statearr_17624_17647[2] = null;
                            statearr_17624_17647[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17615 === 2) {
                              var state_17614__$1 = state_17614;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17614__$1, 4, ch);
                            } else {
                              if (state_val_17615 === 11) {
                                var inst_17591 = state_17614[7];
                                var inst_17601 = state_17614[2];
                                var state_17614__$1 = state_17614;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17614__$1, 8, inst_17601, inst_17591);
                              } else {
                                if (state_val_17615 === 9) {
                                  var state_17614__$1 = state_17614;
                                  var statearr_17625_17648 = state_17614__$1;
                                  statearr_17625_17648[2] = tc;
                                  statearr_17625_17648[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17615 === 5) {
                                    var inst_17594 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_17595 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_17614__$1 = function() {
                                      var statearr_17626 = state_17614;
                                      statearr_17626[8] = inst_17594;
                                      return statearr_17626;
                                    }();
                                    var statearr_17627_17649 = state_17614__$1;
                                    statearr_17627_17649[2] = inst_17595;
                                    statearr_17627_17649[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17615 === 14) {
                                      var inst_17608 = state_17614[2];
                                      var state_17614__$1 = state_17614;
                                      var statearr_17628_17650 = state_17614__$1;
                                      statearr_17628_17650[2] = inst_17608;
                                      statearr_17628_17650[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17615 === 10) {
                                        var state_17614__$1 = state_17614;
                                        var statearr_17629_17651 = state_17614__$1;
                                        statearr_17629_17651[2] = fc;
                                        statearr_17629_17651[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17615 === 8) {
                                          var inst_17603 = state_17614[2];
                                          var state_17614__$1 = state_17614;
                                          if (cljs.core.truth_(inst_17603)) {
                                            var statearr_17630_17652 = state_17614__$1;
                                            statearr_17630_17652[1] = 12;
                                          } else {
                                            var statearr_17631_17653 = state_17614__$1;
                                            statearr_17631_17653[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___17639, tc, fc);
          return function(switch__6721__auto__, c__6777__auto___17639, tc, fc) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_17635 = [null, null, null, null, null, null, null, null, null];
                statearr_17635[0] = state_machine__6722__auto__;
                statearr_17635[1] = 1;
                return statearr_17635;
              };
              var state_machine__6722__auto____1 = function(state_17614) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_17614);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e17636) {
                      if (e17636 instanceof Object) {
                        var ex__6725__auto__ = e17636;
                        var statearr_17637_17654 = state_17614;
                        statearr_17637_17654[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17614);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17636;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17655 = state_17614;
                    state_17614 = G__17655;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_17614) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_17614);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___17639, tc, fc);
        }();
        var state__6779__auto__ = function() {
          var statearr_17638 = f__6778__auto__.call(null);
          statearr_17638[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___17639;
          return statearr_17638;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___17639, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6777__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto__) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto__) {
          return function(state_17702) {
            var state_val_17703 = state_17702[1];
            if (state_val_17703 === 7) {
              var inst_17698 = state_17702[2];
              var state_17702__$1 = state_17702;
              var statearr_17704_17720 = state_17702__$1;
              statearr_17704_17720[2] = inst_17698;
              statearr_17704_17720[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17703 === 6) {
                var inst_17691 = state_17702[7];
                var inst_17688 = state_17702[8];
                var inst_17695 = f.call(null, inst_17688, inst_17691);
                var inst_17688__$1 = inst_17695;
                var state_17702__$1 = function() {
                  var statearr_17705 = state_17702;
                  statearr_17705[8] = inst_17688__$1;
                  return statearr_17705;
                }();
                var statearr_17706_17721 = state_17702__$1;
                statearr_17706_17721[2] = null;
                statearr_17706_17721[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17703 === 5) {
                  var inst_17688 = state_17702[8];
                  var state_17702__$1 = state_17702;
                  var statearr_17707_17722 = state_17702__$1;
                  statearr_17707_17722[2] = inst_17688;
                  statearr_17707_17722[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17703 === 4) {
                    var inst_17691 = state_17702[7];
                    var inst_17691__$1 = state_17702[2];
                    var inst_17692 = inst_17691__$1 == null;
                    var state_17702__$1 = function() {
                      var statearr_17708 = state_17702;
                      statearr_17708[7] = inst_17691__$1;
                      return statearr_17708;
                    }();
                    if (cljs.core.truth_(inst_17692)) {
                      var statearr_17709_17723 = state_17702__$1;
                      statearr_17709_17723[1] = 5;
                    } else {
                      var statearr_17710_17724 = state_17702__$1;
                      statearr_17710_17724[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17703 === 3) {
                      var inst_17700 = state_17702[2];
                      var state_17702__$1 = state_17702;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17702__$1, inst_17700);
                    } else {
                      if (state_val_17703 === 2) {
                        var state_17702__$1 = state_17702;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17702__$1, 4, ch);
                      } else {
                        if (state_val_17703 === 1) {
                          var inst_17688 = init;
                          var state_17702__$1 = function() {
                            var statearr_17711 = state_17702;
                            statearr_17711[8] = inst_17688;
                            return statearr_17711;
                          }();
                          var statearr_17712_17725 = state_17702__$1;
                          statearr_17712_17725[2] = null;
                          statearr_17712_17725[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6777__auto__);
        return function(switch__6721__auto__, c__6777__auto__) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_17716 = [null, null, null, null, null, null, null, null, null];
              statearr_17716[0] = state_machine__6722__auto__;
              statearr_17716[1] = 1;
              return statearr_17716;
            };
            var state_machine__6722__auto____1 = function(state_17702) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_17702);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e17717) {
                    if (e17717 instanceof Object) {
                      var ex__6725__auto__ = e17717;
                      var statearr_17718_17726 = state_17702;
                      statearr_17718_17726[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17702);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17717;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17727 = state_17702;
                  state_17702 = G__17727;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_17702) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_17702);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto__);
      }();
      var state__6779__auto__ = function() {
        var statearr_17719 = f__6778__auto__.call(null);
        statearr_17719[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto__;
        return statearr_17719;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto__));
  return c__6777__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6777__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto__) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto__) {
            return function(state_17801) {
              var state_val_17802 = state_17801[1];
              if (state_val_17802 === 7) {
                var inst_17783 = state_17801[2];
                var state_17801__$1 = state_17801;
                var statearr_17803_17826 = state_17801__$1;
                statearr_17803_17826[2] = inst_17783;
                statearr_17803_17826[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17802 === 1) {
                  var inst_17777 = cljs.core.seq.call(null, coll);
                  var inst_17778 = inst_17777;
                  var state_17801__$1 = function() {
                    var statearr_17804 = state_17801;
                    statearr_17804[7] = inst_17778;
                    return statearr_17804;
                  }();
                  var statearr_17805_17827 = state_17801__$1;
                  statearr_17805_17827[2] = null;
                  statearr_17805_17827[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17802 === 4) {
                    var inst_17778 = state_17801[7];
                    var inst_17781 = cljs.core.first.call(null, inst_17778);
                    var state_17801__$1 = state_17801;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17801__$1, 7, ch, inst_17781);
                  } else {
                    if (state_val_17802 === 13) {
                      var inst_17795 = state_17801[2];
                      var state_17801__$1 = state_17801;
                      var statearr_17806_17828 = state_17801__$1;
                      statearr_17806_17828[2] = inst_17795;
                      statearr_17806_17828[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17802 === 6) {
                        var inst_17786 = state_17801[2];
                        var state_17801__$1 = state_17801;
                        if (cljs.core.truth_(inst_17786)) {
                          var statearr_17807_17829 = state_17801__$1;
                          statearr_17807_17829[1] = 8;
                        } else {
                          var statearr_17808_17830 = state_17801__$1;
                          statearr_17808_17830[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17802 === 3) {
                          var inst_17799 = state_17801[2];
                          var state_17801__$1 = state_17801;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17801__$1, inst_17799);
                        } else {
                          if (state_val_17802 === 12) {
                            var state_17801__$1 = state_17801;
                            var statearr_17809_17831 = state_17801__$1;
                            statearr_17809_17831[2] = null;
                            statearr_17809_17831[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17802 === 2) {
                              var inst_17778 = state_17801[7];
                              var state_17801__$1 = state_17801;
                              if (cljs.core.truth_(inst_17778)) {
                                var statearr_17810_17832 = state_17801__$1;
                                statearr_17810_17832[1] = 4;
                              } else {
                                var statearr_17811_17833 = state_17801__$1;
                                statearr_17811_17833[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17802 === 11) {
                                var inst_17792 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_17801__$1 = state_17801;
                                var statearr_17812_17834 = state_17801__$1;
                                statearr_17812_17834[2] = inst_17792;
                                statearr_17812_17834[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17802 === 9) {
                                  var state_17801__$1 = state_17801;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_17813_17835 = state_17801__$1;
                                    statearr_17813_17835[1] = 11;
                                  } else {
                                    var statearr_17814_17836 = state_17801__$1;
                                    statearr_17814_17836[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17802 === 5) {
                                    var inst_17778 = state_17801[7];
                                    var state_17801__$1 = state_17801;
                                    var statearr_17815_17837 = state_17801__$1;
                                    statearr_17815_17837[2] = inst_17778;
                                    statearr_17815_17837[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17802 === 10) {
                                      var inst_17797 = state_17801[2];
                                      var state_17801__$1 = state_17801;
                                      var statearr_17816_17838 = state_17801__$1;
                                      statearr_17816_17838[2] = inst_17797;
                                      statearr_17816_17838[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17802 === 8) {
                                        var inst_17778 = state_17801[7];
                                        var inst_17788 = cljs.core.next.call(null, inst_17778);
                                        var inst_17778__$1 = inst_17788;
                                        var state_17801__$1 = function() {
                                          var statearr_17817 = state_17801;
                                          statearr_17817[7] = inst_17778__$1;
                                          return statearr_17817;
                                        }();
                                        var statearr_17818_17839 = state_17801__$1;
                                        statearr_17818_17839[2] = null;
                                        statearr_17818_17839[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto__);
          return function(switch__6721__auto__, c__6777__auto__) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_17822 = [null, null, null, null, null, null, null, null];
                statearr_17822[0] = state_machine__6722__auto__;
                statearr_17822[1] = 1;
                return statearr_17822;
              };
              var state_machine__6722__auto____1 = function(state_17801) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_17801);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e17823) {
                      if (e17823 instanceof Object) {
                        var ex__6725__auto__ = e17823;
                        var statearr_17824_17840 = state_17801;
                        statearr_17824_17840[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17801);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17823;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17841 = state_17801;
                    state_17801 = G__17841;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_17801) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_17801);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto__);
        }();
        var state__6779__auto__ = function() {
          var statearr_17825 = f__6778__auto__.call(null);
          statearr_17825[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto__;
          return statearr_17825;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto__));
    return c__6777__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj17843 = {};
  return obj17843;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3787__auto__ = _;
    if (and__3787__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4443__auto__ = _ == null ? null : _;
    return function() {
      var or__3799__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj17845 = {};
  return obj17845;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t18067 !== "undefined") {
    } else {
      cljs.core.async.t18067 = function(cs, ch, mult, meta18068) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta18068 = meta18068;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t18067.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t18067.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t18067.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t18067.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t18067.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t18067.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t18067.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_18069) {
          var self__ = this;
          var _18069__$1 = this;
          return self__.meta18068;
        };
      }(cs);
      cljs.core.async.t18067.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_18069, meta18068__$1) {
          var self__ = this;
          var _18069__$1 = this;
          return new cljs.core.async.t18067(self__.cs, self__.ch, self__.mult, meta18068__$1);
        };
      }(cs);
      cljs.core.async.t18067.cljs$lang$type = true;
      cljs.core.async.t18067.cljs$lang$ctorStr = "cljs.core.async/t18067";
      cljs.core.async.t18067.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
          return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t18067");
        };
      }(cs);
      cljs.core.async.__GT_t18067 = function(cs) {
        return function __GT_t18067(cs__$1, ch__$1, mult__$1, meta18068) {
          return new cljs.core.async.t18067(cs__$1, ch__$1, mult__$1, meta18068);
        };
      }(cs);
    }
    return new cljs.core.async.t18067(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6777__auto___18288 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___18288, cs, m, dchan, dctr, done) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto___18288, cs, m, dchan, dctr, done) {
          return function(state_18200) {
            var state_val_18201 = state_18200[1];
            if (state_val_18201 === 7) {
              var inst_18196 = state_18200[2];
              var state_18200__$1 = state_18200;
              var statearr_18202_18289 = state_18200__$1;
              statearr_18202_18289[2] = inst_18196;
              statearr_18202_18289[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18201 === 20) {
                var inst_18101 = state_18200[7];
                var inst_18111 = cljs.core.first.call(null, inst_18101);
                var inst_18112 = cljs.core.nth.call(null, inst_18111, 0, null);
                var inst_18113 = cljs.core.nth.call(null, inst_18111, 1, null);
                var state_18200__$1 = function() {
                  var statearr_18203 = state_18200;
                  statearr_18203[8] = inst_18112;
                  return statearr_18203;
                }();
                if (cljs.core.truth_(inst_18113)) {
                  var statearr_18204_18290 = state_18200__$1;
                  statearr_18204_18290[1] = 22;
                } else {
                  var statearr_18205_18291 = state_18200__$1;
                  statearr_18205_18291[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18201 === 27) {
                  var inst_18148 = state_18200[9];
                  var inst_18141 = state_18200[10];
                  var inst_18072 = state_18200[11];
                  var inst_18143 = state_18200[12];
                  var inst_18148__$1 = cljs.core._nth.call(null, inst_18141, inst_18143);
                  var inst_18149 = cljs.core.async.put_BANG_.call(null, inst_18148__$1, inst_18072, done);
                  var state_18200__$1 = function() {
                    var statearr_18206 = state_18200;
                    statearr_18206[9] = inst_18148__$1;
                    return statearr_18206;
                  }();
                  if (cljs.core.truth_(inst_18149)) {
                    var statearr_18207_18292 = state_18200__$1;
                    statearr_18207_18292[1] = 30;
                  } else {
                    var statearr_18208_18293 = state_18200__$1;
                    statearr_18208_18293[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18201 === 1) {
                    var state_18200__$1 = state_18200;
                    var statearr_18209_18294 = state_18200__$1;
                    statearr_18209_18294[2] = null;
                    statearr_18209_18294[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18201 === 24) {
                      var inst_18101 = state_18200[7];
                      var inst_18118 = state_18200[2];
                      var inst_18119 = cljs.core.next.call(null, inst_18101);
                      var inst_18081 = inst_18119;
                      var inst_18082 = null;
                      var inst_18083 = 0;
                      var inst_18084 = 0;
                      var state_18200__$1 = function() {
                        var statearr_18210 = state_18200;
                        statearr_18210[13] = inst_18118;
                        statearr_18210[14] = inst_18084;
                        statearr_18210[15] = inst_18083;
                        statearr_18210[16] = inst_18081;
                        statearr_18210[17] = inst_18082;
                        return statearr_18210;
                      }();
                      var statearr_18211_18295 = state_18200__$1;
                      statearr_18211_18295[2] = null;
                      statearr_18211_18295[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18201 === 39) {
                        var state_18200__$1 = state_18200;
                        var statearr_18215_18296 = state_18200__$1;
                        statearr_18215_18296[2] = null;
                        statearr_18215_18296[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18201 === 4) {
                          var inst_18072 = state_18200[11];
                          var inst_18072__$1 = state_18200[2];
                          var inst_18073 = inst_18072__$1 == null;
                          var state_18200__$1 = function() {
                            var statearr_18216 = state_18200;
                            statearr_18216[11] = inst_18072__$1;
                            return statearr_18216;
                          }();
                          if (cljs.core.truth_(inst_18073)) {
                            var statearr_18217_18297 = state_18200__$1;
                            statearr_18217_18297[1] = 5;
                          } else {
                            var statearr_18218_18298 = state_18200__$1;
                            statearr_18218_18298[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18201 === 15) {
                            var inst_18084 = state_18200[14];
                            var inst_18083 = state_18200[15];
                            var inst_18081 = state_18200[16];
                            var inst_18082 = state_18200[17];
                            var inst_18097 = state_18200[2];
                            var inst_18098 = inst_18084 + 1;
                            var tmp18212 = inst_18083;
                            var tmp18213 = inst_18081;
                            var tmp18214 = inst_18082;
                            var inst_18081__$1 = tmp18213;
                            var inst_18082__$1 = tmp18214;
                            var inst_18083__$1 = tmp18212;
                            var inst_18084__$1 = inst_18098;
                            var state_18200__$1 = function() {
                              var statearr_18219 = state_18200;
                              statearr_18219[14] = inst_18084__$1;
                              statearr_18219[18] = inst_18097;
                              statearr_18219[15] = inst_18083__$1;
                              statearr_18219[16] = inst_18081__$1;
                              statearr_18219[17] = inst_18082__$1;
                              return statearr_18219;
                            }();
                            var statearr_18220_18299 = state_18200__$1;
                            statearr_18220_18299[2] = null;
                            statearr_18220_18299[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18201 === 21) {
                              var inst_18122 = state_18200[2];
                              var state_18200__$1 = state_18200;
                              var statearr_18224_18300 = state_18200__$1;
                              statearr_18224_18300[2] = inst_18122;
                              statearr_18224_18300[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18201 === 31) {
                                var inst_18148 = state_18200[9];
                                var inst_18152 = done.call(null, null);
                                var inst_18153 = cljs.core.async.untap_STAR_.call(null, m, inst_18148);
                                var state_18200__$1 = function() {
                                  var statearr_18225 = state_18200;
                                  statearr_18225[19] = inst_18152;
                                  return statearr_18225;
                                }();
                                var statearr_18226_18301 = state_18200__$1;
                                statearr_18226_18301[2] = inst_18153;
                                statearr_18226_18301[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18201 === 32) {
                                  var inst_18142 = state_18200[20];
                                  var inst_18141 = state_18200[10];
                                  var inst_18140 = state_18200[21];
                                  var inst_18143 = state_18200[12];
                                  var inst_18155 = state_18200[2];
                                  var inst_18156 = inst_18143 + 1;
                                  var tmp18221 = inst_18142;
                                  var tmp18222 = inst_18141;
                                  var tmp18223 = inst_18140;
                                  var inst_18140__$1 = tmp18223;
                                  var inst_18141__$1 = tmp18222;
                                  var inst_18142__$1 = tmp18221;
                                  var inst_18143__$1 = inst_18156;
                                  var state_18200__$1 = function() {
                                    var statearr_18227 = state_18200;
                                    statearr_18227[20] = inst_18142__$1;
                                    statearr_18227[10] = inst_18141__$1;
                                    statearr_18227[21] = inst_18140__$1;
                                    statearr_18227[22] = inst_18155;
                                    statearr_18227[12] = inst_18143__$1;
                                    return statearr_18227;
                                  }();
                                  var statearr_18228_18302 = state_18200__$1;
                                  statearr_18228_18302[2] = null;
                                  statearr_18228_18302[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18201 === 40) {
                                    var inst_18168 = state_18200[23];
                                    var inst_18172 = done.call(null, null);
                                    var inst_18173 = cljs.core.async.untap_STAR_.call(null, m, inst_18168);
                                    var state_18200__$1 = function() {
                                      var statearr_18229 = state_18200;
                                      statearr_18229[24] = inst_18172;
                                      return statearr_18229;
                                    }();
                                    var statearr_18230_18303 = state_18200__$1;
                                    statearr_18230_18303[2] = inst_18173;
                                    statearr_18230_18303[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18201 === 33) {
                                      var inst_18159 = state_18200[25];
                                      var inst_18161 = cljs.core.chunked_seq_QMARK_.call(null, inst_18159);
                                      var state_18200__$1 = state_18200;
                                      if (inst_18161) {
                                        var statearr_18231_18304 = state_18200__$1;
                                        statearr_18231_18304[1] = 36;
                                      } else {
                                        var statearr_18232_18305 = state_18200__$1;
                                        statearr_18232_18305[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18201 === 13) {
                                        var inst_18091 = state_18200[26];
                                        var inst_18094 = cljs.core.async.close_BANG_.call(null, inst_18091);
                                        var state_18200__$1 = state_18200;
                                        var statearr_18233_18306 = state_18200__$1;
                                        statearr_18233_18306[2] = inst_18094;
                                        statearr_18233_18306[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18201 === 22) {
                                          var inst_18112 = state_18200[8];
                                          var inst_18115 = cljs.core.async.close_BANG_.call(null, inst_18112);
                                          var state_18200__$1 = state_18200;
                                          var statearr_18234_18307 = state_18200__$1;
                                          statearr_18234_18307[2] = inst_18115;
                                          statearr_18234_18307[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18201 === 36) {
                                            var inst_18159 = state_18200[25];
                                            var inst_18163 = cljs.core.chunk_first.call(null, inst_18159);
                                            var inst_18164 = cljs.core.chunk_rest.call(null, inst_18159);
                                            var inst_18165 = cljs.core.count.call(null, inst_18163);
                                            var inst_18140 = inst_18164;
                                            var inst_18141 = inst_18163;
                                            var inst_18142 = inst_18165;
                                            var inst_18143 = 0;
                                            var state_18200__$1 = function() {
                                              var statearr_18235 = state_18200;
                                              statearr_18235[20] = inst_18142;
                                              statearr_18235[10] = inst_18141;
                                              statearr_18235[21] = inst_18140;
                                              statearr_18235[12] = inst_18143;
                                              return statearr_18235;
                                            }();
                                            var statearr_18236_18308 = state_18200__$1;
                                            statearr_18236_18308[2] = null;
                                            statearr_18236_18308[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18201 === 41) {
                                              var inst_18159 = state_18200[25];
                                              var inst_18175 = state_18200[2];
                                              var inst_18176 = cljs.core.next.call(null, inst_18159);
                                              var inst_18140 = inst_18176;
                                              var inst_18141 = null;
                                              var inst_18142 = 0;
                                              var inst_18143 = 0;
                                              var state_18200__$1 = function() {
                                                var statearr_18237 = state_18200;
                                                statearr_18237[20] = inst_18142;
                                                statearr_18237[10] = inst_18141;
                                                statearr_18237[27] = inst_18175;
                                                statearr_18237[21] = inst_18140;
                                                statearr_18237[12] = inst_18143;
                                                return statearr_18237;
                                              }();
                                              var statearr_18238_18309 = state_18200__$1;
                                              statearr_18238_18309[2] = null;
                                              statearr_18238_18309[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18201 === 43) {
                                                var state_18200__$1 = state_18200;
                                                var statearr_18239_18310 = state_18200__$1;
                                                statearr_18239_18310[2] = null;
                                                statearr_18239_18310[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_18201 === 29) {
                                                  var inst_18184 = state_18200[2];
                                                  var state_18200__$1 = state_18200;
                                                  var statearr_18240_18311 = state_18200__$1;
                                                  statearr_18240_18311[2] = inst_18184;
                                                  statearr_18240_18311[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_18201 === 44) {
                                                    var inst_18193 = state_18200[2];
                                                    var state_18200__$1 = function() {
                                                      var statearr_18241 = state_18200;
                                                      statearr_18241[28] = inst_18193;
                                                      return statearr_18241;
                                                    }();
                                                    var statearr_18242_18312 = state_18200__$1;
                                                    statearr_18242_18312[2] = null;
                                                    statearr_18242_18312[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18201 === 6) {
                                                      var inst_18132 = state_18200[29];
                                                      var inst_18131 = cljs.core.deref.call(null, cs);
                                                      var inst_18132__$1 = cljs.core.keys.call(null, inst_18131);
                                                      var inst_18133 = cljs.core.count.call(null, inst_18132__$1);
                                                      var inst_18134 = cljs.core.reset_BANG_.call(null, dctr, inst_18133);
                                                      var inst_18139 = cljs.core.seq.call(null, inst_18132__$1);
                                                      var inst_18140 = inst_18139;
                                                      var inst_18141 = null;
                                                      var inst_18142 = 0;
                                                      var inst_18143 = 0;
                                                      var state_18200__$1 = function() {
                                                        var statearr_18243 = state_18200;
                                                        statearr_18243[30] = inst_18134;
                                                        statearr_18243[20] = inst_18142;
                                                        statearr_18243[10] = inst_18141;
                                                        statearr_18243[29] = inst_18132__$1;
                                                        statearr_18243[21] = inst_18140;
                                                        statearr_18243[12] = inst_18143;
                                                        return statearr_18243;
                                                      }();
                                                      var statearr_18244_18313 = state_18200__$1;
                                                      statearr_18244_18313[2] = null;
                                                      statearr_18244_18313[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_18201 === 28) {
                                                        var inst_18159 = state_18200[25];
                                                        var inst_18140 = state_18200[21];
                                                        var inst_18159__$1 = cljs.core.seq.call(null, inst_18140);
                                                        var state_18200__$1 = function() {
                                                          var statearr_18245 = state_18200;
                                                          statearr_18245[25] = inst_18159__$1;
                                                          return statearr_18245;
                                                        }();
                                                        if (inst_18159__$1) {
                                                          var statearr_18246_18314 = state_18200__$1;
                                                          statearr_18246_18314[1] = 33;
                                                        } else {
                                                          var statearr_18247_18315 = state_18200__$1;
                                                          statearr_18247_18315[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_18201 === 25) {
                                                          var inst_18142 = state_18200[20];
                                                          var inst_18143 = state_18200[12];
                                                          var inst_18145 = inst_18143 < inst_18142;
                                                          var inst_18146 = inst_18145;
                                                          var state_18200__$1 = state_18200;
                                                          if (cljs.core.truth_(inst_18146)) {
                                                            var statearr_18248_18316 = state_18200__$1;
                                                            statearr_18248_18316[1] = 27;
                                                          } else {
                                                            var statearr_18249_18317 = state_18200__$1;
                                                            statearr_18249_18317[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_18201 === 34) {
                                                            var state_18200__$1 = state_18200;
                                                            var statearr_18250_18318 = state_18200__$1;
                                                            statearr_18250_18318[2] = null;
                                                            statearr_18250_18318[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_18201 === 17) {
                                                              var state_18200__$1 = state_18200;
                                                              var statearr_18251_18319 = state_18200__$1;
                                                              statearr_18251_18319[2] = null;
                                                              statearr_18251_18319[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_18201 === 3) {
                                                                var inst_18198 = state_18200[2];
                                                                var state_18200__$1 = state_18200;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18200__$1, inst_18198);
                                                              } else {
                                                                if (state_val_18201 === 12) {
                                                                  var inst_18127 = state_18200[2];
                                                                  var state_18200__$1 = state_18200;
                                                                  var statearr_18252_18320 = state_18200__$1;
                                                                  statearr_18252_18320[2] = inst_18127;
                                                                  statearr_18252_18320[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_18201 === 2) {
                                                                    var state_18200__$1 = state_18200;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18200__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_18201 === 23) {
                                                                      var state_18200__$1 = state_18200;
                                                                      var statearr_18253_18321 = state_18200__$1;
                                                                      statearr_18253_18321[2] = null;
                                                                      statearr_18253_18321[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_18201 === 35) {
                                                                        var inst_18182 = state_18200[2];
                                                                        var state_18200__$1 = state_18200;
                                                                        var statearr_18254_18322 = state_18200__$1;
                                                                        statearr_18254_18322[2] = inst_18182;
                                                                        statearr_18254_18322[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_18201 === 19) {
                                                                          var inst_18101 = state_18200[7];
                                                                          var inst_18105 = cljs.core.chunk_first.call(null, inst_18101);
                                                                          var inst_18106 = cljs.core.chunk_rest.call(null, inst_18101);
                                                                          var inst_18107 = cljs.core.count.call(null, inst_18105);
                                                                          var inst_18081 = inst_18106;
                                                                          var inst_18082 = inst_18105;
                                                                          var inst_18083 = inst_18107;
                                                                          var inst_18084 = 0;
                                                                          var state_18200__$1 = function() {
                                                                            var statearr_18255 = state_18200;
                                                                            statearr_18255[14] = inst_18084;
                                                                            statearr_18255[15] = inst_18083;
                                                                            statearr_18255[16] = inst_18081;
                                                                            statearr_18255[17] = inst_18082;
                                                                            return statearr_18255;
                                                                          }();
                                                                          var statearr_18256_18323 = state_18200__$1;
                                                                          statearr_18256_18323[2] = null;
                                                                          statearr_18256_18323[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_18201 === 11) {
                                                                            var inst_18101 = state_18200[7];
                                                                            var inst_18081 = state_18200[16];
                                                                            var inst_18101__$1 = cljs.core.seq.call(null, inst_18081);
                                                                            var state_18200__$1 = function() {
                                                                              var statearr_18257 = state_18200;
                                                                              statearr_18257[7] = inst_18101__$1;
                                                                              return statearr_18257;
                                                                            }();
                                                                            if (inst_18101__$1) {
                                                                              var statearr_18258_18324 = state_18200__$1;
                                                                              statearr_18258_18324[1] = 16;
                                                                            } else {
                                                                              var statearr_18259_18325 = state_18200__$1;
                                                                              statearr_18259_18325[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_18201 === 9) {
                                                                              var inst_18129 = state_18200[2];
                                                                              var state_18200__$1 = state_18200;
                                                                              var statearr_18260_18326 = state_18200__$1;
                                                                              statearr_18260_18326[2] = inst_18129;
                                                                              statearr_18260_18326[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_18201 === 5) {
                                                                                var inst_18079 = cljs.core.deref.call(null, cs);
                                                                                var inst_18080 = cljs.core.seq.call(null, inst_18079);
                                                                                var inst_18081 = inst_18080;
                                                                                var inst_18082 = null;
                                                                                var inst_18083 = 0;
                                                                                var inst_18084 = 0;
                                                                                var state_18200__$1 = function() {
                                                                                  var statearr_18261 = state_18200;
                                                                                  statearr_18261[14] = inst_18084;
                                                                                  statearr_18261[15] = inst_18083;
                                                                                  statearr_18261[16] = inst_18081;
                                                                                  statearr_18261[17] = inst_18082;
                                                                                  return statearr_18261;
                                                                                }();
                                                                                var statearr_18262_18327 = state_18200__$1;
                                                                                statearr_18262_18327[2] = null;
                                                                                statearr_18262_18327[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_18201 === 14) {
                                                                                  var state_18200__$1 = state_18200;
                                                                                  var statearr_18263_18328 = state_18200__$1;
                                                                                  statearr_18263_18328[2] = null;
                                                                                  statearr_18263_18328[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_18201 === 45) {
                                                                                    var inst_18190 = state_18200[2];
                                                                                    var state_18200__$1 = state_18200;
                                                                                    var statearr_18264_18329 = state_18200__$1;
                                                                                    statearr_18264_18329[2] = inst_18190;
                                                                                    statearr_18264_18329[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_18201 === 26) {
                                                                                      var inst_18132 = state_18200[29];
                                                                                      var inst_18186 = state_18200[2];
                                                                                      var inst_18187 = cljs.core.seq.call(null, inst_18132);
                                                                                      var state_18200__$1 = function() {
                                                                                        var statearr_18265 = state_18200;
                                                                                        statearr_18265[31] = inst_18186;
                                                                                        return statearr_18265;
                                                                                      }();
                                                                                      if (inst_18187) {
                                                                                        var statearr_18266_18330 = state_18200__$1;
                                                                                        statearr_18266_18330[1] = 42;
                                                                                      } else {
                                                                                        var statearr_18267_18331 = state_18200__$1;
                                                                                        statearr_18267_18331[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_18201 === 16) {
                                                                                        var inst_18101 = state_18200[7];
                                                                                        var inst_18103 = cljs.core.chunked_seq_QMARK_.call(null, inst_18101);
                                                                                        var state_18200__$1 = state_18200;
                                                                                        if (inst_18103) {
                                                                                          var statearr_18268_18332 = state_18200__$1;
                                                                                          statearr_18268_18332[1] = 19;
                                                                                        } else {
                                                                                          var statearr_18269_18333 = state_18200__$1;
                                                                                          statearr_18269_18333[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_18201 === 38) {
                                                                                          var inst_18179 = state_18200[2];
                                                                                          var state_18200__$1 = state_18200;
                                                                                          var statearr_18270_18334 = state_18200__$1;
                                                                                          statearr_18270_18334[2] = inst_18179;
                                                                                          statearr_18270_18334[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_18201 === 30) {
                                                                                            var state_18200__$1 = state_18200;
                                                                                            var statearr_18271_18335 = state_18200__$1;
                                                                                            statearr_18271_18335[2] = null;
                                                                                            statearr_18271_18335[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_18201 === 10) {
                                                                                              var inst_18084 = state_18200[14];
                                                                                              var inst_18082 = state_18200[17];
                                                                                              var inst_18090 = cljs.core._nth.call(null, inst_18082, inst_18084);
                                                                                              var inst_18091 = cljs.core.nth.call(null, inst_18090, 0, null);
                                                                                              var inst_18092 = cljs.core.nth.call(null, inst_18090, 1, null);
                                                                                              var state_18200__$1 = function() {
                                                                                                var statearr_18272 = state_18200;
                                                                                                statearr_18272[26] = inst_18091;
                                                                                                return statearr_18272;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_18092)) {
                                                                                                var statearr_18273_18336 = state_18200__$1;
                                                                                                statearr_18273_18336[1] = 13;
                                                                                              } else {
                                                                                                var statearr_18274_18337 = state_18200__$1;
                                                                                                statearr_18274_18337[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_18201 === 18) {
                                                                                                var inst_18125 = state_18200[2];
                                                                                                var state_18200__$1 = state_18200;
                                                                                                var statearr_18275_18338 = state_18200__$1;
                                                                                                statearr_18275_18338[2] = inst_18125;
                                                                                                statearr_18275_18338[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_18201 === 42) {
                                                                                                  var state_18200__$1 = state_18200;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18200__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_18201 === 37) {
                                                                                                    var inst_18159 = state_18200[25];
                                                                                                    var inst_18072 = state_18200[11];
                                                                                                    var inst_18168 = state_18200[23];
                                                                                                    var inst_18168__$1 = cljs.core.first.call(null, inst_18159);
                                                                                                    var inst_18169 = cljs.core.async.put_BANG_.call(null, inst_18168__$1, inst_18072, done);
                                                                                                    var state_18200__$1 = function() {
                                                                                                      var statearr_18276 = state_18200;
                                                                                                      statearr_18276[23] = inst_18168__$1;
                                                                                                      return statearr_18276;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_18169)) {
                                                                                                      var statearr_18277_18339 = state_18200__$1;
                                                                                                      statearr_18277_18339[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_18278_18340 = state_18200__$1;
                                                                                                      statearr_18278_18340[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_18201 === 8) {
                                                                                                      var inst_18084 = state_18200[14];
                                                                                                      var inst_18083 = state_18200[15];
                                                                                                      var inst_18086 = inst_18084 < inst_18083;
                                                                                                      var inst_18087 = inst_18086;
                                                                                                      var state_18200__$1 = state_18200;
                                                                                                      if (cljs.core.truth_(inst_18087)) {
                                                                                                        var statearr_18279_18341 = state_18200__$1;
                                                                                                        statearr_18279_18341[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_18280_18342 = state_18200__$1;
                                                                                                        statearr_18280_18342[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6777__auto___18288, cs, m, dchan, dctr, done);
        return function(switch__6721__auto__, c__6777__auto___18288, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_18284 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18284[0] = state_machine__6722__auto__;
              statearr_18284[1] = 1;
              return statearr_18284;
            };
            var state_machine__6722__auto____1 = function(state_18200) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_18200);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e18285) {
                    if (e18285 instanceof Object) {
                      var ex__6725__auto__ = e18285;
                      var statearr_18286_18343 = state_18200;
                      statearr_18286_18343[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18200);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18285;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18344 = state_18200;
                  state_18200 = G__18344;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_18200) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_18200);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto___18288, cs, m, dchan, dctr, done);
      }();
      var state__6779__auto__ = function() {
        var statearr_18287 = f__6778__auto__.call(null);
        statearr_18287[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___18288;
        return statearr_18287;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto___18288, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj18346 = {};
  return obj18346;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3787__auto__ = m;
    if (and__3787__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4443__auto__ = m == null ? null : m;
    return function() {
      var or__3799__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__18347) {
    var map__18352 = p__18347;
    var map__18352__$1 = cljs.core.seq_QMARK_.call(null, map__18352) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18352) : map__18352;
    var opts = map__18352__$1;
    var statearr_18353_18356 = state;
    statearr_18353_18356[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__18352, map__18352__$1, opts) {
      return function(val) {
        var statearr_18354_18357 = state;
        statearr_18354_18357[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__18352, map__18352__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_18355_18358 = state;
      statearr_18355_18358[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__18347 = null;
    if (arguments.length > 3) {
      var G__18359__i = 0, G__18359__a = new Array(arguments.length - 3);
      while (G__18359__i < G__18359__a.length) {
        G__18359__a[G__18359__i] = arguments[G__18359__i + 3];
        ++G__18359__i;
      }
      p__18347 = new cljs.core.IndexedSeq(G__18359__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__18347);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__18360) {
    var state = cljs.core.first(arglist__18360);
    arglist__18360 = cljs.core.next(arglist__18360);
    var cont_block = cljs.core.first(arglist__18360);
    arglist__18360 = cljs.core.next(arglist__18360);
    var ports = cljs.core.first(arglist__18360);
    var p__18347 = cljs.core.rest(arglist__18360);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__18347);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t18480 !== "undefined") {
    } else {
      cljs.core.async.t18480 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta18481) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta18481 = meta18481;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t18480.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t18480.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t18480.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18482) {
          var self__ = this;
          var _18482__$1 = this;
          return self__.meta18481;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_18482, meta18481__$1) {
          var self__ = this;
          var _18482__$1 = this;
          return new cljs.core.async.t18480(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta18481__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t18480.cljs$lang$type = true;
      cljs.core.async.t18480.cljs$lang$ctorStr = "cljs.core.async/t18480";
      cljs.core.async.t18480.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
          return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t18480");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t18480 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t18480(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta18481) {
          return new cljs.core.async.t18480(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta18481);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t18480(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], 
    null));
  }();
  var c__6777__auto___18599 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___18599, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto___18599, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_18552) {
            var state_val_18553 = state_18552[1];
            if (state_val_18553 === 7) {
              var inst_18496 = state_18552[7];
              var inst_18501 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18496);
              var state_18552__$1 = state_18552;
              var statearr_18554_18600 = state_18552__$1;
              statearr_18554_18600[2] = inst_18501;
              statearr_18554_18600[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18553 === 20) {
                var inst_18511 = state_18552[8];
                var state_18552__$1 = state_18552;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18552__$1, 23, out, inst_18511);
              } else {
                if (state_val_18553 === 1) {
                  var inst_18486 = state_18552[9];
                  var inst_18486__$1 = calc_state.call(null);
                  var inst_18487 = cljs.core.seq_QMARK_.call(null, inst_18486__$1);
                  var state_18552__$1 = function() {
                    var statearr_18555 = state_18552;
                    statearr_18555[9] = inst_18486__$1;
                    return statearr_18555;
                  }();
                  if (inst_18487) {
                    var statearr_18556_18601 = state_18552__$1;
                    statearr_18556_18601[1] = 2;
                  } else {
                    var statearr_18557_18602 = state_18552__$1;
                    statearr_18557_18602[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18553 === 24) {
                    var inst_18504 = state_18552[10];
                    var inst_18496 = inst_18504;
                    var state_18552__$1 = function() {
                      var statearr_18558 = state_18552;
                      statearr_18558[7] = inst_18496;
                      return statearr_18558;
                    }();
                    var statearr_18559_18603 = state_18552__$1;
                    statearr_18559_18603[2] = null;
                    statearr_18559_18603[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18553 === 4) {
                      var inst_18486 = state_18552[9];
                      var inst_18492 = state_18552[2];
                      var inst_18493 = cljs.core.get.call(null, inst_18492, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_18494 = cljs.core.get.call(null, inst_18492, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_18495 = cljs.core.get.call(null, inst_18492, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_18496 = inst_18486;
                      var state_18552__$1 = function() {
                        var statearr_18560 = state_18552;
                        statearr_18560[11] = inst_18493;
                        statearr_18560[12] = inst_18494;
                        statearr_18560[13] = inst_18495;
                        statearr_18560[7] = inst_18496;
                        return statearr_18560;
                      }();
                      var statearr_18561_18604 = state_18552__$1;
                      statearr_18561_18604[2] = null;
                      statearr_18561_18604[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18553 === 15) {
                        var state_18552__$1 = state_18552;
                        var statearr_18562_18605 = state_18552__$1;
                        statearr_18562_18605[2] = null;
                        statearr_18562_18605[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18553 === 21) {
                          var inst_18504 = state_18552[10];
                          var inst_18496 = inst_18504;
                          var state_18552__$1 = function() {
                            var statearr_18563 = state_18552;
                            statearr_18563[7] = inst_18496;
                            return statearr_18563;
                          }();
                          var statearr_18564_18606 = state_18552__$1;
                          statearr_18564_18606[2] = null;
                          statearr_18564_18606[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18553 === 13) {
                            var inst_18548 = state_18552[2];
                            var state_18552__$1 = state_18552;
                            var statearr_18565_18607 = state_18552__$1;
                            statearr_18565_18607[2] = inst_18548;
                            statearr_18565_18607[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18553 === 22) {
                              var inst_18546 = state_18552[2];
                              var state_18552__$1 = state_18552;
                              var statearr_18566_18608 = state_18552__$1;
                              statearr_18566_18608[2] = inst_18546;
                              statearr_18566_18608[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18553 === 6) {
                                var inst_18550 = state_18552[2];
                                var state_18552__$1 = state_18552;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18552__$1, inst_18550);
                              } else {
                                if (state_val_18553 === 25) {
                                  var state_18552__$1 = state_18552;
                                  var statearr_18567_18609 = state_18552__$1;
                                  statearr_18567_18609[2] = null;
                                  statearr_18567_18609[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18553 === 17) {
                                    var inst_18526 = state_18552[14];
                                    var state_18552__$1 = state_18552;
                                    var statearr_18568_18610 = state_18552__$1;
                                    statearr_18568_18610[2] = inst_18526;
                                    statearr_18568_18610[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18553 === 3) {
                                      var inst_18486 = state_18552[9];
                                      var state_18552__$1 = state_18552;
                                      var statearr_18569_18611 = state_18552__$1;
                                      statearr_18569_18611[2] = inst_18486;
                                      statearr_18569_18611[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18553 === 12) {
                                        var inst_18526 = state_18552[14];
                                        var inst_18507 = state_18552[15];
                                        var inst_18512 = state_18552[16];
                                        var inst_18526__$1 = inst_18507.call(null, inst_18512);
                                        var state_18552__$1 = function() {
                                          var statearr_18570 = state_18552;
                                          statearr_18570[14] = inst_18526__$1;
                                          return statearr_18570;
                                        }();
                                        if (cljs.core.truth_(inst_18526__$1)) {
                                          var statearr_18571_18612 = state_18552__$1;
                                          statearr_18571_18612[1] = 17;
                                        } else {
                                          var statearr_18572_18613 = state_18552__$1;
                                          statearr_18572_18613[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18553 === 2) {
                                          var inst_18486 = state_18552[9];
                                          var inst_18489 = cljs.core.apply.call(null, cljs.core.hash_map, inst_18486);
                                          var state_18552__$1 = state_18552;
                                          var statearr_18573_18614 = state_18552__$1;
                                          statearr_18573_18614[2] = inst_18489;
                                          statearr_18573_18614[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18553 === 23) {
                                            var inst_18537 = state_18552[2];
                                            var state_18552__$1 = state_18552;
                                            if (cljs.core.truth_(inst_18537)) {
                                              var statearr_18574_18615 = state_18552__$1;
                                              statearr_18574_18615[1] = 24;
                                            } else {
                                              var statearr_18575_18616 = state_18552__$1;
                                              statearr_18575_18616[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18553 === 19) {
                                              var inst_18534 = state_18552[2];
                                              var state_18552__$1 = state_18552;
                                              if (cljs.core.truth_(inst_18534)) {
                                                var statearr_18576_18617 = state_18552__$1;
                                                statearr_18576_18617[1] = 20;
                                              } else {
                                                var statearr_18577_18618 = state_18552__$1;
                                                statearr_18577_18618[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18553 === 11) {
                                                var inst_18511 = state_18552[8];
                                                var inst_18517 = inst_18511 == null;
                                                var state_18552__$1 = state_18552;
                                                if (cljs.core.truth_(inst_18517)) {
                                                  var statearr_18578_18619 = state_18552__$1;
                                                  statearr_18578_18619[1] = 14;
                                                } else {
                                                  var statearr_18579_18620 = state_18552__$1;
                                                  statearr_18579_18620[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_18553 === 9) {
                                                  var inst_18504 = state_18552[10];
                                                  var inst_18504__$1 = state_18552[2];
                                                  var inst_18505 = cljs.core.get.call(null, inst_18504__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_18506 = cljs.core.get.call(null, inst_18504__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_18507 = cljs.core.get.call(null, inst_18504__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_18552__$1 = function() {
                                                    var statearr_18580 = state_18552;
                                                    statearr_18580[17] = inst_18506;
                                                    statearr_18580[15] = inst_18507;
                                                    statearr_18580[10] = inst_18504__$1;
                                                    return statearr_18580;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_18552__$1, 10, inst_18505);
                                                } else {
                                                  if (state_val_18553 === 5) {
                                                    var inst_18496 = state_18552[7];
                                                    var inst_18499 = cljs.core.seq_QMARK_.call(null, inst_18496);
                                                    var state_18552__$1 = state_18552;
                                                    if (inst_18499) {
                                                      var statearr_18581_18621 = state_18552__$1;
                                                      statearr_18581_18621[1] = 7;
                                                    } else {
                                                      var statearr_18582_18622 = state_18552__$1;
                                                      statearr_18582_18622[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18553 === 14) {
                                                      var inst_18512 = state_18552[16];
                                                      var inst_18519 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_18512);
                                                      var state_18552__$1 = state_18552;
                                                      var statearr_18583_18623 = state_18552__$1;
                                                      statearr_18583_18623[2] = inst_18519;
                                                      statearr_18583_18623[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_18553 === 26) {
                                                        var inst_18542 = state_18552[2];
                                                        var state_18552__$1 = state_18552;
                                                        var statearr_18584_18624 = state_18552__$1;
                                                        statearr_18584_18624[2] = inst_18542;
                                                        statearr_18584_18624[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_18553 === 16) {
                                                          var inst_18522 = state_18552[2];
                                                          var inst_18523 = calc_state.call(null);
                                                          var inst_18496 = inst_18523;
                                                          var state_18552__$1 = function() {
                                                            var statearr_18585 = state_18552;
                                                            statearr_18585[18] = inst_18522;
                                                            statearr_18585[7] = inst_18496;
                                                            return statearr_18585;
                                                          }();
                                                          var statearr_18586_18625 = state_18552__$1;
                                                          statearr_18586_18625[2] = null;
                                                          statearr_18586_18625[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_18553 === 10) {
                                                            var inst_18511 = state_18552[8];
                                                            var inst_18512 = state_18552[16];
                                                            var inst_18510 = state_18552[2];
                                                            var inst_18511__$1 = cljs.core.nth.call(null, inst_18510, 0, null);
                                                            var inst_18512__$1 = cljs.core.nth.call(null, inst_18510, 1, null);
                                                            var inst_18513 = inst_18511__$1 == null;
                                                            var inst_18514 = cljs.core._EQ_.call(null, inst_18512__$1, change);
                                                            var inst_18515 = inst_18513 || inst_18514;
                                                            var state_18552__$1 = function() {
                                                              var statearr_18587 = state_18552;
                                                              statearr_18587[8] = inst_18511__$1;
                                                              statearr_18587[16] = inst_18512__$1;
                                                              return statearr_18587;
                                                            }();
                                                            if (cljs.core.truth_(inst_18515)) {
                                                              var statearr_18588_18626 = state_18552__$1;
                                                              statearr_18588_18626[1] = 11;
                                                            } else {
                                                              var statearr_18589_18627 = state_18552__$1;
                                                              statearr_18589_18627[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_18553 === 18) {
                                                              var inst_18506 = state_18552[17];
                                                              var inst_18507 = state_18552[15];
                                                              var inst_18512 = state_18552[16];
                                                              var inst_18529 = cljs.core.empty_QMARK_.call(null, inst_18507);
                                                              var inst_18530 = inst_18506.call(null, inst_18512);
                                                              var inst_18531 = cljs.core.not.call(null, inst_18530);
                                                              var inst_18532 = inst_18529 && inst_18531;
                                                              var state_18552__$1 = state_18552;
                                                              var statearr_18590_18628 = state_18552__$1;
                                                              statearr_18590_18628[2] = inst_18532;
                                                              statearr_18590_18628[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_18553 === 8) {
                                                                var inst_18496 = state_18552[7];
                                                                var state_18552__$1 = state_18552;
                                                                var statearr_18591_18629 = state_18552__$1;
                                                                statearr_18591_18629[2] = inst_18496;
                                                                statearr_18591_18629[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6777__auto___18599, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6721__auto__, c__6777__auto___18599, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_18595 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18595[0] = state_machine__6722__auto__;
              statearr_18595[1] = 1;
              return statearr_18595;
            };
            var state_machine__6722__auto____1 = function(state_18552) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_18552);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e18596) {
                    if (e18596 instanceof Object) {
                      var ex__6725__auto__ = e18596;
                      var statearr_18597_18630 = state_18552;
                      statearr_18597_18630[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18552);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18596;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18631 = state_18552;
                  state_18552 = G__18631;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_18552) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_18552);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto___18599, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6779__auto__ = function() {
        var statearr_18598 = f__6778__auto__.call(null);
        statearr_18598[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___18599;
        return statearr_18598;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto___18599, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj18633 = {};
  return obj18633;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3787__auto__ = p;
    if (and__3787__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4443__auto__ = p == null ? null : p;
    return function() {
      var or__3799__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3787__auto__ = p;
    if (and__3787__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4443__auto__ = p == null ? null : p;
    return function() {
      var or__3799__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3787__auto__ = p;
      if (and__3787__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4443__auto__ = p == null ? null : p;
      return function() {
        var or__3799__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3787__auto__ = p;
      if (and__3787__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4443__auto__ = p == null ? null : p;
      return function() {
        var or__3799__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3799__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3799__auto__, mults) {
            return function(p1__18634_SHARP_) {
              if (cljs.core.truth_(p1__18634_SHARP_.call(null, topic))) {
                return p1__18634_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__18634_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3799__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t18757 !== "undefined") {
      } else {
        cljs.core.async.t18757 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta18758) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta18758 = meta18758;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t18757.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t18757.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t18757.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t18757.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t18757.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t18757.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t18757.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t18757.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_18759) {
            var self__ = this;
            var _18759__$1 = this;
            return self__.meta18758;
          };
        }(mults, ensure_mult);
        cljs.core.async.t18757.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_18759, meta18758__$1) {
            var self__ = this;
            var _18759__$1 = this;
            return new cljs.core.async.t18757(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta18758__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t18757.cljs$lang$type = true;
        cljs.core.async.t18757.cljs$lang$ctorStr = "cljs.core.async/t18757";
        cljs.core.async.t18757.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
            return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t18757");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t18757 = function(mults, ensure_mult) {
          return function __GT_t18757(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta18758) {
            return new cljs.core.async.t18757(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta18758);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t18757(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], 
      null));
    }();
    var c__6777__auto___18879 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___18879, mults, ensure_mult, p) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___18879, mults, ensure_mult, p) {
            return function(state_18831) {
              var state_val_18832 = state_18831[1];
              if (state_val_18832 === 7) {
                var inst_18827 = state_18831[2];
                var state_18831__$1 = state_18831;
                var statearr_18833_18880 = state_18831__$1;
                statearr_18833_18880[2] = inst_18827;
                statearr_18833_18880[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18832 === 20) {
                  var state_18831__$1 = state_18831;
                  var statearr_18834_18881 = state_18831__$1;
                  statearr_18834_18881[2] = null;
                  statearr_18834_18881[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18832 === 1) {
                    var state_18831__$1 = state_18831;
                    var statearr_18835_18882 = state_18831__$1;
                    statearr_18835_18882[2] = null;
                    statearr_18835_18882[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18832 === 24) {
                      var inst_18810 = state_18831[7];
                      var inst_18819 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_18810);
                      var state_18831__$1 = state_18831;
                      var statearr_18836_18883 = state_18831__$1;
                      statearr_18836_18883[2] = inst_18819;
                      statearr_18836_18883[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18832 === 4) {
                        var inst_18762 = state_18831[8];
                        var inst_18762__$1 = state_18831[2];
                        var inst_18763 = inst_18762__$1 == null;
                        var state_18831__$1 = function() {
                          var statearr_18837 = state_18831;
                          statearr_18837[8] = inst_18762__$1;
                          return statearr_18837;
                        }();
                        if (cljs.core.truth_(inst_18763)) {
                          var statearr_18838_18884 = state_18831__$1;
                          statearr_18838_18884[1] = 5;
                        } else {
                          var statearr_18839_18885 = state_18831__$1;
                          statearr_18839_18885[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18832 === 15) {
                          var inst_18804 = state_18831[2];
                          var state_18831__$1 = state_18831;
                          var statearr_18840_18886 = state_18831__$1;
                          statearr_18840_18886[2] = inst_18804;
                          statearr_18840_18886[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18832 === 21) {
                            var inst_18824 = state_18831[2];
                            var state_18831__$1 = function() {
                              var statearr_18841 = state_18831;
                              statearr_18841[9] = inst_18824;
                              return statearr_18841;
                            }();
                            var statearr_18842_18887 = state_18831__$1;
                            statearr_18842_18887[2] = null;
                            statearr_18842_18887[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18832 === 13) {
                              var inst_18786 = state_18831[10];
                              var inst_18788 = cljs.core.chunked_seq_QMARK_.call(null, inst_18786);
                              var state_18831__$1 = state_18831;
                              if (inst_18788) {
                                var statearr_18843_18888 = state_18831__$1;
                                statearr_18843_18888[1] = 16;
                              } else {
                                var statearr_18844_18889 = state_18831__$1;
                                statearr_18844_18889[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18832 === 22) {
                                var inst_18816 = state_18831[2];
                                var state_18831__$1 = state_18831;
                                if (cljs.core.truth_(inst_18816)) {
                                  var statearr_18845_18890 = state_18831__$1;
                                  statearr_18845_18890[1] = 23;
                                } else {
                                  var statearr_18846_18891 = state_18831__$1;
                                  statearr_18846_18891[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18832 === 6) {
                                  var inst_18762 = state_18831[8];
                                  var inst_18812 = state_18831[11];
                                  var inst_18810 = state_18831[7];
                                  var inst_18810__$1 = topic_fn.call(null, inst_18762);
                                  var inst_18811 = cljs.core.deref.call(null, mults);
                                  var inst_18812__$1 = cljs.core.get.call(null, inst_18811, inst_18810__$1);
                                  var state_18831__$1 = function() {
                                    var statearr_18847 = state_18831;
                                    statearr_18847[11] = inst_18812__$1;
                                    statearr_18847[7] = inst_18810__$1;
                                    return statearr_18847;
                                  }();
                                  if (cljs.core.truth_(inst_18812__$1)) {
                                    var statearr_18848_18892 = state_18831__$1;
                                    statearr_18848_18892[1] = 19;
                                  } else {
                                    var statearr_18849_18893 = state_18831__$1;
                                    statearr_18849_18893[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18832 === 25) {
                                    var inst_18821 = state_18831[2];
                                    var state_18831__$1 = state_18831;
                                    var statearr_18850_18894 = state_18831__$1;
                                    statearr_18850_18894[2] = inst_18821;
                                    statearr_18850_18894[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18832 === 17) {
                                      var inst_18786 = state_18831[10];
                                      var inst_18795 = cljs.core.first.call(null, inst_18786);
                                      var inst_18796 = cljs.core.async.muxch_STAR_.call(null, inst_18795);
                                      var inst_18797 = cljs.core.async.close_BANG_.call(null, inst_18796);
                                      var inst_18798 = cljs.core.next.call(null, inst_18786);
                                      var inst_18772 = inst_18798;
                                      var inst_18773 = null;
                                      var inst_18774 = 0;
                                      var inst_18775 = 0;
                                      var state_18831__$1 = function() {
                                        var statearr_18851 = state_18831;
                                        statearr_18851[12] = inst_18774;
                                        statearr_18851[13] = inst_18773;
                                        statearr_18851[14] = inst_18797;
                                        statearr_18851[15] = inst_18775;
                                        statearr_18851[16] = inst_18772;
                                        return statearr_18851;
                                      }();
                                      var statearr_18852_18895 = state_18831__$1;
                                      statearr_18852_18895[2] = null;
                                      statearr_18852_18895[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18832 === 3) {
                                        var inst_18829 = state_18831[2];
                                        var state_18831__$1 = state_18831;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18831__$1, inst_18829);
                                      } else {
                                        if (state_val_18832 === 12) {
                                          var inst_18806 = state_18831[2];
                                          var state_18831__$1 = state_18831;
                                          var statearr_18853_18896 = state_18831__$1;
                                          statearr_18853_18896[2] = inst_18806;
                                          statearr_18853_18896[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18832 === 2) {
                                            var state_18831__$1 = state_18831;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18831__$1, 4, ch);
                                          } else {
                                            if (state_val_18832 === 23) {
                                              var state_18831__$1 = state_18831;
                                              var statearr_18854_18897 = state_18831__$1;
                                              statearr_18854_18897[2] = null;
                                              statearr_18854_18897[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18832 === 19) {
                                                var inst_18762 = state_18831[8];
                                                var inst_18812 = state_18831[11];
                                                var inst_18814 = cljs.core.async.muxch_STAR_.call(null, inst_18812);
                                                var state_18831__$1 = state_18831;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18831__$1, 22, inst_18814, inst_18762);
                                              } else {
                                                if (state_val_18832 === 11) {
                                                  var inst_18786 = state_18831[10];
                                                  var inst_18772 = state_18831[16];
                                                  var inst_18786__$1 = cljs.core.seq.call(null, inst_18772);
                                                  var state_18831__$1 = function() {
                                                    var statearr_18855 = state_18831;
                                                    statearr_18855[10] = inst_18786__$1;
                                                    return statearr_18855;
                                                  }();
                                                  if (inst_18786__$1) {
                                                    var statearr_18856_18898 = state_18831__$1;
                                                    statearr_18856_18898[1] = 13;
                                                  } else {
                                                    var statearr_18857_18899 = state_18831__$1;
                                                    statearr_18857_18899[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_18832 === 9) {
                                                    var inst_18808 = state_18831[2];
                                                    var state_18831__$1 = state_18831;
                                                    var statearr_18858_18900 = state_18831__$1;
                                                    statearr_18858_18900[2] = inst_18808;
                                                    statearr_18858_18900[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18832 === 5) {
                                                      var inst_18769 = cljs.core.deref.call(null, mults);
                                                      var inst_18770 = cljs.core.vals.call(null, inst_18769);
                                                      var inst_18771 = cljs.core.seq.call(null, inst_18770);
                                                      var inst_18772 = inst_18771;
                                                      var inst_18773 = null;
                                                      var inst_18774 = 0;
                                                      var inst_18775 = 0;
                                                      var state_18831__$1 = function() {
                                                        var statearr_18859 = state_18831;
                                                        statearr_18859[12] = inst_18774;
                                                        statearr_18859[13] = inst_18773;
                                                        statearr_18859[15] = inst_18775;
                                                        statearr_18859[16] = inst_18772;
                                                        return statearr_18859;
                                                      }();
                                                      var statearr_18860_18901 = state_18831__$1;
                                                      statearr_18860_18901[2] = null;
                                                      statearr_18860_18901[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_18832 === 14) {
                                                        var state_18831__$1 = state_18831;
                                                        var statearr_18864_18902 = state_18831__$1;
                                                        statearr_18864_18902[2] = null;
                                                        statearr_18864_18902[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_18832 === 16) {
                                                          var inst_18786 = state_18831[10];
                                                          var inst_18790 = cljs.core.chunk_first.call(null, inst_18786);
                                                          var inst_18791 = cljs.core.chunk_rest.call(null, inst_18786);
                                                          var inst_18792 = cljs.core.count.call(null, inst_18790);
                                                          var inst_18772 = inst_18791;
                                                          var inst_18773 = inst_18790;
                                                          var inst_18774 = inst_18792;
                                                          var inst_18775 = 0;
                                                          var state_18831__$1 = function() {
                                                            var statearr_18865 = state_18831;
                                                            statearr_18865[12] = inst_18774;
                                                            statearr_18865[13] = inst_18773;
                                                            statearr_18865[15] = inst_18775;
                                                            statearr_18865[16] = inst_18772;
                                                            return statearr_18865;
                                                          }();
                                                          var statearr_18866_18903 = state_18831__$1;
                                                          statearr_18866_18903[2] = null;
                                                          statearr_18866_18903[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_18832 === 10) {
                                                            var inst_18774 = state_18831[12];
                                                            var inst_18773 = state_18831[13];
                                                            var inst_18775 = state_18831[15];
                                                            var inst_18772 = state_18831[16];
                                                            var inst_18780 = cljs.core._nth.call(null, inst_18773, inst_18775);
                                                            var inst_18781 = cljs.core.async.muxch_STAR_.call(null, inst_18780);
                                                            var inst_18782 = cljs.core.async.close_BANG_.call(null, inst_18781);
                                                            var inst_18783 = inst_18775 + 1;
                                                            var tmp18861 = inst_18774;
                                                            var tmp18862 = inst_18773;
                                                            var tmp18863 = inst_18772;
                                                            var inst_18772__$1 = tmp18863;
                                                            var inst_18773__$1 = tmp18862;
                                                            var inst_18774__$1 = tmp18861;
                                                            var inst_18775__$1 = inst_18783;
                                                            var state_18831__$1 = function() {
                                                              var statearr_18867 = state_18831;
                                                              statearr_18867[12] = inst_18774__$1;
                                                              statearr_18867[13] = inst_18773__$1;
                                                              statearr_18867[17] = inst_18782;
                                                              statearr_18867[15] = inst_18775__$1;
                                                              statearr_18867[16] = inst_18772__$1;
                                                              return statearr_18867;
                                                            }();
                                                            var statearr_18868_18904 = state_18831__$1;
                                                            statearr_18868_18904[2] = null;
                                                            statearr_18868_18904[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_18832 === 18) {
                                                              var inst_18801 = state_18831[2];
                                                              var state_18831__$1 = state_18831;
                                                              var statearr_18869_18905 = state_18831__$1;
                                                              statearr_18869_18905[2] = inst_18801;
                                                              statearr_18869_18905[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_18832 === 8) {
                                                                var inst_18774 = state_18831[12];
                                                                var inst_18775 = state_18831[15];
                                                                var inst_18777 = inst_18775 < inst_18774;
                                                                var inst_18778 = inst_18777;
                                                                var state_18831__$1 = state_18831;
                                                                if (cljs.core.truth_(inst_18778)) {
                                                                  var statearr_18870_18906 = state_18831__$1;
                                                                  statearr_18870_18906[1] = 10;
                                                                } else {
                                                                  var statearr_18871_18907 = state_18831__$1;
                                                                  statearr_18871_18907[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___18879, mults, ensure_mult, p);
          return function(switch__6721__auto__, c__6777__auto___18879, mults, ensure_mult, p) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_18875 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18875[0] = state_machine__6722__auto__;
                statearr_18875[1] = 1;
                return statearr_18875;
              };
              var state_machine__6722__auto____1 = function(state_18831) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_18831);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e18876) {
                      if (e18876 instanceof Object) {
                        var ex__6725__auto__ = e18876;
                        var statearr_18877_18908 = state_18831;
                        statearr_18877_18908[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18831);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18876;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18909 = state_18831;
                    state_18831 = G__18909;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_18831) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_18831);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___18879, mults, ensure_mult, p);
        }();
        var state__6779__auto__ = function() {
          var statearr_18878 = f__6778__auto__.call(null);
          statearr_18878[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___18879;
          return statearr_18878;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___18879, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6777__auto___19046 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___19046, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___19046, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_19016) {
              var state_val_19017 = state_19016[1];
              if (state_val_19017 === 7) {
                var state_19016__$1 = state_19016;
                var statearr_19018_19047 = state_19016__$1;
                statearr_19018_19047[2] = null;
                statearr_19018_19047[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19017 === 1) {
                  var state_19016__$1 = state_19016;
                  var statearr_19019_19048 = state_19016__$1;
                  statearr_19019_19048[2] = null;
                  statearr_19019_19048[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19017 === 4) {
                    var inst_18980 = state_19016[7];
                    var inst_18982 = inst_18980 < cnt;
                    var state_19016__$1 = state_19016;
                    if (cljs.core.truth_(inst_18982)) {
                      var statearr_19020_19049 = state_19016__$1;
                      statearr_19020_19049[1] = 6;
                    } else {
                      var statearr_19021_19050 = state_19016__$1;
                      statearr_19021_19050[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19017 === 15) {
                      var inst_19012 = state_19016[2];
                      var state_19016__$1 = state_19016;
                      var statearr_19022_19051 = state_19016__$1;
                      statearr_19022_19051[2] = inst_19012;
                      statearr_19022_19051[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19017 === 13) {
                        var inst_19005 = cljs.core.async.close_BANG_.call(null, out);
                        var state_19016__$1 = state_19016;
                        var statearr_19023_19052 = state_19016__$1;
                        statearr_19023_19052[2] = inst_19005;
                        statearr_19023_19052[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19017 === 6) {
                          var state_19016__$1 = state_19016;
                          var statearr_19024_19053 = state_19016__$1;
                          statearr_19024_19053[2] = null;
                          statearr_19024_19053[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19017 === 3) {
                            var inst_19014 = state_19016[2];
                            var state_19016__$1 = state_19016;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19016__$1, inst_19014);
                          } else {
                            if (state_val_19017 === 12) {
                              var inst_19002 = state_19016[8];
                              var inst_19002__$1 = state_19016[2];
                              var inst_19003 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_19002__$1);
                              var state_19016__$1 = function() {
                                var statearr_19025 = state_19016;
                                statearr_19025[8] = inst_19002__$1;
                                return statearr_19025;
                              }();
                              if (cljs.core.truth_(inst_19003)) {
                                var statearr_19026_19054 = state_19016__$1;
                                statearr_19026_19054[1] = 13;
                              } else {
                                var statearr_19027_19055 = state_19016__$1;
                                statearr_19027_19055[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19017 === 2) {
                                var inst_18979 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_18980 = 0;
                                var state_19016__$1 = function() {
                                  var statearr_19028 = state_19016;
                                  statearr_19028[7] = inst_18980;
                                  statearr_19028[9] = inst_18979;
                                  return statearr_19028;
                                }();
                                var statearr_19029_19056 = state_19016__$1;
                                statearr_19029_19056[2] = null;
                                statearr_19029_19056[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19017 === 11) {
                                  var inst_18980 = state_19016[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_19016, 10, Object, null, 9);
                                  var inst_18989 = chs__$1.call(null, inst_18980);
                                  var inst_18990 = done.call(null, inst_18980);
                                  var inst_18991 = cljs.core.async.take_BANG_.call(null, inst_18989, inst_18990);
                                  var state_19016__$1 = state_19016;
                                  var statearr_19030_19057 = state_19016__$1;
                                  statearr_19030_19057[2] = inst_18991;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19016__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19017 === 9) {
                                    var inst_18980 = state_19016[7];
                                    var inst_18993 = state_19016[2];
                                    var inst_18994 = inst_18980 + 1;
                                    var inst_18980__$1 = inst_18994;
                                    var state_19016__$1 = function() {
                                      var statearr_19031 = state_19016;
                                      statearr_19031[10] = inst_18993;
                                      statearr_19031[7] = inst_18980__$1;
                                      return statearr_19031;
                                    }();
                                    var statearr_19032_19058 = state_19016__$1;
                                    statearr_19032_19058[2] = null;
                                    statearr_19032_19058[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19017 === 5) {
                                      var inst_19000 = state_19016[2];
                                      var state_19016__$1 = function() {
                                        var statearr_19033 = state_19016;
                                        statearr_19033[11] = inst_19000;
                                        return statearr_19033;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19016__$1, 12, dchan);
                                    } else {
                                      if (state_val_19017 === 14) {
                                        var inst_19002 = state_19016[8];
                                        var inst_19007 = cljs.core.apply.call(null, f, inst_19002);
                                        var state_19016__$1 = state_19016;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19016__$1, 16, out, inst_19007);
                                      } else {
                                        if (state_val_19017 === 16) {
                                          var inst_19009 = state_19016[2];
                                          var state_19016__$1 = function() {
                                            var statearr_19034 = state_19016;
                                            statearr_19034[12] = inst_19009;
                                            return statearr_19034;
                                          }();
                                          var statearr_19035_19059 = state_19016__$1;
                                          statearr_19035_19059[2] = null;
                                          statearr_19035_19059[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19017 === 10) {
                                            var inst_18984 = state_19016[2];
                                            var inst_18985 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_19016__$1 = function() {
                                              var statearr_19036 = state_19016;
                                              statearr_19036[13] = inst_18984;
                                              return statearr_19036;
                                            }();
                                            var statearr_19037_19060 = state_19016__$1;
                                            statearr_19037_19060[2] = inst_18985;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19016__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19017 === 8) {
                                              var inst_18998 = state_19016[2];
                                              var state_19016__$1 = state_19016;
                                              var statearr_19038_19061 = state_19016__$1;
                                              statearr_19038_19061[2] = inst_18998;
                                              statearr_19038_19061[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___19046, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6721__auto__, c__6777__auto___19046, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_19042 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19042[0] = state_machine__6722__auto__;
                statearr_19042[1] = 1;
                return statearr_19042;
              };
              var state_machine__6722__auto____1 = function(state_19016) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_19016);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e19043) {
                      if (e19043 instanceof Object) {
                        var ex__6725__auto__ = e19043;
                        var statearr_19044_19062 = state_19016;
                        statearr_19044_19062[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19016);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19043;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19063 = state_19016;
                    state_19016 = G__19063;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_19016) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_19016);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___19046, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6779__auto__ = function() {
          var statearr_19045 = f__6778__auto__.call(null);
          statearr_19045[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___19046;
          return statearr_19045;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___19046, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6777__auto___19171 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___19171, out) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___19171, out) {
            return function(state_19147) {
              var state_val_19148 = state_19147[1];
              if (state_val_19148 === 7) {
                var inst_19126 = state_19147[7];
                var inst_19127 = state_19147[8];
                var inst_19126__$1 = state_19147[2];
                var inst_19127__$1 = cljs.core.nth.call(null, inst_19126__$1, 0, null);
                var inst_19128 = cljs.core.nth.call(null, inst_19126__$1, 1, null);
                var inst_19129 = inst_19127__$1 == null;
                var state_19147__$1 = function() {
                  var statearr_19149 = state_19147;
                  statearr_19149[7] = inst_19126__$1;
                  statearr_19149[9] = inst_19128;
                  statearr_19149[8] = inst_19127__$1;
                  return statearr_19149;
                }();
                if (cljs.core.truth_(inst_19129)) {
                  var statearr_19150_19172 = state_19147__$1;
                  statearr_19150_19172[1] = 8;
                } else {
                  var statearr_19151_19173 = state_19147__$1;
                  statearr_19151_19173[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19148 === 1) {
                  var inst_19118 = cljs.core.vec.call(null, chs);
                  var inst_19119 = inst_19118;
                  var state_19147__$1 = function() {
                    var statearr_19152 = state_19147;
                    statearr_19152[10] = inst_19119;
                    return statearr_19152;
                  }();
                  var statearr_19153_19174 = state_19147__$1;
                  statearr_19153_19174[2] = null;
                  statearr_19153_19174[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19148 === 4) {
                    var inst_19119 = state_19147[10];
                    var state_19147__$1 = state_19147;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_19147__$1, 7, inst_19119);
                  } else {
                    if (state_val_19148 === 6) {
                      var inst_19143 = state_19147[2];
                      var state_19147__$1 = state_19147;
                      var statearr_19154_19175 = state_19147__$1;
                      statearr_19154_19175[2] = inst_19143;
                      statearr_19154_19175[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19148 === 3) {
                        var inst_19145 = state_19147[2];
                        var state_19147__$1 = state_19147;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19147__$1, inst_19145);
                      } else {
                        if (state_val_19148 === 2) {
                          var inst_19119 = state_19147[10];
                          var inst_19121 = cljs.core.count.call(null, inst_19119);
                          var inst_19122 = inst_19121 > 0;
                          var state_19147__$1 = state_19147;
                          if (cljs.core.truth_(inst_19122)) {
                            var statearr_19156_19176 = state_19147__$1;
                            statearr_19156_19176[1] = 4;
                          } else {
                            var statearr_19157_19177 = state_19147__$1;
                            statearr_19157_19177[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19148 === 11) {
                            var inst_19119 = state_19147[10];
                            var inst_19136 = state_19147[2];
                            var tmp19155 = inst_19119;
                            var inst_19119__$1 = tmp19155;
                            var state_19147__$1 = function() {
                              var statearr_19158 = state_19147;
                              statearr_19158[11] = inst_19136;
                              statearr_19158[10] = inst_19119__$1;
                              return statearr_19158;
                            }();
                            var statearr_19159_19178 = state_19147__$1;
                            statearr_19159_19178[2] = null;
                            statearr_19159_19178[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19148 === 9) {
                              var inst_19127 = state_19147[8];
                              var state_19147__$1 = state_19147;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19147__$1, 11, out, inst_19127);
                            } else {
                              if (state_val_19148 === 5) {
                                var inst_19141 = cljs.core.async.close_BANG_.call(null, out);
                                var state_19147__$1 = state_19147;
                                var statearr_19160_19179 = state_19147__$1;
                                statearr_19160_19179[2] = inst_19141;
                                statearr_19160_19179[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19148 === 10) {
                                  var inst_19139 = state_19147[2];
                                  var state_19147__$1 = state_19147;
                                  var statearr_19161_19180 = state_19147__$1;
                                  statearr_19161_19180[2] = inst_19139;
                                  statearr_19161_19180[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19148 === 8) {
                                    var inst_19126 = state_19147[7];
                                    var inst_19128 = state_19147[9];
                                    var inst_19127 = state_19147[8];
                                    var inst_19119 = state_19147[10];
                                    var inst_19131 = function() {
                                      var c = inst_19128;
                                      var v = inst_19127;
                                      var vec__19124 = inst_19126;
                                      var cs = inst_19119;
                                      return function(c, v, vec__19124, cs, inst_19126, inst_19128, inst_19127, inst_19119, state_val_19148, c__6777__auto___19171, out) {
                                        return function(p1__19064_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__19064_SHARP_);
                                        };
                                      }(c, v, vec__19124, cs, inst_19126, inst_19128, inst_19127, inst_19119, state_val_19148, c__6777__auto___19171, out);
                                    }();
                                    var inst_19132 = cljs.core.filterv.call(null, inst_19131, inst_19119);
                                    var inst_19119__$1 = inst_19132;
                                    var state_19147__$1 = function() {
                                      var statearr_19162 = state_19147;
                                      statearr_19162[10] = inst_19119__$1;
                                      return statearr_19162;
                                    }();
                                    var statearr_19163_19181 = state_19147__$1;
                                    statearr_19163_19181[2] = null;
                                    statearr_19163_19181[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___19171, out);
          return function(switch__6721__auto__, c__6777__auto___19171, out) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_19167 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19167[0] = state_machine__6722__auto__;
                statearr_19167[1] = 1;
                return statearr_19167;
              };
              var state_machine__6722__auto____1 = function(state_19147) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_19147);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e19168) {
                      if (e19168 instanceof Object) {
                        var ex__6725__auto__ = e19168;
                        var statearr_19169_19182 = state_19147;
                        statearr_19169_19182[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19147);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19168;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19183 = state_19147;
                    state_19147 = G__19183;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_19147) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_19147);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___19171, out);
        }();
        var state__6779__auto__ = function() {
          var statearr_19170 = f__6778__auto__.call(null);
          statearr_19170[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___19171;
          return statearr_19170;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___19171, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6777__auto___19276 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___19276, out) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___19276, out) {
            return function(state_19253) {
              var state_val_19254 = state_19253[1];
              if (state_val_19254 === 7) {
                var inst_19235 = state_19253[7];
                var inst_19235__$1 = state_19253[2];
                var inst_19236 = inst_19235__$1 == null;
                var inst_19237 = cljs.core.not.call(null, inst_19236);
                var state_19253__$1 = function() {
                  var statearr_19255 = state_19253;
                  statearr_19255[7] = inst_19235__$1;
                  return statearr_19255;
                }();
                if (inst_19237) {
                  var statearr_19256_19277 = state_19253__$1;
                  statearr_19256_19277[1] = 8;
                } else {
                  var statearr_19257_19278 = state_19253__$1;
                  statearr_19257_19278[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19254 === 1) {
                  var inst_19230 = 0;
                  var state_19253__$1 = function() {
                    var statearr_19258 = state_19253;
                    statearr_19258[8] = inst_19230;
                    return statearr_19258;
                  }();
                  var statearr_19259_19279 = state_19253__$1;
                  statearr_19259_19279[2] = null;
                  statearr_19259_19279[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19254 === 4) {
                    var state_19253__$1 = state_19253;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19253__$1, 7, ch);
                  } else {
                    if (state_val_19254 === 6) {
                      var inst_19248 = state_19253[2];
                      var state_19253__$1 = state_19253;
                      var statearr_19260_19280 = state_19253__$1;
                      statearr_19260_19280[2] = inst_19248;
                      statearr_19260_19280[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19254 === 3) {
                        var inst_19250 = state_19253[2];
                        var inst_19251 = cljs.core.async.close_BANG_.call(null, out);
                        var state_19253__$1 = function() {
                          var statearr_19261 = state_19253;
                          statearr_19261[9] = inst_19250;
                          return statearr_19261;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19253__$1, inst_19251);
                      } else {
                        if (state_val_19254 === 2) {
                          var inst_19230 = state_19253[8];
                          var inst_19232 = inst_19230 < n;
                          var state_19253__$1 = state_19253;
                          if (cljs.core.truth_(inst_19232)) {
                            var statearr_19262_19281 = state_19253__$1;
                            statearr_19262_19281[1] = 4;
                          } else {
                            var statearr_19263_19282 = state_19253__$1;
                            statearr_19263_19282[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19254 === 11) {
                            var inst_19230 = state_19253[8];
                            var inst_19240 = state_19253[2];
                            var inst_19241 = inst_19230 + 1;
                            var inst_19230__$1 = inst_19241;
                            var state_19253__$1 = function() {
                              var statearr_19264 = state_19253;
                              statearr_19264[8] = inst_19230__$1;
                              statearr_19264[10] = inst_19240;
                              return statearr_19264;
                            }();
                            var statearr_19265_19283 = state_19253__$1;
                            statearr_19265_19283[2] = null;
                            statearr_19265_19283[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19254 === 9) {
                              var state_19253__$1 = state_19253;
                              var statearr_19266_19284 = state_19253__$1;
                              statearr_19266_19284[2] = null;
                              statearr_19266_19284[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19254 === 5) {
                                var state_19253__$1 = state_19253;
                                var statearr_19267_19285 = state_19253__$1;
                                statearr_19267_19285[2] = null;
                                statearr_19267_19285[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19254 === 10) {
                                  var inst_19245 = state_19253[2];
                                  var state_19253__$1 = state_19253;
                                  var statearr_19268_19286 = state_19253__$1;
                                  statearr_19268_19286[2] = inst_19245;
                                  statearr_19268_19286[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19254 === 8) {
                                    var inst_19235 = state_19253[7];
                                    var state_19253__$1 = state_19253;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19253__$1, 11, out, inst_19235);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___19276, out);
          return function(switch__6721__auto__, c__6777__auto___19276, out) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_19272 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_19272[0] = state_machine__6722__auto__;
                statearr_19272[1] = 1;
                return statearr_19272;
              };
              var state_machine__6722__auto____1 = function(state_19253) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_19253);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e19273) {
                      if (e19273 instanceof Object) {
                        var ex__6725__auto__ = e19273;
                        var statearr_19274_19287 = state_19253;
                        statearr_19274_19287[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19253);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19273;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19288 = state_19253;
                    state_19253 = G__19288;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_19253) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_19253);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___19276, out);
        }();
        var state__6779__auto__ = function() {
          var statearr_19275 = f__6778__auto__.call(null);
          statearr_19275[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___19276;
          return statearr_19275;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___19276, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t19296 !== "undefined") {
  } else {
    cljs.core.async.t19296 = function(ch, f, map_LT_, meta19297) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta19297 = meta19297;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19296.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19296.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t19296.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19296.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t19299 !== "undefined") {
        } else {
          cljs.core.async.t19299 = function(fn1, _, meta19297, map_LT_, f, ch, meta19300) {
            this.fn1 = fn1;
            this._ = _;
            this.meta19297 = meta19297;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta19300 = meta19300;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t19299.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t19299.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t19299.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__19289_SHARP_) {
                  return f1.call(null, p1__19289_SHARP_ == null ? null : self__.f.call(null, p1__19289_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t19299.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_19301) {
              var self__ = this;
              var _19301__$1 = this;
              return self__.meta19300;
            };
          }(___$1);
          cljs.core.async.t19299.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_19301, meta19300__$1) {
              var self__ = this;
              var _19301__$1 = this;
              return new cljs.core.async.t19299(self__.fn1, self__._, self__.meta19297, self__.map_LT_, self__.f, self__.ch, meta19300__$1);
            };
          }(___$1);
          cljs.core.async.t19299.cljs$lang$type = true;
          cljs.core.async.t19299.cljs$lang$ctorStr = "cljs.core.async/t19299";
          cljs.core.async.t19299.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
              return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t19299");
            };
          }(___$1);
          cljs.core.async.__GT_t19299 = function(___$1) {
            return function __GT_t19299(fn1__$1, ___$2, meta19297__$1, map_LT___$1, f__$1, ch__$1, meta19300) {
              return new cljs.core.async.t19299(fn1__$1, ___$2, meta19297__$1, map_LT___$1, f__$1, ch__$1, meta19300);
            };
          }(___$1);
        }
        return new cljs.core.async.t19299(fn1, ___$1, self__.meta19297, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3787__auto__ = ret;
        if (cljs.core.truth_(and__3787__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3787__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t19296.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19296.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19296.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t19296.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19298) {
      var self__ = this;
      var _19298__$1 = this;
      return self__.meta19297;
    };
    cljs.core.async.t19296.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19298, meta19297__$1) {
      var self__ = this;
      var _19298__$1 = this;
      return new cljs.core.async.t19296(self__.ch, self__.f, self__.map_LT_, meta19297__$1);
    };
    cljs.core.async.t19296.cljs$lang$type = true;
    cljs.core.async.t19296.cljs$lang$ctorStr = "cljs.core.async/t19296";
    cljs.core.async.t19296.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t19296");
    };
    cljs.core.async.__GT_t19296 = function __GT_t19296(ch__$1, f__$1, map_LT___$1, meta19297) {
      return new cljs.core.async.t19296(ch__$1, f__$1, map_LT___$1, meta19297);
    };
  }
  return new cljs.core.async.t19296(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t19305 !== "undefined") {
  } else {
    cljs.core.async.t19305 = function(ch, f, map_GT_, meta19306) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta19306 = meta19306;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19305.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19305.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t19305.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19305.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19305.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19305.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19305.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19307) {
      var self__ = this;
      var _19307__$1 = this;
      return self__.meta19306;
    };
    cljs.core.async.t19305.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19307, meta19306__$1) {
      var self__ = this;
      var _19307__$1 = this;
      return new cljs.core.async.t19305(self__.ch, self__.f, self__.map_GT_, meta19306__$1);
    };
    cljs.core.async.t19305.cljs$lang$type = true;
    cljs.core.async.t19305.cljs$lang$ctorStr = "cljs.core.async/t19305";
    cljs.core.async.t19305.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t19305");
    };
    cljs.core.async.__GT_t19305 = function __GT_t19305(ch__$1, f__$1, map_GT___$1, meta19306) {
      return new cljs.core.async.t19305(ch__$1, f__$1, map_GT___$1, meta19306);
    };
  }
  return new cljs.core.async.t19305(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t19311 !== "undefined") {
  } else {
    cljs.core.async.t19311 = function(ch, p, filter_GT_, meta19312) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta19312 = meta19312;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t19311.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t19311.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t19311.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t19311.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t19311.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t19311.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t19311.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t19311.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19313) {
      var self__ = this;
      var _19313__$1 = this;
      return self__.meta19312;
    };
    cljs.core.async.t19311.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19313, meta19312__$1) {
      var self__ = this;
      var _19313__$1 = this;
      return new cljs.core.async.t19311(self__.ch, self__.p, self__.filter_GT_, meta19312__$1);
    };
    cljs.core.async.t19311.cljs$lang$type = true;
    cljs.core.async.t19311.cljs$lang$ctorStr = "cljs.core.async/t19311";
    cljs.core.async.t19311.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
      return cljs.core._write.call(null, writer__4387__auto__, "cljs.core.async/t19311");
    };
    cljs.core.async.__GT_t19311 = function __GT_t19311(ch__$1, p__$1, filter_GT___$1, meta19312) {
      return new cljs.core.async.t19311(ch__$1, p__$1, filter_GT___$1, meta19312);
    };
  }
  return new cljs.core.async.t19311(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/cljs/core/async.cljs"], null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6777__auto___19396 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___19396, out) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___19396, out) {
            return function(state_19375) {
              var state_val_19376 = state_19375[1];
              if (state_val_19376 === 7) {
                var inst_19371 = state_19375[2];
                var state_19375__$1 = state_19375;
                var statearr_19377_19397 = state_19375__$1;
                statearr_19377_19397[2] = inst_19371;
                statearr_19377_19397[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19376 === 1) {
                  var state_19375__$1 = state_19375;
                  var statearr_19378_19398 = state_19375__$1;
                  statearr_19378_19398[2] = null;
                  statearr_19378_19398[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19376 === 4) {
                    var inst_19357 = state_19375[7];
                    var inst_19357__$1 = state_19375[2];
                    var inst_19358 = inst_19357__$1 == null;
                    var state_19375__$1 = function() {
                      var statearr_19379 = state_19375;
                      statearr_19379[7] = inst_19357__$1;
                      return statearr_19379;
                    }();
                    if (cljs.core.truth_(inst_19358)) {
                      var statearr_19380_19399 = state_19375__$1;
                      statearr_19380_19399[1] = 5;
                    } else {
                      var statearr_19381_19400 = state_19375__$1;
                      statearr_19381_19400[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19376 === 6) {
                      var inst_19357 = state_19375[7];
                      var inst_19362 = p.call(null, inst_19357);
                      var state_19375__$1 = state_19375;
                      if (cljs.core.truth_(inst_19362)) {
                        var statearr_19382_19401 = state_19375__$1;
                        statearr_19382_19401[1] = 8;
                      } else {
                        var statearr_19383_19402 = state_19375__$1;
                        statearr_19383_19402[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19376 === 3) {
                        var inst_19373 = state_19375[2];
                        var state_19375__$1 = state_19375;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19375__$1, inst_19373);
                      } else {
                        if (state_val_19376 === 2) {
                          var state_19375__$1 = state_19375;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19375__$1, 4, ch);
                        } else {
                          if (state_val_19376 === 11) {
                            var inst_19365 = state_19375[2];
                            var state_19375__$1 = state_19375;
                            var statearr_19384_19403 = state_19375__$1;
                            statearr_19384_19403[2] = inst_19365;
                            statearr_19384_19403[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19376 === 9) {
                              var state_19375__$1 = state_19375;
                              var statearr_19385_19404 = state_19375__$1;
                              statearr_19385_19404[2] = null;
                              statearr_19385_19404[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19376 === 5) {
                                var inst_19360 = cljs.core.async.close_BANG_.call(null, out);
                                var state_19375__$1 = state_19375;
                                var statearr_19386_19405 = state_19375__$1;
                                statearr_19386_19405[2] = inst_19360;
                                statearr_19386_19405[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19376 === 10) {
                                  var inst_19368 = state_19375[2];
                                  var state_19375__$1 = function() {
                                    var statearr_19387 = state_19375;
                                    statearr_19387[8] = inst_19368;
                                    return statearr_19387;
                                  }();
                                  var statearr_19388_19406 = state_19375__$1;
                                  statearr_19388_19406[2] = null;
                                  statearr_19388_19406[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19376 === 8) {
                                    var inst_19357 = state_19375[7];
                                    var state_19375__$1 = state_19375;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19375__$1, 11, out, inst_19357);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___19396, out);
          return function(switch__6721__auto__, c__6777__auto___19396, out) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_19392 = [null, null, null, null, null, null, null, null, null];
                statearr_19392[0] = state_machine__6722__auto__;
                statearr_19392[1] = 1;
                return statearr_19392;
              };
              var state_machine__6722__auto____1 = function(state_19375) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_19375);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e19393) {
                      if (e19393 instanceof Object) {
                        var ex__6725__auto__ = e19393;
                        var statearr_19394_19407 = state_19375;
                        statearr_19394_19407[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19375);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19393;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19408 = state_19375;
                    state_19375 = G__19408;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_19375) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_19375);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___19396, out);
        }();
        var state__6779__auto__ = function() {
          var statearr_19395 = f__6778__auto__.call(null);
          statearr_19395[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___19396;
          return statearr_19395;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___19396, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6777__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto__) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto__) {
          return function(state_19574) {
            var state_val_19575 = state_19574[1];
            if (state_val_19575 === 7) {
              var inst_19570 = state_19574[2];
              var state_19574__$1 = state_19574;
              var statearr_19576_19617 = state_19574__$1;
              statearr_19576_19617[2] = inst_19570;
              statearr_19576_19617[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19575 === 20) {
                var inst_19540 = state_19574[7];
                var inst_19551 = state_19574[2];
                var inst_19552 = cljs.core.next.call(null, inst_19540);
                var inst_19526 = inst_19552;
                var inst_19527 = null;
                var inst_19528 = 0;
                var inst_19529 = 0;
                var state_19574__$1 = function() {
                  var statearr_19577 = state_19574;
                  statearr_19577[8] = inst_19526;
                  statearr_19577[9] = inst_19528;
                  statearr_19577[10] = inst_19527;
                  statearr_19577[11] = inst_19529;
                  statearr_19577[12] = inst_19551;
                  return statearr_19577;
                }();
                var statearr_19578_19618 = state_19574__$1;
                statearr_19578_19618[2] = null;
                statearr_19578_19618[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19575 === 1) {
                  var state_19574__$1 = state_19574;
                  var statearr_19579_19619 = state_19574__$1;
                  statearr_19579_19619[2] = null;
                  statearr_19579_19619[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19575 === 4) {
                    var inst_19515 = state_19574[13];
                    var inst_19515__$1 = state_19574[2];
                    var inst_19516 = inst_19515__$1 == null;
                    var state_19574__$1 = function() {
                      var statearr_19580 = state_19574;
                      statearr_19580[13] = inst_19515__$1;
                      return statearr_19580;
                    }();
                    if (cljs.core.truth_(inst_19516)) {
                      var statearr_19581_19620 = state_19574__$1;
                      statearr_19581_19620[1] = 5;
                    } else {
                      var statearr_19582_19621 = state_19574__$1;
                      statearr_19582_19621[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19575 === 15) {
                      var state_19574__$1 = state_19574;
                      var statearr_19586_19622 = state_19574__$1;
                      statearr_19586_19622[2] = null;
                      statearr_19586_19622[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19575 === 21) {
                        var state_19574__$1 = state_19574;
                        var statearr_19587_19623 = state_19574__$1;
                        statearr_19587_19623[2] = null;
                        statearr_19587_19623[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19575 === 13) {
                          var inst_19526 = state_19574[8];
                          var inst_19528 = state_19574[9];
                          var inst_19527 = state_19574[10];
                          var inst_19529 = state_19574[11];
                          var inst_19536 = state_19574[2];
                          var inst_19537 = inst_19529 + 1;
                          var tmp19583 = inst_19526;
                          var tmp19584 = inst_19528;
                          var tmp19585 = inst_19527;
                          var inst_19526__$1 = tmp19583;
                          var inst_19527__$1 = tmp19585;
                          var inst_19528__$1 = tmp19584;
                          var inst_19529__$1 = inst_19537;
                          var state_19574__$1 = function() {
                            var statearr_19588 = state_19574;
                            statearr_19588[8] = inst_19526__$1;
                            statearr_19588[9] = inst_19528__$1;
                            statearr_19588[10] = inst_19527__$1;
                            statearr_19588[11] = inst_19529__$1;
                            statearr_19588[14] = inst_19536;
                            return statearr_19588;
                          }();
                          var statearr_19589_19624 = state_19574__$1;
                          statearr_19589_19624[2] = null;
                          statearr_19589_19624[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19575 === 22) {
                            var state_19574__$1 = state_19574;
                            var statearr_19590_19625 = state_19574__$1;
                            statearr_19590_19625[2] = null;
                            statearr_19590_19625[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19575 === 6) {
                              var inst_19515 = state_19574[13];
                              var inst_19524 = f.call(null, inst_19515);
                              var inst_19525 = cljs.core.seq.call(null, inst_19524);
                              var inst_19526 = inst_19525;
                              var inst_19527 = null;
                              var inst_19528 = 0;
                              var inst_19529 = 0;
                              var state_19574__$1 = function() {
                                var statearr_19591 = state_19574;
                                statearr_19591[8] = inst_19526;
                                statearr_19591[9] = inst_19528;
                                statearr_19591[10] = inst_19527;
                                statearr_19591[11] = inst_19529;
                                return statearr_19591;
                              }();
                              var statearr_19592_19626 = state_19574__$1;
                              statearr_19592_19626[2] = null;
                              statearr_19592_19626[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_19575 === 17) {
                                var inst_19540 = state_19574[7];
                                var inst_19544 = cljs.core.chunk_first.call(null, inst_19540);
                                var inst_19545 = cljs.core.chunk_rest.call(null, inst_19540);
                                var inst_19546 = cljs.core.count.call(null, inst_19544);
                                var inst_19526 = inst_19545;
                                var inst_19527 = inst_19544;
                                var inst_19528 = inst_19546;
                                var inst_19529 = 0;
                                var state_19574__$1 = function() {
                                  var statearr_19593 = state_19574;
                                  statearr_19593[8] = inst_19526;
                                  statearr_19593[9] = inst_19528;
                                  statearr_19593[10] = inst_19527;
                                  statearr_19593[11] = inst_19529;
                                  return statearr_19593;
                                }();
                                var statearr_19594_19627 = state_19574__$1;
                                statearr_19594_19627[2] = null;
                                statearr_19594_19627[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19575 === 3) {
                                  var inst_19572 = state_19574[2];
                                  var state_19574__$1 = state_19574;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19574__$1, inst_19572);
                                } else {
                                  if (state_val_19575 === 12) {
                                    var inst_19560 = state_19574[2];
                                    var state_19574__$1 = state_19574;
                                    var statearr_19595_19628 = state_19574__$1;
                                    statearr_19595_19628[2] = inst_19560;
                                    statearr_19595_19628[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_19575 === 2) {
                                      var state_19574__$1 = state_19574;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19574__$1, 4, in$);
                                    } else {
                                      if (state_val_19575 === 23) {
                                        var inst_19568 = state_19574[2];
                                        var state_19574__$1 = state_19574;
                                        var statearr_19596_19629 = state_19574__$1;
                                        statearr_19596_19629[2] = inst_19568;
                                        statearr_19596_19629[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19575 === 19) {
                                          var inst_19555 = state_19574[2];
                                          var state_19574__$1 = state_19574;
                                          var statearr_19597_19630 = state_19574__$1;
                                          statearr_19597_19630[2] = inst_19555;
                                          statearr_19597_19630[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19575 === 11) {
                                            var inst_19526 = state_19574[8];
                                            var inst_19540 = state_19574[7];
                                            var inst_19540__$1 = cljs.core.seq.call(null, inst_19526);
                                            var state_19574__$1 = function() {
                                              var statearr_19598 = state_19574;
                                              statearr_19598[7] = inst_19540__$1;
                                              return statearr_19598;
                                            }();
                                            if (inst_19540__$1) {
                                              var statearr_19599_19631 = state_19574__$1;
                                              statearr_19599_19631[1] = 14;
                                            } else {
                                              var statearr_19600_19632 = state_19574__$1;
                                              statearr_19600_19632[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_19575 === 9) {
                                              var inst_19562 = state_19574[2];
                                              var inst_19563 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_19574__$1 = function() {
                                                var statearr_19601 = state_19574;
                                                statearr_19601[15] = inst_19562;
                                                return statearr_19601;
                                              }();
                                              if (cljs.core.truth_(inst_19563)) {
                                                var statearr_19602_19633 = state_19574__$1;
                                                statearr_19602_19633[1] = 21;
                                              } else {
                                                var statearr_19603_19634 = state_19574__$1;
                                                statearr_19603_19634[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_19575 === 5) {
                                                var inst_19518 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_19574__$1 = state_19574;
                                                var statearr_19604_19635 = state_19574__$1;
                                                statearr_19604_19635[2] = inst_19518;
                                                statearr_19604_19635[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_19575 === 14) {
                                                  var inst_19540 = state_19574[7];
                                                  var inst_19542 = cljs.core.chunked_seq_QMARK_.call(null, inst_19540);
                                                  var state_19574__$1 = state_19574;
                                                  if (inst_19542) {
                                                    var statearr_19605_19636 = state_19574__$1;
                                                    statearr_19605_19636[1] = 17;
                                                  } else {
                                                    var statearr_19606_19637 = state_19574__$1;
                                                    statearr_19606_19637[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_19575 === 16) {
                                                    var inst_19558 = state_19574[2];
                                                    var state_19574__$1 = state_19574;
                                                    var statearr_19607_19638 = state_19574__$1;
                                                    statearr_19607_19638[2] = inst_19558;
                                                    statearr_19607_19638[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_19575 === 10) {
                                                      var inst_19527 = state_19574[10];
                                                      var inst_19529 = state_19574[11];
                                                      var inst_19534 = cljs.core._nth.call(null, inst_19527, inst_19529);
                                                      var state_19574__$1 = state_19574;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19574__$1, 13, out, inst_19534);
                                                    } else {
                                                      if (state_val_19575 === 18) {
                                                        var inst_19540 = state_19574[7];
                                                        var inst_19549 = cljs.core.first.call(null, inst_19540);
                                                        var state_19574__$1 = state_19574;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19574__$1, 20, out, inst_19549);
                                                      } else {
                                                        if (state_val_19575 === 8) {
                                                          var inst_19528 = state_19574[9];
                                                          var inst_19529 = state_19574[11];
                                                          var inst_19531 = inst_19529 < inst_19528;
                                                          var inst_19532 = inst_19531;
                                                          var state_19574__$1 = state_19574;
                                                          if (cljs.core.truth_(inst_19532)) {
                                                            var statearr_19608_19639 = state_19574__$1;
                                                            statearr_19608_19639[1] = 10;
                                                          } else {
                                                            var statearr_19609_19640 = state_19574__$1;
                                                            statearr_19609_19640[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6777__auto__);
        return function(switch__6721__auto__, c__6777__auto__) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_19613 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19613[0] = state_machine__6722__auto__;
              statearr_19613[1] = 1;
              return statearr_19613;
            };
            var state_machine__6722__auto____1 = function(state_19574) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_19574);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e19614) {
                    if (e19614 instanceof Object) {
                      var ex__6725__auto__ = e19614;
                      var statearr_19615_19641 = state_19574;
                      statearr_19615_19641[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19574);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19614;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19642 = state_19574;
                  state_19574 = G__19642;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_19574) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_19574);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto__);
      }();
      var state__6779__auto__ = function() {
        var statearr_19616 = f__6778__auto__.call(null);
        statearr_19616[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto__;
        return statearr_19616;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto__));
  return c__6777__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6777__auto___19739 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___19739, out) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___19739, out) {
            return function(state_19714) {
              var state_val_19715 = state_19714[1];
              if (state_val_19715 === 7) {
                var inst_19709 = state_19714[2];
                var state_19714__$1 = state_19714;
                var statearr_19716_19740 = state_19714__$1;
                statearr_19716_19740[2] = inst_19709;
                statearr_19716_19740[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19715 === 1) {
                  var inst_19691 = null;
                  var state_19714__$1 = function() {
                    var statearr_19717 = state_19714;
                    statearr_19717[7] = inst_19691;
                    return statearr_19717;
                  }();
                  var statearr_19718_19741 = state_19714__$1;
                  statearr_19718_19741[2] = null;
                  statearr_19718_19741[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19715 === 4) {
                    var inst_19694 = state_19714[8];
                    var inst_19694__$1 = state_19714[2];
                    var inst_19695 = inst_19694__$1 == null;
                    var inst_19696 = cljs.core.not.call(null, inst_19695);
                    var state_19714__$1 = function() {
                      var statearr_19719 = state_19714;
                      statearr_19719[8] = inst_19694__$1;
                      return statearr_19719;
                    }();
                    if (inst_19696) {
                      var statearr_19720_19742 = state_19714__$1;
                      statearr_19720_19742[1] = 5;
                    } else {
                      var statearr_19721_19743 = state_19714__$1;
                      statearr_19721_19743[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19715 === 6) {
                      var state_19714__$1 = state_19714;
                      var statearr_19722_19744 = state_19714__$1;
                      statearr_19722_19744[2] = null;
                      statearr_19722_19744[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19715 === 3) {
                        var inst_19711 = state_19714[2];
                        var inst_19712 = cljs.core.async.close_BANG_.call(null, out);
                        var state_19714__$1 = function() {
                          var statearr_19723 = state_19714;
                          statearr_19723[9] = inst_19711;
                          return statearr_19723;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19714__$1, inst_19712);
                      } else {
                        if (state_val_19715 === 2) {
                          var state_19714__$1 = state_19714;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19714__$1, 4, ch);
                        } else {
                          if (state_val_19715 === 11) {
                            var inst_19694 = state_19714[8];
                            var inst_19703 = state_19714[2];
                            var inst_19691 = inst_19694;
                            var state_19714__$1 = function() {
                              var statearr_19724 = state_19714;
                              statearr_19724[10] = inst_19703;
                              statearr_19724[7] = inst_19691;
                              return statearr_19724;
                            }();
                            var statearr_19725_19745 = state_19714__$1;
                            statearr_19725_19745[2] = null;
                            statearr_19725_19745[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_19715 === 9) {
                              var inst_19694 = state_19714[8];
                              var state_19714__$1 = state_19714;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19714__$1, 11, out, inst_19694);
                            } else {
                              if (state_val_19715 === 5) {
                                var inst_19691 = state_19714[7];
                                var inst_19694 = state_19714[8];
                                var inst_19698 = cljs.core._EQ_.call(null, inst_19694, inst_19691);
                                var state_19714__$1 = state_19714;
                                if (inst_19698) {
                                  var statearr_19727_19746 = state_19714__$1;
                                  statearr_19727_19746[1] = 8;
                                } else {
                                  var statearr_19728_19747 = state_19714__$1;
                                  statearr_19728_19747[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_19715 === 10) {
                                  var inst_19706 = state_19714[2];
                                  var state_19714__$1 = state_19714;
                                  var statearr_19729_19748 = state_19714__$1;
                                  statearr_19729_19748[2] = inst_19706;
                                  statearr_19729_19748[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19715 === 8) {
                                    var inst_19691 = state_19714[7];
                                    var tmp19726 = inst_19691;
                                    var inst_19691__$1 = tmp19726;
                                    var state_19714__$1 = function() {
                                      var statearr_19730 = state_19714;
                                      statearr_19730[7] = inst_19691__$1;
                                      return statearr_19730;
                                    }();
                                    var statearr_19731_19749 = state_19714__$1;
                                    statearr_19731_19749[2] = null;
                                    statearr_19731_19749[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___19739, out);
          return function(switch__6721__auto__, c__6777__auto___19739, out) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_19735 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_19735[0] = state_machine__6722__auto__;
                statearr_19735[1] = 1;
                return statearr_19735;
              };
              var state_machine__6722__auto____1 = function(state_19714) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_19714);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e19736) {
                      if (e19736 instanceof Object) {
                        var ex__6725__auto__ = e19736;
                        var statearr_19737_19750 = state_19714;
                        statearr_19737_19750[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19714);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19736;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19751 = state_19714;
                    state_19714 = G__19751;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_19714) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_19714);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___19739, out);
        }();
        var state__6779__auto__ = function() {
          var statearr_19738 = f__6778__auto__.call(null);
          statearr_19738[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___19739;
          return statearr_19738;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___19739, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6777__auto___19886 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___19886, out) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___19886, out) {
            return function(state_19856) {
              var state_val_19857 = state_19856[1];
              if (state_val_19857 === 7) {
                var inst_19852 = state_19856[2];
                var state_19856__$1 = state_19856;
                var statearr_19858_19887 = state_19856__$1;
                statearr_19858_19887[2] = inst_19852;
                statearr_19858_19887[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19857 === 1) {
                  var inst_19819 = new Array(n);
                  var inst_19820 = inst_19819;
                  var inst_19821 = 0;
                  var state_19856__$1 = function() {
                    var statearr_19859 = state_19856;
                    statearr_19859[7] = inst_19820;
                    statearr_19859[8] = inst_19821;
                    return statearr_19859;
                  }();
                  var statearr_19860_19888 = state_19856__$1;
                  statearr_19860_19888[2] = null;
                  statearr_19860_19888[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19857 === 4) {
                    var inst_19824 = state_19856[9];
                    var inst_19824__$1 = state_19856[2];
                    var inst_19825 = inst_19824__$1 == null;
                    var inst_19826 = cljs.core.not.call(null, inst_19825);
                    var state_19856__$1 = function() {
                      var statearr_19861 = state_19856;
                      statearr_19861[9] = inst_19824__$1;
                      return statearr_19861;
                    }();
                    if (inst_19826) {
                      var statearr_19862_19889 = state_19856__$1;
                      statearr_19862_19889[1] = 5;
                    } else {
                      var statearr_19863_19890 = state_19856__$1;
                      statearr_19863_19890[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19857 === 15) {
                      var inst_19846 = state_19856[2];
                      var state_19856__$1 = state_19856;
                      var statearr_19864_19891 = state_19856__$1;
                      statearr_19864_19891[2] = inst_19846;
                      statearr_19864_19891[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19857 === 13) {
                        var state_19856__$1 = state_19856;
                        var statearr_19865_19892 = state_19856__$1;
                        statearr_19865_19892[2] = null;
                        statearr_19865_19892[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19857 === 6) {
                          var inst_19821 = state_19856[8];
                          var inst_19842 = inst_19821 > 0;
                          var state_19856__$1 = state_19856;
                          if (cljs.core.truth_(inst_19842)) {
                            var statearr_19866_19893 = state_19856__$1;
                            statearr_19866_19893[1] = 12;
                          } else {
                            var statearr_19867_19894 = state_19856__$1;
                            statearr_19867_19894[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19857 === 3) {
                            var inst_19854 = state_19856[2];
                            var state_19856__$1 = state_19856;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19856__$1, inst_19854);
                          } else {
                            if (state_val_19857 === 12) {
                              var inst_19820 = state_19856[7];
                              var inst_19844 = cljs.core.vec.call(null, inst_19820);
                              var state_19856__$1 = state_19856;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19856__$1, 15, out, inst_19844);
                            } else {
                              if (state_val_19857 === 2) {
                                var state_19856__$1 = state_19856;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19856__$1, 4, ch);
                              } else {
                                if (state_val_19857 === 11) {
                                  var inst_19836 = state_19856[2];
                                  var inst_19837 = new Array(n);
                                  var inst_19820 = inst_19837;
                                  var inst_19821 = 0;
                                  var state_19856__$1 = function() {
                                    var statearr_19868 = state_19856;
                                    statearr_19868[7] = inst_19820;
                                    statearr_19868[8] = inst_19821;
                                    statearr_19868[10] = inst_19836;
                                    return statearr_19868;
                                  }();
                                  var statearr_19869_19895 = state_19856__$1;
                                  statearr_19869_19895[2] = null;
                                  statearr_19869_19895[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19857 === 9) {
                                    var inst_19820 = state_19856[7];
                                    var inst_19834 = cljs.core.vec.call(null, inst_19820);
                                    var state_19856__$1 = state_19856;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19856__$1, 11, out, inst_19834);
                                  } else {
                                    if (state_val_19857 === 5) {
                                      var inst_19820 = state_19856[7];
                                      var inst_19829 = state_19856[11];
                                      var inst_19821 = state_19856[8];
                                      var inst_19824 = state_19856[9];
                                      var inst_19828 = inst_19820[inst_19821] = inst_19824;
                                      var inst_19829__$1 = inst_19821 + 1;
                                      var inst_19830 = inst_19829__$1 < n;
                                      var state_19856__$1 = function() {
                                        var statearr_19870 = state_19856;
                                        statearr_19870[12] = inst_19828;
                                        statearr_19870[11] = inst_19829__$1;
                                        return statearr_19870;
                                      }();
                                      if (cljs.core.truth_(inst_19830)) {
                                        var statearr_19871_19896 = state_19856__$1;
                                        statearr_19871_19896[1] = 8;
                                      } else {
                                        var statearr_19872_19897 = state_19856__$1;
                                        statearr_19872_19897[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19857 === 14) {
                                        var inst_19849 = state_19856[2];
                                        var inst_19850 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_19856__$1 = function() {
                                          var statearr_19874 = state_19856;
                                          statearr_19874[13] = inst_19849;
                                          return statearr_19874;
                                        }();
                                        var statearr_19875_19898 = state_19856__$1;
                                        statearr_19875_19898[2] = inst_19850;
                                        statearr_19875_19898[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19857 === 10) {
                                          var inst_19840 = state_19856[2];
                                          var state_19856__$1 = state_19856;
                                          var statearr_19876_19899 = state_19856__$1;
                                          statearr_19876_19899[2] = inst_19840;
                                          statearr_19876_19899[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19857 === 8) {
                                            var inst_19820 = state_19856[7];
                                            var inst_19829 = state_19856[11];
                                            var tmp19873 = inst_19820;
                                            var inst_19820__$1 = tmp19873;
                                            var inst_19821 = inst_19829;
                                            var state_19856__$1 = function() {
                                              var statearr_19877 = state_19856;
                                              statearr_19877[7] = inst_19820__$1;
                                              statearr_19877[8] = inst_19821;
                                              return statearr_19877;
                                            }();
                                            var statearr_19878_19900 = state_19856__$1;
                                            statearr_19878_19900[2] = null;
                                            statearr_19878_19900[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___19886, out);
          return function(switch__6721__auto__, c__6777__auto___19886, out) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_19882 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19882[0] = state_machine__6722__auto__;
                statearr_19882[1] = 1;
                return statearr_19882;
              };
              var state_machine__6722__auto____1 = function(state_19856) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_19856);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e19883) {
                      if (e19883 instanceof Object) {
                        var ex__6725__auto__ = e19883;
                        var statearr_19884_19901 = state_19856;
                        statearr_19884_19901[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19856);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19883;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19902 = state_19856;
                    state_19856 = G__19902;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_19856) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_19856);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___19886, out);
        }();
        var state__6779__auto__ = function() {
          var statearr_19885 = f__6778__auto__.call(null);
          statearr_19885[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___19886;
          return statearr_19885;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___19886, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6777__auto___20045 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto___20045, out) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto___20045, out) {
            return function(state_20015) {
              var state_val_20016 = state_20015[1];
              if (state_val_20016 === 7) {
                var inst_20011 = state_20015[2];
                var state_20015__$1 = state_20015;
                var statearr_20017_20046 = state_20015__$1;
                statearr_20017_20046[2] = inst_20011;
                statearr_20017_20046[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20016 === 1) {
                  var inst_19974 = [];
                  var inst_19975 = inst_19974;
                  var inst_19976 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_20015__$1 = function() {
                    var statearr_20018 = state_20015;
                    statearr_20018[7] = inst_19975;
                    statearr_20018[8] = inst_19976;
                    return statearr_20018;
                  }();
                  var statearr_20019_20047 = state_20015__$1;
                  statearr_20019_20047[2] = null;
                  statearr_20019_20047[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20016 === 4) {
                    var inst_19979 = state_20015[9];
                    var inst_19979__$1 = state_20015[2];
                    var inst_19980 = inst_19979__$1 == null;
                    var inst_19981 = cljs.core.not.call(null, inst_19980);
                    var state_20015__$1 = function() {
                      var statearr_20020 = state_20015;
                      statearr_20020[9] = inst_19979__$1;
                      return statearr_20020;
                    }();
                    if (inst_19981) {
                      var statearr_20021_20048 = state_20015__$1;
                      statearr_20021_20048[1] = 5;
                    } else {
                      var statearr_20022_20049 = state_20015__$1;
                      statearr_20022_20049[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20016 === 15) {
                      var inst_20005 = state_20015[2];
                      var state_20015__$1 = state_20015;
                      var statearr_20023_20050 = state_20015__$1;
                      statearr_20023_20050[2] = inst_20005;
                      statearr_20023_20050[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20016 === 13) {
                        var state_20015__$1 = state_20015;
                        var statearr_20024_20051 = state_20015__$1;
                        statearr_20024_20051[2] = null;
                        statearr_20024_20051[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20016 === 6) {
                          var inst_19975 = state_20015[7];
                          var inst_20000 = inst_19975.length;
                          var inst_20001 = inst_20000 > 0;
                          var state_20015__$1 = state_20015;
                          if (cljs.core.truth_(inst_20001)) {
                            var statearr_20025_20052 = state_20015__$1;
                            statearr_20025_20052[1] = 12;
                          } else {
                            var statearr_20026_20053 = state_20015__$1;
                            statearr_20026_20053[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20016 === 3) {
                            var inst_20013 = state_20015[2];
                            var state_20015__$1 = state_20015;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20015__$1, inst_20013);
                          } else {
                            if (state_val_20016 === 12) {
                              var inst_19975 = state_20015[7];
                              var inst_20003 = cljs.core.vec.call(null, inst_19975);
                              var state_20015__$1 = state_20015;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20015__$1, 15, out, inst_20003);
                            } else {
                              if (state_val_20016 === 2) {
                                var state_20015__$1 = state_20015;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20015__$1, 4, ch);
                              } else {
                                if (state_val_20016 === 11) {
                                  var inst_19979 = state_20015[9];
                                  var inst_19983 = state_20015[10];
                                  var inst_19993 = state_20015[2];
                                  var inst_19994 = [];
                                  var inst_19995 = inst_19994.push(inst_19979);
                                  var inst_19975 = inst_19994;
                                  var inst_19976 = inst_19983;
                                  var state_20015__$1 = function() {
                                    var statearr_20027 = state_20015;
                                    statearr_20027[11] = inst_19995;
                                    statearr_20027[12] = inst_19993;
                                    statearr_20027[7] = inst_19975;
                                    statearr_20027[8] = inst_19976;
                                    return statearr_20027;
                                  }();
                                  var statearr_20028_20054 = state_20015__$1;
                                  statearr_20028_20054[2] = null;
                                  statearr_20028_20054[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20016 === 9) {
                                    var inst_19975 = state_20015[7];
                                    var inst_19991 = cljs.core.vec.call(null, inst_19975);
                                    var state_20015__$1 = state_20015;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20015__$1, 11, out, inst_19991);
                                  } else {
                                    if (state_val_20016 === 5) {
                                      var inst_19979 = state_20015[9];
                                      var inst_19983 = state_20015[10];
                                      var inst_19976 = state_20015[8];
                                      var inst_19983__$1 = f.call(null, inst_19979);
                                      var inst_19984 = cljs.core._EQ_.call(null, inst_19983__$1, inst_19976);
                                      var inst_19985 = cljs.core.keyword_identical_QMARK_.call(null, inst_19976, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_19986 = inst_19984 || inst_19985;
                                      var state_20015__$1 = function() {
                                        var statearr_20029 = state_20015;
                                        statearr_20029[10] = inst_19983__$1;
                                        return statearr_20029;
                                      }();
                                      if (cljs.core.truth_(inst_19986)) {
                                        var statearr_20030_20055 = state_20015__$1;
                                        statearr_20030_20055[1] = 8;
                                      } else {
                                        var statearr_20031_20056 = state_20015__$1;
                                        statearr_20031_20056[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20016 === 14) {
                                        var inst_20008 = state_20015[2];
                                        var inst_20009 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_20015__$1 = function() {
                                          var statearr_20033 = state_20015;
                                          statearr_20033[13] = inst_20008;
                                          return statearr_20033;
                                        }();
                                        var statearr_20034_20057 = state_20015__$1;
                                        statearr_20034_20057[2] = inst_20009;
                                        statearr_20034_20057[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20016 === 10) {
                                          var inst_19998 = state_20015[2];
                                          var state_20015__$1 = state_20015;
                                          var statearr_20035_20058 = state_20015__$1;
                                          statearr_20035_20058[2] = inst_19998;
                                          statearr_20035_20058[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20016 === 8) {
                                            var inst_19979 = state_20015[9];
                                            var inst_19983 = state_20015[10];
                                            var inst_19975 = state_20015[7];
                                            var inst_19988 = inst_19975.push(inst_19979);
                                            var tmp20032 = inst_19975;
                                            var inst_19975__$1 = tmp20032;
                                            var inst_19976 = inst_19983;
                                            var state_20015__$1 = function() {
                                              var statearr_20036 = state_20015;
                                              statearr_20036[14] = inst_19988;
                                              statearr_20036[7] = inst_19975__$1;
                                              statearr_20036[8] = inst_19976;
                                              return statearr_20036;
                                            }();
                                            var statearr_20037_20059 = state_20015__$1;
                                            statearr_20037_20059[2] = null;
                                            statearr_20037_20059[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6777__auto___20045, out);
          return function(switch__6721__auto__, c__6777__auto___20045, out) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_20041 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20041[0] = state_machine__6722__auto__;
                statearr_20041[1] = 1;
                return statearr_20041;
              };
              var state_machine__6722__auto____1 = function(state_20015) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_20015);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e20042) {
                      if (e20042 instanceof Object) {
                        var ex__6725__auto__ = e20042;
                        var statearr_20043_20060 = state_20015;
                        statearr_20043_20060[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20015);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20042;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20061 = state_20015;
                    state_20015 = G__20061;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_20015) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_20015);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto___20045, out);
        }();
        var state__6779__auto__ = function() {
          var statearr_20044 = f__6778__auto__.call(null);
          statearr_20044[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto___20045;
          return statearr_20044;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto___20045, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
// Input 61
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
// Input 62
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__20305_SHARP_) {
      return max === p1__20305_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__20306__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20306 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20307__i = 0, G__20307__a = new Array(arguments.length - 2);
        while (G__20307__i < G__20307__a.length) {
          G__20307__a[G__20307__i] = arguments[G__20307__i + 2];
          ++G__20307__i;
        }
        sets = new cljs.core.IndexedSeq(G__20307__a, 0);
      }
      return G__20306__delegate.call(this, s1, s2, sets);
    };
    G__20306.cljs$lang$maxFixedArity = 2;
    G__20306.cljs$lang$applyTo = function(arglist__20308) {
      var s1 = cljs.core.first(arglist__20308);
      arglist__20308 = cljs.core.next(arglist__20308);
      var s2 = cljs.core.first(arglist__20308);
      var sets = cljs.core.rest(arglist__20308);
      return G__20306__delegate(s1, s2, sets);
    };
    G__20306.cljs$core$IFn$_invoke$arity$variadic = G__20306__delegate;
    return G__20306;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        var G__20309 = null;
        if (arguments.length > 2) {
          var G__20310__i = 0, G__20310__a = new Array(arguments.length - 2);
          while (G__20310__i < G__20310__a.length) {
            G__20310__a[G__20310__i] = arguments[G__20310__i + 2];
            ++G__20310__i;
          }
          G__20309 = new cljs.core.IndexedSeq(G__20310__a, 0);
        }
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20309);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__20312 = s2;
        var G__20313 = s1;
        s1 = G__20312;
        s2 = G__20313;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__20314__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__20311_SHARP_) {
        return-cljs.core.count.call(null, p1__20311_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__20314 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20315__i = 0, G__20315__a = new Array(arguments.length - 2);
        while (G__20315__i < G__20315__a.length) {
          G__20315__a[G__20315__i] = arguments[G__20315__i + 2];
          ++G__20315__i;
        }
        sets = new cljs.core.IndexedSeq(G__20315__a, 0);
      }
      return G__20314__delegate.call(this, s1, s2, sets);
    };
    G__20314.cljs$lang$maxFixedArity = 2;
    G__20314.cljs$lang$applyTo = function(arglist__20316) {
      var s1 = cljs.core.first(arglist__20316);
      arglist__20316 = cljs.core.next(arglist__20316);
      var s2 = cljs.core.first(arglist__20316);
      var sets = cljs.core.rest(arglist__20316);
      return G__20314__delegate(s1, s2, sets);
    };
    G__20314.cljs$core$IFn$_invoke$arity$variadic = G__20314__delegate;
    return G__20314;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        var G__20317 = null;
        if (arguments.length > 2) {
          var G__20318__i = 0, G__20318__a = new Array(arguments.length - 2);
          while (G__20318__i < G__20318__a.length) {
            G__20318__a[G__20318__i] = arguments[G__20318__i + 2];
            ++G__20318__i;
          }
          G__20317 = new cljs.core.IndexedSeq(G__20318__a, 0);
        }
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20317);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__20319__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__20319 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        var G__20320__i = 0, G__20320__a = new Array(arguments.length - 2);
        while (G__20320__i < G__20320__a.length) {
          G__20320__a[G__20320__i] = arguments[G__20320__i + 2];
          ++G__20320__i;
        }
        sets = new cljs.core.IndexedSeq(G__20320__a, 0);
      }
      return G__20319__delegate.call(this, s1, s2, sets);
    };
    G__20319.cljs$lang$maxFixedArity = 2;
    G__20319.cljs$lang$applyTo = function(arglist__20321) {
      var s1 = cljs.core.first(arglist__20321);
      arglist__20321 = cljs.core.next(arglist__20321);
      var s2 = cljs.core.first(arglist__20321);
      var sets = cljs.core.rest(arglist__20321);
      return G__20319__delegate(s1, s2, sets);
    };
    G__20319.cljs$core$IFn$_invoke$arity$variadic = G__20319__delegate;
    return G__20319;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        var G__20322 = null;
        if (arguments.length > 2) {
          var G__20323__i = 0, G__20323__a = new Array(arguments.length - 2);
          while (G__20323__i < G__20323__a.length) {
            G__20323__a[G__20323__i] = arguments[G__20323__i + 2];
            ++G__20323__i;
          }
          G__20322 = new cljs.core.IndexedSeq(G__20323__a, 0);
        }
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, G__20322);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20324_SHARP_) {
    return cljs.core.select_keys.call(null, p1__20324_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__20327) {
    var vec__20328 = p__20327;
    var old = cljs.core.nth.call(null, vec__20328, 0, null);
    var new$ = cljs.core.nth.call(null, vec__20328, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__20329_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__20329_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__20332) {
    var vec__20333 = p__20332;
    var k = cljs.core.nth.call(null, vec__20333, 0, null);
    var v = cljs.core.nth.call(null, vec__20333, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__20340 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__20340, 0, null);
      var s = cljs.core.nth.call(null, vec__20340, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__20340, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__20340, r, s, idx) {
              return function(p1__20334_SHARP_, p2__20335_SHARP_) {
                return cljs.core.conj.call(null, p1__20334_SHARP_, cljs.core.merge.call(null, p2__20335_SHARP_, x));
              };
            }(found, ks, vec__20340, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__20340, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__20341 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__20341, 0, null);
    var s = cljs.core.nth.call(null, vec__20341, 1, null);
    var k = cljs.core.nth.call(null, vec__20341, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__20341, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__20341, r, s, k, idx) {
            return function(p1__20336_SHARP_, p2__20337_SHARP_) {
              return cljs.core.conj.call(null, p1__20336_SHARP_, cljs.core.merge.call(null, p2__20337_SHARP_, x));
            };
          }(found, vec__20341, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__20341, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20342_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__20342_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__20343_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__20343_SHARP_);
  }, set2);
};
// Input 63
goog.provide("clojure.data");
goog.require("cljs.core");
goog.require("clojure.set");
clojure.data.atom_diff = function atom_diff(a, b) {
  if (cljs.core._EQ_.call(null, a, b)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, null], null);
  }
};
clojure.data.vectorize = function vectorize(m) {
  if (cljs.core.seq.call(null, m)) {
    return cljs.core.reduce.call(null, function(result, p__20291) {
      var vec__20292 = p__20291;
      var k = cljs.core.nth.call(null, vec__20292, 0, null);
      var v = cljs.core.nth.call(null, vec__20292, 1, null);
      return cljs.core.assoc.call(null, result, k, v);
    }, cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.apply.call(null, cljs.core.max, cljs.core.keys.call(null, m)), null)), m);
  } else {
    return null;
  }
};
clojure.data.diff_associative_key = function diff_associative_key(a, b, k) {
  var va = cljs.core.get.call(null, a, k);
  var vb = cljs.core.get.call(null, b, k);
  var vec__20294 = clojure.data.diff.call(null, va, vb);
  var a_STAR_ = cljs.core.nth.call(null, vec__20294, 0, null);
  var b_STAR_ = cljs.core.nth.call(null, vec__20294, 1, null);
  var ab = cljs.core.nth.call(null, vec__20294, 2, null);
  var in_a = cljs.core.contains_QMARK_.call(null, a, k);
  var in_b = cljs.core.contains_QMARK_.call(null, b, k);
  var same = in_a && in_b && (!(ab == null) || va == null && vb == null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [in_a && (!(a_STAR_ == null) || !same) ? new cljs.core.PersistentArrayMap.fromArray([k, a_STAR_], true, false) : null, in_b && (!(b_STAR_ == null) || !same) ? new cljs.core.PersistentArrayMap.fromArray([k, b_STAR_], true, false) : null, same ? new cljs.core.PersistentArrayMap.fromArray([k, ab], true, false) : null], null);
};
clojure.data.diff_associative = function() {
  var diff_associative = null;
  var diff_associative__2 = function(a, b) {
    return diff_associative.call(null, a, b, clojure.set.union.call(null, cljs.core.keys.call(null, a), cljs.core.keys.call(null, b)));
  };
  var diff_associative__3 = function(a, b, ks) {
    return cljs.core.reduce.call(null, function(diff1, diff2) {
      return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.merge, diff1, diff2));
    }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, null], null), cljs.core.map.call(null, cljs.core.partial.call(null, clojure.data.diff_associative_key, a, b), ks));
  };
  diff_associative = function(a, b, ks) {
    switch(arguments.length) {
      case 2:
        return diff_associative__2.call(this, a, b);
      case 3:
        return diff_associative__3.call(this, a, b, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  diff_associative.cljs$core$IFn$_invoke$arity$2 = diff_associative__2;
  diff_associative.cljs$core$IFn$_invoke$arity$3 = diff_associative__3;
  return diff_associative;
}();
clojure.data.diff_sequential = function diff_sequential(a, b) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, clojure.data.vectorize, clojure.data.diff_associative.call(null, cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.vec.call(null, a), cljs.core.vector_QMARK_.call(null, b) ? b : cljs.core.vec.call(null, b), cljs.core.range.call(null, function() {
    var x__4116__auto__ = cljs.core.count.call(null, a);
    var y__4117__auto__ = cljs.core.count.call(null, b);
    return x__4116__auto__ > y__4117__auto__ ? x__4116__auto__ : y__4117__auto__;
  }()))));
};
clojure.data.diff_set = function diff_set(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_empty.call(null, clojure.set.difference.call(null, a, b)), cljs.core.not_empty.call(null, clojure.set.difference.call(null, b, a)), cljs.core.not_empty.call(null, clojure.set.intersection.call(null, a, b))], null);
};
clojure.data.EqualityPartition = function() {
  var obj20296 = {};
  return obj20296;
}();
clojure.data.equality_partition = function equality_partition(x) {
  if (function() {
    var and__3787__auto__ = x;
    if (and__3787__auto__) {
      return x.clojure$data$EqualityPartition$equality_partition$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return x.clojure$data$EqualityPartition$equality_partition$arity$1(x);
  } else {
    var x__4443__auto__ = x == null ? null : x;
    return function() {
      var or__3799__auto__ = clojure.data.equality_partition[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = clojure.data.equality_partition["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "EqualityPartition.equality-partition", x);
        }
      }
    }().call(null, x);
  }
};
clojure.data.Diff = function() {
  var obj20298 = {};
  return obj20298;
}();
clojure.data.diff_similar = function diff_similar(a, b) {
  if (function() {
    var and__3787__auto__ = a;
    if (and__3787__auto__) {
      return a.clojure$data$Diff$diff_similar$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return a.clojure$data$Diff$diff_similar$arity$2(a, b);
  } else {
    var x__4443__auto__ = a == null ? null : a;
    return function() {
      var or__3799__auto__ = clojure.data.diff_similar[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = clojure.data.diff_similar["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Diff.diff-similar", a);
        }
      }
    }().call(null, a, b);
  }
};
clojure.data.EqualityPartition["_"] = true;
clojure.data.equality_partition["_"] = function(x) {
  if (function() {
    var G__20299 = x;
    if (G__20299) {
      var bit__4480__auto__ = G__20299.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4480__auto__ || G__20299.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__20299.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__20299);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__20299);
    }
  }()) {
    return new cljs.core.Keyword(null, "map", "map", 1371690461);
  } else {
    if (function() {
      var G__20300 = x;
      if (G__20300) {
        var bit__4480__auto__ = G__20300.cljs$lang$protocol_mask$partition0$ & 4096;
        if (bit__4480__auto__ || G__20300.cljs$core$ISet$) {
          return true;
        } else {
          if (!G__20300.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__20300);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__20300);
      }
    }()) {
      return new cljs.core.Keyword(null, "set", "set", 304602554);
    } else {
      if (function() {
        var G__20301 = x;
        if (G__20301) {
          var bit__4480__auto__ = G__20301.cljs$lang$protocol_mask$partition0$ & 16777216;
          if (bit__4480__auto__ || G__20301.cljs$core$ISequential$) {
            return true;
          } else {
            if (!G__20301.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__20301);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__20301);
        }
      }()) {
        return new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
      } else {
        return new cljs.core.Keyword(null, "atom", "atom", -397043653);
      }
    }
  }
};
clojure.data.EqualityPartition["boolean"] = true;
clojure.data.equality_partition["boolean"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["function"] = true;
clojure.data.equality_partition["function"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["array"] = true;
clojure.data.equality_partition["array"] = function(x) {
  return new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
};
clojure.data.EqualityPartition["number"] = true;
clojure.data.equality_partition["number"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["string"] = true;
clojure.data.equality_partition["string"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.EqualityPartition["null"] = true;
clojure.data.equality_partition["null"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
};
clojure.data.Diff["_"] = true;
clojure.data.diff_similar["_"] = function(a, b) {
  return function() {
    var G__20302 = clojure.data.equality_partition.call(null, a) instanceof cljs.core.Keyword ? clojure.data.equality_partition.call(null, a).fqn : null;
    switch(G__20302) {
      case "map":
        return clojure.data.diff_associative;
        break;
      case "sequential":
        return clojure.data.diff_sequential;
        break;
      case "set":
        return clojure.data.diff_set;
        break;
      case "atom":
        return clojure.data.atom_diff;
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(clojure.data.equality_partition.call(null, a))].join(""));;
    }
  }().call(null, a, b);
};
clojure.data.Diff["boolean"] = true;
clojure.data.diff_similar["boolean"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["function"] = true;
clojure.data.diff_similar["function"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["array"] = true;
clojure.data.diff_similar["array"] = function(a, b) {
  return clojure.data.diff_sequential.call(null, a, b);
};
clojure.data.Diff["number"] = true;
clojure.data.diff_similar["number"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["string"] = true;
clojure.data.diff_similar["string"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.Diff["null"] = true;
clojure.data.diff_similar["null"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
};
clojure.data.diff = function diff(a, b) {
  if (cljs.core._EQ_.call(null, a, b)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null);
  } else {
    if (cljs.core._EQ_.call(null, clojure.data.equality_partition.call(null, a), clojure.data.equality_partition.call(null, b))) {
      return clojure.data.diff_similar.call(null, a, b);
    } else {
      return clojure.data.atom_diff.call(null, a, b);
    }
  }
};
// Input 64
goog.provide("censorius.utils");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("goog.string");
goog.require("reagent.session");
goog.require("clojure.data");
goog.require("goog.string.format");
goog.require("clojure.string");
censorius.utils.gensymreally = function gensymreally(string) {
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = string;
    if (cljs.core.truth_(and__3787__auto__)) {
      return typeof string === "string" && cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, string));
    } else {
      return and__3787__auto__;
    }
  }())) {
    return cljs.core.gensym.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, string, /[^A-Za-z0-9]+/, "-"), "-", "_"));
  } else {
    return cljs.core.gensym.call(null, "G");
  }
};
censorius.utils.log10 = function log10(x) {
  return Math.log(x) / Math.LN10;
};
censorius.utils.stringerific = function stringerific(thing) {
  var na\u00efve = [cljs.core.str(thing)].join("");
  if (cljs.core._EQ_.call(null, "[object Object]", na\u00efve)) {
    try {
      return JSON.stringify(thing, null, 4);
    } catch (e9706) {
      if (e9706 instanceof TypeError) {
        var e = e9706;
        try {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(e, na\u00efve) {
            return function(p__9708) {
              var vec__9709 = p__9708;
              var key = cljs.core.nth.call(null, vec__9709, 0, null);
              var value = cljs.core.nth.call(null, vec__9709, 1, null);
              return[cljs.core.str(key), cljs.core.str(" \u2190 "), cljs.core.str(value), cljs.core.str(";  ")].join("");
            };
          }(e, na\u00efve), cljs.core.js__GT_clj.call(null, thing, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true)));
        } catch (e9707) {
          var e__$1 = e9707;
          return thing;
        }
      } else {
        throw e9706;
      }
    }
  } else {
    return na\u00efve;
  }
};
censorius.utils.log = function() {
  var log__delegate = function(stuff) {
    return console.log(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, censorius.utils.stringerific, stuff)));
  };
  var log = function(var_args) {
    var stuff = null;
    if (arguments.length > 0) {
      var G__9710__i = 0, G__9710__a = new Array(arguments.length - 0);
      while (G__9710__i < G__9710__a.length) {
        G__9710__a[G__9710__i] = arguments[G__9710__i + 0];
        ++G__9710__i;
      }
      stuff = new cljs.core.IndexedSeq(G__9710__a, 0);
    }
    return log__delegate.call(this, stuff);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__9711) {
    var stuff = cljs.core.seq(arglist__9711);
    return log__delegate(stuff);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
censorius.utils.unique_key = function unique_key(prefix) {
  return[cljs.core.str(cljs.core.gensym.call(null, prefix))].join("");
};
censorius.utils.now = function now() {
  return new Date;
};
censorius.utils.no_spaces = function no_spaces(word) {
  return clojure.string.replace.call(null, word, /\s+/, "");
};
censorius.utils.format_email = function format_email(address) {
  var parts = clojure.string.split.call(null, censorius.utils.no_spaces.call(null, address), /@/);
  if (cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, parts))) {
    return[cljs.core.str(cljs.core.first.call(null, parts)), cljs.core.str("@"), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.last.call(null, parts)))].join("");
  } else {
    return censorius.utils.no_spaces.call(null, address);
  }
};
censorius.utils._PLUS_digit_chars_PLUS_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, ["0", null, "1", null, "2", null, "3", null, "4", null, "5", null, "6", null, "7", null, "8", null, "9", null], null), null);
censorius.utils.just_digits = function just_digits(string) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.filter.call(null, censorius.utils._PLUS_digit_chars_PLUS_, string));
};
censorius.utils.just_digits_PLUS__PLUS_ = function just_digits_PLUS__PLUS_(string) {
  var digits = cljs.core.apply.call(null, cljs.core.str, cljs.core.filter.call(null, censorius.utils._PLUS_digit_chars_PLUS_, string));
  if (cljs.core._EQ_.call(null, "+", cljs.core.first.call(null, string))) {
    return[cljs.core.str("+"), cljs.core.str(digits)].join("");
  } else {
    return digits;
  }
};
censorius.utils.just_number = function just_number(string) {
  return[cljs.core.str(censorius.utils.just_digits.call(null, string).parseInt())].join("");
};
censorius.utils.just_digits_QMARK_ = function just_digits_QMARK_(string) {
  return cljs.core._EQ_.call(null, string, censorius.utils.just_digits.call(null, string));
};
censorius.utils._PLUS_uk_4_PLUS_5_PLUS_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 40, ["827", null, "695", null, "488", null, "384", null, "647", null, "527", null, "364", null, "404", null, "995", null, "480", null, "884", null, "949", null, "297", null, "837", null, "420", null, "562", null, "659", null, "629", null, "768", null, "363", null, "386", null, "208", null, "276", null, "726", null, "524", null, "635", null, "606", null, "461", null, "935", null, 
"750", null, "744", null, "254", null, "460", null, "298", null, "963", null, "946", null, "566", null, "204", null, "905", null, "900", null], null), null);
censorius.utils._PLUS_uk_5_PLUS_5_PLUS_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 12, ["7687", null, "6973", null, "6974", null, "3873", null, "5396", null, "5242", null, "7684", null, "6977", null, "5395", null, "9467", null, "5394", null, "7683", null], null), null);
censorius.utils.format_phone = function format_phone(number) {
  var formatted = function() {
    var digits = cljs.core.apply.call(null, cljs.core.str, censorius.utils.just_digits.call(null, number));
    var length = cljs.core.count.call(null, digits);
    if (length > 4 && cljs.core._EQ_.call(null, "+", cljs.core.first.call(null, number)) && cljs.core._EQ_.call(null, "353", digits.substring(0, 3))) {
      return[cljs.core.str("+353 "), cljs.core.str(length < 10 ? digits.substring(3, length) : length < 12 ? [cljs.core.str(digits.substring(3, 5)), cljs.core.str(" "), cljs.core.str(digits.substring(5, length))].join("") : cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 3)) && cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 4)) ? [cljs.core.str("(01) "), cljs.core.str(digits.substring(5, 8)), cljs.core.str(" "), cljs.core.str(digits.substring(8, length))].join("") : 
      cljs.core.truth_(function() {
        var and__3787__auto__ = cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 3));
        if (and__3787__auto__) {
          var and__3787__auto____$1 = function() {
            var or__3799__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["2", null, "5", null, "6", null, "7", null], null), null)).call(null, cljs.core.nth.call(null, digits, 4));
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return cljs.core._EQ_.call(null, "4", cljs.core.nth.call(null, digits, 4)) && cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["0", null, "8", null], null), null)).call(null, cljs.core.nth.call(null, digits, 5)));
            }
          }();
          if (cljs.core.truth_(and__3787__auto____$1)) {
            return cljs.core.not_EQ_.call(null, "8", cljs.core.nth.call(null, digits, 4)) || cljs.core.not_EQ_.call(null, "5", cljs.core.nth.call(null, digits, 6));
          } else {
            return and__3787__auto____$1;
          }
        } else {
          return and__3787__auto__;
        }
      }()) ? [cljs.core.str("("), cljs.core.str(digits.substring(3, 6)), cljs.core.str(") "), cljs.core.str(digits.substring(6, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 3)) && cljs.core._EQ_.call(null, "8", cljs.core.nth.call(null, digits, 4)) && cljs.core._EQ_.call(null, "5", cljs.core.nth.call(null, digits, 6)) ? [cljs.core.str("\ud83d\udcf2 ("), cljs.core.str(digits.substring(3, 6)), cljs.core.str(") 5 "), 
      cljs.core.str(digits.substring(7, 10)), cljs.core.str(" "), cljs.core.str(digits.substring(10, length))].join("") : cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 3)) && cljs.core._EQ_.call(null, "8", cljs.core.nth.call(null, digits, 4)) ? [cljs.core.str("\ud83d\udcf1 ("), cljs.core.str(digits.substring(3, 6)), cljs.core.str(") "), cljs.core.str(digits.substring(6, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core._EQ_.call(null, "0", 
      cljs.core.nth.call(null, digits, 3)) && cljs.core._EQ_.call(null, "4", cljs.core.nth.call(null, digits, 4)) ? [cljs.core.str("("), cljs.core.str(digits.substring(3, 7)), cljs.core.str(") "), cljs.core.str(digits.substring(7, 10)), cljs.core.str(" "), cljs.core.str(digits.substring(10, length))].join("") : digits.substring(3, length))].join("");
    } else {
      if (length > 3 && cljs.core._EQ_.call(null, "+", cljs.core.first.call(null, number)) && cljs.core._EQ_.call(null, "4", cljs.core.nth.call(null, digits, 0), cljs.core.nth.call(null, digits, 1))) {
        return[cljs.core.str("+44 "), cljs.core.str(length < 12 ? digits.substring(2, length) : cljs.core.not_EQ_.call(null, "0", cljs.core.nth.call(null, digits, 2)) ? digits.substring(2, length) : cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 3)) && !(cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 4)) || cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 5))) ? [cljs.core.str("("), cljs.core.str(digits.substring(2, 7)), cljs.core.str(") "), cljs.core.str(digits.substring(7, 
        length))].join("") : cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 3)) && (cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 4)) || cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 5))) ? [cljs.core.str("("), cljs.core.str(digits.substring(2, 6)), cljs.core.str(") "), cljs.core.str(digits.substring(6, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core._EQ_.call(null, "2", cljs.core.nth.call(null, digits, 
        3)) ? [cljs.core.str("("), cljs.core.str(digits.substring(2, 5)), cljs.core.str(") "), cljs.core.str(digits.substring(5, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core.truth_(function() {
          var and__3787__auto__ = cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 3));
          if (and__3787__auto__) {
            return censorius.utils._PLUS_uk_5_PLUS_5_PLUS_.call(null, digits.substring(4, 7));
          } else {
            return and__3787__auto__;
          }
        }()) ? [cljs.core.str("("), cljs.core.str(digits.substring(2, 7)), cljs.core.str(") "), cljs.core.str(digits.substring(7, length))].join("") : cljs.core.truth_(function() {
          var and__3787__auto__ = cljs.core._EQ_.call(null, "7", cljs.core.nth.call(null, digits, 3));
          if (and__3787__auto__) {
            var or__3799__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, ["4", null, "5", null, "7", null, "8", null, "9", null], null), null)).call(null, cljs.core.nth.call(null, digits, 4));
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return cljs.core._EQ_.call(null, "624", digits.substring(4, 7));
            }
          } else {
            return and__3787__auto__;
          }
        }()) ? [cljs.core.str("\ud83d\udcf1 "), cljs.core.str(digits.substring(2, 7)), cljs.core.str(" "), cljs.core.str(digits.substring(7, length))].join("") : cljs.core._EQ_.call(null, "70", digits.substring(3, 5)) ? [cljs.core.str("\ud83d\udc81 "), cljs.core.str(digits.substring(2, 5)), cljs.core.str(" "), cljs.core.str(digits.substring(5, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core._EQ_.call(null, "76", digits.substring(3, 5)) ? [cljs.core.str("\ud83d\udcdf "), 
        cljs.core.str(digits.substring(2, 5)), cljs.core.str(" "), cljs.core.str(digits.substring(5, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core._EQ_.call(null, "3", cljs.core.nth.call(null, digits, 3)) ? [cljs.core.str(digits.substring(2, 6)), cljs.core.str(" "), cljs.core.str(digits.substring(6, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core._EQ_.call(null, "5", cljs.core.nth.call(null, digits, 3)) && cljs.core._EQ_.call(null, 
        "0", cljs.core.nth.call(null, digits, 4), cljs.core.nth.call(null, digits, 5)) ? [cljs.core.str("0500 "), cljs.core.str(digits.substring(6, length))].join("") : cljs.core._EQ_.call(null, "8", cljs.core.nth.call(null, digits, 3)) && cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 4), cljs.core.nth.call(null, digits, 5)) && length < 13 ? [cljs.core.str(digits.substring(2, 6)), cljs.core.str(" "), cljs.core.str(digits.substring(6, length))].join("") : cljs.core.truth_(function() {
          var and__3787__auto__ = cljs.core._EQ_.call(null, "8", cljs.core.nth.call(null, digits, 3));
          if (and__3787__auto__) {
            var and__3787__auto____$1 = cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 4));
            if (and__3787__auto____$1) {
              return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["0", null, "8", null], null), null)).call(null, cljs.core.nth.call(null, digits, 5));
            } else {
              return and__3787__auto____$1;
            }
          } else {
            return and__3787__auto__;
          }
        }()) ? [cljs.core.str(digits.substring(2, 6)), cljs.core.str(" "), cljs.core.str(digits.substring(6, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core.truth_(function() {
          var and__3787__auto__ = cljs.core._EQ_.call(null, "8", cljs.core.nth.call(null, digits, 3));
          if (and__3787__auto__) {
            return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["2", null, "4", null, "7", null], null), null)).call(null, cljs.core.nth.call(null, digits, 4));
          } else {
            return and__3787__auto__;
          }
        }()) ? [cljs.core.str(digits.substring(2, 6)), cljs.core.str(" "), cljs.core.str(digits.substring(6, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : cljs.core._EQ_.call(null, "5", cljs.core.nth.call(null, digits, 3)) ? [cljs.core.str(digits.substring(2, 5)), cljs.core.str(" "), cljs.core.str(digits.substring(5, 9)), cljs.core.str(" "), cljs.core.str(digits.substring(9, length))].join("") : digits.substring(2, length))].join("");
      } else {
        if (cljs.core._EQ_.call(null, "+", cljs.core.first.call(null, number)) && cljs.core.not_EQ_.call(null, "1", cljs.core.first.call(null, digits))) {
          return number;
        } else {
          if (cljs.core._EQ_.call(null, "1", cljs.core.first.call(null, digits))) {
            return[cljs.core.str("+1 "), cljs.core.str(format_phone.call(null, cljs.core.rest.call(null, digits)))].join("");
          } else {
            if (length < 7) {
              return digits;
            } else {
              if (length < 10) {
                return[cljs.core.str(digits.substring(0, length - 4)), cljs.core.str("-"), cljs.core.str(digits.substring(length - 4, length))].join("");
              } else {
                if (cljs.core._EQ_.call(null, length, 10)) {
                  return[cljs.core.str("("), cljs.core.str(digits.substring(0, 3)), cljs.core.str(") "), cljs.core.str(digits.substring(3, 6)), cljs.core.str("-"), cljs.core.str(digits.substring(6, 10))].join("");
                } else {
                  return[cljs.core.str("("), cljs.core.str(digits.substring(0, 3)), cljs.core.str(") "), cljs.core.str(digits.substring(3, 6)), cljs.core.str("-"), cljs.core.str(digits.substring(6, 10)), cljs.core.str(" x"), cljs.core.str(digits.substring(10, length))].join("");
                }
              }
            }
          }
        }
      }
    }
  }();
  return formatted;
};
censorius.utils.no_op = function() {
  var no_op__delegate = function(any) {
    return censorius.utils.log.call(null, "Ignoring: ", any);
  };
  var no_op = function(var_args) {
    var any = null;
    if (arguments.length > 0) {
      var G__9712__i = 0, G__9712__a = new Array(arguments.length - 0);
      while (G__9712__i < G__9712__a.length) {
        G__9712__a[G__9712__i] = arguments[G__9712__i + 0];
        ++G__9712__i;
      }
      any = new cljs.core.IndexedSeq(G__9712__a, 0);
    }
    return no_op__delegate.call(this, any);
  };
  no_op.cljs$lang$maxFixedArity = 0;
  no_op.cljs$lang$applyTo = function(arglist__9713) {
    var any = cljs.core.seq(arglist__9713);
    return no_op__delegate(any);
  };
  no_op.cljs$core$IFn$_invoke$arity$variadic = no_op__delegate;
  return no_op;
}();
censorius.utils.area_code_cache = cljs.core.PersistentArrayMap.EMPTY;
censorius.utils.mkfun_area_code_reply = function mkfun_area_code_reply(code) {
  return function(reply) {
    var response = cljs.core.js__GT_clj.call(null, reply.target.getResponseJson(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
    if (cljs.core._EQ_.call(null, "success", (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(response))) {
      var seq__9720 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "area-codes", "area-codes", -1828703223)).cljs$core$IFn$_invoke$arity$1(response));
      var chunk__9721 = null;
      var count__9722 = 0;
      var i__9723 = 0;
      while (true) {
        if (i__9723 < count__9722) {
          var map__9724 = cljs.core._nth.call(null, chunk__9721, i__9723);
          var map__9724__$1 = cljs.core.seq_QMARK_.call(null, map__9724) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9724) : map__9724;
          var state = cljs.core.get.call(null, map__9724__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
          var area_code = cljs.core.get.call(null, map__9724__$1, new cljs.core.Keyword(null, "area-code", "area-code", 10244836));
          cljs.core.swap_BANG_.call(null, censorius.utils.area_code_cache, cljs.core.assoc, area_code, cljs.core.not_EQ_.call(null, "", state));
          var G__9726 = seq__9720;
          var G__9727 = chunk__9721;
          var G__9728 = count__9722;
          var G__9729 = i__9723 + 1;
          seq__9720 = G__9726;
          chunk__9721 = G__9727;
          count__9722 = G__9728;
          i__9723 = G__9729;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq.call(null, seq__9720);
          if (temp__4126__auto__) {
            var seq__9720__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__9720__$1)) {
              var c__4586__auto__ = cljs.core.chunk_first.call(null, seq__9720__$1);
              var G__9730 = cljs.core.chunk_rest.call(null, seq__9720__$1);
              var G__9731 = c__4586__auto__;
              var G__9732 = cljs.core.count.call(null, c__4586__auto__);
              var G__9733 = 0;
              seq__9720 = G__9730;
              chunk__9721 = G__9731;
              count__9722 = G__9732;
              i__9723 = G__9733;
              continue;
            } else {
              var map__9725 = cljs.core.first.call(null, seq__9720__$1);
              var map__9725__$1 = cljs.core.seq_QMARK_.call(null, map__9725) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9725) : map__9725;
              var state = cljs.core.get.call(null, map__9725__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
              var area_code = cljs.core.get.call(null, map__9725__$1, new cljs.core.Keyword(null, "area-code", "area-code", 10244836));
              cljs.core.swap_BANG_.call(null, censorius.utils.area_code_cache, cljs.core.assoc, area_code, cljs.core.not_EQ_.call(null, "", state));
              var G__9734 = cljs.core.next.call(null, seq__9720__$1);
              var G__9735 = null;
              var G__9736 = 0;
              var G__9737 = 0;
              seq__9720 = G__9734;
              chunk__9721 = G__9735;
              count__9722 = G__9736;
              i__9723 = G__9737;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      censorius.utils.log.call(null, "Error response from area codes API for code ", code, ": \u201c", (new cljs.core.Keyword(null, "error-message", "error-message", 1756021561)).cljs$core$IFn$_invoke$arity$1(response), "\u201d");
      return cljs.core.swap_BANG_.call(null, censorius.utils.area_code_cache, cljs.core.assoc, code, false);
    }
  };
};
censorius.utils.all_nanpa_area_codes = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.str, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 362, [920, null, 972, null, 519, null, 716, null, 530, null, 929, null, 586, null, 410, null, 765, null, 443, null, 779, null, 970, null, 249, null, 734, null, 702, null, 949, null, 218, null, 812, null, 774, null, 475, null, 580, null, 769, null, 430, null, 641, null, 240, null, 620, null, 931, null, 989, null, 210, null, 
229, null, 213, null, 670, null, 343, null, 473, null, 830, null, 613, null, 224, null, 610, null, 806, null, 571, null, 770, null, 814, null, 859, null, 980, null, 205, null, 510, null, 662, null, 352, null, 416, null, 631, null, 901, null, 713, null, 385, null, 773, null, 360, null, 763, null, 269, null, 206, null, 715, null, 721, null, 862, null, 615, null, 681, null, 225, null, 865, null, 805, null, 217, null, 682, null, 508, null, 415, null, 239, null, 478, null, 878, null, 345, null, 204, null, 
470, null, 646, null, 405, null, 940, null, 902, null, 518, null, 260, null, 267, null, 319, null, 534, null, 603, null, 450, null, 504, null, 819, null, 818, null, 505, null, 863, null, 512, null, 502, null, 801, null, 307, null, 758, null, 517, null, 361, null, 264, null, 678, null, 234, null, 856, null, 817, null, 242, null, 832, null, 956, null, 917, null, 251, null, 585, null, 437, null, 516, null, 848, null, 709, null, 540, null, 479, null, 630, null, 916, null, 815, null, 281, null, 402, null, 
669, null, 781, null, 740, null, 309, null, 458, null, 952, null, 626, null, 407, null, 847, null, 506, null, 581, null, 331, null, 284, null, 208, null, 305, null, 708, null, 256, null, 657, null, 514, null, 731, null, 619, null, 985, null, 214, null, 804, null, 869, null, 785, null, 442, null, 561, null, 954, null, 607, null, 314, null, 782, null, 226, null, 418, null, 262, null, 304, null, 401, null, 317, null, 810, null, 364, null, 515, null, 412, null, 601, null, 308, null, 908, null, 649, null, 
531, null, 419, null, 365, null, 417, null, 979, null, 867, null, 618, null, 909, null, 947, null, 347, null, 501, null, 872, null, 216, null, 829, null, 707, null, 551, null, 971, null, 316, null, 303, null, 671, null, 905, null, 310, null, 313, null, 567, null, 845, null, 219, null, 604, null, 541, null, 351, null, 873, null, 231, null, 413, null, 784, null, 575, null, 250, null, 539, null, 301, null, 424, null, 684, null, 951, null, 573, null, 408, null, 563, null, 850, null, 616, null, 608, null, 
737, null, 623, null, 816, null, 334, null, 323, null, 808, null, 248, null, 587, null, 507, null, 724, null, 941, null, 201, null, 904, null, 778, null, 252, null, 978, null, 775, null, 325, null, 828, null, 813, null, 876, null, 228, null, 907, null, 306, null, 276, null, 340, null, 312, null, 606, null, 520, null, 760, null, 720, null, 440, null, 330, null, 803, null, 435, null, 703, null, 973, null, 484, null, 236, null, 727, null, 772, null, 570, null, 757, null, 984, null, 719, null, 786, null, 
870, null, 849, null, 910, null, 302, null, 701, null, 787, null, 718, null, 215, null, 704, null, 938, null, 609, null, 202, null, 868, null, 339, null, 431, null, 337, null, 503, null, 857, null, 706, null, 831, null, 918, null, 289, null, 925, null, 712, null, 414, null, 802, null, 860, null, 732, null, 661, null, 913, null, 906, null, 254, null, 404, null, 617, null, 513, null, 705, null, 959, null, 346, null, 650, null, 639, null, 647, null, 559, null, 562, null, 912, null, 664, null, 315, null, 
914, null, 480, null, 203, null, 667, null, 807, null, 321, null, 441, null, 268, null, 320, null, 605, null, 636, null, 423, null, 614, null, 762, null, 409, null, 574, null, 747, null, 843, null, 767, null, 928, null, 809, null, 509, null, 207, null, 434, null, 336, null, 937, null, 660, null, 272, null, 903, null, 386, null, 270, null, 717, null, 403, null, 469, null, 253, null, 612, null, 209, null, 425, null, 864, null, 602, null, 318, null, 651, null, 725, null, 406, null, 438, null, 780, null, 
939, null, 579, null, 919, null, 714, null, 754, null, 432, null, 212, null, 246, null, 915, null, 936, null, 858, null], null), null)));
censorius.utils.phone_number_QMARK_ = function phone_number_QMARK_(number) {
  var validp = function() {
    var digits = censorius.utils.just_digits.call(null, number);
    var length = cljs.core.count.call(null, digits);
    if (length > 4 && cljs.core._EQ_.call(null, "+", cljs.core.first.call(null, number)) && cljs.core._EQ_.call(null, "353", digits.substring(0, 3))) {
      var and__3787__auto__ = cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 3));
      if (and__3787__auto__) {
        var or__3799__auto__ = cljs.core._EQ_.call(null, length, 12) && cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 4));
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = cljs.core._EQ_.call(null, length, 14) && cljs.core._EQ_.call(null, "5", cljs.core.nth.call(null, digits, 6)) && cljs.core._EQ_.call(null, "8", cljs.core.nth.call(null, digits, 4));
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            var or__3799__auto____$2 = function() {
              var and__3787__auto____$1 = cljs.core._EQ_.call(null, length, 13);
              if (and__3787__auto____$1) {
                var or__3799__auto____$2 = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, ["2", null, "5", null, "6", null, "7", null, "8", null], null), null)).call(null, cljs.core.nth.call(null, digits, 4));
                if (cljs.core.truth_(or__3799__auto____$2)) {
                  return or__3799__auto____$2;
                } else {
                  return cljs.core._EQ_.call(null, "4", cljs.core.nth.call(null, digits, 4)) && cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["0", null, "8", null], null), null)).call(null, cljs.core.nth.call(null, digits, 5)));
                }
              } else {
                return and__3787__auto____$1;
              }
            }();
            if (cljs.core.truth_(or__3799__auto____$2)) {
              return or__3799__auto____$2;
            } else {
              return cljs.core._EQ_.call(null, length, 14) && cljs.core._EQ_.call(null, "4", cljs.core.nth.call(null, digits, 4));
            }
          }
        }
      } else {
        return and__3787__auto__;
      }
    } else {
      if (length > 3 && cljs.core._EQ_.call(null, "+", cljs.core.first.call(null, number)) && cljs.core._EQ_.call(null, "4", cljs.core.nth.call(null, digits, 0), cljs.core.nth.call(null, digits, 1))) {
        var and__3787__auto__ = cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 2));
        if (and__3787__auto__) {
          var and__3787__auto____$1 = function() {
            var or__3799__auto__ = function() {
              var and__3787__auto____$1 = cljs.core._EQ_.call(null, length, 12);
              if (and__3787__auto____$1) {
                var or__3799__auto__ = cljs.core._EQ_.call(null, "800", digits.substring(3, 6));
                if (or__3799__auto__) {
                  return or__3799__auto__;
                } else {
                  return cljs.core.PersistentHashSet.fromArray([censorius.utils._PLUS_uk_4_PLUS_5_PLUS_], true).call(null, digits.substring(4, 7));
                }
              } else {
                return and__3787__auto____$1;
              }
            }();
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return cljs.core._EQ_.call(null, length, 13);
            }
          }();
          if (cljs.core.truth_(and__3787__auto____$1)) {
            var and__3787__auto____$2 = function() {
              var or__3799__auto__ = cljs.core._EQ_.call(null, 13, length);
              if (or__3799__auto__) {
                return or__3799__auto__;
              } else {
                var and__3787__auto____$2 = cljs.core._EQ_.call(null, 12, length);
                if (and__3787__auto____$2) {
                  var and__3787__auto____$3 = cljs.core._EQ_.call(null, "1", cljs.core.nth.call(null, digits, 3));
                  if (and__3787__auto____$3) {
                    return censorius.utils._PLUS_uk_4_PLUS_5_PLUS_.call(null, digits.substring(4, 6));
                  } else {
                    return and__3787__auto____$3;
                  }
                } else {
                  return and__3787__auto____$2;
                }
              }
            }();
            if (cljs.core.truth_(and__3787__auto____$2)) {
              var and__3787__auto____$3 = cljs.core._EQ_.call(null, "0", cljs.core.nth.call(null, digits, 2));
              if (and__3787__auto____$3) {
                var or__3799__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["1", null, "2", null, "7", null], null), null)).call(null, cljs.core.nth.call(null, digits, 3));
                if (cljs.core.truth_(or__3799__auto__)) {
                  return or__3799__auto__;
                } else {
                  var or__3799__auto____$1 = function() {
                    var and__3787__auto____$4 = cljs.core._EQ_.call(null, "3", cljs.core.nth.call(null, digits, 3));
                    if (and__3787__auto____$4) {
                      return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["0", null, "3", null, "4", null, "7", null], null), null)).call(null, cljs.core.nth.call(null, digits, 4));
                    } else {
                      return and__3787__auto____$4;
                    }
                  }();
                  if (cljs.core.truth_(or__3799__auto____$1)) {
                    return or__3799__auto____$1;
                  } else {
                    var or__3799__auto____$2 = function() {
                      var and__3787__auto____$4 = cljs.core._EQ_.call(null, "5", cljs.core.nth.call(null, digits, 3));
                      if (and__3787__auto____$4) {
                        return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["5", null, "6", null], null), null)).call(null, cljs.core.nth.call(null, digits, 4));
                      } else {
                        return and__3787__auto____$4;
                      }
                    }();
                    if (cljs.core.truth_(or__3799__auto____$2)) {
                      return or__3799__auto____$2;
                    } else {
                      var and__3787__auto____$4 = cljs.core._EQ_.call(null, "8", cljs.core.nth.call(null, digits, 3));
                      if (and__3787__auto____$4) {
                        return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["0", null, "2", null, "4", null, "7", null], null), null)).call(null, cljs.core.nth.call(null, digits, 4));
                      } else {
                        return and__3787__auto____$4;
                      }
                    }
                  }
                }
              } else {
                return and__3787__auto____$3;
              }
            } else {
              return and__3787__auto____$2;
            }
          } else {
            return and__3787__auto____$1;
          }
        } else {
          return and__3787__auto__;
        }
      } else {
        if (cljs.core._EQ_.call(null, "+", cljs.core.first.call(null, number)) && cljs.core.not_EQ_.call(null, "1", cljs.core.first.call(null, digits))) {
          return null;
        } else {
          if (cljs.core._EQ_.call(null, "1", cljs.core.first.call(null, digits))) {
            return phone_number_QMARK_.call(null, digits.substring(1, cljs.core.count.call(null, digits)));
          } else {
            var or__3799__auto__ = function() {
              var and__3787__auto__ = cljs.core.not_EQ_.call(null, "+", cljs.core.first.call(null, number));
              if (and__3787__auto__) {
                var and__3787__auto____$1 = cljs.core._EQ_.call(null, length, 10) || 15 >= length && length >= 13;
                if (and__3787__auto____$1) {
                  var and__3787__auto____$2 = cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["0", null, "1", null], null), null)).call(null, cljs.core.first.call(null, digits)));
                  if (and__3787__auto____$2) {
                    var and__3787__auto____$3 = cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["0", null, "1", null], null), null)).call(null, cljs.core.nth.call(null, digits, 3)));
                    if (and__3787__auto____$3) {
                      var and__3787__auto____$4 = !cljs.core._EQ_.call(null, "1", cljs.core.second.call(null, digits), cljs.core.nth.call(null, digits, 2));
                      if (and__3787__auto____$4) {
                        var and__3787__auto____$5 = cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, ["456", null, "666", null, "999", null, "555", null, "900", null], null), null)).call(null, digits.substring(0, 3)));
                        if (and__3787__auto____$5) {
                          var and__3787__auto____$6 = !cljs.core._EQ_.call(null, "555", digits.substring(3, 6));
                          if (and__3787__auto____$6) {
                            var or__3799__auto__ = function() {
                              var and__3787__auto____$7 = cljs.core._EQ_.call(null, "8", cljs.core.first.call(null, digits));
                              if (and__3787__auto____$7) {
                                var and__3787__auto____$8 = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, ["0", null, "5", null, "6", null, "7", null, "8", null], null), null)).call(null, cljs.core.second.call(null, digits));
                                if (cljs.core.truth_(and__3787__auto____$8)) {
                                  return cljs.core._EQ_.call(null, cljs.core.second.call(null, digits), cljs.core.nth.call(null, digits, 2));
                                } else {
                                  return and__3787__auto____$8;
                                }
                              } else {
                                return and__3787__auto____$7;
                              }
                            }();
                            if (cljs.core.truth_(or__3799__auto__)) {
                              return or__3799__auto__;
                            } else {
                              return cljs.core.contains_QMARK_.call(null, censorius.utils.all_nanpa_area_codes, digits.substring(0, 3));
                            }
                          } else {
                            return and__3787__auto____$6;
                          }
                        } else {
                          return and__3787__auto____$5;
                        }
                      } else {
                        return and__3787__auto____$4;
                      }
                    } else {
                      return and__3787__auto____$3;
                    }
                  } else {
                    return and__3787__auto____$2;
                  }
                } else {
                  return and__3787__auto____$1;
                }
              } else {
                return and__3787__auto__;
              }
            }();
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return false;
            }
          }
        }
      }
    }
  }();
  return validp;
};
censorius.utils.email_QMARK_ = function email_QMARK_(address) {
  var or__3799__auto__ = function() {
    var and__3787__auto__ = address;
    if (cljs.core.truth_(and__3787__auto__)) {
      var and__3787__auto____$1 = typeof address === "string";
      if (and__3787__auto____$1) {
        var and__3787__auto____$2 = cljs.core.re_matches.call(null, /^[-!#-'*+\/-9=?A-Z^-~]+(\.[-!#-'*+\/-9=?A-Z^-~]+)*@[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?(\.[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?)+$/, address);
        if (cljs.core.truth_(and__3787__auto____$2)) {
          return cljs.core.not.call(null, cljs.core.re_matches.call(null, /@example\.com$/, address)) && true;
        } else {
          return and__3787__auto____$2;
        }
      } else {
        return and__3787__auto____$1;
      }
    } else {
      return and__3787__auto__;
    }
  }();
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    return false;
  }
};
censorius.utils.a_name_QMARK_ = function a_name_QMARK_(word) {
  var or__3799__auto__ = cljs.core._EQ_.call(null, word, "Ng");
  if (or__3799__auto__) {
    return or__3799__auto__;
  } else {
    var or__3799__auto____$1 = cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, ["A", null, "E", null, "I", null, "O", null, "U", null, "Y", null], null), null), clojure.string.upper_case.call(null, word));
    if (cljs.core.truth_(or__3799__auto____$1)) {
      return or__3799__auto____$1;
    } else {
      return true;
    }
  }
};
censorius.utils.name_like_QMARK_ = function name_like_QMARK_(s) {
  var and__3787__auto__ = cljs.core.count.call(null, s) > 5;
  if (and__3787__auto__) {
    var and__3787__auto____$1 = cljs.core.some.call(null, censorius.utils.a_name_QMARK_, clojure.string.split.call(null, s, /\s+/));
    if (cljs.core.truth_(and__3787__auto____$1)) {
      return cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [" ", null], null), null), clojure.string.trim.call(null, s));
    } else {
      return and__3787__auto____$1;
    }
  } else {
    return and__3787__auto__;
  }
};
censorius.utils.name_case = function name_case(string) {
  var trailing_space_QMARK_ = cljs.core._EQ_.call(null, " ", cljs.core.last.call(null, string));
  var joined = clojure.string.join.call(null, " ", cljs.core.map.call(null, function(trailing_space_QMARK_) {
    return function(p1__9738_SHARP_) {
      if (cljs.core.truth_(function() {
        var or__3799__auto__ = cljs.core._EQ_.call(null, p1__9738_SHARP_, clojure.string.lower_case.call(null, p1__9738_SHARP_));
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var and__3787__auto__ = cljs.core._EQ_.call(null, p1__9738_SHARP_, clojure.string.upper_case.call(null, p1__9738_SHARP_));
          if (and__3787__auto__) {
            return cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, ["A", null, "E", null, "I", null, "O", null, "U", null, "Y", null], null), null), p1__9738_SHARP_);
          } else {
            return and__3787__auto__;
          }
        }
      }())) {
        return clojure.string.capitalize.call(null, p1__9738_SHARP_);
      } else {
        return p1__9738_SHARP_;
      }
    };
  }(trailing_space_QMARK_), clojure.string.split.call(null, string, /\s+/)));
  if (trailing_space_QMARK_) {
    return[cljs.core.str(joined), cljs.core.str(" ")].join("");
  } else {
    return joined;
  }
};
censorius.utils._PLUS_numbers_PLUS_ = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve"], null);
censorius.utils.counting = function() {
  var counting = null;
  var counting__2 = function(number, singular) {
    return counting.call(null, number, singular, [cljs.core.str(cljs.core._EQ_.call(null, "y", cljs.core.last.call(null, singular)) ? [cljs.core.str(cljs.core.subs.call(null, singular, 0, cljs.core.count.call(null, singular) - 1)), cljs.core.str("ie")].join("") : singular), cljs.core.str("s")].join(""));
  };
  var counting__3 = function(number, singular, plural) {
    if (0 > number) {
      return[cljs.core.str("Negative "), cljs.core.str(counting.call(null, -number, singular, plural))].join("");
    } else {
      if (number === 0) {
        return[cljs.core.str("No "), cljs.core.str(plural)].join("");
      } else {
        if (cljs.core._EQ_.call(null, 1, number)) {
          return[cljs.core.str("One "), cljs.core.str(singular)].join("");
        } else {
          if (cljs.core.integer_QMARK_.call(null, number) && 13 > number) {
            return[cljs.core.str(cljs.core.nth.call(null, censorius.utils._PLUS_numbers_PLUS_, number)), cljs.core.str(" "), cljs.core.str(plural)].join("");
          } else {
            return[cljs.core.str(number), cljs.core.str(" "), cljs.core.str(plural)].join("");
          }
        }
      }
    }
  };
  counting = function(number, singular, plural) {
    switch(arguments.length) {
      case 2:
        return counting__2.call(this, number, singular);
      case 3:
        return counting__3.call(this, number, singular, plural);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  counting.cljs$core$IFn$_invoke$arity$2 = counting__2;
  counting.cljs$core$IFn$_invoke$arity$3 = counting__3;
  return counting;
}();
if (cljs.core._EQ_.call(null, censorius.utils.counting.call(null, 4, "dog"), "Four dogs")) {
} else {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "counting", "counting", -503196071, null), 4, "dog"), "Four dogs")))].join(""));
}
if (cljs.core._EQ_.call(null, censorius.utils.counting.call(null, 0, "pony"), "No ponies")) {
} else {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "counting", "counting", -503196071, null), 0, "pony"), "No ponies")))].join(""));
}
censorius.utils.biz_day_QMARK_ = function biz_day_QMARK_(date) {
  return(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [1, null, 4, null, 3, null, 2, null, 5, null], null), null)).call(null, cljs.core.apply.call(null, date.getWeekday(), date));
};
censorius.utils.make_time_friendly = function make_time_friendly(time) {
  return "Some time";
};
censorius.utils.next_biz_day = function next_biz_day(date) {
  if (cljs.core.not.call(null, censorius.utils.biz_day_QMARK_.call(null, date))) {
    return next_biz_day.call(null, date.setDate(1 + date.getDate()));
  } else {
    return null;
  }
};
censorius.utils.parse_time_string = function parse_time_string(time_string) {
  var and__3787__auto__ = time_string;
  if (cljs.core.truth_(and__3787__auto__)) {
    var and__3787__auto____$1 = typeof time_string === "string";
    if (and__3787__auto____$1) {
      var vec__9742 = cljs.core.re_matches.call(null, /([01]?\d)(?:\:(\d\d))?(?:\:(\d\d))?(?:\.(\d\d\d))? *([aApP][mM]?)?/, time_string);
      var _ = cljs.core.nth.call(null, vec__9742, 0, null);
      var hours = cljs.core.nth.call(null, vec__9742, 1, null);
      var minutes = cljs.core.nth.call(null, vec__9742, 2, null);
      var seconds = cljs.core.nth.call(null, vec__9742, 3, null);
      var msec = cljs.core.nth.call(null, vec__9742, 4, null);
      var am_pm = cljs.core.nth.call(null, vec__9742, 5, null);
      var pm_QMARK_ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["P", null, "p", null], null), null)).call(null, cljs.core.first.call(null, am_pm));
      if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, am_pm)) || cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, minutes))) {
        censorius.utils.log.call(null, "Time-string parts \x3d ", hours, ":", minutes, ":", seconds, ".", msec, " ", am_pm);
        return new Date(2E3, 1, 1, hours + (cljs.core.truth_(pm_QMARK_) ? 12 : 0), function() {
          var or__3799__auto__ = minutes;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return 0;
          }
        }(), function() {
          var or__3799__auto__ = seconds;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return 0;
          }
        }(), function() {
          var or__3799__auto__ = msec;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return 0;
          }
        }());
      } else {
        return null;
      }
    } else {
      return and__3787__auto____$1;
    }
  } else {
    return and__3787__auto__;
  }
};
censorius.utils.format_time_of_day = function format_time_of_day(time_string) {
  var canonical = censorius.utils.parse_time_string.call(null, time_string);
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = canonical;
    if (cljs.core.truth_(and__3787__auto__)) {
      return canonical.getTime() > 0;
    } else {
      return and__3787__auto__;
    }
  }())) {
    censorius.utils.log.call(null, "time-string ", time_string, " parses to ", canonical);
    var hh = canonical.getHours();
    var modulo = cljs.core.mod.call(null, hh, 12);
    var twelve_hours = modulo === 0 ? 12 : modulo;
    var pm_QMARK_ = hh > 11;
    censorius.utils.log.call(null, "hours of that are \x3d ", hh, "; which is ", twelve_hours, pm_QMARK_ ? "PM" : "AM");
    return[cljs.core.str(goog.string.format("%d:%02d", twelve_hours, canonical.getMinutes())), cljs.core.str(function() {
      var sec = canonical.getSeconds();
      var ms = canonical.getMilliseconds();
      if (sec === 0 && ms === 0) {
        return "";
      } else {
        if (ms === 0) {
          return goog.string.format(":%02d", sec);
        } else {
          return goog.string.format(":%02d.03d", sec, ms);
        }
      }
    }()), cljs.core.str(" "), cljs.core.str(pm_QMARK_ ? "PM" : "AM")].join("");
  } else {
    censorius.utils.log.call(null, "Can't parse time-string: ", time_string, "; got ", canonical);
    return time_string;
  }
};
censorius.utils.time_of_day_QMARK_ = function time_of_day_QMARK_(time_string) {
  var canonical = censorius.utils.parse_time_string.call(null, time_string);
  var and__3787__auto__ = canonical;
  if (cljs.core.truth_(and__3787__auto__)) {
    return canonical.getTime() > 0;
  } else {
    return and__3787__auto__;
  }
};
censorius.utils.format_zip_code = function format_zip_code(code) {
  var digits = censorius.utils.just_digits.call(null, code);
  if (cljs.core._EQ_.call(null, 5, cljs.core.count.call(null, digits))) {
    return digits;
  } else {
    if (cljs.core._EQ_.call(null, 9, cljs.core.count.call(null, digits))) {
      return[cljs.core.str(digits.substring(0, 5)), cljs.core.str("-"), cljs.core.str(digits.substring(5, 10))].join("");
    } else {
      return code;
    }
  }
};
censorius.utils._PLUS_zip_states_PLUS_ = cljs.core.PersistentHashMap.fromArrays(["273", "281", "191", "279", "984", "784", "388", "061", "977", "641", "445", "180", "089", "739", "735", "780", "499", "219", "733", "728", "108", "392", "965", "945", "955", "765", "275", "334", "365", "581", "042", "827", "258", "978", "528", "253", "188", "083", "582", "831", "458", "097", "370", "704", "665", "303", "381", "277", "158", "422", "941", "432", "438", "048", "671", "612", "402", "450", "545", "041", 
"466", "382", "452", "572", "498", "321", "488", "201", "820", "549", "359", "380", "681", "467", "813", "567", "719", "439", "265", "057", "910", "840", "722", "650", "141", "227", "767", "415", "384", "649", "647", "430", "584", "691", "263", "139", "413", "530", "017", "157", "185", "266", "616", "408", "932", "600", "305", "411", "865", "175", "066", "508", "300", "027", "155", "807", "745", "604", "781", "049", "688", "883", "815", "290", "368", "939", "522", "471", "843", "202", "527", "038", 
"364", "404", "809", "315", "084", "657", "857", "914", "195", "304", "972", "793", "707", "930", "082", "234", "674", "118", "913", "805", "475", "391", "193", "479", "093", "087", "423", "520", "051", "295", "655", "105", "058", "469", "454", "090", "224", "504", "743", "923", "369", "095", "911", "763", "196", "063", "346", "282", "875", "237", "448", "789", "532", "975", "040", "613", "396", "634", "207", "302", "752", "135", "238", "270", "011", "701", "995", "885", "394", "015", "123", "760", 
"776", "543", "599", "414", "336", "557", "012", "836", "355", "101", "462", "979", "662", "993", "231", "826", "116", "441", "958", "689", "395", "811", "251", "480", "035", "064", "996", "737", "169", "630", "607", "232", "736", "927", "472", "274", "020", "644", "556", "884", "299", "943", "957", "949", "485", "179", "091", "037", "389", "385", "156", "547", "525", "871", "588", "561", "065", "043", "587", "426", "492", "443", "329", "985", "387", "585", "603", "953", "159", "221", "661", "442", 
"425", "592", "908", "700", "055", "916", "328", "942", "925", "162", "192", "332", "766", "033", "490", "738", "068", "759", "358", "113", "405", "318", "484", "338", "705", "586", "684", "167", "026", "714", "259", "476", "877", "197", "521", "894", "598", "107", "712", "437", "656", "830", "782", "249", "605", "797", "658", "268", "401", "354", "716", "998", "374", "456", "503", "493", "226", "021", "802", "296", "362", "890", "798", "512", "449", "228", "727", "070", "594", "777", "740", "903", 
"032", "814", "553", "326", "115", "244", "954", "769", "297", "687", "988", "618", "379", "609", "837", "225", "111", "639", "350", "383", "294", "019", "747", "203", "172", "278", "573", "544", "489", "631", "754", "311", "176", "610", "850", "741", "028", "645", "119", "706", "247", "420", "562", "898", "626", "212", "145", "356", "882", "036", "128", "199", "008", "686", "210", "186", "901", "938", "924", "703", "983", "056", "261", "856", "096", "583", "152", "050", "554", "341", "181", "629", 
"357", "860", "788", "284", "876", "636", "825", "637", "768", "400", "904", "044", "184", "100", "973", "668", "363", "761", "045", "497", "024", "969", "106", "482", "531", "757", "833", "386", "654", "173", "246", "921", "074", "678", "680", "190", "846", "112", "852", "477", "842", "075", "025", "222", "459", "878", "250", "148", "790", "289", "787", "666", "511", "483", "267", "873", "307", "844", "283", "999", "496", "721", "455", "919", "560", "208", "936", "564", "648", "720", "652", "440", 
"137", "799", "312", "753", "601", "874", "276", "783", "086", "590", "140", "623", "748", "891", "597", "960", "136", "718", "337", "433", "726", "948", "347", "548", "166", "121", "006", "218", "591", "851", "542", "968", "335", "989", "685", "331", "352", "651", "194", "633", "992", "168", "376", "534", "360", "399", "764", "241", "571", "293", "474", "751", "772", "154", "725", "540", "524", "823", "257", "209", "239", "635", "240", "577", "918", "928", "870", "110", "915", "537", "606", "092", 
"007", "059", "080", "710", "970", "653", "835", "463", "558", "034", "580", "559", "308", "271", "174", "053", "575", "039", "171", "507", "069", "863", "130", "200", "976", "461", "431", "023", "183", "313", "481", "619", "470", "982", "223", "627", "502", "072", "272", "576", "730", "810", "966", "546", "640", "510", "538", "570", "541", "779", "320", "859", "325", "773", "880", "013", "693", "758", "205", "052", "306", "812", "287", "864", "122", "229", "071", "486", "596", "316", "149", "120", 
"421", "235", "418", "005", "550", "206", "410", "895", "660", "216", "144", "416", "134", "030", "990", "146", "217", "505", "677", "935", "177", "434", "473", "565", "750", "744", "094", "664", "344", "832", "125", "902", "729", "403", "398", "791", "104", "535", "602", "593", "828", "085", "881", "047", "669", "324", "667", "926", "551", "260", "390", "102", "377", "165", "153", "079", "509", "526", "734", "301", "317", "617", "409", "676", "444", "855", "801", "808", "406", "254", "595", "555", 
"563", "986", "062", "142", "804", "211", "340", "967", "755", "280", "841", "614", "127", "731", "646", "845", "078", "366", "286", "109", "124", "342", "723", "906", "853", "792", "847", "774", "838", "917", "262", "252", "947", "971", "076", "500", "460", "756", "937", "775", "778", "077", "138", "319", "054", "256", "009", "611", "803", "298", "994", "806", "114", "795", "014", "963", "453", "322", "067", "746", "367", "690", "457", "198", "424", "220", "339", "427", "288", "022", "946", "495", 
"622", "412", "133", "147", "491", "615", "151", "708", "436", "821", "233", "974", "625", "182", "264", "962", "829", "446", "189", "711", "016", "126", "373", "940", "255", "539", "824", "566", "816", "236", "310", "327", "204", "796", "514", "506", "081", "478", "920", "934", "143", "333", "178", "749", "098", "515", "375", "879", "670", "692", "905", "170", "624", "046", "516", "786", "713", "088", "897", "245", "407", "131", "922", "103", "060", "248", "285", "494", "762", "378", "900", "951", 
"291", "933", "961", "673", "981", "513", "330", "679", "073", "683", "952", "161", "230", "242", "129", "187", "214", "018", "717", "465", "164", "980", "361", "163", "349", "010", "675", "323", "447", "215", "397", "907", "785", "393", "620", "464", "468", "959", "834", "417", "451", "822", "351", "501", "487", "770", "608", "724", "672", "523", "889", "956", "292", "931", "435", "243", "800", "309", "160", "628", "912", "794", "031", "150", "944", "117", "372", "371", "029", "638", "574", "950", 
"893", "964", "991", "997", "132", "314"], ["NC", "NC", "PA", "NC", "WA", "TX", "TN", "CT", "OR", "MO", "OH", "PA", "NJ", "TX", "OK", "TX", "MI", "MD", "TX", "AR", "NY", "MS", "AP", "CA", "CA", "TX", "NC", "FL", "AL", "ND", "ME", "WY", "WV", "OR", "IA", "WV", "PA", "NJ", "ND", "WY", "OH", "AE", "TN", "LA", "MO", "GA", "TN", "NC", "PA", "TN", "CA", "OH", "OH", "ME", "KS", "IL", "KY", "OH", "WI", "ME", "IN", "TN", "OH", "SD", "MI", "FL", "MI", "VA", "WY", "WI", "AL", "TN", "NE", "IN", "NM", "ND", "AR", 
"PA", "PA", "VT", "CA", "UT", "AR", "MO", "NY", "VA", "TX", "WV", "TN", "MO", "MO", "OH", "ND", "NE", "WV", "NY", "KY", "WI", "MA", "PA", "PA", "WV", "IL", "TN", "CA", "IL", "GA", "WV", "NM", "PA", "NY", "IA", "GA", "RI", "PA", "CO", "OK", "IL", "TX", "ME", "NE", "TX", "CO", "SC", "AL", "CA", "IA", "KY", "UT", "DC", "IL", "NH", "AL", "KY", "CO", "FL", "NJ", "MO", "AZ", "CA", "PA", "GA", "OR", "TX", "LA", "CA", "NJ", "VA", "KS", "NY", "CA", "CO", "IN", "MS", "DE", "IN", "AE", "NJ", "IN", "IA", "VT", 
"SC", "MO", "NY", "VT", "IN", "OH", "AE", "VA", "IA", "OK", "CA", "MS", "AE", "CA", "TX", "PA", "CT", "FL", "NC", "NM", "VA", "OH", "TX", "WI", "OR", "ME", "IL", "MS", "MO", "MD", "GA", "TX", "NY", "VA", "NC", "CT", "LA", "AK", "TX", "MS", "MA", "NY", "TX", "TX", "WI", "MT", "KY", "FL", "MN", "CT", "ID", "AL", "NY", "IN", "ID", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["KS", "MO"], null), "WA", "VA", "WY", "NY", "OH", "CA", "NE", "MS", "CO", "WV", "MI", "VT", 
"CT", "AK", "OK", "PA", "MO", "IL", "VA", "OK", "CA", "IN", "NC", "MA", "MO", "MN", "NM", "SC", "CA", "CA", "CA", "MI", "PA", "AE", "VT", "MS", "TN", "PA", "WI", "IA", "NM", "ND", "MN", "CT", "ME", "ND", "TN", "MI", "OH", "FL", "WA", "MS", "ND", "IL", "CA", "PA", "VA", "MO", "OH", "TN", "MT", "CA", "LA", "MA", "CA", "FL", "CA", "CA", "PA", "PA", "FL", "TX", "NH", "MI", "OK", "NY", "TX", "AL", "NY", "KY", "GA", "MI", "FL", "LA", "ND", "NE", "PA", "RI", "LA", "WV", "IN", "NM", "DE", "IA", "NV", "MT", 
"NY", "LA", "OH", "MO", "WY", "TX", "WV", "IL", "TX", "MO", "VA", "KY", "AL", "AR", "AK", "TN", "OH", "IA", "MI", "VA", "MA", "CO", "SC", "AL", "NV", "TX", "SD", "OH", "VA", "AR", "NJ", "MT", "TX", "OK", "CA", "NH", "CO", "MN", "FL", "NY", "VA", "CA", "TX", "NC", "NE", "WA", "IL", "TN", "IL", "ID", "VA", "NY", "MO", "AL", "TN", "SC", "MA", "OK", "DC", "PA", "NC", "SD", "WI", "MI", "MO", "TX", "GA", "PA", "IL", "AZ", "OK", "RI", "MO", "NY", "LA", "WV", "KY", "MN", "NV", "IL", "MD", "NY", "AL", "TX", 
"VT", "NY", "DE", "PR", "NE", "MD", "PA", "CA", "CA", "CA", "LA", "WA", "VT", "WV", "AZ", "AE", "ND", "PA", "VT", "MN", "FL", "PA", "MO", "AL", "AZ", "TX", "NC", "NM", "MO", "WY", "MO", "TX", "KY", "CA", "ME", "PA", "NY", "OR", "MO", "AL", "TX", "ME", "MI", "MA", "GU", "NY", "MI", "WI", "TX", "ID", "TN", "MO", "PA", "WV", "CA", "NJ", "KS", "NE", "PA", "UT", "NY", "AZ", "IN", "UT", "NJ", "RI", "VA", "OH", "NM", "WV", "NY", "TX", "NC", "TX", "MO", "SD", "MI", "MD", "NM", "TN", "UT", "NC", "AK", "MI", 
"AR", "OH", "CA", "MN", "MD", "CA", "MN", "MO", "AR", "MO", "OH", "NY", "TX", "GA", "TX", "IL", "NM", "NC", "TX", "NJ", "MT", "NY", "IL", "OK", "NV", "MT", "CA", "NY", "LA", "FL", "OH", "AR", "CA", "FL", "WI", "PA", "NY", "PR", "MD", "MT", "AZ", "WI", "HI", "FL", "WA", "NE", "FL", "AL", "MO", "PA", "MO", "WA", "PA", "TN", "WI", "AL", "GA", "TX", "VA", "SD", "SC", "IN", "TX", "TX", "PA", "AR", "MN", "IA", "WY", "WV", "MD", "VA", "MO", "VA", "SD", "CA", "CA", "NM", "NY", "CA", "WI", "IL", "AE", "PR", 
"VT", "NJ", "LA", "OR", "MO", "WA", "IN", "MN", "NH", "ND", "MN", "GA", "NC", "PA", "VT", "SD", "ME", "PA", "IA", "NY", "AZ", "NY", "DC", "OR", "IN", "OH", "MA", "PA", "FL", "MI", "IL", "OH", "WA", "VA", "IL", "IA", "NJ", "NC", "ND", "OK", "CO", "AP", "WI", "MO", "SD", "WI", "SD", "WI", "TX", "FL", "AZ", "FL", "TX", "TX", "MA", "NE", "TX", "DC", "VT", "GA", "CO", "NC", "NV", "NY", "VA", "NJ", "MI", "MT", "FL", "NY", "NY", "TN", "VA", "TN", "NY", "MN", "MD", "OH", "NV", "MO", "MD", "NY", "WV", "NY", 
"NH", "WA", "NY", "MD", "IA", "NE", "CA", "PA", "OH", "IN", "ND", "TX", "OK", "AE", "MO", "FL", "ID", "NY", "CA", "AR", "KY", "FL", "TX", "NY", "WI", "IL", "MT", "WY", "NJ", "TX", "ME", "KS", "FL", "MO", "CA", "MN", "PA", "MS", "NY", "TN", "PA", "PA", "NJ", "IA", "IL", "OK", "GA", "FL", "IL", "TN", "KS", "OH", "AZ", "CO", "CO", "KY", "MD", "MT", "MN", "MN", "OR", "CT", "NY", "CO", "MD", "AA", "HI", "LA", "NC", "UT", "IL", "NY", "OK", "MO", "UT", "NJ", "AL", "NC", "NY", "NY", "FL", "TN", "CA", "AZ", 
"TX", "UT", "TX", "WA", "CA", "WV", "WV", "CA", "OR", "NJ", "IA", "IN", "LA", "CA", "TX", "TX", "NJ", "NY", "GA", "VT", "WV", "PR", "IL", "CO", "GA", "WA", "CO", "NY", "TX", "MA", "AP", "OH", "FL", "CT", "OK", "AL", "NE", "OH", "DE", "IN", "VA", "FL", "KY", "NC", "MA", "CA", "MI", "MO", "WV", "NY", "NY", "MI", "IL", "PA", "LA", "OH", "WY", "VA", "OR", "IL", "PA", "WV", "AP", "WY", "OH", "PA", "LA", "MA", "NY", "TN", "CA", "WV", "WI", "WY", "MN", "CO", "VA", "GA", "FL", "DC", "TX", "IA", "IA", "NJ", 
"IN", "CA", "CA", "NY", "FL", "PA", "OK", "AE", "NE", "TN", "NM", "KS", "NE", "CA", "PA", "IL", "ME", "NE", "TX", "LA", "NJ", "NV", "VA", "TN", "NY", "CA", "NY", "CT", "WV", "NC", "MI", "TX", "TN", "CA", "CA", "SC", "CA", "NV", "KS", "WA", "SD", "FL", "TX", "NJ", "NE", "CA", "PA", "VA", "TN", "NY", "PA", "MD", "MA", "AR", "IN", "PA", "WA", "AL", "PA", "FL", "CT", "KS", "FL", "OH", "MD", "MS", "CA", "TX", "MS", "MO", "IN", "IN", "CA", "ID", "TN", "OH", "WY", "AL", "IA", "MI", "TX", "IL", "TN", "KS", 
"IA", "NV", "CA", "SC", "CA", "OH", "VA", "CO", "GA", "PA", "MO", "CA", "TX", "NH", "PA", "CA", "NY", "TN", "TN", "RI", "MO", "SD", "CA", "NV", "AP", "WA", "AK", "NY", "FL"]);
censorius.utils.zip_3_to_state = function zip_3_to_state(zip_3) {
  return cljs.core.get.call(null, censorius.utils._PLUS_zip_states_PLUS_, zip_3);
};
censorius.utils.zip_code_QMARK_ = function zip_code_QMARK_(code) {
  var and__3787__auto__ = cljs.core._EQ_.call(null, 5, cljs.core.count.call(null, code), cljs.core.count.call(null, censorius.utils.just_digits.call(null, code))) || cljs.core._EQ_.call(null, 10, cljs.core.count.call(null, code)) && cljs.core._EQ_.call(null, 9, cljs.core.count.call(null, censorius.utils.just_digits.call(null, code))) && cljs.core._EQ_.call(null, "-", cljs.core.nth.call(null, code, 5)) || cljs.core._EQ_.call(null, 9, cljs.core.count.call(null, code), cljs.core.count.call(null, censorius.utils.just_digits.call(null, 
  code)));
  if (and__3787__auto__) {
    return cljs.core.get.call(null, censorius.utils._PLUS_zip_states_PLUS_, code.substring(0, 3));
  } else {
    return and__3787__auto__;
  }
};
censorius.utils.blank_QMARK_ = function blank_QMARK_(s) {
  var and__3787__auto__ = s;
  if (cljs.core.truth_(and__3787__auto__)) {
    return typeof s === "string" && cljs.core.count.call(null, s) > 0;
  } else {
    return and__3787__auto__;
  }
};
censorius.utils.to_integer = function to_integer(n) {
  var or__3799__auto__ = function() {
    var and__3787__auto__ = cljs.core.integer_QMARK_.call(null, n);
    if (and__3787__auto__) {
      return n;
    } else {
      return and__3787__auto__;
    }
  }();
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var and__3787__auto__ = typeof n === "string";
    if (and__3787__auto__) {
      return parseInt(n);
    } else {
      return and__3787__auto__;
    }
  }
};
censorius.utils.reasonable_birth_year_QMARK_ = function reasonable_birth_year_QMARK_(n) {
  return 1900 < n && n < (new Date).getYear();
};
censorius.utils.positions = function positions(pred, coll) {
  return cljs.core.keep_indexed.call(null, function(idx, x) {
    if (cljs.core.truth_(pred.call(null, x))) {
      return idx;
    } else {
      return null;
    }
  }, coll);
};
censorius.utils.format_money = function format_money(amount) {
  if (typeof amount === "string") {
    var vec__9744 = cljs.core.re_matches.call(null, /\$?\s*(\d*\.\d\d?)?/, amount);
    var _ = cljs.core.nth.call(null, vec__9744, 0, null);
    var amount__$1 = cljs.core.nth.call(null, vec__9744, 1, null);
    return format_money.call(null, amount__$1.parseFloat());
  } else {
    if (cljs.core.integer_QMARK_.call(null, amount)) {
      return goog.string.format("$ %d.", amount);
    } else {
      if (1 < amount) {
        return goog.string.format("$ %.02f", amount);
      } else {
        if (amount === 0) {
          return "$ 0";
        } else {
          return goog.string.format("$ .%02f", amount);
        }
      }
    }
  }
};
censorius.utils.money_QMARK_ = function money_QMARK_(string) {
  var or__3799__auto__ = string.parseFloat();
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var vec__9746 = cljs.core.re_matches.call(null, /\$?\s*(\d*\.\d*)/, string);
    var _ = cljs.core.nth.call(null, vec__9746, 0, null);
    var amount = cljs.core.nth.call(null, vec__9746, 1, null);
    return money_QMARK_.call(null, amount);
  }
};
censorius.utils.modality = function modality(function$, element) {
  var docs_9747 = document.getElementsByTagName("html");
  var doc_9748 = function() {
    var or__3799__auto__ = docs_9747.item(0);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return censorius.utils.log.call(null, "boo");
    }
  }();
  doc_9748.onClick = function(docs_9747, doc_9748) {
    return function(event) {
      if (cljs.core.truth_(function$)) {
        return cljs.core.apply.call(null, function$, event);
      } else {
        return null;
      }
    };
  }(docs_9747, doc_9748);
  element.onClick = function(docs_9747, doc_9748) {
    return function(event) {
      doc_9748.onClick = null;
      return event.stopPropagation();
    };
  }(docs_9747, doc_9748);
  return element;
};
censorius.utils.keyword__GT_string = function keyword__GT_string(keyword) {
  if (typeof keyword === "string") {
    return keyword;
  } else {
    if (keyword instanceof cljs.core.Keyword) {
      var s = [cljs.core.str(keyword)].join("");
      return s.substring(1, cljs.core.count.call(null, s));
    } else {
      return[cljs.core.str(keyword)].join("");
    }
  }
};
// Input 65
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__20263) {
    var vec__20264 = p__20263;
    var k = cljs.core.nth.call(null, vec__20264, 0, null);
    var v = cljs.core.nth.call(null, vec__20264, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__20267) {
    var vec__20268 = p__20267;
    var k = cljs.core.nth.call(null, vec__20268, 0, null);
    var v = cljs.core.nth.call(null, vec__20268, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
// Input 66
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj20181 = {};
  return obj20181;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = secretary.core.route_matches[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = secretary.core.route_matches["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj20183 = {};
  return obj20183;
}();
secretary.core.route_value = function route_value(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = secretary.core.route_value[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = secretary.core.route_value["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj20185 = {};
  return obj20185;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = secretary.core.render_route[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = secretary.core.render_route["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = secretary.core.render_route[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = secretary.core.render_route["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.encode_pair = function() {
  var method_table__4696__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4697__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4698__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4699__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4700__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "secretary.core", "encode-pair"), function(method_table__4696__auto__, prefer_table__4697__auto__, method_cache__4698__auto__, cached_hierarchy__4699__auto__, hierarchy__4700__auto__) {
    return function(p__20186) {
      var vec__20187 = p__20186;
      var k = cljs.core.nth.call(null, vec__20187, 0, null);
      var v = cljs.core.nth.call(null, vec__20187, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
        return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207);
      } else {
        if (function() {
          var or__3799__auto__ = cljs.core.map_QMARK_.call(null, v);
          if (or__3799__auto__) {
            return or__3799__auto__;
          } else {
            var G__20189 = v;
            if (G__20189) {
              var bit__4480__auto__ = G__20189.cljs$lang$protocol_mask$partition0$ & 67108864;
              if (bit__4480__auto__ || G__20189.cljs$core$IRecord$) {
                return true;
              } else {
                if (!G__20189.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__20189);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__20189);
            }
          }
        }()) {
          return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646);
        } else {
          return null;
        }
      }
    };
  }(method_table__4696__auto__, prefer_table__4697__auto__, method_cache__4698__auto__, cached_hierarchy__4699__auto__, hierarchy__4700__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4700__auto__, method_table__4696__auto__, prefer_table__4697__auto__, method_cache__4698__auto__, cached_hierarchy__4699__auto__);
}();
secretary.core.key_index = function() {
  var key_index = null;
  var key_index__1 = function(k) {
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("[]")].join("");
  };
  var key_index__2 = function(k, index) {
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("["), cljs.core.str(index), cljs.core.str("]")].join("");
  };
  key_index = function(k, index) {
    switch(arguments.length) {
      case 1:
        return key_index__1.call(this, k);
      case 2:
        return key_index__2.call(this, k, index);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  key_index.cljs$core$IFn$_invoke$arity$1 = key_index__1;
  key_index.cljs$core$IFn$_invoke$arity$2 = key_index__2;
  return key_index;
}();
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207), function(p__20190) {
  var vec__20191 = p__20190;
  var k = cljs.core.nth.call(null, vec__20191, 0, null);
  var v = cljs.core.nth.call(null, vec__20191, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__20191, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__20191, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646), function(p__20192) {
  var vec__20193 = p__20192;
  var k = cljs.core.nth.call(null, vec__20193, 0, null);
  var v = cljs.core.nth.call(null, vec__20193, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__20193, k, v) {
    return function(p__20194) {
      var vec__20195 = p__20194;
      var ik = cljs.core.nth.call(null, vec__20195, 0, null);
      var iv = cljs.core.nth.call(null, vec__20195, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__20193, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__20196) {
  var vec__20197 = p__20196;
  var k = cljs.core.nth.call(null, vec__20197, 0, null);
  var v = cljs.core.nth.call(null, vec__20197, 1, null);
  return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, [cljs.core.str(v)].join("")))].join("");
});
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__20200) {
      var vec__20201 = p__20200;
      var _ = cljs.core.nth.call(null, vec__20201, 0, null);
      var part = cljs.core.nth.call(null, vec__20201, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          return part;
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__20203 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__20203, 0, null);
  var key = cljs.core.nth.call(null, vec__20203, 1, null);
  var path = cljs.core.nth.call(null, vec__20203, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__20205 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__20205, 0, null);
      var v = cljs.core.nth.call(null, vec__20205, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return[cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return[cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__20209) {
    var vec__20210 = p__20209;
    var re = cljs.core.nth.call(null, vec__20210, 0, null);
    var action = cljs.core.nth.call(null, vec__20210, 1, null);
    var temp__4126__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20211 = temp__4126__auto__;
      var m = cljs.core.nth.call(null, vec__20211, 0, null);
      var c = cljs.core.nth.call(null, vec__20211, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__20214 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__20214, 0, null);
      var vec__20215 = cljs.core.nth.call(null, vec__20214, 1, null);
      var r = cljs.core.nth.call(null, vec__20215, 0, null);
      var p = cljs.core.nth.call(null, vec__20215, 1, null);
      var G__20216 = s__$2;
      var G__20217 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__20218 = cljs.core.conj.call(null, params, p);
      s__$1 = G__20216;
      pattern = G__20217;
      params = G__20218;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", -1294732318);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__20224 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__20224, 0, null);
  var params = cljs.core.nth.call(null, vec__20224, 1, null);
  if (typeof secretary.core.t20225 !== "undefined") {
  } else {
    secretary.core.t20225 = function(params, re, vec__20224, clauses, orig_route, compile_route, meta20226) {
      this.params = params;
      this.re = re;
      this.vec__20224 = vec__20224;
      this.clauses = clauses;
      this.orig_route = orig_route;
      this.compile_route = compile_route;
      this.meta20226 = meta20226;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t20225.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t20225.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__20224, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4126__auto__)) {
          var vec__20228 = temp__4126__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__20228, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__20228, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__20224, re, params);
    secretary.core.t20225.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t20225.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__20224, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__20224, re, params);
    secretary.core.t20225.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__20224, re, params) {
      return function(_20227) {
        var self__ = this;
        var _20227__$1 = this;
        return self__.meta20226;
      };
    }(clauses, vec__20224, re, params);
    secretary.core.t20225.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__20224, re, params) {
      return function(_20227, meta20226__$1) {
        var self__ = this;
        var _20227__$1 = this;
        return new secretary.core.t20225(self__.params, self__.re, self__.vec__20224, self__.clauses, self__.orig_route, self__.compile_route, meta20226__$1);
      };
    }(clauses, vec__20224, re, params);
    secretary.core.t20225.cljs$lang$type = true;
    secretary.core.t20225.cljs$lang$ctorStr = "secretary.core/t20225";
    secretary.core.t20225.cljs$lang$ctorPrWriter = function(clauses, vec__20224, re, params) {
      return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
        return cljs.core._write.call(null, writer__4387__auto__, "secretary.core/t20225");
      };
    }(clauses, vec__20224, re, params);
    secretary.core.__GT_t20225 = function(clauses, vec__20224, re, params) {
      return function __GT_t20225(params__$1, re__$1, vec__20224__$1, clauses__$1, orig_route__$1, compile_route__$1, meta20226) {
        return new secretary.core.t20225(params__$1, re__$1, vec__20224__$1, clauses__$1, orig_route__$1, compile_route__$1, meta20226);
      };
    }(clauses, vec__20224, re, params);
  }
  return new secretary.core.t20225(params, re, vec__20224, clauses, orig_route, compile_route, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 41, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 251, new cljs.core.Keyword(null, "column", "column", 2078222095), 4, new cljs.core.Keyword(null, "line", "line", 212345235), 242, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/secretary/core.cljs"], 
  null));
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__20230 = obj;
      if (G__20230) {
        var bit__4480__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3799__auto__ = bit__4480__auto__;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return G__20230.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__20230.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__20230);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__20230);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__20231__i = 0, G__20231__a = new Array(arguments.length - 1);
      while (G__20231__i < G__20231__a.length) {
        G__20231__a[G__20231__i] = arguments[G__20231__i + 1];
        ++G__20231__i;
      }
      args = new cljs.core.IndexedSeq(G__20231__a, 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__20232) {
    var obj = cljs.core.first(arglist__20232);
    var args = cljs.core.rest(arglist__20232);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__20235) {
      var vec__20236 = p__20235;
      var x = cljs.core.nth.call(null, vec__20236, 0, null);
      var _ = cljs.core.nth.call(null, vec__20236, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__20239) {
    var vec__20240 = p__20239;
    var compiled_route = cljs.core.nth.call(null, vec__20240, 0, null);
    var action = cljs.core.nth.call(null, vec__20240, 1, null);
    var temp__4126__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var params = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", -811238024), action, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "route", "route", 329891309), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 329891309)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.prefix = function prefix() {
  return[cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null)))].join("");
};
secretary.core.uri_without_prefix = function uri_without_prefix(uri) {
  return clojure.string.replace.call(null, uri, cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(secretary.core.prefix.call(null))].join("")), "");
};
secretary.core.uri_with_leading_slash = function uri_with_leading_slash(uri) {
  if (cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, uri))) {
    return uri;
  } else {
    return[cljs.core.str("/"), cljs.core.str(uri)].join("");
  }
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__20243 = clojure.string.split.call(null, secretary.core.uri_without_prefix.call(null, uri), /\?/);
  var uri_path = cljs.core.nth.call(null, vec__20243, 0, null);
  var query_string = cljs.core.nth.call(null, vec__20243, 1, null);
  var uri_path__$1 = secretary.core.uri_with_leading_slash.call(null, uri_path);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__20244 = secretary.core.locate_route.call(null, uri_path__$1);
  var map__20244__$1 = cljs.core.seq_QMARK_.call(null, map__20244) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20244) : map__20244;
  var params = cljs.core.get.call(null, map__20244__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var action = cljs.core.get.call(null, map__20244__$1, new cljs.core.Keyword(null, "action", "action", -811238024));
  var action__$1 = function() {
    var or__3799__auto__ = action;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
secretary.core.invalid_params = function invalid_params(params, validations) {
  return cljs.core.reduce.call(null, function(m, p__20247) {
    var vec__20248 = p__20247;
    var key = cljs.core.nth.call(null, vec__20248, 0, null);
    var validation = cljs.core.nth.call(null, vec__20248, 1, null);
    var value = cljs.core.get.call(null, params, key);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, validation, value))) {
      return m;
    } else {
      return cljs.core.assoc.call(null, m, key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, validation], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, validations));
};
secretary.core.params_valid_QMARK_ = function params_valid_QMARK_(params, validations) {
  return cljs.core.empty_QMARK_.call(null, secretary.core.invalid_params.call(null, params, validations));
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(p__20249, route) {
  var vec__20250 = p__20249;
  var route_string = cljs.core.nth.call(null, vec__20250, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__20250, 1);
  var vec__20251 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__20251, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__20251, 1);
  var params = secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, route_string__$1), route);
  if (secretary.core.params_valid_QMARK_.call(null, params, validations__$1)) {
    return params;
  } else {
    return null;
  }
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__20252 = temp__4126__auto__;
    var _ = cljs.core.nth.call(null, vec__20252, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__20252, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(p__20253) {
  var vec__20254 = p__20253;
  var route_string = cljs.core.nth.call(null, vec__20254, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__20254, 1);
  var vec__20255 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__20255, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__20255, 1);
  return cljs.core.vec.call(null, cljs.core.cons.call(null, secretary.core.route_value.call(null, route_string__$1), validations__$1));
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$1 = function(this$) {
  var this$__$1 = this;
  return secretary.core.render_route.call(null, this$__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$2 = function(p__20256, params) {
  var vec__20257 = p__20256;
  var route_string = cljs.core.nth.call(null, vec__20257, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__20257, 1);
  var vec__20258 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__20258, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__20258, 1);
  var invalid = secretary.core.invalid_params.call(null, params, validations__$1);
  if (cljs.core.empty_QMARK_.call(null, invalid)) {
    return secretary.core.render_route.call(null, route_string__$1, params);
  } else {
    throw cljs.core.ex_info.call(null, "Could not build route: invalid params", invalid);
  }
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__20259 = params;
  var map__20259__$1 = cljs.core.seq_QMARK_.call(null, map__20259) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20259) : map__20259;
  var m = map__20259__$1;
  var query_params = cljs.core.get.call(null, map__20259__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__20259, map__20259__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, a), lookup);
      var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
      }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
      return replacement;
    };
  }(map__20259, map__20259__$1, m, query_params, a));
  var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null))), cljs.core.str(path)].join("");
  var temp__4124__auto__ = function() {
    var and__3787__auto__ = query_params;
    if (cljs.core.truth_(and__3787__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3787__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var query_string = temp__4124__auto__;
    return[cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
  } else {
    return path__$1;
  }
};
// Input 67
goog.provide("censorius.text");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("secretary.core");
goog.require("reagent.session");
goog.require("clojure.data");
goog.require("goog.history.EventType");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("goog.events");
goog.require("censorius.utils");
goog.require("clojure.string");
censorius.text._PLUS_clear_PLUS_ = 12;
censorius.text._PLUS_return_PLUS_ = 13;
censorius.text._PLUS_escape_PLUS_ = 27;
censorius.text.confirm_change = function confirm_change(label, text) {
  return window.confirm([cljs.core.str("\u201c"), cljs.core.str(text), cljs.core.str("\u201d does not appear valid for \u201c"), cljs.core.str(label), cljs.core.str("\u201d.\nDo you want to submit it?\n\nClick OK to confirm this value, or Cancel to edit.")].join(""));
};
censorius.text.do_validate = function do_validate(props, new_text) {
  var validate = (new cljs.core.Keyword(null, "validate", "validate", -201300827)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, props));
  var could_validate_QMARK_ = function() {
    var and__3787__auto__ = validate;
    if (cljs.core.truth_(and__3787__auto__)) {
      return typeof new_text === "string" && cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, new_text.trim()));
    } else {
      return and__3787__auto__;
    }
  }();
  var validated_QMARK_ = function() {
    var and__3787__auto__ = could_validate_QMARK_;
    if (cljs.core.truth_(and__3787__auto__)) {
      return cljs.core.apply.call(null, validate, cljs.core._conj.call(null, cljs.core.List.EMPTY, new_text));
    } else {
      return and__3787__auto__;
    }
  }();
  cljs.core.swap_BANG_.call(null, props, cljs.core.assoc, new cljs.core.Keyword(null, "validated?", "validated?", 923640924), cljs.core.not.call(null, could_validate_QMARK_) ? null : cljs.core.truth_(validated_QMARK_) ? true : false);
  var and__3787__auto__ = function() {
    var or__3799__auto__ = validated_QMARK_;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return cljs.core.not.call(null, could_validate_QMARK_);
    }
  }();
  if (cljs.core.truth_(and__3787__auto__)) {
    return true;
  } else {
    return and__3787__auto__;
  }
};
censorius.text.validate_submission = function validate_submission(props, text, can_prompt_QMARK_) {
  var valid_1_QMARK_ = censorius.text.do_validate.call(null, props, text);
  var valid_2_QMARK_ = function() {
    var or__3799__auto__ = valid_1_QMARK_;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      var and__3787__auto__ = can_prompt_QMARK_;
      if (cljs.core.truth_(and__3787__auto__)) {
        if (cljs.core.truth_(censorius.text.confirm_change.call(null, (new cljs.core.Keyword(null, "label", "label", 1718410804)).cljs$core$IFn$_invoke$arity$1(props), text))) {
          censorius.utils.log.call(null, "User confirms, store invalid value.");
          cljs.core.swap_BANG_.call(null, props, cljs.core.assoc, new cljs.core.Keyword(null, "validated?", "validated?", 923640924), null);
          return true;
        } else {
          return null;
        }
      } else {
        return and__3787__auto__;
      }
    }
  }();
  var or__3799__auto__ = valid_1_QMARK_;
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    return valid_2_QMARK_;
  }
};
censorius.text.submit = function() {
  var submit = null;
  var submit__2 = function(event, props) {
    return submit.call(null, event, props, false);
  };
  var submit__3 = function(event, props, suppress_prompt_QMARK_) {
    var text_10381 = (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, props));
    var keys_10382 = (new cljs.core.Keyword(null, "keys", "keys", 1068423698)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, props));
    var old_text_10383 = cljs.core.get.call(null, cljs.core.deref.call(null, props), keys_10382);
    if (cljs.core._EQ_.call(null, old_text_10383, text_10381)) {
      censorius.utils.log.call(null, "no change to ", keys_10382);
    } else {
      if (cljs.core.not.call(null, censorius.text.validate_submission.call(null, props, text_10381, cljs.core.not.call(null, suppress_prompt_QMARK_)))) {
        censorius.utils.log.call(null, "no change to ", keys_10382, ": validation failed");
      } else {
        var formatter_10384 = (new cljs.core.Keyword(null, "format", "format", -1306924766)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, props));
        var final_text_10385 = cljs.core.truth_(formatter_10384) ? cljs.core.apply.call(null, formatter_10384, cljs.core._conj.call(null, cljs.core.List.EMPTY, text_10381)) : text_10381;
        if (cljs.core.not_EQ_.call(null, text_10381, final_text_10385)) {
          cljs.core.swap_BANG_.call(null, props, cljs.core.assoc, new cljs.core.Keyword(null, "text", "text", -1790561697), final_text_10385);
        } else {
        }
        censorius.utils.log.call(null, keys_10382, " \u2190 \u201c", final_text_10385, "\u201d");
        cljs.core.swap_BANG_.call(null, props, cljs.core.assoc_in, keys_10382, final_text_10385, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "orig-text", "orig-text", 650637509)], null), final_text_10385);
      }
    }
    return false;
  };
  submit = function(event, props, suppress_prompt_QMARK_) {
    switch(arguments.length) {
      case 2:
        return submit__2.call(this, event, props);
      case 3:
        return submit__3.call(this, event, props, suppress_prompt_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  submit.cljs$core$IFn$_invoke$arity$2 = submit__2;
  submit.cljs$core$IFn$_invoke$arity$3 = submit__3;
  return submit;
}();
censorius.text.mkfun_validity_submit = function mkfun_validity_submit(props) {
  return function(event) {
    if (cljs.core.truth_(event.target.className.contains("valid-false"))) {
      censorius.utils.log.call(null, "Field doesn't seem valid. Verifying user intent.", event);
      return censorius.text.submit.call(null, event, props);
    } else {
      return null;
    }
  };
};
censorius.text.do_change = function do_change(props, new_text) {
  if (typeof new_text === "string") {
    censorius.text.do_validate.call(null, props, new_text);
    return cljs.core.swap_BANG_.call(null, props, cljs.core.assoc, new cljs.core.Keyword(null, "text", "text", -1790561697), new_text);
  } else {
    return null;
  }
};
censorius.text.key_down = function key_down(event, props, want_return_QMARK_) {
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([censorius.text._PLUS_clear_PLUS_, censorius.text._PLUS_escape_PLUS_], true).call(null, event.keyCode))) {
    return censorius.text.do_change.call(null, props, (new cljs.core.Keyword(null, "orig-text", "orig-text", 650637509)).cljs$core$IFn$_invoke$arity$1(props));
  } else {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = want_return_QMARK_;
      if (cljs.core.truth_(and__3787__auto__)) {
        return censorius.text._PLUS_return_PLUS_ === event.keyCode;
      } else {
        return and__3787__auto__;
      }
    }())) {
      return censorius.text.submit.call(null, event, props);
    } else {
      return null;
    }
  }
};
censorius.text.text_input = function text_input(p__10395) {
  var map__10401 = p__10395;
  var map__10401__$1 = cljs.core.seq_QMARK_.call(null, map__10401) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10401) : map__10401;
  var props = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "props", "props", 453281727));
  var format = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "format", "format", -1306924766));
  var placeholder = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083));
  var validate = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "validate", "validate", -201300827));
  var ellipsis = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "ellipsis", "ellipsis", 998505738));
  var size = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
  var input_type = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "input-type", "input-type", 856973840));
  var rows = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "rows", "rows", 850049680));
  var keys = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "keys", "keys", 1068423698));
  var label = cljs.core.get.call(null, map__10401__$1, new cljs.core.Keyword(null, "label", "label", 1718410804));
  var name = censorius.utils.gensymreally.call(null, label);
  return function(name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
    return function(p__10402) {
      var map__10403 = p__10402;
      var map__10403__$1 = cljs.core.seq_QMARK_.call(null, map__10403) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10403) : map__10403;
      var props__$1 = map__10403__$1;
      var validated_QMARK_ = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "validated?", "validated?", 923640924));
      var validate__$1 = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "validate", "validate", -201300827));
      var keys__$1 = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "keys", "keys", 1068423698));
      var input_type__$1 = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "input-type", "input-type", 856973840));
      var rows__$1 = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "rows", "rows", 850049680));
      var placeholder__$1 = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083));
      var text = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "text", "text", -1790561697));
      var label__$1 = cljs.core.get.call(null, map__10403__$1, new cljs.core.Keyword(null, "label", "label", 1718410804));
      var vec__10404 = function() {
        var G__10405 = validated_QMARK_;
        if (cljs.core._EQ_.call(null, null, G__10405)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unknown", " "], null);
        } else {
          if (cljs.core._EQ_.call(null, true, G__10405)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, "\u26e4"], null);
          } else {
            if (cljs.core._EQ_.call(null, false, G__10405)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, "\u2717"], null);
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(validated_QMARK_)].join(""));
            }
          }
        }
      }();
      var validity = cljs.core.nth.call(null, vec__10404, 0, null);
      var validity_sigil = cljs.core.nth.call(null, vec__10404, 1, null);
      if (cljs.core._EQ_.call(null, 0, rows__$1)) {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", 
        "value", 305978217), new cljs.core.Keyword(null, "on-blur", "on-blur", 814300747), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "size", "size", 1098693007), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), new cljs.core.Keyword(null, "on-key-down", "on-key-down", 
        -1374733765)], [placeholder__$1, name, text, function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
          return function(p1__10386_SHARP_) {
            return censorius.text.submit.call(null, p1__10386_SHARP_, props__$1, true);
          };
        }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label), function() {
          var or__3799__auto__ = input_type__$1;
          if (cljs.core.truth_(or__3799__auto__)) {
            return or__3799__auto__;
          } else {
            return "text";
          }
        }(), size, label__$1, name, [cljs.core.str("valid-"), cljs.core.str(validity), cljs.core.str(" size-"), cljs.core.str(size)].join(""), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
          return function(p1__10387_SHARP_) {
            return censorius.text.do_change.call(null, props__$1, p1__10387_SHARP_.target.value);
          };
        }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, 
        map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
          return function(p1__10388_SHARP_) {
            return censorius.text.key_down.call(null, p1__10388_SHARP_, props__$1, true);
          };
        }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label)])], null), cljs.core.truth_(ellipsis) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 
        1, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
          return function() {
            return cljs.core.apply.call(null, ellipsis, keys__$1);
          };
        }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label)], null), "\u2026"], null) : null, cljs.core.truth_(validate__$1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 
        1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), [cljs.core.str("marker valid-"), cljs.core.str(validity)].join(""), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), censorius.text.mkfun_validity_submit.call(null, props__$1)], null), validity_sigil], null) : null], null);
      } else {
        if (cljs.core.not.call(null, rows__$1) || cljs.core._EQ_.call(null, 1, rows__$1)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "two-column"], null), [cljs.core.str(label__$1), cljs.core.str(":")].join(""), new cljs.core.PersistentVector(null, 
          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "on-blur", "on-blur", 814300747), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "title", "title", 
          636505583), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), new cljs.core.Keyword(null, "on-key-down", "on-key-down", -1374733765)], [placeholder__$1, name, text, function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, 
          map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function(p1__10389_SHARP_) {
              return censorius.text.submit.call(null, p1__10389_SHARP_, props__$1, true);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label), function() {
            var or__3799__auto__ = input_type__$1;
            if (cljs.core.truth_(or__3799__auto__)) {
              return or__3799__auto__;
            } else {
              return "text";
            }
          }(), cljs.core.truth_(placeholder__$1) ? [cljs.core.str(label__$1), cljs.core.str(" ("), cljs.core.str(placeholder__$1), cljs.core.str(")")].join("") : label__$1, name, [cljs.core.str("valid-"), cljs.core.str(validity), cljs.core.str(" size-"), cljs.core.str(size)].join(""), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, 
          props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function(p1__10390_SHARP_) {
              return censorius.text.do_change.call(null, props__$1, p1__10390_SHARP_.target.value);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, 
          map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function(p1__10391_SHARP_) {
              return censorius.text.key_down.call(null, p1__10391_SHARP_, props__$1, true);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label)])], null), cljs.core.truth_(ellipsis) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 
          1, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function() {
              return cljs.core.apply.call(null, ellipsis, props__$1);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label)], null), "\u2026"], null) : null, cljs.core.truth_(validate__$1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 
          1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), [cljs.core.str("marker "), cljs.core.str([cljs.core.str("valid-"), cljs.core.str(validity)].join(""))].join(""), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), censorius.text.mkfun_validity_submit.call(null, props__$1)], null), validity_sigil], null) : null], null)], null);
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
          "for", "for", -1323786319), [cljs.core.str("textarea-"), cljs.core.str(name)].join("")], null), label__$1], null), cljs.core.truth_(ellipsis) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, 
          validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function() {
              return cljs.core.apply.call(null, ellipsis, keys__$1);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label)], null), "\u2026"], null) : null, cljs.core.truth_(validate__$1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 
          1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), [cljs.core.str("marker valid-"), cljs.core.str(validity)].join("")], null), validity_sigil], null) : null], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), new cljs.core.Keyword(null, 
          "name", "name", 1843675177), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "on-blur", "on-blur", 814300747), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, "rows", "rows", 850049680), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), new cljs.core.Keyword(null, "on-key-down", "on-key-down", 
          -1374733765)], [placeholder__$1, name, text, function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function(p1__10392_SHARP_) {
              return censorius.text.submit.call(null, p1__10392_SHARP_, props__$1, true);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label), [cljs.core.str(label__$1), cljs.core.str(cljs.core.truth_(placeholder__$1) ? [cljs.core.str(" ("), cljs.core.str(placeholder__$1), cljs.core.str(")")].join("") : "")].join(""), rows__$1, name, 
          validity, function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function(p1__10393_SHARP_) {
              return censorius.text.do_change.call(null, props__$1, p1__10393_SHARP_.target.value);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label), function(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, 
          map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label) {
            return function(p1__10394_SHARP_) {
              return censorius.text.key_down.call(null, p1__10394_SHARP_, props__$1, false);
            };
          }(vec__10404, validity, validity_sigil, map__10403, map__10403__$1, props__$1, validated_QMARK_, validate__$1, keys__$1, input_type__$1, rows__$1, placeholder__$1, text, label__$1, name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label)])], null)], null);
        }
      }
    };
  }(name, map__10401, map__10401__$1, props, format, placeholder, validate, ellipsis, size, input_type, rows, keys, label);
};
// Input 68
goog.provide("datascript.btset");
goog.require("cljs.core");
datascript.btset.min_len = 64;
datascript.btset.max_len = 128;
datascript.btset.level_shift = cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__20519_SHARP_) {
  return(datascript.btset.max_len & 1 << p1__20519_SHARP_) != 0;
}, cljs.core.range.call(null, 31, -1, -1))) + 1;
datascript.btset.path_mask = (1 << datascript.btset.level_shift) - 1;
datascript.btset.empty_path = 0;
datascript.btset.path_get = function path_get(path, level) {
  return datascript.btset.path_mask & path >>> level;
};
datascript.btset.path_set = function path_set(path, level, idx) {
  return path | idx << level;
};
datascript.btset.eq = function eq(a, b) {
  return 0 === datascript.btset._STAR_cmp_STAR_.call(null, a, b);
};
datascript.btset.half = function half(x) {
  return x >>> 1;
};
datascript.btset.binary_search_l = function binary_search_l(arr, l, r, k) {
  while (true) {
    if (l <= r) {
      var m = datascript.btset.half.call(null, l + r);
      var mk = arr[m];
      var cmp = datascript.btset._STAR_cmp_STAR_.call(null, mk, k);
      if (cmp < 0) {
        var G__20520 = arr;
        var G__20521 = m + 1;
        var G__20522 = r;
        var G__20523 = k;
        arr = G__20520;
        l = G__20521;
        r = G__20522;
        k = G__20523;
        continue;
      } else {
        var G__20524 = arr;
        var G__20525 = l;
        var G__20526 = m - 1;
        var G__20527 = k;
        arr = G__20524;
        l = G__20525;
        r = G__20526;
        k = G__20527;
        continue;
      }
    } else {
      return l;
    }
    break;
  }
};
datascript.btset.binary_search_r = function binary_search_r(arr, l, r, k) {
  while (true) {
    if (l <= r) {
      var m = datascript.btset.half.call(null, l + r);
      var mk = arr[m];
      var cmp = datascript.btset._STAR_cmp_STAR_.call(null, mk, k);
      if (cmp > 0) {
        var G__20528 = arr;
        var G__20529 = l;
        var G__20530 = m - 1;
        var G__20531 = k;
        arr = G__20528;
        l = G__20529;
        r = G__20530;
        k = G__20531;
        continue;
      } else {
        var G__20532 = arr;
        var G__20533 = m + 1;
        var G__20534 = r;
        var G__20535 = k;
        arr = G__20532;
        l = G__20533;
        r = G__20534;
        k = G__20535;
        continue;
      }
    } else {
      return l;
    }
    break;
  }
};
datascript.btset.lookup_exact = function lookup_exact(arr, key) {
  var arr_l = arr.length;
  var idx = datascript.btset.binary_search_l.call(null, arr, 0, arr_l - 1, key);
  if (idx < arr_l && datascript.btset.eq.call(null, arr[idx], key)) {
    return idx;
  } else {
    return-1;
  }
};
datascript.btset.lookup_range = function lookup_range(arr, key) {
  var arr_l = arr.length;
  var idx = datascript.btset.binary_search_l.call(null, arr, 0, arr_l - 1, key);
  if (idx === arr_l) {
    return-1;
  } else {
    return idx;
  }
};
datascript.btset.alast = function alast(arr) {
  return arr[arr.length - 1];
};
datascript.btset.cut_n_splice = function cut_n_splice(arr, cut_from, cut_to, splice_from, splice_to, xs) {
  var arr_l = arr.length;
  var xs_l = xs.length;
  var l1 = splice_from - cut_from;
  var l2 = cut_to - splice_to;
  var l1xs = l1 + xs_l;
  var new_arr = new Array(l1 + xs_l + l2);
  var n__4686__auto___20536 = l1;
  var i_20537 = 0;
  while (true) {
    if (i_20537 < n__4686__auto___20536) {
      new_arr[i_20537] = arr[cut_from + i_20537];
      var G__20538 = i_20537 + 1;
      i_20537 = G__20538;
      continue;
    } else {
    }
    break;
  }
  var n__4686__auto___20539 = xs_l;
  var i_20540 = 0;
  while (true) {
    if (i_20540 < n__4686__auto___20539) {
      new_arr[i_20540 + l1] = xs[i_20540];
      var G__20541 = i_20540 + 1;
      i_20540 = G__20541;
      continue;
    } else {
    }
    break;
  }
  var n__4686__auto___20542 = l2;
  var i_20543 = 0;
  while (true) {
    if (i_20543 < n__4686__auto___20542) {
      new_arr[i_20543 + l1xs] = arr[splice_to + i_20543];
      var G__20544 = i_20543 + 1;
      i_20543 = G__20544;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
datascript.btset.cut = function() {
  var cut = null;
  var cut__2 = function(arr, cut_from) {
    return arr.slice(cut_from);
  };
  var cut__3 = function(arr, cut_from, cut_to) {
    return arr.slice(cut_from, cut_to);
  };
  cut = function(arr, cut_from, cut_to) {
    switch(arguments.length) {
      case 2:
        return cut__2.call(this, arr, cut_from);
      case 3:
        return cut__3.call(this, arr, cut_from, cut_to);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cut.cljs$core$IFn$_invoke$arity$2 = cut__2;
  cut.cljs$core$IFn$_invoke$arity$3 = cut__3;
  return cut;
}();
datascript.btset.splice = function splice(arr, splice_from, splice_to, xs) {
  return datascript.btset.cut_n_splice.call(null, arr, 0, arr.length, splice_from, splice_to, xs);
};
datascript.btset.insert = function insert(arr, idx, xs) {
  return datascript.btset.cut_n_splice.call(null, arr, 0, arr.length, idx, idx, xs);
};
datascript.btset.merge_n_split = function merge_n_split(a1, a2) {
  var a1_l = a1.length;
  var a2_l = a2.length;
  var total_l = a1_l + a2_l;
  var r1_l = datascript.btset.half.call(null, total_l);
  var r2_l = total_l - r1_l;
  var r1 = new Array(r1_l);
  var r2 = new Array(r2_l);
  var n__4686__auto___20545 = total_l;
  var i_20546 = 0;
  while (true) {
    if (i_20546 < n__4686__auto___20545) {
      (i_20546 < r1_l ? r1 : r2)[i_20546 < r1_l ? i_20546 : i_20546 - r1_l] = (i_20546 < a1_l ? a1 : a2)[i_20546 < a1_l ? i_20546 : i_20546 - a1_l];
      var G__20547 = i_20546 + 1;
      i_20546 = G__20547;
      continue;
    } else {
    }
    break;
  }
  return[r1, r2];
};
datascript.btset.eq_arr = function eq_arr(a1, a1_from, a1_to, a2, a2_from, a2_to, cmp) {
  var len = a1_to - a1_from;
  var and__3787__auto__ = len === a2_to - a2_from;
  if (and__3787__auto__) {
    var i = 0;
    while (true) {
      if (i === len) {
        return true;
      } else {
        if (cljs.core.not.call(null, cmp.call(null, a1[i + a1_from], a2[i + a2_from]))) {
          return false;
        } else {
          var G__20548 = i + 1;
          i = G__20548;
          continue;
        }
      }
      break;
    }
  } else {
    return and__3787__auto__;
  }
};
datascript.btset.check_n_splice = function check_n_splice(arr, from, to, new_arr) {
  if (datascript.btset.eq_arr.call(null, arr, from, to, new_arr, 0, new_arr.length, datascript.btset.eq)) {
    return arr;
  } else {
    return datascript.btset.splice.call(null, arr, from, to, new_arr);
  }
};
datascript.btset.arr_map_inplace = function arr_map_inplace(f, arr) {
  var len = arr.length;
  var i_20549 = 0;
  while (true) {
    if (i_20549 < len) {
      arr[i_20549] = f.call(null, arr[i_20549]);
      var G__20550 = i_20549 + 1;
      i_20549 = G__20550;
      continue;
    } else {
    }
    break;
  }
  return arr;
};
datascript.btset.arr_partition_approx = function arr_partition_approx(min_len, max_len, arr) {
  var chunk_len = datascript.btset.half.call(null, max_len + min_len);
  var len = arr.length;
  var acc = [];
  if (len > 0) {
    var pos_20551 = 0;
    while (true) {
      var rest_20552 = len - pos_20551;
      if (rest_20552 <= max_len) {
        acc.push(arr.slice(pos_20551));
      } else {
        if (rest_20552 >= chunk_len + min_len) {
          acc.push(arr.slice(pos_20551, pos_20551 + chunk_len));
          var G__20553 = pos_20551 + chunk_len;
          pos_20551 = G__20553;
          continue;
        } else {
          var piece_len_20554 = datascript.btset.half.call(null, rest_20552);
          acc.push(arr.slice(pos_20551, pos_20551 + piece_len_20554));
          var G__20555 = pos_20551 + piece_len_20554;
          pos_20551 = G__20555;
          continue;
        }
      }
      break;
    }
  } else {
  }
  return acc;
};
datascript.btset.arr_distinct = function arr_distinct(arr, cmp) {
  var i_20556 = 0;
  while (true) {
    if (i_20556 >= arr.length) {
    } else {
      if (i_20556 > 0 && 0 === cmp.call(null, arr[i_20556], arr[i_20556 - 1])) {
        arr.splice(i_20556, 1);
        var G__20557 = i_20556;
        i_20556 = G__20557;
        continue;
      } else {
        var G__20558 = i_20556 + 1;
        i_20556 = G__20558;
        continue;
      }
    }
    break;
  }
  return arr;
};
datascript.btset.lim_key = function lim_key(node) {
  return datascript.btset.alast.call(null, node.keys);
};
datascript.btset.return_array = function() {
  var return_array = null;
  var return_array__1 = function(a1) {
    return[a1];
  };
  var return_array__2 = function(a1, a2) {
    if (cljs.core.truth_(a1)) {
      if (cljs.core.truth_(a2)) {
        return[a1, a2];
      } else {
        return[a1];
      }
    } else {
      return[a2];
    }
  };
  var return_array__3 = function(a1, a2, a3) {
    if (cljs.core.truth_(a1)) {
      if (cljs.core.truth_(a2)) {
        if (cljs.core.truth_(a3)) {
          return[a1, a2, a3];
        } else {
          return[a1, a2];
        }
      } else {
        if (cljs.core.truth_(a3)) {
          return[a1, a3];
        } else {
          return[a1];
        }
      }
    } else {
      if (cljs.core.truth_(a2)) {
        if (cljs.core.truth_(a3)) {
          return[a2, a3];
        } else {
          return[a2];
        }
      } else {
        return[a3];
      }
    }
  };
  return_array = function(a1, a2, a3) {
    switch(arguments.length) {
      case 1:
        return return_array__1.call(this, a1);
      case 2:
        return return_array__2.call(this, a1, a2);
      case 3:
        return return_array__3.call(this, a1, a2, a3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return_array.cljs$core$IFn$_invoke$arity$1 = return_array__1;
  return_array.cljs$core$IFn$_invoke$arity$2 = return_array__2;
  return_array.cljs$core$IFn$_invoke$arity$3 = return_array__3;
  return return_array;
}();
datascript.btset.rotate = function rotate(node, root_QMARK_, left, right) {
  if (cljs.core.truth_(root_QMARK_)) {
    return datascript.btset.return_array.call(null, node);
  } else {
    if (node.len() > datascript.btset.min_len) {
      return datascript.btset.return_array.call(null, left, node, right);
    } else {
      if (cljs.core.truth_(function() {
        var and__3787__auto__ = left;
        if (cljs.core.truth_(and__3787__auto__)) {
          return left.len() <= datascript.btset.min_len;
        } else {
          return and__3787__auto__;
        }
      }())) {
        return datascript.btset.return_array.call(null, left.merge(node), right);
      } else {
        if (cljs.core.truth_(function() {
          var and__3787__auto__ = right;
          if (cljs.core.truth_(and__3787__auto__)) {
            return right.len() <= datascript.btset.min_len;
          } else {
            return and__3787__auto__;
          }
        }())) {
          return datascript.btset.return_array.call(null, left, node.merge(right));
        } else {
          if (cljs.core.truth_(function() {
            var and__3787__auto__ = left;
            if (cljs.core.truth_(and__3787__auto__)) {
              return right == null || left.len() < right.len();
            } else {
              return and__3787__auto__;
            }
          }())) {
            var nodes = left.merge_n_split(node);
            return datascript.btset.return_array.call(null, nodes[0], nodes[1], right);
          } else {
            var nodes = node.merge_n_split(right);
            return datascript.btset.return_array.call(null, left, nodes[0], nodes[1]);
          }
        }
      }
    }
  }
};
datascript.btset.Node = function(keys, pointers) {
  this.keys = keys;
  this.pointers = pointers;
};
datascript.btset.Node.prototype.len = function() {
  var self__ = this;
  var _ = this;
  return self__.keys.length;
};
datascript.btset.Node.prototype.merge = function(next) {
  var self__ = this;
  var _ = this;
  return new datascript.btset.Node(self__.keys.concat(next.keys), self__.pointers.concat(next.pointers));
};
datascript.btset.Node.prototype.merge_n_split = function(next) {
  var self__ = this;
  var _ = this;
  var ks = datascript.btset.merge_n_split.call(null, self__.keys, next.keys);
  var ps = datascript.btset.merge_n_split.call(null, self__.pointers, next.pointers);
  return datascript.btset.return_array.call(null, new datascript.btset.Node(ks[0], ps[0]), new datascript.btset.Node(ks[1], ps[1]));
};
datascript.btset.Node.prototype.lookup = function(key) {
  var self__ = this;
  var _ = this;
  var idx = datascript.btset.lookup_range.call(null, self__.keys, key);
  if (-1 === idx) {
    return null;
  } else {
    return self__.pointers[idx].lookup(key);
  }
};
datascript.btset.Node.prototype.conj = function(key) {
  var self__ = this;
  var this$ = this;
  var idx = datascript.btset.binary_search_l.call(null, self__.keys, 0, self__.keys.length - 2, key);
  var nodes = self__.pointers[idx].conj(key);
  if (cljs.core.truth_(nodes)) {
    var new_keys = datascript.btset.check_n_splice.call(null, self__.keys, idx, idx + 1, nodes.map(datascript.btset.lim_key));
    var new_pointers = datascript.btset.splice.call(null, self__.pointers, idx, idx + 1, nodes);
    if (new_pointers.length <= datascript.btset.max_len) {
      return[new datascript.btset.Node(new_keys, new_pointers)];
    } else {
      var middle = datascript.btset.half.call(null, new_pointers.length);
      return[new datascript.btset.Node(datascript.btset.cut.call(null, new_keys, 0, middle), datascript.btset.cut.call(null, new_pointers, 0, middle)), new datascript.btset.Node(datascript.btset.cut.call(null, new_keys, middle), datascript.btset.cut.call(null, new_pointers, middle))];
    }
  } else {
    return null;
  }
};
datascript.btset.Node.prototype.disj = function(key, root_QMARK_, left, right) {
  var self__ = this;
  var this$ = this;
  var idx = datascript.btset.lookup_range.call(null, self__.keys, key);
  if (-1 === idx) {
    return null;
  } else {
    var child = self__.pointers[idx];
    var left_child = idx - 1 >= 0 ? self__.pointers[idx - 1] : null;
    var right_child = idx + 1 < self__.pointers.length ? self__.pointers[idx + 1] : null;
    var disjned = child.disj(key, false, left_child, right_child);
    if (cljs.core.truth_(disjned)) {
      var left_idx = cljs.core.truth_(left_child) ? idx - 1 : idx;
      var right_idx = cljs.core.truth_(right_child) ? 2 + idx : 1 + idx;
      var new_keys = datascript.btset.check_n_splice.call(null, self__.keys, left_idx, right_idx, disjned.map(datascript.btset.lim_key));
      var new_pointers = datascript.btset.splice.call(null, self__.pointers, left_idx, right_idx, disjned);
      return datascript.btset.rotate.call(null, new datascript.btset.Node(new_keys, new_pointers), root_QMARK_, left, right);
    } else {
      return null;
    }
  }
};
datascript.btset.Node.cljs$lang$type = true;
datascript.btset.Node.cljs$lang$ctorStr = "datascript.btset/Node";
datascript.btset.Node.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "datascript.btset/Node");
};
datascript.btset.__GT_Node = function __GT_Node(keys, pointers) {
  return new datascript.btset.Node(keys, pointers);
};
datascript.btset.LeafNode = function(keys) {
  this.keys = keys;
};
datascript.btset.LeafNode.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.pr_str_STAR_.call(null, cljs.core.vec.call(null, self__.keys));
};
datascript.btset.LeafNode.prototype.len = function() {
  var self__ = this;
  var _ = this;
  return self__.keys.length;
};
datascript.btset.LeafNode.prototype.merge = function(next) {
  var self__ = this;
  var _ = this;
  return new datascript.btset.LeafNode(self__.keys.concat(next.keys));
};
datascript.btset.LeafNode.prototype.merge_n_split = function(next) {
  var self__ = this;
  var _ = this;
  var ks = datascript.btset.merge_n_split.call(null, self__.keys, next.keys);
  return datascript.btset.return_array.call(null, new datascript.btset.LeafNode(ks[0]), new datascript.btset.LeafNode(ks[1]));
};
datascript.btset.LeafNode.prototype.lookup = function(key) {
  var self__ = this;
  var _ = this;
  var idx = datascript.btset.lookup_exact.call(null, self__.keys, key);
  if (-1 === idx) {
    return null;
  } else {
    return self__.keys[idx];
  }
};
datascript.btset.LeafNode.prototype.conj = function(key) {
  var self__ = this;
  var this$ = this;
  var idx = datascript.btset.binary_search_l.call(null, self__.keys, 0, self__.keys.length - 1, key);
  var keys_l = self__.keys.length;
  if (idx < keys_l && datascript.btset.eq.call(null, key, self__.keys[idx])) {
    return null;
  } else {
    if (keys_l === datascript.btset.max_len) {
      var middle = datascript.btset.half.call(null, keys_l + 1);
      if (idx > middle) {
        return[new datascript.btset.LeafNode(datascript.btset.cut.call(null, self__.keys, 0, middle)), new datascript.btset.LeafNode(datascript.btset.cut_n_splice.call(null, self__.keys, middle, keys_l, idx, idx, [key]))];
      } else {
        return[new datascript.btset.LeafNode(datascript.btset.cut_n_splice.call(null, self__.keys, 0, middle, idx, idx, [key])), new datascript.btset.LeafNode(datascript.btset.cut.call(null, self__.keys, middle, keys_l))];
      }
    } else {
      return[new datascript.btset.LeafNode(datascript.btset.splice.call(null, self__.keys, idx, idx, [key]))];
    }
  }
};
datascript.btset.LeafNode.prototype.disj = function(key, root_QMARK_, left, right) {
  var self__ = this;
  var this$ = this;
  var idx = datascript.btset.lookup_exact.call(null, self__.keys, key);
  if (-1 === idx) {
    return null;
  } else {
    var new_keys = datascript.btset.splice.call(null, self__.keys, idx, idx + 1, []);
    return datascript.btset.rotate.call(null, new datascript.btset.LeafNode(new_keys), root_QMARK_, left, right);
  }
};
datascript.btset.LeafNode.cljs$lang$type = true;
datascript.btset.LeafNode.cljs$lang$ctorStr = "datascript.btset/LeafNode";
datascript.btset.LeafNode.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "datascript.btset/LeafNode");
};
datascript.btset.__GT_LeafNode = function __GT_LeafNode(keys) {
  return new datascript.btset.LeafNode(keys);
};
datascript.btset.keys_for = function keys_for(set, path) {
  var level = set.shift;
  var node = set.root;
  while (true) {
    if (level > 0) {
      var G__20559 = level - datascript.btset.level_shift;
      var G__20560 = node.pointers[datascript.btset.path_get.call(null, path, level)];
      level = G__20559;
      node = G__20560;
      continue;
    } else {
      return node.keys;
    }
    break;
  }
};
datascript.btset.btset_conj = function btset_conj(set, key, cmp) {
  var _STAR_cmp_STAR_20562 = datascript.btset._STAR_cmp_STAR_;
  try {
    datascript.btset._STAR_cmp_STAR_ = cmp;
    var roots = set.root.conj(key);
    if (roots == null) {
      return set;
    } else {
      if (roots.length === 1) {
        return datascript.btset.alter_btset.call(null, set, roots[0], set.shift, set.cnt + 1);
      } else {
        return datascript.btset.alter_btset.call(null, set, new datascript.btset.Node(roots.map(datascript.btset.lim_key), roots), set.shift + datascript.btset.level_shift, set.cnt + 1);
      }
    }
  } finally {
    datascript.btset._STAR_cmp_STAR_ = _STAR_cmp_STAR_20562;
  }
};
datascript.btset.btset_disj = function btset_disj(set, key, cmp) {
  var _STAR_cmp_STAR_20564 = datascript.btset._STAR_cmp_STAR_;
  try {
    datascript.btset._STAR_cmp_STAR_ = cmp;
    var new_roots = set.root.disj(key, true, null, null);
    if (new_roots == null) {
      return set;
    } else {
      var new_root = new_roots[0];
      if (new_root instanceof datascript.btset.Node && new_root.pointers.length === 1) {
        return datascript.btset.alter_btset.call(null, set, new_root.pointers[0], set.shift - datascript.btset.level_shift, set.cnt - 1);
      } else {
        return datascript.btset.alter_btset.call(null, set, new_root, set.shift, set.cnt - 1);
      }
    }
  } finally {
    datascript.btset._STAR_cmp_STAR_ = _STAR_cmp_STAR_20564;
  }
};
datascript.btset._next_path = function _next_path(node, path, level) {
  var idx = datascript.btset.path_get.call(null, path, level);
  if (level > 0) {
    var sub_path = _next_path.call(null, node.pointers[idx], path, level - datascript.btset.level_shift);
    if (-1 === sub_path) {
      if (idx + 1 < node.pointers.length) {
        return datascript.btset.path_set.call(null, datascript.btset.empty_path, level, idx + 1);
      } else {
        return-1;
      }
    } else {
      return datascript.btset.path_set.call(null, sub_path, level, idx);
    }
  } else {
    if (idx + 1 < node.keys.length) {
      return datascript.btset.path_set.call(null, datascript.btset.empty_path, 0, idx + 1);
    } else {
      return-1;
    }
  }
};
datascript.btset.next_path = function next_path(set, path) {
  return datascript.btset._next_path.call(null, set.root, path, set.shift);
};
datascript.btset._rpath = function _rpath(node, level) {
  var node__$1 = node;
  var path = datascript.btset.empty_path;
  var level__$1 = level;
  while (true) {
    if (level__$1 > 0) {
      var G__20565 = datascript.btset.alast.call(null, node__$1.pointers);
      var G__20566 = datascript.btset.path_set.call(null, path, level__$1, node__$1.pointers.length - 1);
      var G__20567 = level__$1 - datascript.btset.level_shift;
      node__$1 = G__20565;
      path = G__20566;
      level__$1 = G__20567;
      continue;
    } else {
      return datascript.btset.path_set.call(null, path, 0, node__$1.keys.length - 1);
    }
    break;
  }
};
datascript.btset._prev_path = function _prev_path(node, path, level) {
  var idx = datascript.btset.path_get.call(null, path, level);
  if (level > 0) {
    var sub_level = level - datascript.btset.level_shift;
    var sub_path = _prev_path.call(null, node.pointers[idx], path, sub_level);
    if (-1 === sub_path) {
      if (idx - 1 >= 0) {
        var idx__$1 = idx - 1;
        var sub_path__$1 = datascript.btset._rpath.call(null, node.pointers[idx__$1], sub_level);
        return datascript.btset.path_set.call(null, sub_path__$1, level, idx__$1);
      } else {
        return-1;
      }
    } else {
      return datascript.btset.path_set.call(null, sub_path, level, idx);
    }
  } else {
    if (idx - 1 >= 0) {
      return datascript.btset.path_set.call(null, datascript.btset.empty_path, 0, idx - 1);
    } else {
      return-1;
    }
  }
};
datascript.btset.prev_path = function prev_path(set, path) {
  return datascript.btset._prev_path.call(null, set.root, path, set.shift);
};
datascript.btset.BTSetIter = function(set, left, right, keys, idx) {
  this.set = set;
  this.left = left;
  this.right = right;
  this.keys = keys;
  this.idx = idx;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 142606528;
};
datascript.btset.BTSetIter.prototype.cljs$core$IReversible$_rseq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    return datascript.btset._btset_backwards_iter.call(null, self__.set, datascript.btset.prev_path.call(null, self__.set, self__.left), datascript.btset.prev_path.call(null, self__.set, self__.right));
  } else {
    return null;
  }
};
datascript.btset.BTSetIter.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    if (self__.idx + 1 < self__.keys.length) {
      if (self__.left + 1 < self__.right) {
        return new datascript.btset.BTSetIter(self__.set, self__.left + 1, self__.right, self__.keys, self__.idx + 1);
      } else {
        return null;
      }
    } else {
      var left__$1 = datascript.btset.next_path.call(null, self__.set, self__.left);
      if (cljs.core.not_EQ_.call(null, -1, left__$1) && left__$1 < self__.right) {
        return datascript.btset._btset_iter.call(null, self__.set, left__$1, self__.right);
      } else {
        return null;
      }
    }
  } else {
    return null;
  }
};
datascript.btset.BTSetIter.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    return self__.keys[self__.idx];
  } else {
    return null;
  }
};
datascript.btset.BTSetIter.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var temp__4124__auto__ = cljs.core._next.call(null, this$__$1);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var next = temp__4124__auto__;
    return next;
  } else {
    return new datascript.btset.BTSetIter(self__.set, -1, -1, null, -1);
  }
};
datascript.btset.BTSetIter.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    return this$__$1;
  } else {
    return null;
  }
};
datascript.btset.BTSetIter.cljs$lang$type = true;
datascript.btset.BTSetIter.cljs$lang$ctorStr = "datascript.btset/BTSetIter";
datascript.btset.BTSetIter.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "datascript.btset/BTSetIter");
};
datascript.btset.__GT_BTSetIter = function __GT_BTSetIter(set, left, right, keys, idx) {
  return new datascript.btset.BTSetIter(set, left, right, keys, idx);
};
datascript.btset._btset_iter = function _btset_iter(set, left, right) {
  return new datascript.btset.BTSetIter(set, left, right, datascript.btset.keys_for.call(null, set, left), datascript.btset.path_get.call(null, left, 0));
};
datascript.btset.BTSetBackwardsIter = function(set, left, right, keys, idx) {
  this.set = set;
  this.left = left;
  this.right = right;
  this.keys = keys;
  this.idx = idx;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 142606528;
};
datascript.btset.BTSetBackwardsIter.prototype.cljs$core$IReversible$_rseq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    var new_left = self__.left === -1 ? 0 : datascript.btset.next_path.call(null, self__.set, self__.left);
    var new_right = datascript.btset.next_path.call(null, self__.set, self__.right);
    var new_right__$1 = new_right === -1 ? self__.right + 1 : new_right;
    return datascript.btset._btset_iter.call(null, self__.set, new_left, new_right__$1);
  } else {
    return null;
  }
};
datascript.btset.BTSetBackwardsIter.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    if (self__.idx - 1 >= 0) {
      if (self__.right - 1 > self__.left) {
        return new datascript.btset.BTSetBackwardsIter(self__.set, self__.left, self__.right - 1, self__.keys, self__.idx - 1);
      } else {
        return null;
      }
    } else {
      var right__$1 = datascript.btset.prev_path.call(null, self__.set, self__.right);
      if (cljs.core.not_EQ_.call(null, -1, right__$1) && right__$1 > self__.left) {
        return datascript.btset._btset_backwards_iter.call(null, self__.set, self__.left, right__$1);
      } else {
        return null;
      }
    }
  } else {
    return null;
  }
};
datascript.btset.BTSetBackwardsIter.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    return self__.keys[self__.idx];
  } else {
    return null;
  }
};
datascript.btset.BTSetBackwardsIter.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var temp__4124__auto__ = cljs.core._next.call(null, this$__$1);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var next = temp__4124__auto__;
    return next;
  } else {
    return new datascript.btset.BTSetBackwardsIter(self__.set, -1, -1, null, -1);
  }
};
datascript.btset.BTSetBackwardsIter.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.keys)) {
    return this$__$1;
  } else {
    return null;
  }
};
datascript.btset.BTSetBackwardsIter.cljs$lang$type = true;
datascript.btset.BTSetBackwardsIter.cljs$lang$ctorStr = "datascript.btset/BTSetBackwardsIter";
datascript.btset.BTSetBackwardsIter.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "datascript.btset/BTSetBackwardsIter");
};
datascript.btset.__GT_BTSetBackwardsIter = function __GT_BTSetBackwardsIter(set, left, right, keys, idx) {
  return new datascript.btset.BTSetBackwardsIter(set, left, right, keys, idx);
};
datascript.btset._btset_backwards_iter = function _btset_backwards_iter(set, left, right) {
  return new datascript.btset.BTSetBackwardsIter(set, left, right, datascript.btset.keys_for.call(null, set, right), datascript.btset.path_get.call(null, right, 0));
};
datascript.btset.btset_iter = function btset_iter(set) {
  if (set.root.keys.length > 0) {
    var left = datascript.btset.empty_path;
    var right = datascript.btset._rpath.call(null, set.root, set.shift) + 1;
    return datascript.btset._btset_iter.call(null, set, left, right);
  } else {
    return null;
  }
};
datascript.btset._seek = function _seek(set, key) {
  var node = set.root;
  var path = datascript.btset.empty_path;
  var level = set.shift;
  while (true) {
    var keys = node.keys;
    var keys_l = keys.length;
    if (0 === level) {
      var idx = datascript.btset.binary_search_l.call(null, keys, 0, keys_l - 1, key);
      if (keys_l === idx) {
        return-1;
      } else {
        return datascript.btset.path_set.call(null, path, 0, idx);
      }
    } else {
      var idx = datascript.btset.binary_search_l.call(null, keys, 0, keys_l - 2, key);
      var G__20568 = node.pointers[idx];
      var G__20569 = datascript.btset.path_set.call(null, path, level, idx);
      var G__20570 = level - datascript.btset.level_shift;
      node = G__20568;
      path = G__20569;
      level = G__20570;
      continue;
    }
    break;
  }
};
datascript.btset._rseek = function _rseek(set, key) {
  var node = set.root;
  var path = datascript.btset.empty_path;
  var level = set.shift;
  while (true) {
    var keys = node.keys;
    var keys_l = keys.length;
    if (0 === level) {
      var idx = datascript.btset.binary_search_r.call(null, keys, 0, keys_l - 1, key);
      return datascript.btset.path_set.call(null, path, 0, idx);
    } else {
      var idx = datascript.btset.binary_search_r.call(null, keys, 0, keys_l - 2, key);
      var G__20571 = node.pointers[idx];
      var G__20572 = datascript.btset.path_set.call(null, path, level, idx);
      var G__20573 = level - datascript.btset.level_shift;
      node = G__20571;
      path = G__20572;
      level = G__20573;
      continue;
    }
    break;
  }
};
datascript.btset._slice = function _slice(set, key_from, key_to) {
  var path = datascript.btset._seek.call(null, set, key_from);
  if (path < 0) {
    return null;
  } else {
    var till_path = datascript.btset._rseek.call(null, set, key_to);
    if (till_path > path) {
      return new datascript.btset.BTSetIter(set, path, till_path, datascript.btset.keys_for.call(null, set, path), datascript.btset.path_get.call(null, path, 0));
    } else {
      return null;
    }
  }
};
datascript.btset.slice = function() {
  var slice = null;
  var slice__2 = function(set, key) {
    return slice.call(null, set, key, key);
  };
  var slice__3 = function(set, key_from, key_to) {
    var _STAR_cmp_STAR_20575 = datascript.btset._STAR_cmp_STAR_;
    try {
      datascript.btset._STAR_cmp_STAR_ = set.comparator;
      return datascript.btset._slice.call(null, set, key_from, key_to);
    } finally {
      datascript.btset._STAR_cmp_STAR_ = _STAR_cmp_STAR_20575;
    }
  };
  slice = function(set, key_from, key_to) {
    switch(arguments.length) {
      case 2:
        return slice__2.call(this, set, key_from);
      case 3:
        return slice__3.call(this, set, key_from, key_to);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  slice.cljs$core$IFn$_invoke$arity$2 = slice__2;
  slice.cljs$core$IFn$_invoke$arity$3 = slice__3;
  return slice;
}();
datascript.btset.BTSet = function(root, shift, cnt, comparator, meta, __hash) {
  this.root = root;
  this.shift = shift;
  this.cnt = cnt;
  this.comparator = comparator;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2296779023;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
datascript.btset.BTSet.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str_STAR_.call(null, this$);
};
datascript.btset.BTSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(set, k) {
  var self__ = this;
  var set__$1 = this;
  return cljs.core._lookup.call(null, set__$1, k, null);
};
datascript.btset.BTSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  var _STAR_cmp_STAR_20578 = datascript.btset._STAR_cmp_STAR_;
  try {
    datascript.btset._STAR_cmp_STAR_ = self__.comparator;
    var or__3799__auto__ = self__.root.lookup(k);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return not_found;
    }
  } finally {
    datascript.btset._STAR_cmp_STAR_ = _STAR_cmp_STAR_20578;
  }
};
datascript.btset.BTSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, cljs.core.seq.call(null, this$__$1));
};
datascript.btset.BTSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
datascript.btset.BTSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new datascript.btset.BTSet(self__.root, self__.shift, self__.cnt, self__.comparator, self__.meta, self__.__hash);
};
datascript.btset.BTSet.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.cnt;
};
datascript.btset.BTSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reverse.call(null, datascript.btset.btset_iter.call(null, this$__$1));
};
datascript.btset.BTSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
datascript.btset.BTSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && self__.cnt === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(this$__$1) {
    return function(p1__20576_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, this$__$1, p1__20576_SHARP_);
    };
  }(this$__$1), other);
};
datascript.btset.BTSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new datascript.btset.BTSet(new datascript.btset.LeafNode([]), 0, 0, self__.comparator, self__.meta, 0);
};
datascript.btset.BTSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(set, key) {
  var self__ = this;
  var set__$1 = this;
  return datascript.btset.btset_disj.call(null, set__$1, key, self__.comparator);
};
datascript.btset.BTSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return datascript.btset.btset_iter.call(null, this$__$1);
};
datascript.btset.BTSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new datascript.btset.BTSet(self__.root, self__.shift, self__.cnt, self__.comparator, new_meta, self__.__hash);
};
datascript.btset.BTSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(set, key) {
  var self__ = this;
  var set__$1 = this;
  return datascript.btset.btset_conj.call(null, set__$1, key, self__.comparator);
};
datascript.btset.BTSet.prototype.call = function() {
  var G__20579 = null;
  var G__20579__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k);
  };
  var G__20579__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return cljs.core._lookup.call(null, coll, k, not_found);
  };
  G__20579 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20579__2.call(this, self__, k);
      case 3:
        return G__20579__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20579.cljs$core$IFn$_invoke$arity$2 = G__20579__2;
  G__20579.cljs$core$IFn$_invoke$arity$3 = G__20579__3;
  return G__20579;
}();
datascript.btset.BTSet.prototype.apply = function(self__, args20577) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20577)));
};
datascript.btset.BTSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k);
};
datascript.btset.BTSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return cljs.core._lookup.call(null, coll, k, not_found);
};
datascript.btset.BTSet.cljs$lang$type = true;
datascript.btset.BTSet.cljs$lang$ctorStr = "datascript.btset/BTSet";
datascript.btset.BTSet.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "datascript.btset/BTSet");
};
datascript.btset.__GT_BTSet = function __GT_BTSet(root, shift, cnt, comparator, meta, __hash) {
  return new datascript.btset.BTSet(root, shift, cnt, comparator, meta, __hash);
};
datascript.btset.alter_btset = function alter_btset(set, root, shift, cnt) {
  return new datascript.btset.BTSet(root, shift, cnt, set.comparator, set.meta, null);
};
datascript.btset._btset_from_sorted_arr = function _btset_from_sorted_arr(arr, cmp) {
  var leafs = datascript.btset.arr_map_inplace.call(null, datascript.btset.__GT_LeafNode, datascript.btset.arr_partition_approx.call(null, datascript.btset.min_len, datascript.btset.max_len, arr));
  var current_level = leafs;
  var shift = 0;
  while (true) {
    var G__20582 = cljs.core.count.call(null, current_level);
    switch(G__20582) {
      case 0:
        return new datascript.btset.BTSet(new datascript.btset.LeafNode([]), 0, 0, cmp, null, 0);
        break;
      case 1:
        return new datascript.btset.BTSet(cljs.core.first.call(null, current_level), shift, arr.length, cmp, null, 0);
        break;
      default:
        var G__20584 = datascript.btset.arr_map_inplace.call(null, function(current_level, shift, G__20582, leafs) {
          return function(p1__20580_SHARP_) {
            return new datascript.btset.Node(p1__20580_SHARP_.map(datascript.btset.lim_key), p1__20580_SHARP_);
          };
        }(current_level, shift, G__20582, leafs), datascript.btset.arr_partition_approx.call(null, datascript.btset.min_len, datascript.btset.max_len, current_level));
        var G__20585 = shift + datascript.btset.level_shift;
        current_level = G__20584;
        shift = G__20585;
        continue;
    }
    break;
  }
};
datascript.btset._btset_from_seq = function _btset_from_seq(seq, cmp) {
  var arr = datascript.btset.arr_distinct.call(null, cljs.core.into_array.call(null, seq).sort(cmp), cmp);
  return datascript.btset._btset_from_sorted_arr.call(null, arr, cmp);
};
datascript.btset.btset_by = function() {
  var btset_by = null;
  var btset_by__1 = function(cmp) {
    return new datascript.btset.BTSet(new datascript.btset.LeafNode([]), 0, 0, cmp, null, 0);
  };
  var btset_by__2 = function() {
    var G__20586__delegate = function(cmp, keys) {
      return datascript.btset._btset_from_seq.call(null, keys, cmp);
    };
    var G__20586 = function(cmp, var_args) {
      var keys = null;
      if (arguments.length > 1) {
        var G__20587__i = 0, G__20587__a = new Array(arguments.length - 1);
        while (G__20587__i < G__20587__a.length) {
          G__20587__a[G__20587__i] = arguments[G__20587__i + 1];
          ++G__20587__i;
        }
        keys = new cljs.core.IndexedSeq(G__20587__a, 0);
      }
      return G__20586__delegate.call(this, cmp, keys);
    };
    G__20586.cljs$lang$maxFixedArity = 1;
    G__20586.cljs$lang$applyTo = function(arglist__20588) {
      var cmp = cljs.core.first(arglist__20588);
      var keys = cljs.core.rest(arglist__20588);
      return G__20586__delegate(cmp, keys);
    };
    G__20586.cljs$core$IFn$_invoke$arity$variadic = G__20586__delegate;
    return G__20586;
  }();
  btset_by = function(cmp, var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 1:
        return btset_by__1.call(this, cmp);
      default:
        var G__20589 = null;
        if (arguments.length > 1) {
          var G__20590__i = 0, G__20590__a = new Array(arguments.length - 1);
          while (G__20590__i < G__20590__a.length) {
            G__20590__a[G__20590__i] = arguments[G__20590__i + 1];
            ++G__20590__i;
          }
          G__20589 = new cljs.core.IndexedSeq(G__20590__a, 0);
        }
        return btset_by__2.cljs$core$IFn$_invoke$arity$variadic(cmp, G__20589);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  btset_by.cljs$lang$maxFixedArity = 1;
  btset_by.cljs$lang$applyTo = btset_by__2.cljs$lang$applyTo;
  btset_by.cljs$core$IFn$_invoke$arity$1 = btset_by__1;
  btset_by.cljs$core$IFn$_invoke$arity$variadic = btset_by__2.cljs$core$IFn$_invoke$arity$variadic;
  return btset_by;
}();
datascript.btset.btset = function() {
  var btset = null;
  var btset__0 = function() {
    return datascript.btset.btset_by.call(null, cljs.core.compare);
  };
  var btset__1 = function() {
    var G__20591__delegate = function(keys) {
      return datascript.btset._btset_from_seq.call(null, keys, cljs.core.compare);
    };
    var G__20591 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__20592__i = 0, G__20592__a = new Array(arguments.length - 0);
        while (G__20592__i < G__20592__a.length) {
          G__20592__a[G__20592__i] = arguments[G__20592__i + 0];
          ++G__20592__i;
        }
        keys = new cljs.core.IndexedSeq(G__20592__a, 0);
      }
      return G__20591__delegate.call(this, keys);
    };
    G__20591.cljs$lang$maxFixedArity = 0;
    G__20591.cljs$lang$applyTo = function(arglist__20593) {
      var keys = cljs.core.seq(arglist__20593);
      return G__20591__delegate(keys);
    };
    G__20591.cljs$core$IFn$_invoke$arity$variadic = G__20591__delegate;
    return G__20591;
  }();
  btset = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return btset__0.call(this);
      default:
        var G__20594 = null;
        if (arguments.length > 0) {
          var G__20595__i = 0, G__20595__a = new Array(arguments.length - 0);
          while (G__20595__i < G__20595__a.length) {
            G__20595__a[G__20595__i] = arguments[G__20595__i + 0];
            ++G__20595__i;
          }
          G__20594 = new cljs.core.IndexedSeq(G__20595__a, 0);
        }
        return btset__1.cljs$core$IFn$_invoke$arity$variadic(G__20594);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  btset.cljs$lang$maxFixedArity = 0;
  btset.cljs$lang$applyTo = btset__1.cljs$lang$applyTo;
  btset.cljs$core$IFn$_invoke$arity$0 = btset__0;
  btset.cljs$core$IFn$_invoke$arity$variadic = btset__1.cljs$core$IFn$_invoke$arity$variadic;
  return btset;
}();
// Input 69
goog.provide("datascript.core");
goog.require("cljs.core");
goog.require("goog.array");
goog.require("datascript.btset");
datascript.core.tx0 = 536870912;
datascript.core.Datom = function(e, a, v, tx, added, __meta, __extmap, __hash) {
  this.e = e;
  this.a = a;
  this.v = v;
  this.tx = tx;
  this.added = added;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
datascript.core.Datom.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str.call(null, this$);
};
datascript.core.Datom.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4402__auto__, k__4403__auto__) {
  var self__ = this;
  var this__4402__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4402__auto____$1, k__4403__auto__, null);
};
datascript.core.Datom.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4404__auto__, k20598, else__4405__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  var G__20600 = k20598 instanceof cljs.core.Keyword ? k20598.fqn : null;
  switch(G__20600) {
    case "added":
      return self__.added;
      break;
    case "tx":
      return self__.tx;
      break;
    case "v":
      return self__.v;
      break;
    case "a":
      return self__.a;
      break;
    case "e":
      return self__.e;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20598, else__4405__auto__);
  }
};
datascript.core.Datom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4416__auto__, writer__4417__auto__, opts__4418__auto__) {
  var self__ = this;
  var this__4416__auto____$1 = this;
  var pr_pair__4419__auto__ = function(this__4416__auto____$1) {
    return function(keyval__4420__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, cljs.core.pr_writer, "", " ", "", opts__4418__auto__, keyval__4420__auto__);
    };
  }(this__4416__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, pr_pair__4419__auto__, "#datascript.core.Datom{", ", ", "}", opts__4418__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1381269198), self__.e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "a", "a", -2123407586), self__.a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx", "tx", 466630418), self__.tx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "added", "added", 2057651688), self__.added], 
  null)], null), self__.__extmap));
};
datascript.core.Datom.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4400__auto__) {
  var self__ = this;
  var this__4400__auto____$1 = this;
  return self__.__meta;
};
datascript.core.Datom.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4396__auto__) {
  var self__ = this;
  var this__4396__auto____$1 = this;
  return new datascript.core.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.core.Datom.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4406__auto__) {
  var self__ = this;
  var this__4406__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
datascript.core.Datom.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_imap.call(null, this__4397__auto____$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
datascript.core.Datom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4398__auto__, other__4399__auto__) {
  var self__ = this;
  var this__4398__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = other__4399__auto__;
    if (cljs.core.truth_(and__3787__auto__)) {
      return this__4398__auto____$1.constructor === other__4399__auto__.constructor && cljs.core.equiv_map.call(null, this__4398__auto____$1, other__4399__auto__);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.core.Datom.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4411__auto__, k__4412__auto__) {
  var self__ = this;
  var this__4411__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "v", "v", 21465059), null, new cljs.core.Keyword(null, "added", "added", 2057651688), null, new cljs.core.Keyword(null, "e", "e", 1381269198), null, new cljs.core.Keyword(null, "tx", "tx", 466630418), null, new cljs.core.Keyword(null, "a", "a", -2123407586), null], null), null), k__4412__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4411__auto____$1), self__.__meta), k__4412__auto__);
  } else {
    return new datascript.core.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4412__auto__)), null);
  }
};
datascript.core.Datom.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4409__auto__, k__4410__auto__, G__20597) {
  var self__ = this;
  var this__4409__auto____$1 = this;
  var pred__20601 = cljs.core.keyword_identical_QMARK_;
  var expr__20602 = k__4410__auto__;
  if (cljs.core.truth_(pred__20601.call(null, new cljs.core.Keyword(null, "e", "e", 1381269198), expr__20602))) {
    return new datascript.core.Datom(G__20597, self__.a, self__.v, self__.tx, self__.added, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20601.call(null, new cljs.core.Keyword(null, "a", "a", -2123407586), expr__20602))) {
      return new datascript.core.Datom(self__.e, G__20597, self__.v, self__.tx, self__.added, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20601.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__20602))) {
        return new datascript.core.Datom(self__.e, self__.a, G__20597, self__.tx, self__.added, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20601.call(null, new cljs.core.Keyword(null, "tx", "tx", 466630418), expr__20602))) {
          return new datascript.core.Datom(self__.e, self__.a, self__.v, G__20597, self__.added, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20601.call(null, new cljs.core.Keyword(null, "added", "added", 2057651688), expr__20602))) {
            return new datascript.core.Datom(self__.e, self__.a, self__.v, self__.tx, G__20597, self__.__meta, self__.__extmap, null);
          } else {
            return new datascript.core.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4410__auto__, G__20597), null);
          }
        }
      }
    }
  }
};
datascript.core.Datom.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4414__auto__) {
  var self__ = this;
  var this__4414__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1381269198), self__.e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), self__.a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx", "tx", 466630418), self__.tx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "added", "added", 2057651688), self__.added], null)], null), self__.__extmap));
};
datascript.core.Datom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4401__auto__, G__20597) {
  var self__ = this;
  var this__4401__auto____$1 = this;
  return new datascript.core.Datom(self__.e, self__.a, self__.v, self__.tx, self__.added, G__20597, self__.__extmap, self__.__hash);
};
datascript.core.Datom.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4407__auto__, entry__4408__auto__) {
  var self__ = this;
  var this__4407__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4408__auto__)) {
    return cljs.core._assoc.call(null, this__4407__auto____$1, cljs.core._nth.call(null, entry__4408__auto__, 0), cljs.core._nth.call(null, entry__4408__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4407__auto____$1, entry__4408__auto__);
  }
};
datascript.core.Datom.cljs$lang$type = true;
datascript.core.Datom.cljs$lang$ctorPrSeq = function(this__4436__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript.core/Datom");
};
datascript.core.Datom.cljs$lang$ctorPrWriter = function(this__4436__auto__, writer__4437__auto__) {
  return cljs.core._write.call(null, writer__4437__auto__, "datascript.core/Datom");
};
datascript.core.__GT_Datom = function __GT_Datom(e, a, v, tx, added) {
  return new datascript.core.Datom(e, a, v, tx, added, null, null, null);
};
datascript.core.map__GT_Datom = function map__GT_Datom(G__20599) {
  return new datascript.core.Datom((new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(G__20599), (new cljs.core.Keyword(null, "a", "a", -2123407586)).cljs$core$IFn$_invoke$arity$1(G__20599), (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__20599), (new cljs.core.Keyword(null, "tx", "tx", 466630418)).cljs$core$IFn$_invoke$arity$1(G__20599), (new cljs.core.Keyword(null, "added", "added", 2057651688)).cljs$core$IFn$_invoke$arity$1(G__20599), 
  null, cljs.core.dissoc.call(null, G__20599, new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.Keyword(null, "v", "v", 21465059), new cljs.core.Keyword(null, "tx", "tx", 466630418), new cljs.core.Keyword(null, "added", "added", 2057651688)), null);
};
datascript.core.Datom.prototype.cljs$core$ISeqable$ = true;
datascript.core.Datom.prototype.cljs$core$ISeqable$_seq$arity$1 = function(d) {
  var d__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, d__$1.added), d__$1.tx), d__$1.v), d__$1.a), d__$1.e);
};
datascript.core.Datom.prototype.cljs$core$IEquiv$ = true;
datascript.core.Datom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(d, o) {
  var d__$1 = this;
  return cljs.core._EQ_.call(null, d__$1.e, o.e) && cljs.core._EQ_.call(null, d__$1.a, o.a) && cljs.core._EQ_.call(null, d__$1.v, o.v);
};
datascript.core.Datom.prototype.cljs$core$IHash$ = true;
datascript.core.Datom.prototype.cljs$core$IHash$_hash$arity$1 = function(d) {
  var d__$1 = this;
  var or__3799__auto__ = d__$1.__hash;
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    return d__$1.__hash = cljs.core.hash_combine.call(null, cljs.core.hash_combine.call(null, cljs.core.hash.call(null, d__$1.e), cljs.core.hash.call(null, d__$1.a)), cljs.core.hash.call(null, d__$1.v));
  }
};
datascript.core.ISearch = function() {
  var obj20606 = {};
  return obj20606;
}();
datascript.core._search = function _search(data, pattern) {
  if (function() {
    var and__3787__auto__ = data;
    if (and__3787__auto__) {
      return data.datascript$core$ISearch$_search$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return data.datascript$core$ISearch$_search$arity$2(data, pattern);
  } else {
    var x__4443__auto__ = data == null ? null : data;
    return function() {
      var or__3799__auto__ = datascript.core._search[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = datascript.core._search["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISearch.-search", data);
        }
      }
    }().call(null, data, pattern);
  }
};
datascript.core.IIndexAccess = function() {
  var obj20608 = {};
  return obj20608;
}();
datascript.core._datoms = function _datoms(db, index, components) {
  if (function() {
    var and__3787__auto__ = db;
    if (and__3787__auto__) {
      return db.datascript$core$IIndexAccess$_datoms$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return db.datascript$core$IIndexAccess$_datoms$arity$3(db, index, components);
  } else {
    var x__4443__auto__ = db == null ? null : db;
    return function() {
      var or__3799__auto__ = datascript.core._datoms[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = datascript.core._datoms["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIndexAccess.-datoms", db);
        }
      }
    }().call(null, db, index, components);
  }
};
datascript.core._seek_datoms = function _seek_datoms(db, index, components) {
  if (function() {
    var and__3787__auto__ = db;
    if (and__3787__auto__) {
      return db.datascript$core$IIndexAccess$_seek_datoms$arity$3;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return db.datascript$core$IIndexAccess$_seek_datoms$arity$3(db, index, components);
  } else {
    var x__4443__auto__ = db == null ? null : db;
    return function() {
      var or__3799__auto__ = datascript.core._seek_datoms[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = datascript.core._seek_datoms["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIndexAccess.-seek-datoms", db);
        }
      }
    }().call(null, db, index, components);
  }
};
datascript.core._index_range = function _index_range(db, attr, start, end) {
  if (function() {
    var and__3787__auto__ = db;
    if (and__3787__auto__) {
      return db.datascript$core$IIndexAccess$_index_range$arity$4;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return db.datascript$core$IIndexAccess$_index_range$arity$4(db, attr, start, end);
  } else {
    var x__4443__auto__ = db == null ? null : db;
    return function() {
      var or__3799__auto__ = datascript.core._index_range[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = datascript.core._index_range["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIndexAccess.-index-range", db);
        }
      }
    }().call(null, db, attr, start, end);
  }
};
datascript.core.IDB = function() {
  var obj20610 = {};
  return obj20610;
}();
datascript.core._schema = function _schema(db) {
  if (function() {
    var and__3787__auto__ = db;
    if (and__3787__auto__) {
      return db.datascript$core$IDB$_schema$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return db.datascript$core$IDB$_schema$arity$1(db);
  } else {
    var x__4443__auto__ = db == null ? null : db;
    return function() {
      var or__3799__auto__ = datascript.core._schema[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = datascript.core._schema["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDB.-schema", db);
        }
      }
    }().call(null, db);
  }
};
datascript.core._refs = function _refs(db) {
  if (function() {
    var and__3787__auto__ = db;
    if (and__3787__auto__) {
      return db.datascript$core$IDB$_refs$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return db.datascript$core$IDB$_refs$arity$1(db);
  } else {
    var x__4443__auto__ = db == null ? null : db;
    return function() {
      var or__3799__auto__ = datascript.core._refs[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = datascript.core._refs["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDB.-refs", db);
        }
      }
    }().call(null, db);
  }
};
datascript.core.cmp = function cmp(o1, o2) {
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = o1;
    if (cljs.core.truth_(and__3787__auto__)) {
      return o2;
    } else {
      return and__3787__auto__;
    }
  }())) {
    return cljs.core.compare.call(null, o1, o2);
  } else {
    return 0;
  }
};
datascript.core.cmp_num = function cmp_num(n1, n2) {
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = n1;
    if (cljs.core.truth_(and__3787__auto__)) {
      return n2;
    } else {
      return and__3787__auto__;
    }
  }())) {
    return n1 - n2;
  } else {
    return 0;
  }
};
datascript.core.cmp_val = function cmp_val(o1, o2) {
  if (cljs.core.some_QMARK_.call(null, o1) && cljs.core.some_QMARK_.call(null, o2)) {
    var t1 = cljs.core.type.call(null, o1);
    var t2 = cljs.core.type.call(null, o2);
    if (t1 === t2) {
      return cljs.core.compare.call(null, o1, o2);
    } else {
      return goog.array.defaultCompare(t1, t2);
    }
  } else {
    return 0;
  }
};
datascript.core.cmp_datoms_eavt = function cmp_datoms_eavt(d1, d2) {
  var c__9838__auto__ = datascript.core.cmp_num.call(null, d1.e, d2.e);
  if (0 === c__9838__auto__) {
    var c__9838__auto____$1 = datascript.core.cmp.call(null, d1.a, d2.a);
    if (0 === c__9838__auto____$1) {
      var c__9838__auto____$2 = datascript.core.cmp_val.call(null, d1.v, d2.v);
      if (0 === c__9838__auto____$2) {
        var c__9838__auto____$3 = datascript.core.cmp_num.call(null, d1.tx, d2.tx);
        if (0 === c__9838__auto____$3) {
          return 0;
        } else {
          return c__9838__auto____$3;
        }
      } else {
        return c__9838__auto____$2;
      }
    } else {
      return c__9838__auto____$1;
    }
  } else {
    return c__9838__auto__;
  }
};
datascript.core.cmp_datoms_aevt = function cmp_datoms_aevt(d1, d2) {
  var c__9838__auto__ = datascript.core.cmp.call(null, d1.a, d2.a);
  if (0 === c__9838__auto__) {
    var c__9838__auto____$1 = datascript.core.cmp_num.call(null, d1.e, d2.e);
    if (0 === c__9838__auto____$1) {
      var c__9838__auto____$2 = datascript.core.cmp_val.call(null, d1.v, d2.v);
      if (0 === c__9838__auto____$2) {
        var c__9838__auto____$3 = datascript.core.cmp_num.call(null, d1.tx, d2.tx);
        if (0 === c__9838__auto____$3) {
          return 0;
        } else {
          return c__9838__auto____$3;
        }
      } else {
        return c__9838__auto____$2;
      }
    } else {
      return c__9838__auto____$1;
    }
  } else {
    return c__9838__auto__;
  }
};
datascript.core.cmp_datoms_avet = function cmp_datoms_avet(d1, d2) {
  var c__9838__auto__ = datascript.core.cmp.call(null, d1.a, d2.a);
  if (0 === c__9838__auto__) {
    var c__9838__auto____$1 = datascript.core.cmp_val.call(null, d1.v, d2.v);
    if (0 === c__9838__auto____$1) {
      var c__9838__auto____$2 = datascript.core.cmp_num.call(null, d1.e, d2.e);
      if (0 === c__9838__auto____$2) {
        var c__9838__auto____$3 = datascript.core.cmp_num.call(null, d1.tx, d2.tx);
        if (0 === c__9838__auto____$3) {
          return 0;
        } else {
          return c__9838__auto____$3;
        }
      } else {
        return c__9838__auto____$2;
      }
    } else {
      return c__9838__auto____$1;
    }
  } else {
    return c__9838__auto__;
  }
};
datascript.core.compare_keywords_quick = function compare_keywords_quick(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3787__auto__) {
        return b.ns;
      } else {
        return and__3787__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (nsc === 0) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
datascript.core.cmp_attr_quick = function cmp_attr_quick(a1, a2) {
  if (a1 instanceof cljs.core.Keyword) {
    return datascript.core.compare_keywords_quick.call(null, a1, a2);
  } else {
    return goog.array.defaultCompare(a1, a2);
  }
};
datascript.core.cmp_val_quick = function cmp_val_quick(o1, o2) {
  var t1 = cljs.core.type.call(null, o1);
  var t2 = cljs.core.type.call(null, o2);
  if (t1 === t2) {
    return cljs.core.compare.call(null, o1, o2);
  } else {
    return goog.array.defaultCompare(t1, t2);
  }
};
datascript.core.cmp_datoms_eavt_quick = function cmp_datoms_eavt_quick(d1, d2) {
  var c__9838__auto__ = d1.e - d2.e;
  if (0 === c__9838__auto__) {
    var c__9838__auto____$1 = datascript.core.cmp_attr_quick.call(null, d1.a, d2.a);
    if (0 === c__9838__auto____$1) {
      var c__9838__auto____$2 = datascript.core.cmp_val_quick.call(null, d1.v, d2.v);
      if (0 === c__9838__auto____$2) {
        var c__9838__auto____$3 = d1.tx - d2.tx;
        if (0 === c__9838__auto____$3) {
          return 0;
        } else {
          return c__9838__auto____$3;
        }
      } else {
        return c__9838__auto____$2;
      }
    } else {
      return c__9838__auto____$1;
    }
  } else {
    return c__9838__auto__;
  }
};
datascript.core.cmp_datoms_aevt_quick = function cmp_datoms_aevt_quick(d1, d2) {
  var c__9838__auto__ = datascript.core.cmp_attr_quick.call(null, d1.a, d2.a);
  if (0 === c__9838__auto__) {
    var c__9838__auto____$1 = d1.e - d2.e;
    if (0 === c__9838__auto____$1) {
      var c__9838__auto____$2 = datascript.core.cmp_val_quick.call(null, d1.v, d2.v);
      if (0 === c__9838__auto____$2) {
        var c__9838__auto____$3 = d1.tx - d2.tx;
        if (0 === c__9838__auto____$3) {
          return 0;
        } else {
          return c__9838__auto____$3;
        }
      } else {
        return c__9838__auto____$2;
      }
    } else {
      return c__9838__auto____$1;
    }
  } else {
    return c__9838__auto__;
  }
};
datascript.core.cmp_datoms_avet_quick = function cmp_datoms_avet_quick(d1, d2) {
  var c__9838__auto__ = datascript.core.cmp_attr_quick.call(null, d1.a, d2.a);
  if (0 === c__9838__auto__) {
    var c__9838__auto____$1 = datascript.core.cmp_val_quick.call(null, d1.v, d2.v);
    if (0 === c__9838__auto____$1) {
      var c__9838__auto____$2 = d1.e - d2.e;
      if (0 === c__9838__auto____$2) {
        var c__9838__auto____$3 = d1.tx - d2.tx;
        if (0 === c__9838__auto____$3) {
          return 0;
        } else {
          return c__9838__auto____$3;
        }
      } else {
        return c__9838__auto____$2;
      }
    } else {
      return c__9838__auto____$1;
    }
  } else {
    return c__9838__auto__;
  }
};
datascript.core.components__GT_pattern = function components__GT_pattern(index, p__20611) {
  var vec__20614 = p__20611;
  var c0 = cljs.core.nth.call(null, vec__20614, 0, null);
  var c1 = cljs.core.nth.call(null, vec__20614, 1, null);
  var c2 = cljs.core.nth.call(null, vec__20614, 2, null);
  var c3 = cljs.core.nth.call(null, vec__20614, 3, null);
  var G__20615 = index instanceof cljs.core.Keyword ? index.fqn : null;
  switch(G__20615) {
    case "avet":
      return new datascript.core.Datom(c2, c0, c1, c3, null, null, null, null);
      break;
    case "aevt":
      return new datascript.core.Datom(c1, c0, c2, c3, null, null, null, null);
      break;
    case "eavt":
      return new datascript.core.Datom(c0, c1, c2, c3, null, null, null, null);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(index)].join(""));;
  }
};
datascript.core.DB = function(schema, eavt, aevt, avet, max_eid, max_tx, refs, __meta, __extmap, __hash) {
  this.schema = schema;
  this.eavt = eavt;
  this.aevt = aevt;
  this.avet = avet;
  this.max_eid = max_eid;
  this.max_tx = max_tx;
  this.refs = refs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
datascript.core.DB.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str_STAR_.call(null, this$);
};
datascript.core.DB.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4402__auto__, k__4403__auto__) {
  var self__ = this;
  var this__4402__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4402__auto____$1, k__4403__auto__, null);
};
datascript.core.DB.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4404__auto__, k20627, else__4405__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  var G__20629 = k20627 instanceof cljs.core.Keyword ? k20627.fqn : null;
  switch(G__20629) {
    case "refs":
      return self__.refs;
      break;
    case "max-tx":
      return self__.max_tx;
      break;
    case "max-eid":
      return self__.max_eid;
      break;
    case "avet":
      return self__.avet;
      break;
    case "aevt":
      return self__.aevt;
      break;
    case "eavt":
      return self__.eavt;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20627, else__4405__auto__);
  }
};
datascript.core.DB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4416__auto__, writer__4417__auto__, opts__4418__auto__) {
  var self__ = this;
  var this__4416__auto____$1 = this;
  var pr_pair__4419__auto__ = function(this__4416__auto____$1) {
    return function(keyval__4420__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, cljs.core.pr_writer, "", " ", "", opts__4418__auto__, keyval__4420__auto__);
    };
  }(this__4416__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, pr_pair__4419__auto__, "#datascript.core.DB{", ", ", "}", opts__4418__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "eavt", "eavt", -666437073), self__.eavt], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "aevt", "aevt", -585148059), self__.aevt], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "avet", "avet", 1383857032), self__.avet], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "max-eid", "max-eid", 2134868075), self__.max_eid], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339), self__.max_tx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "refs", "refs", -1560051448), self__.refs], null)], null), self__.__extmap));
};
datascript.core.DB.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4400__auto__) {
  var self__ = this;
  var this__4400__auto____$1 = this;
  return self__.__meta;
};
datascript.core.DB.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4396__auto__) {
  var self__ = this;
  var this__4396__auto____$1 = this;
  return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, self__.avet, self__.max_eid, self__.max_tx, self__.refs, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.core.DB.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4406__auto__) {
  var self__ = this;
  var this__4406__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap);
};
datascript.core.DB.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_imap.call(null, this__4397__auto____$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
datascript.core.DB.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4398__auto__, other__4399__auto__) {
  var self__ = this;
  var this__4398__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = other__4399__auto__;
    if (cljs.core.truth_(and__3787__auto__)) {
      return this__4398__auto____$1.constructor === other__4399__auto__.constructor && cljs.core.equiv_map.call(null, this__4398__auto____$1, other__4399__auto__);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.core.DB.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4411__auto__, k__4412__auto__) {
  var self__ = this;
  var this__4411__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339), null, new cljs.core.Keyword(null, "aevt", "aevt", -585148059), null, new cljs.core.Keyword(null, "refs", "refs", -1560051448), null, new cljs.core.Keyword(null, "avet", "avet", 1383857032), null, new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075), 
  null, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), null], null), null), k__4412__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4411__auto____$1), self__.__meta), k__4412__auto__);
  } else {
    return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, self__.avet, self__.max_eid, self__.max_tx, self__.refs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4412__auto__)), null);
  }
};
datascript.core.DB.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4409__auto__, k__4410__auto__, G__20626) {
  var self__ = this;
  var this__4409__auto____$1 = this;
  var pred__20630 = cljs.core.keyword_identical_QMARK_;
  var expr__20631 = k__4410__auto__;
  if (cljs.core.truth_(pred__20630.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__20631))) {
    return new datascript.core.DB(G__20626, self__.eavt, self__.aevt, self__.avet, self__.max_eid, self__.max_tx, self__.refs, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20630.call(null, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), expr__20631))) {
      return new datascript.core.DB(self__.schema, G__20626, self__.aevt, self__.avet, self__.max_eid, self__.max_tx, self__.refs, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20630.call(null, new cljs.core.Keyword(null, "aevt", "aevt", -585148059), expr__20631))) {
        return new datascript.core.DB(self__.schema, self__.eavt, G__20626, self__.avet, self__.max_eid, self__.max_tx, self__.refs, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20630.call(null, new cljs.core.Keyword(null, "avet", "avet", 1383857032), expr__20631))) {
          return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, G__20626, self__.max_eid, self__.max_tx, self__.refs, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20630.call(null, new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075), expr__20631))) {
            return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, self__.avet, G__20626, self__.max_tx, self__.refs, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__20630.call(null, new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339), expr__20631))) {
              return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, self__.avet, self__.max_eid, G__20626, self__.refs, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__20630.call(null, new cljs.core.Keyword(null, "refs", "refs", -1560051448), expr__20631))) {
                return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, self__.avet, self__.max_eid, self__.max_tx, G__20626, self__.__meta, self__.__extmap, null);
              } else {
                return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, self__.avet, self__.max_eid, self__.max_tx, self__.refs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4410__auto__, G__20626), null);
              }
            }
          }
        }
      }
    }
  }
};
datascript.core.DB.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4414__auto__) {
  var self__ = this;
  var this__4414__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "eavt", "eavt", -666437073), self__.eavt], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "aevt", "aevt", -585148059), self__.aevt], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "avet", "avet", 1383857032), self__.avet], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075), self__.max_eid], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339), self__.max_tx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "refs", "refs", -1560051448), self__.refs], null)], null), self__.__extmap));
};
datascript.core.DB.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4401__auto__, G__20626) {
  var self__ = this;
  var this__4401__auto____$1 = this;
  return new datascript.core.DB(self__.schema, self__.eavt, self__.aevt, self__.avet, self__.max_eid, self__.max_tx, self__.refs, G__20626, self__.__extmap, self__.__hash);
};
datascript.core.DB.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4407__auto__, entry__4408__auto__) {
  var self__ = this;
  var this__4407__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4408__auto__)) {
    return cljs.core._assoc.call(null, this__4407__auto____$1, cljs.core._nth.call(null, entry__4408__auto__, 0), cljs.core._nth.call(null, entry__4408__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4407__auto____$1, entry__4408__auto__);
  }
};
datascript.core.DB.prototype.datascript$core$IIndexAccess$ = true;
datascript.core.DB.prototype.datascript$core$IIndexAccess$_datoms$arity$3 = function(this$, index, cs) {
  var self__ = this;
  var this$__$1 = this;
  return datascript.btset.slice.call(null, cljs.core.get.call(null, this$__$1, index), datascript.core.components__GT_pattern.call(null, index, cs));
};
datascript.core.DB.prototype.datascript$core$IIndexAccess$_seek_datoms$arity$3 = function(this$, index, cs) {
  var self__ = this;
  var this$__$1 = this;
  return datascript.btset.slice.call(null, cljs.core.get.call(null, this$__$1, index), datascript.core.components__GT_pattern.call(null, index, cs), new datascript.core.Datom(null, null, null, null, null, null, null, null));
};
datascript.core.DB.prototype.datascript$core$IIndexAccess$_index_range$arity$4 = function(_, attr, start, end) {
  var self__ = this;
  var ___$1 = this;
  return datascript.btset.slice.call(null, self__.avet, new datascript.core.Datom(null, attr, start, null, null, null, null, null), new datascript.core.Datom(null, attr, end, null, null, null, null, null));
};
datascript.core.DB.prototype.datascript$core$IDB$ = true;
datascript.core.DB.prototype.datascript$core$IDB$_schema$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.schema;
};
datascript.core.DB.prototype.datascript$core$IDB$_refs$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.refs;
};
datascript.core.DB.prototype.datascript$core$ISearch$ = true;
datascript.core.DB.prototype.datascript$core$ISearch$_search$arity$2 = function(_, p__20633) {
  var self__ = this;
  var vec__20634 = p__20633;
  var e = cljs.core.nth.call(null, vec__20634, 0, null);
  var a = cljs.core.nth.call(null, vec__20634, 1, null);
  var v = cljs.core.nth.call(null, vec__20634, 2, null);
  var tx = cljs.core.nth.call(null, vec__20634, 3, null);
  var ___$1 = this;
  if (cljs.core.truth_(e)) {
    if (cljs.core.truth_(a)) {
      if (cljs.core.some_QMARK_.call(null, v)) {
        if (cljs.core.truth_(tx)) {
          return datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, a, v, tx, null, null, null, null));
        } else {
          return datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, a, v, null, null, null, null, null));
        }
      } else {
        if (cljs.core.truth_(tx)) {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20617_SHARP_) {
              return cljs.core._EQ_.call(null, tx, p1__20617_SHARP_.tx);
            };
          }(___$1, vec__20634, e, a, v, tx), datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, a, null, null, null, null, null, null)));
        } else {
          return datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, a, null, null, null, null, null, null));
        }
      }
    } else {
      if (cljs.core.some_QMARK_.call(null, v)) {
        if (cljs.core.truth_(tx)) {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20618_SHARP_) {
              return cljs.core._EQ_.call(null, v, p1__20618_SHARP_.v) && cljs.core._EQ_.call(null, tx, p1__20618_SHARP_.tx);
            };
          }(___$1, vec__20634, e, a, v, tx), datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, null, null, null, null, null, null, null)));
        } else {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20619_SHARP_) {
              return cljs.core._EQ_.call(null, v, p1__20619_SHARP_.v);
            };
          }(___$1, vec__20634, e, a, v, tx), datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, null, null, null, null, null, null, null)));
        }
      } else {
        if (cljs.core.truth_(tx)) {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20620_SHARP_) {
              return cljs.core._EQ_.call(null, tx, p1__20620_SHARP_.tx);
            };
          }(___$1, vec__20634, e, a, v, tx), datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, null, null, null, null, null, null, null)));
        } else {
          return datascript.btset.slice.call(null, self__.eavt, new datascript.core.Datom(e, null, null, null, null, null, null, null));
        }
      }
    }
  } else {
    if (cljs.core.truth_(a)) {
      if (cljs.core.some_QMARK_.call(null, v)) {
        if (cljs.core.truth_(tx)) {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20621_SHARP_) {
              return cljs.core._EQ_.call(null, tx, p1__20621_SHARP_.tx);
            };
          }(___$1, vec__20634, e, a, v, tx), datascript.btset.slice.call(null, self__.avet, new datascript.core.Datom(null, a, v, null, null, null, null, null)));
        } else {
          return datascript.btset.slice.call(null, self__.avet, new datascript.core.Datom(null, a, v, null, null, null, null, null));
        }
      } else {
        if (cljs.core.truth_(tx)) {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20622_SHARP_) {
              return cljs.core._EQ_.call(null, tx, p1__20622_SHARP_.tx);
            };
          }(___$1, vec__20634, e, a, v, tx), datascript.btset.slice.call(null, self__.avet, new datascript.core.Datom(null, a, null, null, null, null, null, null)));
        } else {
          return datascript.btset.slice.call(null, self__.avet, new datascript.core.Datom(null, a, null, null, null, null, null, null));
        }
      }
    } else {
      if (cljs.core.some_QMARK_.call(null, v)) {
        if (cljs.core.truth_(tx)) {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20623_SHARP_) {
              return cljs.core._EQ_.call(null, v, p1__20623_SHARP_.v) && cljs.core._EQ_.call(null, tx, p1__20623_SHARP_.tx);
            };
          }(___$1, vec__20634, e, a, v, tx), self__.eavt);
        } else {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20624_SHARP_) {
              return cljs.core._EQ_.call(null, v, p1__20624_SHARP_.v);
            };
          }(___$1, vec__20634, e, a, v, tx), self__.eavt);
        }
      } else {
        if (cljs.core.truth_(tx)) {
          return cljs.core.filter.call(null, function(___$1, vec__20634, e, a, v, tx) {
            return function(p1__20625_SHARP_) {
              return cljs.core._EQ_.call(null, tx, p1__20625_SHARP_.tx);
            };
          }(___$1, vec__20634, e, a, v, tx), self__.eavt);
        } else {
          return self__.eavt;
        }
      }
    }
  }
};
datascript.core.DB.cljs$lang$type = true;
datascript.core.DB.cljs$lang$ctorPrSeq = function(this__4436__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript.core/DB");
};
datascript.core.DB.cljs$lang$ctorPrWriter = function(this__4436__auto__, writer__4437__auto__) {
  return cljs.core._write.call(null, writer__4437__auto__, "datascript.core/DB");
};
datascript.core.__GT_DB = function __GT_DB(schema, eavt, aevt, avet, max_eid, max_tx, refs) {
  return new datascript.core.DB(schema, eavt, aevt, avet, max_eid, max_tx, refs, null, null, null);
};
datascript.core.map__GT_DB = function map__GT_DB(G__20628) {
  return new datascript.core.DB((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__20628), (new cljs.core.Keyword(null, "eavt", "eavt", -666437073)).cljs$core$IFn$_invoke$arity$1(G__20628), (new cljs.core.Keyword(null, "aevt", "aevt", -585148059)).cljs$core$IFn$_invoke$arity$1(G__20628), (new cljs.core.Keyword(null, "avet", "avet", 1383857032)).cljs$core$IFn$_invoke$arity$1(G__20628), (new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075)).cljs$core$IFn$_invoke$arity$1(G__20628), 
  (new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339)).cljs$core$IFn$_invoke$arity$1(G__20628), (new cljs.core.Keyword(null, "refs", "refs", -1560051448)).cljs$core$IFn$_invoke$arity$1(G__20628), null, cljs.core.dissoc.call(null, G__20628, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "eavt", "eavt", -666437073), new cljs.core.Keyword(null, "aevt", "aevt", -585148059), new cljs.core.Keyword(null, "avet", "avet", 1383857032), new cljs.core.Keyword(null, 
  "max-eid", "max-eid", 2134868075), new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339), new cljs.core.Keyword(null, "refs", "refs", -1560051448)), null);
};
datascript.core.FilteredDB = function(unfiltered_db, pred, __meta, __extmap, __hash) {
  this.unfiltered_db = unfiltered_db;
  this.pred = pred;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
datascript.core.FilteredDB.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str_STAR_.call(null, this$);
};
datascript.core.FilteredDB.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4402__auto__, k__4403__auto__) {
  var self__ = this;
  var this__4402__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4402__auto____$1, k__4403__auto__, null);
};
datascript.core.FilteredDB.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4404__auto__, k20637, else__4405__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  var G__20639 = k20637 instanceof cljs.core.Keyword ? k20637.fqn : null;
  switch(G__20639) {
    case "pred":
      return self__.pred;
      break;
    case "unfiltered-db":
      return self__.unfiltered_db;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20637, else__4405__auto__);
  }
};
datascript.core.FilteredDB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4416__auto__, writer__4417__auto__, opts__4418__auto__) {
  var self__ = this;
  var this__4416__auto____$1 = this;
  var pr_pair__4419__auto__ = function(this__4416__auto____$1) {
    return function(keyval__4420__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, cljs.core.pr_writer, "", " ", "", opts__4418__auto__, keyval__4420__auto__);
    };
  }(this__4416__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, pr_pair__4419__auto__, "#datascript.core.FilteredDB{", ", ", "}", opts__4418__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "unfiltered-db", "unfiltered-db", -1363720391), self__.unfiltered_db], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.pred], null)], null), self__.__extmap));
};
datascript.core.FilteredDB.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4400__auto__) {
  var self__ = this;
  var this__4400__auto____$1 = this;
  return self__.__meta;
};
datascript.core.FilteredDB.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4396__auto__) {
  var self__ = this;
  var this__4396__auto____$1 = this;
  return new datascript.core.FilteredDB(self__.unfiltered_db, self__.pred, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.core.FilteredDB.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4406__auto__) {
  var self__ = this;
  var this__4406__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
datascript.core.FilteredDB.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_imap.call(null, this__4397__auto____$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
datascript.core.FilteredDB.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4398__auto__, other__4399__auto__) {
  var self__ = this;
  var this__4398__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = other__4399__auto__;
    if (cljs.core.truth_(and__3787__auto__)) {
      return this__4398__auto____$1.constructor === other__4399__auto__.constructor && cljs.core.equiv_map.call(null, this__4398__auto____$1, other__4399__auto__);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.core.FilteredDB.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4411__auto__, k__4412__auto__) {
  var self__ = this;
  var this__4411__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "unfiltered-db", "unfiltered-db", -1363720391), null], null), null), k__4412__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4411__auto____$1), self__.__meta), k__4412__auto__);
  } else {
    return new datascript.core.FilteredDB(self__.unfiltered_db, self__.pred, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4412__auto__)), null);
  }
};
datascript.core.FilteredDB.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4409__auto__, k__4410__auto__, G__20636) {
  var self__ = this;
  var this__4409__auto____$1 = this;
  var pred__20640 = cljs.core.keyword_identical_QMARK_;
  var expr__20641 = k__4410__auto__;
  if (cljs.core.truth_(pred__20640.call(null, new cljs.core.Keyword(null, "unfiltered-db", "unfiltered-db", -1363720391), expr__20641))) {
    return new datascript.core.FilteredDB(G__20636, self__.pred, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20640.call(null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), expr__20641))) {
      return new datascript.core.FilteredDB(self__.unfiltered_db, G__20636, self__.__meta, self__.__extmap, null);
    } else {
      return new datascript.core.FilteredDB(self__.unfiltered_db, self__.pred, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4410__auto__, G__20636), null);
    }
  }
};
datascript.core.FilteredDB.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4414__auto__) {
  var self__ = this;
  var this__4414__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "unfiltered-db", "unfiltered-db", -1363720391), self__.unfiltered_db], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred", "pred", 1927423397), self__.pred], null)], null), 
  self__.__extmap));
};
datascript.core.FilteredDB.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4401__auto__, G__20636) {
  var self__ = this;
  var this__4401__auto____$1 = this;
  return new datascript.core.FilteredDB(self__.unfiltered_db, self__.pred, G__20636, self__.__extmap, self__.__hash);
};
datascript.core.FilteredDB.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4407__auto__, entry__4408__auto__) {
  var self__ = this;
  var this__4407__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4408__auto__)) {
    return cljs.core._assoc.call(null, this__4407__auto____$1, cljs.core._nth.call(null, entry__4408__auto__, 0), cljs.core._nth.call(null, entry__4408__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4407__auto____$1, entry__4408__auto__);
  }
};
datascript.core.FilteredDB.prototype.datascript$core$IIndexAccess$ = true;
datascript.core.FilteredDB.prototype.datascript$core$IIndexAccess$_datoms$arity$3 = function(_, index, cs) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.filter.call(null, self__.pred, datascript.core._datoms.call(null, self__.unfiltered_db, index, cs));
};
datascript.core.FilteredDB.prototype.datascript$core$IIndexAccess$_seek_datoms$arity$3 = function(_, index, cs) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.filter.call(null, self__.pred, datascript.core._seek_datoms.call(null, self__.unfiltered_db, index, cs));
};
datascript.core.FilteredDB.prototype.datascript$core$IIndexAccess$_index_range$arity$4 = function(_, attr, start, end) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.filter.call(null, self__.pred, datascript.core._index_range.call(null, self__.unfiltered_db, attr, start, end));
};
datascript.core.FilteredDB.prototype.datascript$core$IDB$ = true;
datascript.core.FilteredDB.prototype.datascript$core$IDB$_schema$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return datascript.core._schema.call(null, self__.unfiltered_db);
};
datascript.core.FilteredDB.prototype.datascript$core$IDB$_refs$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return datascript.core._refs.call(null, self__.unfiltered_db);
};
datascript.core.FilteredDB.prototype.datascript$core$ISearch$ = true;
datascript.core.FilteredDB.prototype.datascript$core$ISearch$_search$arity$2 = function(_, pattern) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.filter.call(null, self__.pred, datascript.core._search.call(null, self__.unfiltered_db, pattern));
};
datascript.core.FilteredDB.cljs$lang$type = true;
datascript.core.FilteredDB.cljs$lang$ctorPrSeq = function(this__4436__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript.core/FilteredDB");
};
datascript.core.FilteredDB.cljs$lang$ctorPrWriter = function(this__4436__auto__, writer__4437__auto__) {
  return cljs.core._write.call(null, writer__4437__auto__, "datascript.core/FilteredDB");
};
datascript.core.__GT_FilteredDB = function __GT_FilteredDB(unfiltered_db, pred) {
  return new datascript.core.FilteredDB(unfiltered_db, pred, null, null, null);
};
datascript.core.map__GT_FilteredDB = function map__GT_FilteredDB(G__20638) {
  return new datascript.core.FilteredDB((new cljs.core.Keyword(null, "unfiltered-db", "unfiltered-db", -1363720391)).cljs$core$IFn$_invoke$arity$1(G__20638), (new cljs.core.Keyword(null, "pred", "pred", 1927423397)).cljs$core$IFn$_invoke$arity$1(G__20638), null, cljs.core.dissoc.call(null, G__20638, new cljs.core.Keyword(null, "unfiltered-db", "unfiltered-db", -1363720391), new cljs.core.Keyword(null, "pred", "pred", 1927423397)), null);
};
datascript.core._equiv_index = function _equiv_index(x, y) {
  var and__3787__auto__ = cljs.core._EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, y));
  if (and__3787__auto__) {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return true;
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
          var G__20644 = cljs.core.next.call(null, xs);
          var G__20645 = cljs.core.next.call(null, ys);
          xs = G__20644;
          ys = G__20645;
          continue;
        } else {
          return false;
        }
      }
      break;
    }
  } else {
    return and__3787__auto__;
  }
};
datascript.core._hash_db = function _hash_db(db) {
  var or__3799__auto__ = db.__hash;
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    return db.__hash = cljs.core.hash_coll.call(null, datascript.core._datoms.call(null, db, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), cljs.core.PersistentVector.EMPTY));
  }
};
datascript.core._equiv_db = function _equiv_db(this$, other) {
  return(other instanceof datascript.core.DB || other instanceof datascript.core.FilteredDB) && cljs.core._EQ_.call(null, datascript.core._schema.call(null, this$), datascript.core._schema.call(null, other)) && datascript.core._equiv_index.call(null, datascript.core._datoms.call(null, this$, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), cljs.core.PersistentVector.EMPTY), datascript.core._datoms.call(null, other, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), cljs.core.PersistentVector.EMPTY));
};
datascript.core.DB.prototype.cljs$core$IEquiv$ = true;
datascript.core.DB.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return datascript.core._equiv_db.call(null, this$__$1, other);
};
datascript.core.DB.prototype.cljs$core$IHash$ = true;
datascript.core.DB.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return datascript.core._hash_db.call(null, this$__$1);
};
datascript.core.FilteredDB.prototype.cljs$core$IEquiv$ = true;
datascript.core.FilteredDB.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return datascript.core._equiv_db.call(null, this$__$1, other);
};
datascript.core.FilteredDB.prototype.cljs$core$IHash$ = true;
datascript.core.FilteredDB.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return datascript.core._hash_db.call(null, this$__$1);
};
datascript.core.TxReport = function(db_before, db_after, tx_data, tempids, tx_meta, __meta, __extmap, __hash) {
  this.db_before = db_before;
  this.db_after = db_after;
  this.tx_data = tx_data;
  this.tempids = tempids;
  this.tx_meta = tx_meta;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
datascript.core.TxReport.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4402__auto__, k__4403__auto__) {
  var self__ = this;
  var this__4402__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4402__auto____$1, k__4403__auto__, null);
};
datascript.core.TxReport.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4404__auto__, k20647, else__4405__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  var G__20649 = k20647 instanceof cljs.core.Keyword ? k20647.fqn : null;
  switch(G__20649) {
    case "tx-meta":
      return self__.tx_meta;
      break;
    case "tempids":
      return self__.tempids;
      break;
    case "tx-data":
      return self__.tx_data;
      break;
    case "db-after":
      return self__.db_after;
      break;
    case "db-before":
      return self__.db_before;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20647, else__4405__auto__);
  }
};
datascript.core.TxReport.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4416__auto__, writer__4417__auto__, opts__4418__auto__) {
  var self__ = this;
  var this__4416__auto____$1 = this;
  var pr_pair__4419__auto__ = function(this__4416__auto____$1) {
    return function(keyval__4420__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, cljs.core.pr_writer, "", " ", "", opts__4418__auto__, keyval__4420__auto__);
    };
  }(this__4416__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, pr_pair__4419__auto__, "#datascript.core.TxReport{", ", ", "}", opts__4418__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-before", "db-before", -553691536), self__.db_before], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "db-after", "db-after", -571884666), self__.db_after], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761), self__.tx_data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), self__.tempids], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "tx-meta", "tx-meta", 1159283194), self__.tx_meta], null)], null), self__.__extmap));
};
datascript.core.TxReport.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4400__auto__) {
  var self__ = this;
  var this__4400__auto____$1 = this;
  return self__.__meta;
};
datascript.core.TxReport.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4396__auto__) {
  var self__ = this;
  var this__4396__auto____$1 = this;
  return new datascript.core.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, self__.tx_meta, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.core.TxReport.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4406__auto__) {
  var self__ = this;
  var this__4406__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
datascript.core.TxReport.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_imap.call(null, this__4397__auto____$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
datascript.core.TxReport.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4398__auto__, other__4399__auto__) {
  var self__ = this;
  var this__4398__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = other__4399__auto__;
    if (cljs.core.truth_(and__3787__auto__)) {
      return this__4398__auto____$1.constructor === other__4399__auto__.constructor && cljs.core.equiv_map.call(null, this__4398__auto____$1, other__4399__auto__);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.core.TxReport.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4411__auto__, k__4412__auto__) {
  var self__ = this;
  var this__4411__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), null, new cljs.core.Keyword(null, "db-after", "db-after", -571884666), null, new cljs.core.Keyword(null, "db-before", "db-before", -553691536), null, new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761), null, new cljs.core.Keyword(null, "tx-meta", "tx-meta", 1159283194), null], null), null), k__4412__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4411__auto____$1), self__.__meta), k__4412__auto__);
  } else {
    return new datascript.core.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, self__.tx_meta, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4412__auto__)), null);
  }
};
datascript.core.TxReport.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4409__auto__, k__4410__auto__, G__20646) {
  var self__ = this;
  var this__4409__auto____$1 = this;
  var pred__20650 = cljs.core.keyword_identical_QMARK_;
  var expr__20651 = k__4410__auto__;
  if (cljs.core.truth_(pred__20650.call(null, new cljs.core.Keyword(null, "db-before", "db-before", -553691536), expr__20651))) {
    return new datascript.core.TxReport(G__20646, self__.db_after, self__.tx_data, self__.tempids, self__.tx_meta, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20650.call(null, new cljs.core.Keyword(null, "db-after", "db-after", -571884666), expr__20651))) {
      return new datascript.core.TxReport(self__.db_before, G__20646, self__.tx_data, self__.tempids, self__.tx_meta, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20650.call(null, new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761), expr__20651))) {
        return new datascript.core.TxReport(self__.db_before, self__.db_after, G__20646, self__.tempids, self__.tx_meta, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__20650.call(null, new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), expr__20651))) {
          return new datascript.core.TxReport(self__.db_before, self__.db_after, self__.tx_data, G__20646, self__.tx_meta, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__20650.call(null, new cljs.core.Keyword(null, "tx-meta", "tx-meta", 1159283194), expr__20651))) {
            return new datascript.core.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, G__20646, self__.__meta, self__.__extmap, null);
          } else {
            return new datascript.core.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, self__.tx_meta, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4410__auto__, G__20646), null);
          }
        }
      }
    }
  }
};
datascript.core.TxReport.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4414__auto__) {
  var self__ = this;
  var this__4414__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-before", "db-before", -553691536), self__.db_before], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-after", "db-after", -571884666), self__.db_after], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761), self__.tx_data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), self__.tempids], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx-meta", "tx-meta", 1159283194), self__.tx_meta], null)], null), self__.__extmap));
};
datascript.core.TxReport.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4401__auto__, G__20646) {
  var self__ = this;
  var this__4401__auto____$1 = this;
  return new datascript.core.TxReport(self__.db_before, self__.db_after, self__.tx_data, self__.tempids, self__.tx_meta, G__20646, self__.__extmap, self__.__hash);
};
datascript.core.TxReport.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4407__auto__, entry__4408__auto__) {
  var self__ = this;
  var this__4407__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4408__auto__)) {
    return cljs.core._assoc.call(null, this__4407__auto____$1, cljs.core._nth.call(null, entry__4408__auto__, 0), cljs.core._nth.call(null, entry__4408__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4407__auto____$1, entry__4408__auto__);
  }
};
datascript.core.TxReport.cljs$lang$type = true;
datascript.core.TxReport.cljs$lang$ctorPrSeq = function(this__4436__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript.core/TxReport");
};
datascript.core.TxReport.cljs$lang$ctorPrWriter = function(this__4436__auto__, writer__4437__auto__) {
  return cljs.core._write.call(null, writer__4437__auto__, "datascript.core/TxReport");
};
datascript.core.__GT_TxReport = function __GT_TxReport(db_before, db_after, tx_data, tempids, tx_meta) {
  return new datascript.core.TxReport(db_before, db_after, tx_data, tempids, tx_meta, null, null, null);
};
datascript.core.map__GT_TxReport = function map__GT_TxReport(G__20648) {
  return new datascript.core.TxReport((new cljs.core.Keyword(null, "db-before", "db-before", -553691536)).cljs$core$IFn$_invoke$arity$1(G__20648), (new cljs.core.Keyword(null, "db-after", "db-after", -571884666)).cljs$core$IFn$_invoke$arity$1(G__20648), (new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761)).cljs$core$IFn$_invoke$arity$1(G__20648), (new cljs.core.Keyword(null, "tempids", "tempids", 1767509089)).cljs$core$IFn$_invoke$arity$1(G__20648), (new cljs.core.Keyword(null, "tx-meta", 
  "tx-meta", 1159283194)).cljs$core$IFn$_invoke$arity$1(G__20648), null, cljs.core.dissoc.call(null, G__20648, new cljs.core.Keyword(null, "db-before", "db-before", -553691536), new cljs.core.Keyword(null, "db-after", "db-after", -571884666), new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761), new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), new cljs.core.Keyword(null, "tx-meta", "tx-meta", 1159283194)), null);
};
datascript.core.multival_QMARK_ = function multival_QMARK_(db, attr) {
  return cljs.core._EQ_.call(null, cljs.core.get_in.call(null, datascript.core._schema.call(null, db), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr, new cljs.core.Keyword("db", "cardinality", "db/cardinality", -104975659)], null)), new cljs.core.Keyword("db.cardinality", "many", "db.cardinality/many", 772806234));
};
datascript.core.ref_QMARK_ = function ref_QMARK_(db, attr) {
  return cljs.core.contains_QMARK_.call(null, datascript.core._refs.call(null, db), attr);
};
datascript.core.current_tx = function current_tx(report) {
  return cljs.core.get_in.call(null, report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-before", "db-before", -553691536), new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339)], null)) + 1;
};
datascript.core.next_eid = function next_eid(db) {
  return(new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075)).cljs$core$IFn$_invoke$arity$1(db) + 1;
};
datascript.core.advance_max_eid = function advance_max_eid(db, eid) {
  var G__20655 = db;
  var G__20655__$1 = eid > (new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075)).cljs$core$IFn$_invoke$arity$1(db) && eid < datascript.core.tx0 ? cljs.core.assoc.call(null, G__20655, new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075), eid) : G__20655;
  return G__20655__$1;
};
datascript.core.allocate_eid = function() {
  var allocate_eid = null;
  var allocate_eid__2 = function(report, eid) {
    return cljs.core.update_in.call(null, report, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-after", "db-after", -571884666)], null), datascript.core.advance_max_eid, eid);
  };
  var allocate_eid__3 = function(report, e, eid) {
    return cljs.core.update_in.call(null, cljs.core.assoc_in.call(null, report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), e], null), eid), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-after", "db-after", -571884666)], null), datascript.core.advance_max_eid, eid);
  };
  allocate_eid = function(report, e, eid) {
    switch(arguments.length) {
      case 2:
        return allocate_eid__2.call(this, report, e);
      case 3:
        return allocate_eid__3.call(this, report, e, eid);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  allocate_eid.cljs$core$IFn$_invoke$arity$2 = allocate_eid__2;
  allocate_eid.cljs$core$IFn$_invoke$arity$3 = allocate_eid__3;
  return allocate_eid;
}();
datascript.core.with_datom = function with_datom(db, datom) {
  if (cljs.core.truth_(datom.added)) {
    return datascript.core.advance_max_eid.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, db, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "eavt", "eavt", -666437073)], null), datascript.btset.btset_conj, datom, datascript.core.cmp_datoms_eavt_quick), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "aevt", "aevt", 
    -585148059)], null), datascript.btset.btset_conj, datom, datascript.core.cmp_datoms_aevt_quick), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "avet", "avet", 1383857032)], null), datascript.btset.btset_conj, datom, datascript.core.cmp_datoms_avet_quick), datom.e);
  } else {
    var removing = cljs.core.first.call(null, datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [datom.e, datom.a, datom.v], null)));
    return cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, db, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "eavt", "eavt", -666437073)], null), datascript.btset.btset_disj, removing, datascript.core.cmp_datoms_eavt_quick), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "aevt", "aevt", -585148059)], null), datascript.btset.btset_disj, 
    removing, datascript.core.cmp_datoms_aevt_quick), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "avet", "avet", 1383857032)], null), datascript.btset.btset_disj, removing, datascript.core.cmp_datoms_avet_quick);
  }
};
datascript.core.transact_report = function transact_report(report, datom) {
  return cljs.core.update_in.call(null, cljs.core.update_in.call(null, report, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-after", "db-after", -571884666)], null), datascript.core.with_datom, datom), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761)], null), cljs.core.conj, datom);
};
datascript.core.reverse_ref = function reverse_ref(attr) {
  var name = cljs.core.name.call(null, attr);
  if (cljs.core._EQ_.call(null, "_", cljs.core.nth.call(null, name, 0))) {
    return cljs.core.keyword.call(null, cljs.core.namespace.call(null, attr), cljs.core.subs.call(null, name, 1));
  } else {
    return null;
  }
};
datascript.core.explode = function explode(db, entity) {
  var eid = (new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(entity);
  var iter__4555__auto__ = function(eid) {
    return function iter__20664(s__20665) {
      return new cljs.core.LazySeq(null, function(eid) {
        return function() {
          var s__20665__$1 = s__20665;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__20665__$1);
            if (temp__4126__auto__) {
              var xs__4624__auto__ = temp__4126__auto__;
              var vec__20671 = cljs.core.first.call(null, xs__4624__auto__);
              var a = cljs.core.nth.call(null, vec__20671, 0, null);
              var vs = cljs.core.nth.call(null, vec__20671, 1, null);
              var reverse_a = datascript.core.reverse_ref.call(null, a);
              var iterys__4551__auto__ = function(s__20665__$1, reverse_a, vec__20671, a, vs, xs__4624__auto__, temp__4126__auto__, eid) {
                return function iter__20666(s__20667) {
                  return new cljs.core.LazySeq(null, function(s__20665__$1, reverse_a, vec__20671, a, vs, xs__4624__auto__, temp__4126__auto__, eid) {
                    return function() {
                      var s__20667__$1 = s__20667;
                      while (true) {
                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__20667__$1);
                        if (temp__4126__auto____$1) {
                          var s__20667__$2 = temp__4126__auto____$1;
                          if (cljs.core.chunked_seq_QMARK_.call(null, s__20667__$2)) {
                            var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20667__$2);
                            var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                            var b__20669 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                            if (function() {
                              var i__20668 = 0;
                              while (true) {
                                if (i__20668 < size__4554__auto__) {
                                  var v = cljs.core._nth.call(null, c__4553__auto__, i__20668);
                                  cljs.core.chunk_append.call(null, b__20669, cljs.core.truth_(reverse_a) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), v, reverse_a, eid], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), eid, a, v], null));
                                  var G__20672 = i__20668 + 1;
                                  i__20668 = G__20672;
                                  continue;
                                } else {
                                  return true;
                                }
                                break;
                              }
                            }()) {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20669), iter__20666.call(null, cljs.core.chunk_rest.call(null, s__20667__$2)));
                            } else {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20669), null);
                            }
                          } else {
                            var v = cljs.core.first.call(null, s__20667__$2);
                            return cljs.core.cons.call(null, cljs.core.truth_(reverse_a) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), v, reverse_a, eid], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), eid, a, v], null), iter__20666.call(null, cljs.core.rest.call(null, s__20667__$2)));
                          }
                        } else {
                          return null;
                        }
                        break;
                      }
                    };
                  }(s__20665__$1, reverse_a, vec__20671, a, vs, xs__4624__auto__, temp__4126__auto__, eid), null, null);
                };
              }(s__20665__$1, reverse_a, vec__20671, a, vs, xs__4624__auto__, temp__4126__auto__, eid);
              var fs__4552__auto__ = cljs.core.seq.call(null, iterys__4551__auto__.call(null, (vs instanceof Array || cljs.core.coll_QMARK_.call(null, vs)) && !cljs.core.map_QMARK_.call(null, vs) && datascript.core.multival_QMARK_.call(null, db, a) ? vs : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vs], null)));
              if (fs__4552__auto__) {
                return cljs.core.concat.call(null, fs__4552__auto__, iter__20664.call(null, cljs.core.rest.call(null, s__20665__$1)));
              } else {
                var G__20673 = cljs.core.rest.call(null, s__20665__$1);
                s__20665__$1 = G__20673;
                continue;
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(eid), null, null);
    };
  }(eid);
  return iter__4555__auto__.call(null, cljs.core.dissoc.call(null, entity, new cljs.core.Keyword("db", "id", "db/id", -1388397098)));
};
datascript.core.transact_add = function transact_add(report, p__20674) {
  var vec__20676 = p__20674;
  var _ = cljs.core.nth.call(null, vec__20676, 0, null);
  var e = cljs.core.nth.call(null, vec__20676, 1, null);
  var a = cljs.core.nth.call(null, vec__20676, 2, null);
  var v = cljs.core.nth.call(null, vec__20676, 3, null);
  var tx = datascript.core.current_tx.call(null, report);
  var db = (new cljs.core.Keyword(null, "db-after", "db-after", -571884666)).cljs$core$IFn$_invoke$arity$1(report);
  var datom = new datascript.core.Datom(e, a, v, tx, true, null, null, null);
  if (datascript.core.multival_QMARK_.call(null, db, a)) {
    if (cljs.core.empty_QMARK_.call(null, datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a, v], null)))) {
      return datascript.core.transact_report.call(null, report, datom);
    } else {
      return report;
    }
  } else {
    var temp__4124__auto__ = cljs.core.first.call(null, datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a], null)));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var old_datom = temp__4124__auto__;
      if (cljs.core._EQ_.call(null, old_datom.v, v)) {
        return report;
      } else {
        return datascript.core.transact_report.call(null, datascript.core.transact_report.call(null, report, new datascript.core.Datom(e, a, old_datom.v, tx, false, null, null, null)), datom);
      }
    } else {
      return datascript.core.transact_report.call(null, report, datom);
    }
  }
};
datascript.core.transact_retract_datom = function transact_retract_datom(report, d) {
  var tx = datascript.core.current_tx.call(null, report);
  return datascript.core.transact_report.call(null, report, new datascript.core.Datom(d.e, d.a, d.v, tx, false, null, null, null));
};
datascript.core.tx_id_QMARK_ = function tx_id_QMARK_(e) {
  return cljs.core._EQ_.call(null, e, new cljs.core.Keyword("db", "current-tx", "db/current-tx", 1600722132)) || cljs.core._EQ_.call(null, e, ":db/current-tx");
};
datascript.core.transact_tx_data = function transact_tx_data(report, p__20678) {
  while (true) {
    var vec__20683 = p__20678;
    var entity = cljs.core.nth.call(null, vec__20683, 0, null);
    var entities = cljs.core.nthnext.call(null, vec__20683, 1);
    var es = vec__20683;
    var db = (new cljs.core.Keyword(null, "db-after", "db-after", -571884666)).cljs$core$IFn$_invoke$arity$1(report);
    if (entity == null) {
      return cljs.core.update_in.call(null, cljs.core.assoc_in.call(null, report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), new cljs.core.Keyword("db", "current-tx", "db/current-tx", 1600722132)], null), datascript.core.current_tx.call(null, report)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "db-after", "db-after", -571884666), 
      new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339)], null), cljs.core.inc);
    } else {
      if (cljs.core.map_QMARK_.call(null, entity)) {
        if (datascript.core.tx_id_QMARK_.call(null, (new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(entity))) {
          var entity__$1 = cljs.core.assoc.call(null, entity, new cljs.core.Keyword("db", "id", "db/id", -1388397098), datascript.core.current_tx.call(null, report));
          var G__20687 = report;
          var G__20688 = cljs.core.concat.call(null, datascript.core.explode.call(null, db, entity__$1), entities);
          report = G__20687;
          p__20678 = G__20688;
          continue;
        } else {
          if ((new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(entity) == null) {
            var eid = datascript.core.next_eid.call(null, db);
            var entity__$1 = cljs.core.assoc.call(null, entity, new cljs.core.Keyword("db", "id", "db/id", -1388397098), eid);
            var G__20689 = datascript.core.allocate_eid.call(null, report, eid);
            var G__20690 = cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity__$1], null), entities);
            report = G__20689;
            p__20678 = G__20690;
            continue;
          } else {
            var G__20691 = report;
            var G__20692 = cljs.core.concat.call(null, datascript.core.explode.call(null, db, entity), entities);
            report = G__20691;
            p__20678 = G__20692;
            continue;
          }
        }
      } else {
        var vec__20684 = entity;
        var op = cljs.core.nth.call(null, vec__20684, 0, null);
        var e = cljs.core.nth.call(null, vec__20684, 1, null);
        var a = cljs.core.nth.call(null, vec__20684, 2, null);
        var v = cljs.core.nth.call(null, vec__20684, 3, null);
        if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword("db.fn", "call", "db.fn/call", -151594418))) {
          var vec__20685 = entity;
          var _ = cljs.core.nth.call(null, vec__20685, 0, null);
          var f = cljs.core.nth.call(null, vec__20685, 1, null);
          var args = cljs.core.nthnext.call(null, vec__20685, 2);
          var G__20693 = report;
          var G__20694 = cljs.core.concat.call(null, cljs.core.apply.call(null, f, db, args), entities);
          report = G__20693;
          p__20678 = G__20694;
          continue;
        } else {
          if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword("db.fn", "cas", "db.fn/cas", -379352172))) {
            var vec__20686 = entity;
            var _ = cljs.core.nth.call(null, vec__20686, 0, null);
            var e__$1 = cljs.core.nth.call(null, vec__20686, 1, null);
            var a__$1 = cljs.core.nth.call(null, vec__20686, 2, null);
            var ov = cljs.core.nth.call(null, vec__20686, 3, null);
            var nv = cljs.core.nth.call(null, vec__20686, 4, null);
            var datoms = datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1, a__$1], null));
            if (datascript.core.multival_QMARK_.call(null, db, a__$1)) {
              if (cljs.core.truth_(cljs.core.some.call(null, function(report, p__20678, vec__20686, _, e__$1, a__$1, ov, nv, datoms, vec__20684, op, e, a, v, db, vec__20683, entity, entities, es) {
                return function(p1__20677_SHARP_) {
                  return cljs.core._EQ_.call(null, p1__20677_SHARP_.v, ov);
                };
              }(report, p__20678, vec__20686, _, e__$1, a__$1, ov, nv, datoms, vec__20684, op, e, a, v, db, vec__20683, entity, entities, es), datoms))) {
                var G__20695 = datascript.core.transact_add.call(null, report, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), e__$1, a__$1, nv], null));
                var G__20696 = entities;
                report = G__20695;
                p__20678 = G__20696;
                continue;
              } else {
                throw new Error([cljs.core.str(":db.fn/cas failed on datom ["), cljs.core.str(e__$1), cljs.core.str(" "), cljs.core.str(a__$1), cljs.core.str(" "), cljs.core.str(cljs.core.map.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), datoms)), cljs.core.str("], expected "), cljs.core.str(ov)].join(""));
              }
            } else {
              var v__$1 = cljs.core.first.call(null, datoms).v;
              if (cljs.core._EQ_.call(null, v__$1, ov)) {
                var G__20697 = datascript.core.transact_add.call(null, report, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), e__$1, a__$1, nv], null));
                var G__20698 = entities;
                report = G__20697;
                p__20678 = G__20698;
                continue;
              } else {
                throw new Error([cljs.core.str(":db.fn/cas failed on datom ["), cljs.core.str(e__$1), cljs.core.str(" "), cljs.core.str(a__$1), cljs.core.str(" "), cljs.core.str(v__$1), cljs.core.str("], expected "), cljs.core.str(ov)].join(""));
              }
            }
          } else {
            if (datascript.core.tx_id_QMARK_.call(null, e)) {
              var G__20699 = report;
              var G__20700 = cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op, datascript.core.current_tx.call(null, report), a, v], null)], null), entities);
              report = G__20699;
              p__20678 = G__20700;
              continue;
            } else {
              if (datascript.core.ref_QMARK_.call(null, db, a) && datascript.core.tx_id_QMARK_.call(null, v)) {
                var G__20701 = report;
                var G__20702 = cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op, e, a, datascript.core.current_tx.call(null, report)], null)], null), entities);
                report = G__20701;
                p__20678 = G__20702;
                continue;
              } else {
                if (e < 0) {
                  var temp__4124__auto__ = cljs.core.get_in.call(null, report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), e], null));
                  if (cljs.core.truth_(temp__4124__auto__)) {
                    var eid = temp__4124__auto__;
                    var G__20703 = report;
                    var G__20704 = cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op, eid, a, v], null)], null), entities);
                    report = G__20703;
                    p__20678 = G__20704;
                    continue;
                  } else {
                    var G__20705 = datascript.core.allocate_eid.call(null, report, e, datascript.core.next_eid.call(null, db));
                    var G__20706 = es;
                    report = G__20705;
                    p__20678 = G__20706;
                    continue;
                  }
                } else {
                  if (datascript.core.ref_QMARK_.call(null, db, a) && v < 0) {
                    var temp__4124__auto__ = cljs.core.get_in.call(null, report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), v], null));
                    if (cljs.core.truth_(temp__4124__auto__)) {
                      var vid = temp__4124__auto__;
                      var G__20707 = report;
                      var G__20708 = cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op, e, a, vid], null)], null), entities);
                      report = G__20707;
                      p__20678 = G__20708;
                      continue;
                    } else {
                      var G__20709 = datascript.core.allocate_eid.call(null, report, v, datascript.core.next_eid.call(null, db));
                      var G__20710 = es;
                      report = G__20709;
                      p__20678 = G__20710;
                      continue;
                    }
                  } else {
                    if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword("db", "add", "db/add", 235286841))) {
                      var G__20711 = datascript.core.transact_add.call(null, report, entity);
                      var G__20712 = entities;
                      report = G__20711;
                      p__20678 = G__20712;
                      continue;
                    } else {
                      if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword("db", "retract", "db/retract", -1549825231))) {
                        var temp__4124__auto__ = cljs.core.first.call(null, datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a, v], null)));
                        if (cljs.core.truth_(temp__4124__auto__)) {
                          var old_datom = temp__4124__auto__;
                          var G__20713 = datascript.core.transact_retract_datom.call(null, report, old_datom);
                          var G__20714 = entities;
                          report = G__20713;
                          p__20678 = G__20714;
                          continue;
                        } else {
                          var G__20715 = report;
                          var G__20716 = entities;
                          report = G__20715;
                          p__20678 = G__20716;
                          continue;
                        }
                      } else {
                        if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword("db.fn", "retractAttribute", "db.fn/retractAttribute", 937402164))) {
                          var datoms = datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a], null));
                          var G__20717 = cljs.core.reduce.call(null, datascript.core.transact_retract_datom, report, datoms);
                          var G__20718 = entities;
                          report = G__20717;
                          p__20678 = G__20718;
                          continue;
                        } else {
                          if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword("db.fn", "retractEntity", "db.fn/retractEntity", -1423535441))) {
                            var e_datoms = datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e], null));
                            var v_datoms = cljs.core.mapcat.call(null, function(report, p__20678, e_datoms, vec__20684, op, e, a, v, db, vec__20683, entity, entities, es) {
                              return function(a__$1) {
                                return datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, a__$1, e], null));
                              };
                            }(report, p__20678, e_datoms, vec__20684, op, e, a, v, db, vec__20683, entity, entities, es), datascript.core._refs.call(null, db));
                            var G__20719 = cljs.core.reduce.call(null, datascript.core.transact_retract_datom, report, cljs.core.concat.call(null, e_datoms, v_datoms));
                            var G__20720 = entities;
                            report = G__20719;
                            p__20678 = G__20720;
                            continue;
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
// Input 70
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj21015 = {};
  return obj21015;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3787__auto__ = reader;
    if (and__3787__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4443__auto__ = reader == null ? null : reader;
    return function() {
      var or__3799__auto__ = cljs.reader.read_char[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.reader.read_char["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3787__auto__ = reader;
    if (and__3787__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4443__auto__ = reader == null ? null : reader;
    return function() {
      var or__3799__auto__ = cljs.reader.unread[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.reader.unread["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3799__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      var G__21016__i = 0, G__21016__a = new Array(arguments.length - 1);
      while (G__21016__i < G__21016__a.length) {
        G__21016__a[G__21016__i] = arguments[G__21016__i + 1];
        ++G__21016__i;
      }
      msg = new cljs.core.IndexedSeq(G__21016__a, 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__21017) {
    var rdr = cljs.core.first(arglist__21017);
    var msg = cljs.core.rest(arglist__21017);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3787__auto__ = !(ch === "#");
  if (and__3787__auto__) {
    var and__3787__auto____$1 = !(ch === "'");
    if (and__3787__auto____$1) {
      var and__3787__auto____$2 = !(ch === ":");
      if (and__3787__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3787__auto____$2;
      }
    } else {
      return and__3787__auto____$1;
    }
  } else {
    return and__3787__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__21018 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__21019 = cljs.reader.read_char.call(null, rdr);
      sb = G__21018;
      ch = G__21019;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__21020 = cljs.reader.read_char.call(null, rdr);
      ch = G__21020;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__21021 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__21021;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__21022 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__21022;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3799__auto__ = ch == null;
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3799__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__21023 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__21024 = cljs.reader.read_char.call(null, reader);
      buffer = G__21023;
      ch = G__21024;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__21025 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__21026 = cljs.reader.read_char.call(null, reader);
        buffer = G__21025;
        ch = G__21026;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__21027 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__21028 = cljs.reader.read_char.call(null, reader);
          buffer = G__21027;
          ch = G__21028;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__21033 = function() {
            var G__21031 = buffer;
            G__21031.append(nch);
            return G__21031;
          }();
          var G__21034 = cljs.reader.read_char.call(null, reader);
          buffer = G__21033;
          ch = G__21034;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__21035 = function() {
            var G__21032 = buffer;
            G__21032.append(ch);
            return G__21032;
          }();
          var G__21036 = cljs.reader.read_char.call(null, reader);
          buffer = G__21035;
          ch = G__21036;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__3787__auto__)) {
      return!(token.length === 1);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__21038 = o;
    if (G__21038) {
      var bit__4480__auto__ = G__21038.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4480__auto__ || G__21038.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__21038.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__21038);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__21038);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__21039 = reader;
        var G__21040 = eof_is_error;
        var G__21041 = sentinel;
        var G__21042 = is_recursive;
        reader = G__21039;
        eof_is_error = G__21040;
        sentinel = G__21041;
        is_recursive = G__21042;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__21043 = cljs.reader.read_comment.call(null, reader, ch);
          var G__21044 = eof_is_error;
          var G__21045 = sentinel;
          var G__21046 = is_recursive;
          reader = G__21043;
          eof_is_error = G__21044;
          sentinel = G__21045;
          is_recursive = G__21046;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__21047 = reader;
            var G__21048 = eof_is_error;
            var G__21049 = sentinel;
            var G__21050 = is_recursive;
            reader = G__21047;
            eof_is_error = G__21048;
            sentinel = G__21049;
            is_recursive = G__21050;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__21051 = b.append("0");
          b = G__21051;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__21053 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__21053, 0, null);
  var years = cljs.core.nth.call(null, vec__21053, 1, null);
  var months = cljs.core.nth.call(null, vec__21053, 2, null);
  var days = cljs.core.nth.call(null, vec__21053, 3, null);
  var hours = cljs.core.nth.call(null, vec__21053, 4, null);
  var minutes = cljs.core.nth.call(null, vec__21053, 5, null);
  var seconds = cljs.core.nth.call(null, vec__21053, 6, null);
  var fraction = cljs.core.nth.call(null, vec__21053, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__21053, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__21053, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__21053, 10, null);
  var v = vec__21053;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3799__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__21055 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__21055, 0, null);
    var months = cljs.core.nth.call(null, vec__21055, 1, null);
    var days = cljs.core.nth.call(null, vec__21055, 2, null);
    var hours = cljs.core.nth.call(null, vec__21055, 3, null);
    var minutes = cljs.core.nth.call(null, vec__21055, 4, null);
    var seconds = cljs.core.nth.call(null, vec__21055, 5, null);
    var ms = cljs.core.nth.call(null, vec__21055, 6, null);
    var offset = cljs.core.nth.call(null, vec__21055, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__21068_21080 = cljs.core.seq.call(null, form);
    var chunk__21069_21081 = null;
    var count__21070_21082 = 0;
    var i__21071_21083 = 0;
    while (true) {
      if (i__21071_21083 < count__21070_21082) {
        var x_21084 = cljs.core._nth.call(null, chunk__21069_21081, i__21071_21083);
        arr.push(x_21084);
        var G__21085 = seq__21068_21080;
        var G__21086 = chunk__21069_21081;
        var G__21087 = count__21070_21082;
        var G__21088 = i__21071_21083 + 1;
        seq__21068_21080 = G__21085;
        chunk__21069_21081 = G__21086;
        count__21070_21082 = G__21087;
        i__21071_21083 = G__21088;
        continue;
      } else {
        var temp__4126__auto___21089 = cljs.core.seq.call(null, seq__21068_21080);
        if (temp__4126__auto___21089) {
          var seq__21068_21090__$1 = temp__4126__auto___21089;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__21068_21090__$1)) {
            var c__4586__auto___21091 = cljs.core.chunk_first.call(null, seq__21068_21090__$1);
            var G__21092 = cljs.core.chunk_rest.call(null, seq__21068_21090__$1);
            var G__21093 = c__4586__auto___21091;
            var G__21094 = cljs.core.count.call(null, c__4586__auto___21091);
            var G__21095 = 0;
            seq__21068_21080 = G__21092;
            chunk__21069_21081 = G__21093;
            count__21070_21082 = G__21094;
            i__21071_21083 = G__21095;
            continue;
          } else {
            var x_21096 = cljs.core.first.call(null, seq__21068_21090__$1);
            arr.push(x_21096);
            var G__21097 = cljs.core.next.call(null, seq__21068_21090__$1);
            var G__21098 = null;
            var G__21099 = 0;
            var G__21100 = 0;
            seq__21068_21080 = G__21097;
            chunk__21069_21081 = G__21098;
            count__21070_21082 = G__21099;
            i__21071_21083 = G__21100;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj21073 = {};
        return obj21073;
      }();
      var seq__21074_21101 = cljs.core.seq.call(null, form);
      var chunk__21075_21102 = null;
      var count__21076_21103 = 0;
      var i__21077_21104 = 0;
      while (true) {
        if (i__21077_21104 < count__21076_21103) {
          var vec__21078_21105 = cljs.core._nth.call(null, chunk__21075_21102, i__21077_21104);
          var k_21106 = cljs.core.nth.call(null, vec__21078_21105, 0, null);
          var v_21107 = cljs.core.nth.call(null, vec__21078_21105, 1, null);
          obj[cljs.core.name.call(null, k_21106)] = v_21107;
          var G__21108 = seq__21074_21101;
          var G__21109 = chunk__21075_21102;
          var G__21110 = count__21076_21103;
          var G__21111 = i__21077_21104 + 1;
          seq__21074_21101 = G__21108;
          chunk__21075_21102 = G__21109;
          count__21076_21103 = G__21110;
          i__21077_21104 = G__21111;
          continue;
        } else {
          var temp__4126__auto___21112 = cljs.core.seq.call(null, seq__21074_21101);
          if (temp__4126__auto___21112) {
            var seq__21074_21113__$1 = temp__4126__auto___21112;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__21074_21113__$1)) {
              var c__4586__auto___21114 = cljs.core.chunk_first.call(null, seq__21074_21113__$1);
              var G__21115 = cljs.core.chunk_rest.call(null, seq__21074_21113__$1);
              var G__21116 = c__4586__auto___21114;
              var G__21117 = cljs.core.count.call(null, c__4586__auto___21114);
              var G__21118 = 0;
              seq__21074_21101 = G__21115;
              chunk__21075_21102 = G__21116;
              count__21076_21103 = G__21117;
              i__21077_21104 = G__21118;
              continue;
            } else {
              var vec__21079_21119 = cljs.core.first.call(null, seq__21074_21113__$1);
              var k_21120 = cljs.core.nth.call(null, vec__21079_21119, 0, null);
              var v_21121 = cljs.core.nth.call(null, vec__21079_21119, 1, null);
              obj[cljs.core.name.call(null, k_21120)] = v_21121;
              var G__21122 = cljs.core.next.call(null, seq__21074_21113__$1);
              var G__21123 = null;
              var G__21124 = 0;
              var G__21125 = 0;
              seq__21074_21101 = G__21122;
              chunk__21075_21102 = G__21123;
              count__21076_21103 = G__21124;
              i__21077_21104 = G__21125;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
// Input 71
goog.provide("datascript.impl.entity");
goog.require("cljs.core");
goog.require("datascript.core");
datascript.impl.entity.entity = function entity(db, eid) {
  return new datascript.impl.entity.Entity(db, eid, false, cljs.core.PersistentArrayMap.EMPTY);
};
datascript.impl.entity.entity_attr = function entity_attr(db, a, datoms) {
  if (datascript.core.multival_QMARK_.call(null, db, a)) {
    if (datascript.core.ref_QMARK_.call(null, db, a)) {
      return cljs.core.reduce.call(null, function(p1__20452_SHARP_, p2__20453_SHARP_) {
        return cljs.core.conj.call(null, p1__20452_SHARP_, datascript.impl.entity.entity.call(null, db, p2__20453_SHARP_.v));
      }, cljs.core.PersistentHashSet.EMPTY, datoms);
    } else {
      return cljs.core.reduce.call(null, function(p1__20454_SHARP_, p2__20455_SHARP_) {
        return cljs.core.conj.call(null, p1__20454_SHARP_, p2__20455_SHARP_.v);
      }, cljs.core.PersistentHashSet.EMPTY, datoms);
    }
  } else {
    if (datascript.core.ref_QMARK_.call(null, db, a)) {
      return datascript.impl.entity.entity.call(null, db, cljs.core.first.call(null, datoms).v);
    } else {
      return cljs.core.first.call(null, datoms).v;
    }
  }
};
datascript.impl.entity.datoms__GT_cache = function datoms__GT_cache(db, datoms) {
  return cljs.core.reduce.call(null, function(acc, part) {
    var a = cljs.core.first.call(null, part).a;
    return cljs.core.assoc.call(null, acc, a, datascript.impl.entity.entity_attr.call(null, db, a, part));
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition_by.call(null, new cljs.core.Keyword(null, "a", "a", -2123407586), datoms));
};
datascript.impl.entity.touch = function touch(e) {
  if (cljs.core.truth_(e.touched)) {
  } else {
    var temp__4126__auto___20456 = cljs.core.not_empty.call(null, datascript.core._search.call(null, e.db, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e.eid], null)));
    if (cljs.core.truth_(temp__4126__auto___20456)) {
      var datoms_20457 = temp__4126__auto___20456;
      e.touched = true;
      e.cache = datascript.impl.entity.datoms__GT_cache.call(null, e.db, datoms_20457);
    } else {
    }
  }
  return e;
};
datascript.impl.entity._lookup_backwards = function _lookup_backwards(db, eid, attr, not_found) {
  var temp__4124__auto__ = cljs.core.not_empty.call(null, datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, attr, eid], null)));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var datoms = temp__4124__auto__;
    return cljs.core.reduce.call(null, function(datoms, temp__4124__auto__) {
      return function(p1__20458_SHARP_, p2__20459_SHARP_) {
        return cljs.core.conj.call(null, p1__20458_SHARP_, datascript.impl.entity.entity.call(null, db, p2__20459_SHARP_.e));
      };
    }(datoms, temp__4124__auto__), cljs.core.PersistentHashSet.EMPTY, datoms);
  } else {
    return not_found;
  }
};
datascript.impl.entity.multival__GT_js = function multival__GT_js(val) {
  if (cljs.core.truth_(val)) {
    return cljs.core.to_array.call(null, val);
  } else {
    return null;
  }
};
datascript.impl.entity.js_seq = function js_seq(e) {
  datascript.impl.entity.touch.call(null, e);
  var iter__4555__auto__ = function iter__20468(s__20469) {
    return new cljs.core.LazySeq(null, function() {
      var s__20469__$1 = s__20469;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__20469__$1);
        if (temp__4126__auto__) {
          var s__20469__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__20469__$2)) {
            var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20469__$2);
            var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
            var b__20471 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
            if (function() {
              var i__20470 = 0;
              while (true) {
                if (i__20470 < size__4554__auto__) {
                  var vec__20474 = cljs.core._nth.call(null, c__4553__auto__, i__20470);
                  var a = cljs.core.nth.call(null, vec__20474, 0, null);
                  var v = cljs.core.nth.call(null, vec__20474, 1, null);
                  cljs.core.chunk_append.call(null, b__20471, datascript.core.multival_QMARK_.call(null, e.db, a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, datascript.impl.entity.multival__GT_js.call(null, v)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, v], null));
                  var G__20476 = i__20470 + 1;
                  i__20470 = G__20476;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20471), iter__20468.call(null, cljs.core.chunk_rest.call(null, s__20469__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20471), null);
            }
          } else {
            var vec__20475 = cljs.core.first.call(null, s__20469__$2);
            var a = cljs.core.nth.call(null, vec__20475, 0, null);
            var v = cljs.core.nth.call(null, vec__20475, 1, null);
            return cljs.core.cons.call(null, datascript.core.multival_QMARK_.call(null, e.db, a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, datascript.impl.entity.multival__GT_js.call(null, v)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, v], null), iter__20468.call(null, cljs.core.rest.call(null, s__20469__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4555__auto__.call(null, e.cache);
};
datascript.impl.entity.Entity = function(db, eid, touched, cache) {
  this.db = db;
  this.eid = eid;
  this.touched = touched;
  this.cache = cache;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2162164483;
};
datascript.impl.entity.Entity.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, cljs.core.assoc.call(null, self__.cache, new cljs.core.Keyword("db", "id", "db/id", -1388397098), self__.eid), writer, opts);
};
datascript.impl.entity.Entity.prototype.call = function() {
  var G__20492 = null;
  var G__20492__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__20492__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__20492 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20492__2.call(this, self__, k);
      case 3:
        return G__20492__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20492.cljs$core$IFn$_invoke$arity$2 = G__20492__2;
  G__20492.cljs$core$IFn$_invoke$arity$3 = G__20492__3;
  return G__20492;
}();
datascript.impl.entity.Entity.prototype.apply = function(self__, args20477) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20477)));
};
datascript.impl.entity.Entity.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
datascript.impl.entity.Entity.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
datascript.impl.entity.Entity.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.not_EQ_.call(null, new cljs.core.Keyword("datascript.impl.entity", "nf", "datascript.impl.entity/nf", -953741353), cljs.core._lookup.call(null, this$__$1, k, new cljs.core.Keyword("datascript.impl.entity", "nf", "datascript.impl.entity/nf", -953741353)));
};
datascript.impl.entity.Entity.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, attr) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, attr, null);
};
datascript.impl.entity.Entity.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, attr, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core._EQ_.call(null, attr, new cljs.core.Keyword("db", "id", "db/id", -1388397098))) {
    return self__.eid;
  } else {
    var temp__4124__auto__ = datascript.core.reverse_ref.call(null, attr);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var attr__$1 = temp__4124__auto__;
      return datascript.impl.entity._lookup_backwards.call(null, self__.db, self__.eid, attr__$1, not_found);
    } else {
      var or__3799__auto__ = self__.cache.call(null, attr);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        if (cljs.core.truth_(self__.touched)) {
          return not_found;
        } else {
          var temp__4124__auto____$1 = cljs.core.not_empty.call(null, datascript.core._search.call(null, self__.db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.eid, attr], null)));
          if (cljs.core.truth_(temp__4124__auto____$1)) {
            var datoms = temp__4124__auto____$1;
            self__.cache = cljs.core.assoc.call(null, self__.cache, attr, datascript.impl.entity.entity_attr.call(null, self__.db, attr, datoms));
            return self__.cache.call(null, attr);
          } else {
            return not_found;
          }
        }
      }
    }
  }
};
datascript.impl.entity.Entity.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  datascript.impl.entity.touch.call(null, this$__$1);
  return cljs.core.count.call(null, self__.cache);
};
datascript.impl.entity.Entity.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  datascript.impl.entity.touch.call(null, this$__$1);
  return cljs.core.seq.call(null, self__.cache);
};
datascript.impl.entity.Entity.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.eid);
};
datascript.impl.entity.Entity.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return o instanceof datascript.impl.entity.Entity && cljs.core._EQ_.call(null, self__.eid, o.eid);
};
datascript.impl.entity.Entity.prototype.entry_set = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.to_array.call(null, cljs.core.map.call(null, cljs.core.to_array, datascript.impl.entity.js_seq.call(null, this$)));
};
datascript.impl.entity.Entity.prototype.forEach = function() {
  var G__20493 = null;
  var G__20493__1 = function(f) {
    var self__ = this;
    var this$ = this;
    var seq__20478 = cljs.core.seq.call(null, datascript.impl.entity.js_seq.call(null, this$));
    var chunk__20479 = null;
    var count__20480 = 0;
    var i__20481 = 0;
    while (true) {
      if (i__20481 < count__20480) {
        var vec__20482 = cljs.core._nth.call(null, chunk__20479, i__20481);
        var a = cljs.core.nth.call(null, vec__20482, 0, null);
        var v = cljs.core.nth.call(null, vec__20482, 1, null);
        f.call(null, v, a, this$);
        var G__20494 = seq__20478;
        var G__20495 = chunk__20479;
        var G__20496 = count__20480;
        var G__20497 = i__20481 + 1;
        seq__20478 = G__20494;
        chunk__20479 = G__20495;
        count__20480 = G__20496;
        i__20481 = G__20497;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__20478);
        if (temp__4126__auto__) {
          var seq__20478__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20478__$1)) {
            var c__4586__auto__ = cljs.core.chunk_first.call(null, seq__20478__$1);
            var G__20498 = cljs.core.chunk_rest.call(null, seq__20478__$1);
            var G__20499 = c__4586__auto__;
            var G__20500 = cljs.core.count.call(null, c__4586__auto__);
            var G__20501 = 0;
            seq__20478 = G__20498;
            chunk__20479 = G__20499;
            count__20480 = G__20500;
            i__20481 = G__20501;
            continue;
          } else {
            var vec__20483 = cljs.core.first.call(null, seq__20478__$1);
            var a = cljs.core.nth.call(null, vec__20483, 0, null);
            var v = cljs.core.nth.call(null, vec__20483, 1, null);
            f.call(null, v, a, this$);
            var G__20502 = cljs.core.next.call(null, seq__20478__$1);
            var G__20503 = null;
            var G__20504 = 0;
            var G__20505 = 0;
            seq__20478 = G__20502;
            chunk__20479 = G__20503;
            count__20480 = G__20504;
            i__20481 = G__20505;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var G__20493__2 = function(f, use_as_this) {
    var self__ = this;
    var this$ = this;
    var seq__20484 = cljs.core.seq.call(null, datascript.impl.entity.js_seq.call(null, this$));
    var chunk__20485 = null;
    var count__20486 = 0;
    var i__20487 = 0;
    while (true) {
      if (i__20487 < count__20486) {
        var vec__20488 = cljs.core._nth.call(null, chunk__20485, i__20487);
        var a = cljs.core.nth.call(null, vec__20488, 0, null);
        var v = cljs.core.nth.call(null, vec__20488, 1, null);
        f.call(use_as_this, v, a, this$);
        var G__20506 = seq__20484;
        var G__20507 = chunk__20485;
        var G__20508 = count__20486;
        var G__20509 = i__20487 + 1;
        seq__20484 = G__20506;
        chunk__20485 = G__20507;
        count__20486 = G__20508;
        i__20487 = G__20509;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__20484);
        if (temp__4126__auto__) {
          var seq__20484__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20484__$1)) {
            var c__4586__auto__ = cljs.core.chunk_first.call(null, seq__20484__$1);
            var G__20510 = cljs.core.chunk_rest.call(null, seq__20484__$1);
            var G__20511 = c__4586__auto__;
            var G__20512 = cljs.core.count.call(null, c__4586__auto__);
            var G__20513 = 0;
            seq__20484 = G__20510;
            chunk__20485 = G__20511;
            count__20486 = G__20512;
            i__20487 = G__20513;
            continue;
          } else {
            var vec__20489 = cljs.core.first.call(null, seq__20484__$1);
            var a = cljs.core.nth.call(null, vec__20489, 0, null);
            var v = cljs.core.nth.call(null, vec__20489, 1, null);
            f.call(use_as_this, v, a, this$);
            var G__20514 = cljs.core.next.call(null, seq__20484__$1);
            var G__20515 = null;
            var G__20516 = 0;
            var G__20517 = 0;
            seq__20484 = G__20514;
            chunk__20485 = G__20515;
            count__20486 = G__20516;
            i__20487 = G__20517;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  G__20493 = function(f, use_as_this) {
    switch(arguments.length) {
      case 1:
        return G__20493__1.call(this, f);
      case 2:
        return G__20493__2.call(this, f, use_as_this);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20493.cljs$core$IFn$_invoke$arity$1 = G__20493__1;
  G__20493.cljs$core$IFn$_invoke$arity$2 = G__20493__2;
  return G__20493;
}();
datascript.impl.entity.Entity.prototype.get = function(attr) {
  var self__ = this;
  var this$ = this;
  if (cljs.core._EQ_.call(null, attr, ":db/id")) {
    return self__.eid;
  } else {
    var temp__4124__auto__ = cljs.core.re_matches.call(null, /(?:([^\/]+)\/)?_([^\/]+)/, attr);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var vec__20490 = temp__4124__auto__;
      var _ = cljs.core.nth.call(null, vec__20490, 0, null);
      var ns = cljs.core.nth.call(null, vec__20490, 1, null);
      var name = cljs.core.nth.call(null, vec__20490, 2, null);
      var attr__$1 = cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
      return datascript.impl.entity.multival__GT_js.call(null, datascript.impl.entity._lookup_backwards.call(null, self__.db, self__.eid, attr__$1, null));
    } else {
      var G__20491 = cljs.core._lookup.call(null, this$, attr);
      var G__20491__$1 = datascript.core.multival_QMARK_.call(null, self__.db, attr) ? datascript.impl.entity.multival__GT_js.call(null, G__20491) : G__20491;
      return G__20491__$1;
    }
  }
};
datascript.impl.entity.Entity.prototype.key_set = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.to_array.call(null, cljs.core.keys.call(null, this$));
};
datascript.impl.entity.Entity.prototype.entries = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.es6_entries_iterator.call(null, datascript.impl.entity.js_seq.call(null, this$));
};
datascript.impl.entity.Entity.prototype.value_set = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.to_array.call(null, cljs.core.map.call(null, cljs.core.second, datascript.impl.entity.js_seq.call(null, this$)));
};
datascript.impl.entity.Entity.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str_STAR_.call(null, this$);
};
datascript.impl.entity.Entity.prototype.keys = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, this$));
};
datascript.impl.entity.Entity.prototype.values = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.es6_iterator.call(null, cljs.core.map.call(null, cljs.core.second, datascript.impl.entity.js_seq.call(null, this$)));
};
datascript.impl.entity.Entity.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
datascript.impl.entity.Entity.prototype.has = function(attr) {
  var self__ = this;
  var this$ = this;
  return!(this$.get(attr) == null);
};
datascript.impl.entity.Entity.cljs$lang$type = true;
datascript.impl.entity.Entity.cljs$lang$ctorStr = "datascript.impl.entity/Entity";
datascript.impl.entity.Entity.cljs$lang$ctorPrWriter = function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
  return cljs.core._write.call(null, writer__4387__auto__, "datascript.impl.entity/Entity");
};
datascript.impl.entity.__GT_Entity = function __GT_Entity(db, eid, touched, cache) {
  return new datascript.impl.entity.Entity(db, eid, touched, cache);
};
goog.exportSymbol("datascript.impl.entity.Entity.prototype.get", datascript.impl.entity.Entity.prototype.get);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.has", datascript.impl.entity.Entity.prototype.has);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.forEach", datascript.impl.entity.Entity.prototype.forEach);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.key_set", datascript.impl.entity.Entity.prototype.key_set);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.value_set", datascript.impl.entity.Entity.prototype.value_set);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.entry_set", datascript.impl.entity.Entity.prototype.entry_set);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.keys", datascript.impl.entity.Entity.prototype.keys);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.values", datascript.impl.entity.Entity.prototype.values);
goog.exportSymbol("datascript.impl.entity.Entity.prototype.entries", datascript.impl.entity.Entity.prototype.entries);
goog.exportSymbol("cljs.core.ES6Iterator.prototype.next", cljs.core.ES6Iterator.prototype.next);
goog.exportSymbol("cljs.core.ES6EntriesIterator.prototype.next", cljs.core.ES6EntriesIterator.prototype.next);
// Input 72
goog.provide("datascript.query");
goog.require("cljs.core");
goog.require("datascript.impl.entity");
goog.require("datascript.core");
goog.require("clojure.walk");
goog.require("clojure.set");
goog.require("cljs.reader");
datascript.query.Context = function(rels, sources, rules, __meta, __extmap, __hash) {
  this.rels = rels;
  this.sources = sources;
  this.rules = rules;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4402__auto__, k__4403__auto__) {
  var self__ = this;
  var this__4402__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4402__auto____$1, k__4403__auto__, null);
};
datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4404__auto__, k20723, else__4405__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  var G__20725 = k20723 instanceof cljs.core.Keyword ? k20723.fqn : null;
  switch(G__20725) {
    case "rules":
      return self__.rules;
      break;
    case "sources":
      return self__.sources;
      break;
    case "rels":
      return self__.rels;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20723, else__4405__auto__);
  }
};
datascript.query.Context.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4416__auto__, writer__4417__auto__, opts__4418__auto__) {
  var self__ = this;
  var this__4416__auto____$1 = this;
  var pr_pair__4419__auto__ = function(this__4416__auto____$1) {
    return function(keyval__4420__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, cljs.core.pr_writer, "", " ", "", opts__4418__auto__, keyval__4420__auto__);
    };
  }(this__4416__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, pr_pair__4419__auto__, "#datascript.query.Context{", ", ", "}", opts__4418__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185), self__.rels], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "sources", "sources", -321166424), self__.sources], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rules", "rules", 1198912366), self__.rules], null)], null), self__.__extmap));
};
datascript.query.Context.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4400__auto__) {
  var self__ = this;
  var this__4400__auto____$1 = this;
  return self__.__meta;
};
datascript.query.Context.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4396__auto__) {
  var self__ = this;
  var this__4396__auto____$1 = this;
  return new datascript.query.Context(self__.rels, self__.sources, self__.rules, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.query.Context.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4406__auto__) {
  var self__ = this;
  var this__4406__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
datascript.query.Context.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_imap.call(null, this__4397__auto____$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
datascript.query.Context.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4398__auto__, other__4399__auto__) {
  var self__ = this;
  var this__4398__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = other__4399__auto__;
    if (cljs.core.truth_(and__3787__auto__)) {
      return this__4398__auto____$1.constructor === other__4399__auto__.constructor && cljs.core.equiv_map.call(null, this__4398__auto____$1, other__4399__auto__);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.query.Context.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4411__auto__, k__4412__auto__) {
  var self__ = this;
  var this__4411__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "sources", "sources", -321166424), null, new cljs.core.Keyword(null, "rules", "rules", 1198912366), null, new cljs.core.Keyword(null, "rels", "rels", 1770187185), null], null), null), k__4412__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4411__auto____$1), self__.__meta), k__4412__auto__);
  } else {
    return new datascript.query.Context(self__.rels, self__.sources, self__.rules, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4412__auto__)), null);
  }
};
datascript.query.Context.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4409__auto__, k__4410__auto__, G__20722) {
  var self__ = this;
  var this__4409__auto____$1 = this;
  var pred__20726 = cljs.core.keyword_identical_QMARK_;
  var expr__20727 = k__4410__auto__;
  if (cljs.core.truth_(pred__20726.call(null, new cljs.core.Keyword(null, "rels", "rels", 1770187185), expr__20727))) {
    return new datascript.query.Context(G__20722, self__.sources, self__.rules, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20726.call(null, new cljs.core.Keyword(null, "sources", "sources", -321166424), expr__20727))) {
      return new datascript.query.Context(self__.rels, G__20722, self__.rules, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__20726.call(null, new cljs.core.Keyword(null, "rules", "rules", 1198912366), expr__20727))) {
        return new datascript.query.Context(self__.rels, self__.sources, G__20722, self__.__meta, self__.__extmap, null);
      } else {
        return new datascript.query.Context(self__.rels, self__.sources, self__.rules, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4410__auto__, G__20722), null);
      }
    }
  }
};
datascript.query.Context.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4414__auto__) {
  var self__ = this;
  var this__4414__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185), self__.rels], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sources", "sources", -321166424), self__.sources], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rules", "rules", 1198912366), self__.rules], null)], null), self__.__extmap));
};
datascript.query.Context.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4401__auto__, G__20722) {
  var self__ = this;
  var this__4401__auto____$1 = this;
  return new datascript.query.Context(self__.rels, self__.sources, self__.rules, G__20722, self__.__extmap, self__.__hash);
};
datascript.query.Context.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4407__auto__, entry__4408__auto__) {
  var self__ = this;
  var this__4407__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4408__auto__)) {
    return cljs.core._assoc.call(null, this__4407__auto____$1, cljs.core._nth.call(null, entry__4408__auto__, 0), cljs.core._nth.call(null, entry__4408__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4407__auto____$1, entry__4408__auto__);
  }
};
datascript.query.Context.cljs$lang$type = true;
datascript.query.Context.cljs$lang$ctorPrSeq = function(this__4436__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript.query/Context");
};
datascript.query.Context.cljs$lang$ctorPrWriter = function(this__4436__auto__, writer__4437__auto__) {
  return cljs.core._write.call(null, writer__4437__auto__, "datascript.query/Context");
};
datascript.query.__GT_Context = function __GT_Context(rels, sources, rules) {
  return new datascript.query.Context(rels, sources, rules, null, null, null);
};
datascript.query.map__GT_Context = function map__GT_Context(G__20724) {
  return new datascript.query.Context((new cljs.core.Keyword(null, "rels", "rels", 1770187185)).cljs$core$IFn$_invoke$arity$1(G__20724), (new cljs.core.Keyword(null, "sources", "sources", -321166424)).cljs$core$IFn$_invoke$arity$1(G__20724), (new cljs.core.Keyword(null, "rules", "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(G__20724), null, cljs.core.dissoc.call(null, G__20724, new cljs.core.Keyword(null, "rels", "rels", 1770187185), new cljs.core.Keyword(null, "sources", "sources", -321166424), 
  new cljs.core.Keyword(null, "rules", "rules", 1198912366)), null);
};
datascript.query.Relation = function(attrs, tuples, __meta, __extmap, __hash) {
  this.attrs = attrs;
  this.tuples = tuples;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4402__auto__, k__4403__auto__) {
  var self__ = this;
  var this__4402__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4402__auto____$1, k__4403__auto__, null);
};
datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4404__auto__, k20731, else__4405__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  var G__20733 = k20731 instanceof cljs.core.Keyword ? k20731.fqn : null;
  switch(G__20733) {
    case "tuples":
      return self__.tuples;
      break;
    case "attrs":
      return self__.attrs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k20731, else__4405__auto__);
  }
};
datascript.query.Relation.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4416__auto__, writer__4417__auto__, opts__4418__auto__) {
  var self__ = this;
  var this__4416__auto____$1 = this;
  var pr_pair__4419__auto__ = function(this__4416__auto____$1) {
    return function(keyval__4420__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, cljs.core.pr_writer, "", " ", "", opts__4418__auto__, keyval__4420__auto__);
    };
  }(this__4416__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4417__auto__, pr_pair__4419__auto__, "#datascript.query.Relation{", ", ", "}", opts__4418__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), self__.attrs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "tuples", "tuples", -676032639), self__.tuples], null)], null), self__.__extmap));
};
datascript.query.Relation.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4400__auto__) {
  var self__ = this;
  var this__4400__auto____$1 = this;
  return self__.__meta;
};
datascript.query.Relation.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4396__auto__) {
  var self__ = this;
  var this__4396__auto____$1 = this;
  return new datascript.query.Relation(self__.attrs, self__.tuples, self__.__meta, self__.__extmap, self__.__hash);
};
datascript.query.Relation.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4406__auto__) {
  var self__ = this;
  var this__4406__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
datascript.query.Relation.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  var h__4220__auto__ = self__.__hash;
  if (!(h__4220__auto__ == null)) {
    return h__4220__auto__;
  } else {
    var h__4220__auto____$1 = cljs.core.hash_imap.call(null, this__4397__auto____$1);
    self__.__hash = h__4220__auto____$1;
    return h__4220__auto____$1;
  }
};
datascript.query.Relation.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4398__auto__, other__4399__auto__) {
  var self__ = this;
  var this__4398__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3787__auto__ = other__4399__auto__;
    if (cljs.core.truth_(and__3787__auto__)) {
      return this__4398__auto____$1.constructor === other__4399__auto__.constructor && cljs.core.equiv_map.call(null, this__4398__auto____$1, other__4399__auto__);
    } else {
      return and__3787__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
datascript.query.Relation.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4411__auto__, k__4412__auto__) {
  var self__ = this;
  var this__4411__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tuples", "tuples", -676032639), null, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), null], null), null), k__4412__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4411__auto____$1), self__.__meta), k__4412__auto__);
  } else {
    return new datascript.query.Relation(self__.attrs, self__.tuples, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4412__auto__)), null);
  }
};
datascript.query.Relation.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4409__auto__, k__4410__auto__, G__20730) {
  var self__ = this;
  var this__4409__auto____$1 = this;
  var pred__20734 = cljs.core.keyword_identical_QMARK_;
  var expr__20735 = k__4410__auto__;
  if (cljs.core.truth_(pred__20734.call(null, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), expr__20735))) {
    return new datascript.query.Relation(G__20730, self__.tuples, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20734.call(null, new cljs.core.Keyword(null, "tuples", "tuples", -676032639), expr__20735))) {
      return new datascript.query.Relation(self__.attrs, G__20730, self__.__meta, self__.__extmap, null);
    } else {
      return new datascript.query.Relation(self__.attrs, self__.tuples, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4410__auto__, G__20730), null);
    }
  }
};
datascript.query.Relation.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4414__auto__) {
  var self__ = this;
  var this__4414__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), self__.attrs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tuples", "tuples", -676032639), self__.tuples], null)], null), self__.__extmap));
};
datascript.query.Relation.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4401__auto__, G__20730) {
  var self__ = this;
  var this__4401__auto____$1 = this;
  return new datascript.query.Relation(self__.attrs, self__.tuples, G__20730, self__.__extmap, self__.__hash);
};
datascript.query.Relation.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4407__auto__, entry__4408__auto__) {
  var self__ = this;
  var this__4407__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4408__auto__)) {
    return cljs.core._assoc.call(null, this__4407__auto____$1, cljs.core._nth.call(null, entry__4408__auto__, 0), cljs.core._nth.call(null, entry__4408__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4407__auto____$1, entry__4408__auto__);
  }
};
datascript.query.Relation.cljs$lang$type = true;
datascript.query.Relation.cljs$lang$ctorPrSeq = function(this__4436__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "datascript.query/Relation");
};
datascript.query.Relation.cljs$lang$ctorPrWriter = function(this__4436__auto__, writer__4437__auto__) {
  return cljs.core._write.call(null, writer__4437__auto__, "datascript.query/Relation");
};
datascript.query.__GT_Relation = function __GT_Relation(attrs, tuples) {
  return new datascript.query.Relation(attrs, tuples, null, null, null);
};
datascript.query.map__GT_Relation = function map__GT_Relation(G__20732) {
  return new datascript.query.Relation((new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(G__20732), (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(G__20732), null, cljs.core.dissoc.call(null, G__20732, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), new cljs.core.Keyword(null, "tuples", "tuples", -676032639)), null);
};
datascript.query.intersect_keys = function intersect_keys(attrs1, attrs2) {
  return clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, attrs1)), cljs.core.set.call(null, cljs.core.keys.call(null, attrs2)));
};
datascript.query.concatv = function() {
  var concatv__delegate = function(xs) {
    return cljs.core.vec.call(null, cljs.core.apply.call(null, cljs.core.concat, xs));
  };
  var concatv = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__20738__i = 0, G__20738__a = new Array(arguments.length - 0);
      while (G__20738__i < G__20738__a.length) {
        G__20738__a[G__20738__i] = arguments[G__20738__i + 0];
        ++G__20738__i;
      }
      xs = new cljs.core.IndexedSeq(G__20738__a, 0);
    }
    return concatv__delegate.call(this, xs);
  };
  concatv.cljs$lang$maxFixedArity = 0;
  concatv.cljs$lang$applyTo = function(arglist__20739) {
    var xs = cljs.core.seq(arglist__20739);
    return concatv__delegate(xs);
  };
  concatv.cljs$core$IFn$_invoke$arity$variadic = concatv__delegate;
  return concatv;
}();
datascript.query.source_QMARK_ = function source_QMARK_(sym) {
  return sym instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, "$", cljs.core.first.call(null, cljs.core.name.call(null, sym)));
};
datascript.query.free_var_QMARK_ = function free_var_QMARK_(sym) {
  return sym instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, "?", cljs.core.first.call(null, cljs.core.name.call(null, sym))) && cljs.core.not_EQ_.call(null, new cljs.core.Symbol(null, "_", "_", -1201019570, null), sym);
};
datascript.query.looks_like_QMARK_ = function looks_like_QMARK_(pattern, form) {
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "_", "_", -1201019570, null), pattern)) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", 345799209, null)], null), pattern)) {
      return cljs.core.sequential_QMARK_.call(null, form);
    } else {
      if (cljs.core.sequential_QMARK_.call(null, pattern)) {
        return cljs.core.sequential_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.count.call(null, form), cljs.core.count.call(null, pattern)) && cljs.core.every_QMARK_.call(null, function(p__20746) {
          var vec__20747 = p__20746;
          var pattern_el = cljs.core.nth.call(null, vec__20747, 0, null);
          var form_el = cljs.core.nth.call(null, vec__20747, 1, null);
          return looks_like_QMARK_.call(null, pattern_el, form_el);
        }, cljs.core.map.call(null, cljs.core.vector, pattern, form));
      } else {
        if (pattern instanceof cljs.core.Symbol) {
          return cljs.core._EQ_.call(null, form, pattern);
        } else {
          return pattern.call(null, form);
        }
      }
    }
  }
};
datascript.query.join_tuples = function join_tuples(t1, idxs1, t2, idxs2) {
  var l1 = idxs1.length;
  var l2 = idxs2.length;
  var res = new Array(l1 + l2);
  var n__4686__auto___20748 = l1;
  var i_20749 = 0;
  while (true) {
    if (i_20749 < n__4686__auto___20748) {
      res[i_20749] = t1[idxs1[i_20749]];
      var G__20750 = i_20749 + 1;
      i_20749 = G__20750;
      continue;
    } else {
    }
    break;
  }
  var n__4686__auto___20751 = l2;
  var i_20752 = 0;
  while (true) {
    if (i_20752 < n__4686__auto___20751) {
      res[l1 + i_20752] = t2[idxs2[i_20752]];
      var G__20753 = i_20752 + 1;
      i_20752 = G__20753;
      continue;
    } else {
    }
    break;
  }
  return res;
};
datascript.query.sum_rel = function sum_rel(a, b) {
  return new datascript.query.Relation((new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.concat.call(null, (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(b)), null, null, null);
};
datascript.query.prod_rel = function() {
  var prod_rel = null;
  var prod_rel__0 = function() {
    return new datascript.query.Relation(cljs.core.PersistentArrayMap.EMPTY, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[]], null), null, null, null);
  };
  var prod_rel__2 = function(rel1, rel2) {
    var attrs1 = cljs.core.keys.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel1));
    var attrs2 = cljs.core.keys.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel2));
    var idxs1 = cljs.core.to_array.call(null, cljs.core.map.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel1), attrs1));
    var idxs2 = cljs.core.to_array.call(null, cljs.core.map.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel2), attrs2));
    return new datascript.query.Relation(cljs.core.zipmap.call(null, cljs.core.concat.call(null, attrs1, attrs2), cljs.core.range.call(null)), function() {
      var iter__4555__auto__ = function(attrs1, attrs2, idxs1, idxs2) {
        return function iter__20760(s__20761) {
          return new cljs.core.LazySeq(null, function(attrs1, attrs2, idxs1, idxs2) {
            return function() {
              var s__20761__$1 = s__20761;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__20761__$1);
                if (temp__4126__auto__) {
                  var xs__4624__auto__ = temp__4126__auto__;
                  var t1 = cljs.core.first.call(null, xs__4624__auto__);
                  var iterys__4551__auto__ = function(s__20761__$1, t1, xs__4624__auto__, temp__4126__auto__, attrs1, attrs2, idxs1, idxs2) {
                    return function iter__20762(s__20763) {
                      return new cljs.core.LazySeq(null, function(s__20761__$1, t1, xs__4624__auto__, temp__4126__auto__, attrs1, attrs2, idxs1, idxs2) {
                        return function() {
                          var s__20763__$1 = s__20763;
                          while (true) {
                            var temp__4126__auto____$1 = cljs.core.seq.call(null, s__20763__$1);
                            if (temp__4126__auto____$1) {
                              var s__20763__$2 = temp__4126__auto____$1;
                              if (cljs.core.chunked_seq_QMARK_.call(null, s__20763__$2)) {
                                var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20763__$2);
                                var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                                var b__20765 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                                if (function() {
                                  var i__20764 = 0;
                                  while (true) {
                                    if (i__20764 < size__4554__auto__) {
                                      var t2 = cljs.core._nth.call(null, c__4553__auto__, i__20764);
                                      cljs.core.chunk_append.call(null, b__20765, datascript.query.join_tuples.call(null, t1, idxs1, t2, idxs2));
                                      var G__20766 = i__20764 + 1;
                                      i__20764 = G__20766;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20765), iter__20762.call(null, cljs.core.chunk_rest.call(null, s__20763__$2)));
                                } else {
                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20765), null);
                                }
                              } else {
                                var t2 = cljs.core.first.call(null, s__20763__$2);
                                return cljs.core.cons.call(null, datascript.query.join_tuples.call(null, t1, idxs1, t2, idxs2), iter__20762.call(null, cljs.core.rest.call(null, s__20763__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(s__20761__$1, t1, xs__4624__auto__, temp__4126__auto__, attrs1, attrs2, idxs1, idxs2), null, null);
                    };
                  }(s__20761__$1, t1, xs__4624__auto__, temp__4126__auto__, attrs1, attrs2, idxs1, idxs2);
                  var fs__4552__auto__ = cljs.core.seq.call(null, iterys__4551__auto__.call(null, (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(rel2)));
                  if (fs__4552__auto__) {
                    return cljs.core.concat.call(null, fs__4552__auto__, iter__20760.call(null, cljs.core.rest.call(null, s__20761__$1)));
                  } else {
                    var G__20767 = cljs.core.rest.call(null, s__20761__$1);
                    s__20761__$1 = G__20767;
                    continue;
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(attrs1, attrs2, idxs1, idxs2), null, null);
        };
      }(attrs1, attrs2, idxs1, idxs2);
      return iter__4555__auto__.call(null, (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(rel1));
    }(), null, null, null);
  };
  prod_rel = function(rel1, rel2) {
    switch(arguments.length) {
      case 0:
        return prod_rel__0.call(this);
      case 2:
        return prod_rel__2.call(this, rel1, rel2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prod_rel.cljs$core$IFn$_invoke$arity$0 = prod_rel__0;
  prod_rel.cljs$core$IFn$_invoke$arity$2 = prod_rel__2;
  return prod_rel;
}();
datascript.query._differ_QMARK_ = function() {
  var _differ_QMARK___delegate = function(xs) {
    var l = cljs.core.count.call(null, xs);
    return cljs.core.not_EQ_.call(null, cljs.core.take.call(null, l / 2, xs), cljs.core.drop.call(null, l / 2, xs));
  };
  var _differ_QMARK_ = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__20768__i = 0, G__20768__a = new Array(arguments.length - 0);
      while (G__20768__i < G__20768__a.length) {
        G__20768__a[G__20768__i] = arguments[G__20768__i + 0];
        ++G__20768__i;
      }
      xs = new cljs.core.IndexedSeq(G__20768__a, 0);
    }
    return _differ_QMARK___delegate.call(this, xs);
  };
  _differ_QMARK_.cljs$lang$maxFixedArity = 0;
  _differ_QMARK_.cljs$lang$applyTo = function(arglist__20769) {
    var xs = cljs.core.seq(arglist__20769);
    return _differ_QMARK___delegate(xs);
  };
  _differ_QMARK_.cljs$core$IFn$_invoke$arity$variadic = _differ_QMARK___delegate;
  return _differ_QMARK_;
}();
datascript.query._get_else = function _get_else(db, e, a, else_val) {
  var temp__4124__auto__ = cljs.core.first.call(null, datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a], null)));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var datom = temp__4124__auto__;
    return datom.v;
  } else {
    return else_val;
  }
};
datascript.query._get_some = function() {
  var _get_some__delegate = function(db, e, as) {
    return cljs.core.reduce.call(null, function(_, a) {
      var temp__4126__auto__ = cljs.core.first.call(null, datascript.core._search.call(null, db, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, a], null)));
      if (cljs.core.truth_(temp__4126__auto__)) {
        var datom = temp__4126__auto__;
        return cljs.core.reduced.call(null, datom.v);
      } else {
        return null;
      }
    }, null, as);
  };
  var _get_some = function(db, e, var_args) {
    var as = null;
    if (arguments.length > 2) {
      var G__20770__i = 0, G__20770__a = new Array(arguments.length - 2);
      while (G__20770__i < G__20770__a.length) {
        G__20770__a[G__20770__i] = arguments[G__20770__i + 2];
        ++G__20770__i;
      }
      as = new cljs.core.IndexedSeq(G__20770__a, 0);
    }
    return _get_some__delegate.call(this, db, e, as);
  };
  _get_some.cljs$lang$maxFixedArity = 2;
  _get_some.cljs$lang$applyTo = function(arglist__20771) {
    var db = cljs.core.first(arglist__20771);
    arglist__20771 = cljs.core.next(arglist__20771);
    var e = cljs.core.first(arglist__20771);
    var as = cljs.core.rest(arglist__20771);
    return _get_some__delegate(db, e, as);
  };
  _get_some.cljs$core$IFn$_invoke$arity$variadic = _get_some__delegate;
  return _get_some;
}();
datascript.query._missing_QMARK_ = function _missing_QMARK_(db, e, a) {
  return cljs.core.get.call(null, datascript.impl.entity.entity.call(null, db, e), a) == null;
};
datascript.query.built_ins = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, "true?", "true?", -1600332395, null), new cljs.core.Symbol(null, "odd?", "odd?", -1458588199, null), new cljs.core.Symbol(null, "get-else", "get-else", 1312024065, null), new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "get-some", "get-some", 409442058, null), new cljs.core.Symbol(null, "nil?", 
"nil?", 1612038930, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null), new cljs.core.Symbol(null, "/", "/", -1371932971, null), new cljs.core.Symbol(null, "quot", "quot", -1125214196, null), new cljs.core.Symbol(null, "false?", "false?", -1522377573, null), new cljs.core.Symbol(null, "identity", "identity", -1007039734, null), new cljs.core.Symbol(null, "-differ?", "-differ?", 1465687357, null), new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "+", "+", -740910886, null), new cljs.core.Symbol(null, "missing?", "missing?", -1710383910, null), new cljs.core.Symbol(null, "ground", "ground", -1460862835, null), new cljs.core.Symbol(null, "\x3d\x3d", "\x3d\x3d", -234118149, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "*", "*", 345799209, null), new cljs.core.Symbol(null, 
"zero?", "zero?", 325758897, null), new cljs.core.Symbol(null, "!\x3d", "!\x3d", -201205829, null), new cljs.core.Symbol(null, "dec", "dec", -766002333, null), new cljs.core.Symbol(null, "vector", "vector", -751469611, null), new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), new cljs.core.Symbol(null, "-", "-", -471816912, null), new cljs.core.Symbol(null, "pos?", 
"pos?", -244377722, null), new cljs.core.Symbol(null, "mod", "mod", 1510044207, null), new cljs.core.Symbol(null, "rem", "rem", 664046770, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), new cljs.core.Symbol(null, "neg?", "neg?", -1902175577, null)], [cljs.core.true_QMARK_, cljs.core.odd_QMARK_, datascript.query._get_else, cljs.core._GT__EQ_, cljs.core._GT_, datascript.query._get_some, cljs.core.nil_QMARK_, cljs.core.inc, cljs.core._SLASH_, cljs.core.quot, cljs.core.false_QMARK_, 
cljs.core.identity, datascript.query._differ_QMARK_, cljs.core._LT__EQ_, cljs.core._EQ_, cljs.core.min, cljs.core._PLUS_, datascript.query._missing_QMARK_, cljs.core.identity, cljs.core._EQ__EQ_, cljs.core.max, cljs.core._STAR_, cljs.core.zero_QMARK_, cljs.core.not_EQ_, cljs.core.dec, cljs.core.vector, cljs.core.not_EQ_, cljs.core.str, cljs.core._LT_, cljs.core._, cljs.core.pos_QMARK_, cljs.core.mod, cljs.core.rem, cljs.core.even_QMARK_, cljs.core.neg_QMARK_]);
datascript.query.built_in_aggregates = function() {
  var sum = function sum(coll) {
    return cljs.core.reduce.call(null, cljs.core._PLUS_, 0, coll);
  };
  var avg = function avg(coll) {
    return sum.call(null, coll) / cljs.core.count.call(null, coll);
  };
  var median = function median(coll) {
    var terms = cljs.core.sort.call(null, coll);
    var size = cljs.core.count.call(null, coll);
    var med = size >> 1;
    var G__20783 = cljs.core.nth.call(null, terms, med);
    var G__20783__$1 = cljs.core.even_QMARK_.call(null, size) ? (G__20783 + cljs.core.nth.call(null, terms, med - 1)) / 2 : G__20783;
    return G__20783__$1;
  };
  var variance = function variance(coll) {
    var mean = avg.call(null, coll);
    var sum__$1 = sum.call(null, function() {
      var iter__4555__auto__ = function(mean) {
        return function iter__20788(s__20789) {
          return new cljs.core.LazySeq(null, function(mean) {
            return function() {
              var s__20789__$1 = s__20789;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__20789__$1);
                if (temp__4126__auto__) {
                  var s__20789__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__20789__$2)) {
                    var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20789__$2);
                    var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                    var b__20791 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                    if (function() {
                      var i__20790 = 0;
                      while (true) {
                        if (i__20790 < size__4554__auto__) {
                          var x = cljs.core._nth.call(null, c__4553__auto__, i__20790);
                          var delta = x - mean;
                          cljs.core.chunk_append.call(null, b__20791, delta * delta);
                          var G__20792 = i__20790 + 1;
                          i__20790 = G__20792;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20791), iter__20788.call(null, cljs.core.chunk_rest.call(null, s__20789__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20791), null);
                    }
                  } else {
                    var x = cljs.core.first.call(null, s__20789__$2);
                    var delta = x - mean;
                    return cljs.core.cons.call(null, delta * delta, iter__20788.call(null, cljs.core.rest.call(null, s__20789__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(mean), null, null);
        };
      }(mean);
      return iter__4555__auto__.call(null, coll);
    }());
    return sum__$1 / cljs.core.count.call(null, coll);
  };
  var stddev = function stddev(coll) {
    return Math.sqrt(variance.call(null, coll));
  };
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, "variance", "variance", -1522424942, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "median", "median", -2084869638, null), new cljs.core.Symbol(null, "sum", "sum", 1777518341, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "count-distinct", "count-distinct", -1566572514, 
  null), new cljs.core.Symbol(null, "distinct", "distinct", -148347594, null), new cljs.core.Symbol(null, "avg", "avg", 1837937727, null), new cljs.core.Symbol(null, "stddev", "stddev", 775056588, null), new cljs.core.Symbol(null, "rand", "rand", -1745930995, null), new cljs.core.Symbol(null, "sample", "sample", 1719555128, null)], [variance, cljs.core.count, median, sum, function() {
    var G__20793 = null;
    var G__20793__1 = function(coll) {
      return cljs.core.reduce.call(null, function(acc, x) {
        if (datascript.core.cmp_val.call(null, x, acc) < 0) {
          return x;
        } else {
          return acc;
        }
      }, cljs.core.first.call(null, coll), cljs.core.next.call(null, coll));
    };
    var G__20793__2 = function(n, coll) {
      return cljs.core.vec.call(null, cljs.core.reduce.call(null, function(acc, x) {
        if (cljs.core.count.call(null, acc) < n) {
          return cljs.core.sort.call(null, datascript.core.cmp_val, cljs.core.conj.call(null, acc, x));
        } else {
          if (datascript.core.cmp_val.call(null, x, cljs.core.last.call(null, acc)) < 0) {
            return cljs.core.sort.call(null, datascript.core.cmp_val, cljs.core.conj.call(null, cljs.core.butlast.call(null, acc), x));
          } else {
            return acc;
          }
        }
      }, cljs.core.PersistentVector.EMPTY, coll));
    };
    G__20793 = function(n, coll) {
      switch(arguments.length) {
        case 1:
          return G__20793__1.call(this, n);
        case 2:
          return G__20793__2.call(this, n, coll);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20793.cljs$core$IFn$_invoke$arity$1 = G__20793__1;
    G__20793.cljs$core$IFn$_invoke$arity$2 = G__20793__2;
    return G__20793;
  }(), function() {
    var G__20794 = null;
    var G__20794__1 = function(coll) {
      return cljs.core.reduce.call(null, function(acc, x) {
        if (datascript.core.cmp_val.call(null, x, acc) > 0) {
          return x;
        } else {
          return acc;
        }
      }, cljs.core.first.call(null, coll), cljs.core.next.call(null, coll));
    };
    var G__20794__2 = function(n, coll) {
      return cljs.core.vec.call(null, cljs.core.reduce.call(null, function(acc, x) {
        if (cljs.core.count.call(null, acc) < n) {
          return cljs.core.sort.call(null, datascript.core.cmp_val, cljs.core.conj.call(null, acc, x));
        } else {
          if (datascript.core.cmp_val.call(null, x, cljs.core.first.call(null, acc)) > 0) {
            return cljs.core.sort.call(null, datascript.core.cmp_val, cljs.core.conj.call(null, cljs.core.next.call(null, acc), x));
          } else {
            return acc;
          }
        }
      }, cljs.core.PersistentVector.EMPTY, coll));
    };
    G__20794 = function(n, coll) {
      switch(arguments.length) {
        case 1:
          return G__20794__1.call(this, n);
        case 2:
          return G__20794__2.call(this, n, coll);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20794.cljs$core$IFn$_invoke$arity$1 = G__20794__1;
    G__20794.cljs$core$IFn$_invoke$arity$2 = G__20794__2;
    return G__20794;
  }(), function(coll) {
    return cljs.core.count.call(null, cljs.core.distinct.call(null, coll));
  }, cljs.core.comp.call(null, cljs.core.vec, cljs.core.distinct), avg, stddev, function() {
    var G__20795 = null;
    var G__20795__1 = function(coll) {
      return cljs.core.rand_nth.call(null, coll);
    };
    var G__20795__2 = function(n, coll) {
      return cljs.core.vec.call(null, cljs.core.repeatedly.call(null, n, function() {
        return cljs.core.rand_nth.call(null, coll);
      }));
    };
    G__20795 = function(n, coll) {
      switch(arguments.length) {
        case 1:
          return G__20795__1.call(this, n);
        case 2:
          return G__20795__2.call(this, n, coll);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20795.cljs$core$IFn$_invoke$arity$1 = G__20795__1;
    G__20795.cljs$core$IFn$_invoke$arity$2 = G__20795__2;
    return G__20795;
  }(), function(n, coll) {
    return cljs.core.vec.call(null, cljs.core.take.call(null, n, cljs.core.shuffle.call(null, coll)));
  }]);
}();
datascript.query.in__GT_rel = function() {
  var in__GT_rel = null;
  var in__GT_rel__1 = function(form) {
    var attrs = function() {
      var form__$1 = form;
      var form__$2 = cljs.core.flatten.call(null, form__$1);
      var form__$3 = cljs.core.filter.call(null, function(form__$1, form__$2) {
        return function(p1__20796_SHARP_) {
          return p1__20796_SHARP_ instanceof cljs.core.Symbol && cljs.core.not_EQ_.call(null, new cljs.core.Symbol(null, "...", "...", -1926939749, null), p1__20796_SHARP_) && cljs.core.not_EQ_.call(null, new cljs.core.Symbol(null, "_", "_", -1201019570, null), p1__20796_SHARP_);
        };
      }(form__$1, form__$2), form__$2);
      var form__$4 = cljs.core.zipmap.call(null, form__$3, cljs.core.range.call(null));
      return form__$4;
    }();
    return new datascript.query.Relation(attrs, cljs.core.PersistentVector.EMPTY, null, null, null);
  };
  var in__GT_rel__2 = function(form, value) {
    var pred__20803 = datascript.query.looks_like_QMARK_;
    var expr__20804 = form;
    if (cljs.core.truth_(pred__20803.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "...", "...", -1926939749, null)], null), expr__20804))) {
      if (cljs.core.empty_QMARK_.call(null, value)) {
        return in__GT_rel.call(null, form);
      } else {
        return cljs.core.reduce.call(null, datascript.query.sum_rel, cljs.core.map.call(null, function(pred__20803, expr__20804) {
          return function(p1__20797_SHARP_) {
            return in__GT_rel.call(null, cljs.core.first.call(null, form), p1__20797_SHARP_);
          };
        }(pred__20803, expr__20804), value));
      }
    } else {
      if (cljs.core.truth_(pred__20803.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", 345799209, null)], null)], null), expr__20804))) {
        return in__GT_rel.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, form), new cljs.core.Symbol(null, "...", "...", -1926939749, null)], null), value);
      } else {
        if (cljs.core.truth_(pred__20803.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", 345799209, null)], null), expr__20804))) {
          return cljs.core.reduce.call(null, datascript.query.prod_rel, cljs.core.map.call(null, function(pred__20803, expr__20804) {
            return function(p1__20798_SHARP_, p2__20799_SHARP_) {
              return in__GT_rel.call(null, p1__20798_SHARP_, p2__20799_SHARP_);
            };
          }(pred__20803, expr__20804), form, value));
        } else {
          if (cljs.core.truth_(pred__20803.call(null, new cljs.core.Symbol(null, "_", "_", -1201019570, null), expr__20804))) {
            return new datascript.query.Relation(new cljs.core.PersistentArrayMap.fromArray([form, 0], true, false), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[value]], null), null, null, null);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__20804)].join(""));
          }
        }
      }
    }
  };
  in__GT_rel = function(form, value) {
    switch(arguments.length) {
      case 1:
        return in__GT_rel__1.call(this, form);
      case 2:
        return in__GT_rel__2.call(this, form, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  in__GT_rel.cljs$core$IFn$_invoke$arity$1 = in__GT_rel__1;
  in__GT_rel.cljs$core$IFn$_invoke$arity$2 = in__GT_rel__2;
  return in__GT_rel;
}();
datascript.query.parse_rules = function parse_rules(rules) {
  var rules__$1 = typeof rules === "string" ? cljs.reader.read_string.call(null, rules) : rules;
  return cljs.core.group_by.call(null, cljs.core.ffirst, rules__$1);
};
datascript.query.parse_in = function parse_in(context, p__20806) {
  var vec__20808 = p__20806;
  var in$ = cljs.core.nth.call(null, vec__20808, 0, null);
  var value = cljs.core.nth.call(null, vec__20808, 1, null);
  if (datascript.query.source_QMARK_.call(null, in$)) {
    return cljs.core.update_in.call(null, context, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sources", "sources", -321166424)], null), cljs.core.assoc, in$, value);
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), in$)) {
      return cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "rules", "rules", 1198912366), datascript.query.parse_rules.call(null, value));
    } else {
      return cljs.core.update_in.call(null, context, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185)], null), cljs.core.conj, datascript.query.in__GT_rel.call(null, in$, value));
    }
  }
};
datascript.query.parse_ins = function parse_ins(context, ins, values) {
  return cljs.core.reduce.call(null, datascript.query.parse_in, context, cljs.core.map.call(null, cljs.core.vector, ins, values));
};
datascript.query.tuple_key_fn = function tuple_key_fn(idxs) {
  if (cljs.core.count.call(null, idxs) === 1) {
    var idx = cljs.core.first.call(null, idxs);
    return function(idx) {
      return function(tuple) {
        return tuple[idx];
      };
    }(idx);
  } else {
    var idxs__$1 = cljs.core.to_array.call(null, idxs);
    return function(idxs__$1) {
      return function(tuple) {
        return cljs.core.list_STAR_.call(null, idxs__$1.map(function(idxs__$1) {
          return function(p1__20809_SHARP_) {
            return tuple[p1__20809_SHARP_];
          };
        }(idxs__$1)));
      };
    }(idxs__$1);
  }
};
datascript.query.hash_attrs = function hash_attrs(idxs, tuples) {
  var key_fn = datascript.query.tuple_key_fn.call(null, idxs);
  var tuples__$1 = tuples;
  var hash_table = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while (true) {
    var temp__4124__auto__ = cljs.core.first.call(null, tuples__$1);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var tuple = temp__4124__auto__;
      var key = key_fn.call(null, tuple);
      var G__20810 = cljs.core.next.call(null, tuples__$1);
      var G__20811 = cljs.core.assoc_BANG_.call(null, hash_table, key, cljs.core.conj.call(null, cljs.core.get.call(null, hash_table, key, cljs.core.List.EMPTY), tuple));
      tuples__$1 = G__20810;
      hash_table = G__20811;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, hash_table);
    }
    break;
  }
};
datascript.query.hash_join = function hash_join(rel1, rel2) {
  var tuples1 = (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(rel1);
  var tuples2 = (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(rel2);
  var attrs1 = (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel1);
  var attrs2 = (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel2);
  var common_attrs = cljs.core.vec.call(null, datascript.query.intersect_keys.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel1), (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel2)));
  var common_idxs1 = cljs.core.map.call(null, attrs1, common_attrs);
  var common_idxs2 = cljs.core.map.call(null, attrs2, common_attrs);
  var keep_attrs1 = cljs.core.keys.call(null, attrs1);
  var keep_attrs2 = cljs.core.vec.call(null, clojure.set.difference.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, attrs2)), cljs.core.set.call(null, cljs.core.keys.call(null, attrs1))));
  var keep_idxs1 = cljs.core.to_array.call(null, cljs.core.map.call(null, attrs1, keep_attrs1));
  var keep_idxs2 = cljs.core.to_array.call(null, cljs.core.map.call(null, attrs2, keep_attrs2));
  var hash = datascript.query.hash_attrs.call(null, common_idxs1, tuples1);
  var key_fn = datascript.query.tuple_key_fn.call(null, common_idxs2);
  var new_tuples = cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(tuples1, tuples2, attrs1, attrs2, common_attrs, common_idxs1, common_idxs2, keep_attrs1, keep_attrs2, keep_idxs1, keep_idxs2, hash, key_fn) {
    return function(acc, tuple2) {
      var key = key_fn.call(null, tuple2);
      var temp__4124__auto__ = cljs.core.get.call(null, hash, key);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var tuples1__$1 = temp__4124__auto__;
        return cljs.core.reduce.call(null, function(tuples1__$1, temp__4124__auto__, key, tuples1, tuples2, attrs1, attrs2, common_attrs, common_idxs1, common_idxs2, keep_attrs1, keep_attrs2, keep_idxs1, keep_idxs2, hash, key_fn) {
          return function(acc__$1, tuple1) {
            return cljs.core.conj_BANG_.call(null, acc__$1, datascript.query.join_tuples.call(null, tuple1, keep_idxs1, tuple2, keep_idxs2));
          };
        }(tuples1__$1, temp__4124__auto__, key, tuples1, tuples2, attrs1, attrs2, common_attrs, common_idxs1, common_idxs2, keep_attrs1, keep_attrs2, keep_idxs1, keep_idxs2, hash, key_fn), acc, tuples1__$1);
      } else {
        return acc;
      }
    };
  }(tuples1, tuples2, attrs1, attrs2, common_attrs, common_idxs1, common_idxs2, keep_attrs1, keep_attrs2, keep_idxs1, keep_idxs2, hash, key_fn), cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), tuples2));
  return new datascript.query.Relation(cljs.core.zipmap.call(null, cljs.core.concat.call(null, keep_attrs1, keep_attrs2), cljs.core.range.call(null)), new_tuples, null, null, null);
};
datascript.query.lookup_pattern_db = function lookup_pattern_db(db, pattern) {
  var search_pattern = cljs.core.mapv.call(null, function(p1__20812_SHARP_) {
    if (p1__20812_SHARP_ instanceof cljs.core.Symbol) {
      return null;
    } else {
      return p1__20812_SHARP_;
    }
  }, pattern);
  var datoms = datascript.core._search.call(null, db, search_pattern);
  var attr__GT_prop = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(search_pattern, datoms) {
    return function(p__20815) {
      var vec__20816 = p__20815;
      var s = cljs.core.nth.call(null, vec__20816, 0, null);
      var _ = cljs.core.nth.call(null, vec__20816, 1, null);
      return datascript.query.free_var_QMARK_.call(null, s);
    };
  }(search_pattern, datoms), cljs.core.map.call(null, cljs.core.vector, pattern, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["e", "a", "v", "tx"], null))));
  return new datascript.query.Relation(attr__GT_prop, datoms, null, null, null);
};
datascript.query.matches_pattern_QMARK_ = function matches_pattern_QMARK_(pattern, tuple) {
  var tuple__$1 = tuple;
  var pattern__$1 = pattern;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3787__auto__ = tuple__$1;
      if (cljs.core.truth_(and__3787__auto__)) {
        return pattern__$1;
      } else {
        return and__3787__auto__;
      }
    }())) {
      var t = cljs.core.first.call(null, tuple__$1);
      var p = cljs.core.first.call(null, pattern__$1);
      if (p instanceof cljs.core.Symbol || cljs.core._EQ_.call(null, t, p)) {
        var G__20817 = cljs.core.next.call(null, tuple__$1);
        var G__20818 = cljs.core.next.call(null, pattern__$1);
        tuple__$1 = G__20817;
        pattern__$1 = G__20818;
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
datascript.query.lookup_pattern_coll = function lookup_pattern_coll(coll, pattern) {
  var data = cljs.core.filter.call(null, function(p1__20819_SHARP_) {
    return datascript.query.matches_pattern_QMARK_.call(null, pattern, p1__20819_SHARP_);
  }, coll);
  var attr__GT_idx = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(data) {
    return function(p__20822) {
      var vec__20823 = p__20822;
      var s = cljs.core.nth.call(null, vec__20823, 0, null);
      var _ = cljs.core.nth.call(null, vec__20823, 1, null);
      return datascript.query.free_var_QMARK_.call(null, s);
    };
  }(data), cljs.core.map.call(null, cljs.core.vector, pattern, cljs.core.range.call(null))));
  return new datascript.query.Relation(attr__GT_idx, cljs.core.map.call(null, cljs.core.to_array, data), null, null, null);
};
datascript.query.lookup_pattern = function lookup_pattern(context, clause) {
  var vec__20826 = datascript.query.source_QMARK_.call(null, cljs.core.first.call(null, clause)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, clause), cljs.core.next.call(null, clause)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1580747756, null), clause], null);
  var source_sym = cljs.core.nth.call(null, vec__20826, 0, null);
  var pattern = cljs.core.nth.call(null, vec__20826, 1, null);
  var source = cljs.core.get.call(null, (new cljs.core.Keyword(null, "sources", "sources", -321166424)).cljs$core$IFn$_invoke$arity$1(context), source_sym);
  if (function() {
    var G__20827 = source;
    if (G__20827) {
      var bit__4480__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3799__auto__ = bit__4480__auto__;
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return G__20827.datascript$core$ISearch$;
        }
      }())) {
        return true;
      } else {
        if (!G__20827.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, datascript.core.ISearch, G__20827);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, datascript.core.ISearch, G__20827);
    }
  }()) {
    return datascript.query.lookup_pattern_db.call(null, source, pattern);
  } else {
    return datascript.query.lookup_pattern_coll.call(null, source, pattern);
  }
};
datascript.query.collapse_rels = function collapse_rels(rels, new_rel) {
  var rels__$1 = rels;
  var new_rel__$1 = new_rel;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var temp__4124__auto__ = cljs.core.first.call(null, rels__$1);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var rel = temp__4124__auto__;
      if (cljs.core.truth_(cljs.core.not_empty.call(null, datascript.query.intersect_keys.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(new_rel__$1), (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel))))) {
        var G__20828 = cljs.core.next.call(null, rels__$1);
        var G__20829 = datascript.query.hash_join.call(null, rel, new_rel__$1);
        var G__20830 = acc;
        rels__$1 = G__20828;
        new_rel__$1 = G__20829;
        acc = G__20830;
        continue;
      } else {
        var G__20831 = cljs.core.next.call(null, rels__$1);
        var G__20832 = new_rel__$1;
        var G__20833 = cljs.core.conj.call(null, acc, rel);
        rels__$1 = G__20831;
        new_rel__$1 = G__20832;
        acc = G__20833;
        continue;
      }
    } else {
      return cljs.core.conj.call(null, acc, new_rel__$1);
    }
    break;
  }
};
datascript.query.context_resolve_val = function context_resolve_val(context, sym) {
  var temp__4126__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__20834_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(p1__20834_SHARP_), sym);
  }, (new cljs.core.Keyword(null, "rels", "rels", 1770187185)).cljs$core$IFn$_invoke$arity$1(context)));
  if (cljs.core.truth_(temp__4126__auto__)) {
    var rel = temp__4126__auto__;
    var temp__4126__auto____$1 = cljs.core.first.call(null, (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(rel));
    if (cljs.core.truth_(temp__4126__auto____$1)) {
      var tuple = temp__4126__auto____$1;
      return tuple[(new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel).call(null, sym)];
    } else {
      return null;
    }
  } else {
    return null;
  }
};
datascript.query.rel_contains_attrs_QMARK_ = function rel_contains_attrs_QMARK_(rel, attrs) {
  return!cljs.core.empty_QMARK_.call(null, clojure.set.intersection.call(null, cljs.core.set.call(null, attrs), cljs.core.set.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel)))));
};
datascript.query.rel_prod_by_attrs = function rel_prod_by_attrs(context, attrs) {
  var rels = cljs.core.filter.call(null, function(p1__20835_SHARP_) {
    return datascript.query.rel_contains_attrs_QMARK_.call(null, p1__20835_SHARP_, attrs);
  }, (new cljs.core.Keyword(null, "rels", "rels", 1770187185)).cljs$core$IFn$_invoke$arity$1(context));
  var production = cljs.core.reduce.call(null, datascript.query.prod_rel, rels);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.call(null, context, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185)], null), function(rels, production) {
    return function(p1__20836_SHARP_) {
      return cljs.core.remove.call(null, cljs.core.set.call(null, rels), p1__20836_SHARP_);
    };
  }(rels, production)), production], null);
};
datascript.query._call_fn = function _call_fn(context, rel, f, args) {
  return function(tuple) {
    var resolved_args = cljs.core.map.call(null, function(p1__20837_SHARP_) {
      if (p1__20837_SHARP_ instanceof cljs.core.Symbol) {
        var or__3799__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "sources", "sources", -321166424)).cljs$core$IFn$_invoke$arity$1(context), p1__20837_SHARP_);
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return tuple[cljs.core.get.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel), p1__20837_SHARP_)];
        }
      } else {
        return p1__20837_SHARP_;
      }
    }, args);
    return cljs.core.apply.call(null, f, resolved_args);
  };
};
datascript.query.filter_by_pred = function filter_by_pred(context, clause) {
  var vec__20842 = clause;
  var vec__20843 = cljs.core.nth.call(null, vec__20842, 0, null);
  var f = cljs.core.nth.call(null, vec__20843, 0, null);
  var args = cljs.core.nthnext.call(null, vec__20843, 1);
  var pred = function() {
    var or__3799__auto__ = cljs.core.get.call(null, datascript.query.built_ins, f);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return datascript.query.context_resolve_val.call(null, context, f);
    }
  }();
  var vec__20844 = datascript.query.rel_prod_by_attrs.call(null, context, cljs.core.filter.call(null, cljs.core.symbol_QMARK_, args));
  var context__$1 = cljs.core.nth.call(null, vec__20844, 0, null);
  var production = cljs.core.nth.call(null, vec__20844, 1, null);
  var new_rel = cljs.core.truth_(pred) ? function() {
    var tuple_pred = datascript.query._call_fn.call(null, context__$1, production, pred, args);
    return cljs.core.update_in.call(null, production, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tuples", "tuples", -676032639)], null), function(tuple_pred, vec__20842, vec__20843, f, args, pred, vec__20844, context__$1, production) {
      return function(p1__20838_SHARP_) {
        return cljs.core.filter.call(null, tuple_pred, p1__20838_SHARP_);
      };
    }(tuple_pred, vec__20842, vec__20843, f, args, pred, vec__20844, context__$1, production));
  }() : cljs.core.assoc.call(null, production, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tuples", "tuples", -676032639)], null), cljs.core.PersistentVector.EMPTY);
  return cljs.core.update_in.call(null, context__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185)], null), cljs.core.conj, new_rel);
};
datascript.query.bind_by_fn = function bind_by_fn(context, clause) {
  var vec__20849 = clause;
  var vec__20850 = cljs.core.nth.call(null, vec__20849, 0, null);
  var f = cljs.core.nth.call(null, vec__20850, 0, null);
  var args = cljs.core.nthnext.call(null, vec__20850, 1);
  var out = cljs.core.nth.call(null, vec__20849, 1, null);
  var fun = function() {
    var or__3799__auto__ = cljs.core.get.call(null, datascript.query.built_ins, f);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return datascript.query.context_resolve_val.call(null, context, f);
    }
  }();
  var vec__20851 = datascript.query.rel_prod_by_attrs.call(null, context, cljs.core.filter.call(null, cljs.core.symbol_QMARK_, args));
  var context__$1 = cljs.core.nth.call(null, vec__20851, 0, null);
  var production = cljs.core.nth.call(null, vec__20851, 1, null);
  var new_rel = cljs.core.truth_(fun) ? function() {
    var tuple_fn = datascript.query._call_fn.call(null, context__$1, production, fun, args);
    var temp__4124__auto__ = cljs.core.not_empty.call(null, (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(production));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var tuples = temp__4124__auto__;
      return cljs.core.reduce.call(null, datascript.query.sum_rel, cljs.core.map.call(null, function(tuples, temp__4124__auto__, tuple_fn, vec__20849, vec__20850, f, args, out, fun, vec__20851, context__$1, production) {
        return function(p1__20845_SHARP_) {
          var val = tuple_fn.call(null, p1__20845_SHARP_);
          var rel = datascript.query.in__GT_rel.call(null, out, val);
          return datascript.query.prod_rel.call(null, new datascript.query.Relation((new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(production), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20845_SHARP_], null), null, null, null), rel);
        };
      }(tuples, temp__4124__auto__, tuple_fn, vec__20849, vec__20850, f, args, out, fun, vec__20851, context__$1, production), tuples));
    } else {
      return datascript.query.prod_rel.call(null, production, datascript.query.in__GT_rel.call(null, out));
    }
  }() : datascript.query.prod_rel.call(null, cljs.core.assoc.call(null, production, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tuples", "tuples", -676032639)], null), cljs.core.PersistentVector.EMPTY), datascript.query.in__GT_rel.call(null, out));
  return cljs.core.update_in.call(null, context__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185)], null), cljs.core.conj, new_rel);
};
datascript.query.rule_QMARK_ = function rule_QMARK_(context, clause) {
  return cljs.core.sequential_QMARK_.call(null, clause) && cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "rules", "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(context), datascript.query.source_QMARK_.call(null, cljs.core.first.call(null, clause)) ? cljs.core.second.call(null, clause) : cljs.core.first.call(null, clause));
};
datascript.query.rule_seqid = cljs.core.atom.call(null, 0);
datascript.query.expand_rule = function expand_rule(clause, context, used_args) {
  var vec__20866 = clause;
  var rule = cljs.core.nth.call(null, vec__20866, 0, null);
  var call_args = cljs.core.nthnext.call(null, vec__20866, 1);
  var seqid = cljs.core.swap_BANG_.call(null, datascript.query.rule_seqid, cljs.core.inc);
  var branches = cljs.core.get.call(null, (new cljs.core.Keyword(null, "rules", "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(context), rule);
  var iter__4555__auto__ = function(vec__20866, rule, call_args, seqid, branches) {
    return function iter__20867(s__20868) {
      return new cljs.core.LazySeq(null, function(vec__20866, rule, call_args, seqid, branches) {
        return function() {
          var s__20868__$1 = s__20868;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__20868__$1);
            if (temp__4126__auto__) {
              var s__20868__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20868__$2)) {
                var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20868__$2);
                var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                var b__20870 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                if (function() {
                  var i__20869 = 0;
                  while (true) {
                    if (i__20869 < size__4554__auto__) {
                      var branch = cljs.core._nth.call(null, c__4553__auto__, i__20869);
                      var vec__20875 = branch;
                      var vec__20876 = cljs.core.nth.call(null, vec__20875, 0, null);
                      var _ = cljs.core.nth.call(null, vec__20876, 0, null);
                      var rule_args = cljs.core.nthnext.call(null, vec__20876, 1);
                      var clauses = cljs.core.nthnext.call(null, vec__20875, 1);
                      var replacements = cljs.core.zipmap.call(null, rule_args, call_args);
                      cljs.core.chunk_append.call(null, b__20870, clojure.walk.postwalk.call(null, function(i__20869, vec__20875, vec__20876, _, rule_args, clauses, replacements, branch, c__4553__auto__, size__4554__auto__, b__20870, s__20868__$2, temp__4126__auto__, vec__20866, rule, call_args, seqid, branches) {
                        return function(p1__20852_SHARP_) {
                          if (datascript.query.free_var_QMARK_.call(null, p1__20852_SHARP_)) {
                            var or__3799__auto__ = replacements.call(null, p1__20852_SHARP_);
                            if (cljs.core.truth_(or__3799__auto__)) {
                              return or__3799__auto__;
                            } else {
                              return cljs.core.symbol.call(null, [cljs.core.str(cljs.core.name.call(null, p1__20852_SHARP_)), cljs.core.str("__auto__"), cljs.core.str(seqid)].join(""));
                            }
                          } else {
                            return p1__20852_SHARP_;
                          }
                        };
                      }(i__20869, vec__20875, vec__20876, _, rule_args, clauses, replacements, branch, c__4553__auto__, size__4554__auto__, b__20870, s__20868__$2, temp__4126__auto__, vec__20866, rule, call_args, seqid, branches), clauses));
                      var G__20879 = i__20869 + 1;
                      i__20869 = G__20879;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20870), iter__20867.call(null, cljs.core.chunk_rest.call(null, s__20868__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20870), null);
                }
              } else {
                var branch = cljs.core.first.call(null, s__20868__$2);
                var vec__20877 = branch;
                var vec__20878 = cljs.core.nth.call(null, vec__20877, 0, null);
                var _ = cljs.core.nth.call(null, vec__20878, 0, null);
                var rule_args = cljs.core.nthnext.call(null, vec__20878, 1);
                var clauses = cljs.core.nthnext.call(null, vec__20877, 1);
                var replacements = cljs.core.zipmap.call(null, rule_args, call_args);
                return cljs.core.cons.call(null, clojure.walk.postwalk.call(null, function(vec__20877, vec__20878, _, rule_args, clauses, replacements, branch, s__20868__$2, temp__4126__auto__, vec__20866, rule, call_args, seqid, branches) {
                  return function(p1__20852_SHARP_) {
                    if (datascript.query.free_var_QMARK_.call(null, p1__20852_SHARP_)) {
                      var or__3799__auto__ = replacements.call(null, p1__20852_SHARP_);
                      if (cljs.core.truth_(or__3799__auto__)) {
                        return or__3799__auto__;
                      } else {
                        return cljs.core.symbol.call(null, [cljs.core.str(cljs.core.name.call(null, p1__20852_SHARP_)), cljs.core.str("__auto__"), cljs.core.str(seqid)].join(""));
                      }
                    } else {
                      return p1__20852_SHARP_;
                    }
                  };
                }(vec__20877, vec__20878, _, rule_args, clauses, replacements, branch, s__20868__$2, temp__4126__auto__, vec__20866, rule, call_args, seqid, branches), clauses), iter__20867.call(null, cljs.core.rest.call(null, s__20868__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(vec__20866, rule, call_args, seqid, branches), null, null);
    };
  }(vec__20866, rule, call_args, seqid, branches);
  return iter__4555__auto__.call(null, branches);
};
datascript.query.remove_pairs = function remove_pairs(xs, ys) {
  var pairs = cljs.core.remove.call(null, function(p__20882) {
    var vec__20883 = p__20882;
    var x = cljs.core.nth.call(null, vec__20883, 0, null);
    var y = cljs.core.nth.call(null, vec__20883, 1, null);
    return cljs.core._EQ_.call(null, x, y);
  }, cljs.core.map.call(null, cljs.core.vector, xs, ys));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.call(null, cljs.core.first, pairs), cljs.core.map.call(null, cljs.core.second, pairs)], null);
};
datascript.query.rule_gen_guards = function rule_gen_guards(rule_clause, used_args) {
  var vec__20893 = rule_clause;
  var rule = cljs.core.nth.call(null, vec__20893, 0, null);
  var call_args = cljs.core.nthnext.call(null, vec__20893, 1);
  var prev_call_args = cljs.core.get.call(null, used_args, rule);
  var iter__4555__auto__ = function(vec__20893, rule, call_args, prev_call_args) {
    return function iter__20894(s__20895) {
      return new cljs.core.LazySeq(null, function(vec__20893, rule, call_args, prev_call_args) {
        return function() {
          var s__20895__$1 = s__20895;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__20895__$1);
            if (temp__4126__auto__) {
              var s__20895__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20895__$2)) {
                var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20895__$2);
                var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                var b__20897 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                if (function() {
                  var i__20896 = 0;
                  while (true) {
                    if (i__20896 < size__4554__auto__) {
                      var prev_args = cljs.core._nth.call(null, c__4553__auto__, i__20896);
                      var vec__20900 = datascript.query.remove_pairs.call(null, call_args, prev_args);
                      var call_args__$1 = cljs.core.nth.call(null, vec__20900, 0, null);
                      var prev_args__$1 = cljs.core.nth.call(null, vec__20900, 1, null);
                      cljs.core.chunk_append.call(null, b__20897, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "-differ?", "-differ?", 1465687357, null)], null), call_args__$1, prev_args__$1)], null));
                      var G__20902 = i__20896 + 1;
                      i__20896 = G__20902;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20897), iter__20894.call(null, cljs.core.chunk_rest.call(null, s__20895__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20897), null);
                }
              } else {
                var prev_args = cljs.core.first.call(null, s__20895__$2);
                var vec__20901 = datascript.query.remove_pairs.call(null, call_args, prev_args);
                var call_args__$1 = cljs.core.nth.call(null, vec__20901, 0, null);
                var prev_args__$1 = cljs.core.nth.call(null, vec__20901, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "-differ?", "-differ?", 1465687357, null)], null), call_args__$1, prev_args__$1)], null), iter__20894.call(null, cljs.core.rest.call(null, s__20895__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(vec__20893, rule, call_args, prev_call_args), null, null);
    };
  }(vec__20893, rule, call_args, prev_call_args);
  return iter__4555__auto__.call(null, prev_call_args);
};
datascript.query.walk_collect = function walk_collect(form, pred) {
  var res = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
  clojure.walk.postwalk.call(null, function(res) {
    return function(p1__20903_SHARP_) {
      if (cljs.core.truth_(pred.call(null, p1__20903_SHARP_))) {
        cljs.core.swap_BANG_.call(null, res, cljs.core.conj, p1__20903_SHARP_);
      } else {
      }
      return p1__20903_SHARP_;
    };
  }(res), form);
  return cljs.core.deref.call(null, res);
};
datascript.query.split_guards = function split_guards(clauses, guards) {
  var bound_vars = cljs.core.set.call(null, datascript.query.walk_collect.call(null, clauses, datascript.query.free_var_QMARK_));
  var pred = function(bound_vars) {
    return function(p__20907) {
      var vec__20908 = p__20907;
      var vec__20909 = cljs.core.nth.call(null, vec__20908, 0, null);
      var _ = cljs.core.nth.call(null, vec__20909, 0, null);
      var vars = cljs.core.nthnext.call(null, vec__20909, 1);
      return cljs.core.every_QMARK_.call(null, bound_vars, vars);
    };
  }(bound_vars);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.filter.call(null, pred, guards), cljs.core.remove.call(null, pred, guards)], null);
};
datascript.query.solve_rule = function solve_rule(context, clause) {
  var final_attrs = cljs.core.filter.call(null, datascript.query.free_var_QMARK_, clause);
  var final_attrs_map = cljs.core.zipmap.call(null, final_attrs, cljs.core.range.call(null));
  var solve = function(final_attrs, final_attrs_map) {
    return function(prefix_context, clauses) {
      return cljs.core.reduce.call(null, datascript.query._resolve_clause, prefix_context, clauses);
    };
  }(final_attrs, final_attrs_map);
  var empty_rels_QMARK_ = function(final_attrs, final_attrs_map, solve) {
    return function(context__$1) {
      return cljs.core.some.call(null, function(final_attrs, final_attrs_map, solve) {
        return function(p1__20910_SHARP_) {
          return cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(p1__20910_SHARP_));
        };
      }(final_attrs, final_attrs_map, solve), (new cljs.core.Keyword(null, "rels", "rels", 1770187185)).cljs$core$IFn$_invoke$arity$1(context__$1));
    };
  }(final_attrs, final_attrs_map, solve);
  var stack = cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "prefix-clauses", "prefix-clauses", 1294180028), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "prefix-context", "prefix-context", -1269613591), context, new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "used-args", 
  "used-args", 23596256), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "pending-guards", "pending-guards", -1255527308), cljs.core.PersistentArrayMap.EMPTY], null));
  var rel = new datascript.query.Relation(final_attrs_map, cljs.core.PersistentVector.EMPTY, null, null, null);
  while (true) {
    var temp__4124__auto__ = cljs.core.first.call(null, stack);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var frame = temp__4124__auto__;
      var vec__20921 = cljs.core.split_with.call(null, function(stack, rel, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_) {
        return function(p1__20911_SHARP_) {
          return!datascript.query.rule_QMARK_.call(null, context, p1__20911_SHARP_);
        };
      }(stack, rel, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_), (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(frame));
      var clauses = cljs.core.nth.call(null, vec__20921, 0, null);
      var vec__20922 = cljs.core.nth.call(null, vec__20921, 1, null);
      var rule_clause = cljs.core.nth.call(null, vec__20922, 0, null);
      var next_clauses = cljs.core.nthnext.call(null, vec__20922, 1);
      if (rule_clause == null) {
        var context__$1 = solve.call(null, (new cljs.core.Keyword(null, "prefix-context", "prefix-context", -1269613591)).cljs$core$IFn$_invoke$arity$1(frame), clauses);
        var tuples = datascript.query._collect.call(null, context__$1, final_attrs);
        var new_rel = new datascript.query.Relation(final_attrs_map, tuples, null, null, null);
        var G__20929 = cljs.core.next.call(null, stack);
        var G__20930 = datascript.query.sum_rel.call(null, rel, new_rel);
        stack = G__20929;
        rel = G__20930;
        continue;
      } else {
        var vec__20923 = rule_clause;
        var rule = cljs.core.nth.call(null, vec__20923, 0, null);
        var call_args = cljs.core.nthnext.call(null, vec__20923, 1);
        var guards = datascript.query.rule_gen_guards.call(null, rule_clause, (new cljs.core.Keyword(null, "used-args", "used-args", 23596256)).cljs$core$IFn$_invoke$arity$1(frame));
        var vec__20924 = datascript.query.split_guards.call(null, cljs.core.concat.call(null, (new cljs.core.Keyword(null, "prefix-clauses", "prefix-clauses", 1294180028)).cljs$core$IFn$_invoke$arity$1(frame), clauses), cljs.core.concat.call(null, guards, (new cljs.core.Keyword(null, "pending-guards", "pending-guards", -1255527308)).cljs$core$IFn$_invoke$arity$1(frame)));
        var active_gs = cljs.core.nth.call(null, vec__20924, 0, null);
        var pending_gs = cljs.core.nth.call(null, vec__20924, 1, null);
        if (cljs.core.truth_(cljs.core.some.call(null, function(stack, rel, vec__20923, rule, call_args, guards, vec__20924, active_gs, pending_gs, vec__20921, clauses, vec__20922, rule_clause, next_clauses, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_) {
          return function(p1__20912_SHARP_) {
            return cljs.core._EQ_.call(null, p1__20912_SHARP_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "-differ?", "-differ?", 1465687357, null))], null));
          };
        }(stack, rel, vec__20923, rule, call_args, guards, vec__20924, active_gs, pending_gs, vec__20921, clauses, vec__20922, rule_clause, next_clauses, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_), active_gs))) {
          var G__20931 = cljs.core.next.call(null, stack);
          var G__20932 = rel;
          stack = G__20931;
          rel = G__20932;
          continue;
        } else {
          var prefix_clauses = cljs.core.concat.call(null, clauses, active_gs);
          var prefix_context = solve.call(null, (new cljs.core.Keyword(null, "prefix-context", "prefix-context", -1269613591)).cljs$core$IFn$_invoke$arity$1(frame), prefix_clauses);
          if (cljs.core.truth_(empty_rels_QMARK_.call(null, prefix_context))) {
            var G__20933 = cljs.core.next.call(null, stack);
            var G__20934 = rel;
            stack = G__20933;
            rel = G__20934;
            continue;
          } else {
            var used_args = cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "used-args", "used-args", 23596256)).cljs$core$IFn$_invoke$arity$1(frame), rule, cljs.core.conj.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "used-args", "used-args", 23596256)).cljs$core$IFn$_invoke$arity$1(frame), rule, cljs.core.PersistentVector.EMPTY), call_args));
            var branches = datascript.query.expand_rule.call(null, rule_clause, context, used_args);
            var G__20935 = cljs.core.concat.call(null, function() {
              var iter__4555__auto__ = function(stack, rel, used_args, branches, prefix_clauses, prefix_context, vec__20923, rule, call_args, guards, vec__20924, active_gs, pending_gs, vec__20921, clauses, vec__20922, rule_clause, next_clauses, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_) {
                return function iter__20925(s__20926) {
                  return new cljs.core.LazySeq(null, function(stack, rel, used_args, branches, prefix_clauses, prefix_context, vec__20923, rule, call_args, guards, vec__20924, active_gs, pending_gs, vec__20921, clauses, vec__20922, rule_clause, next_clauses, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_) {
                    return function() {
                      var s__20926__$1 = s__20926;
                      while (true) {
                        var temp__4126__auto__ = cljs.core.seq.call(null, s__20926__$1);
                        if (temp__4126__auto__) {
                          var s__20926__$2 = temp__4126__auto__;
                          if (cljs.core.chunked_seq_QMARK_.call(null, s__20926__$2)) {
                            var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20926__$2);
                            var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                            var b__20928 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                            if (function() {
                              var i__20927 = 0;
                              while (true) {
                                if (i__20927 < size__4554__auto__) {
                                  var branch = cljs.core._nth.call(null, c__4553__auto__, i__20927);
                                  cljs.core.chunk_append.call(null, b__20928, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "prefix-clauses", "prefix-clauses", 1294180028), prefix_clauses, new cljs.core.Keyword(null, "prefix-context", "prefix-context", -1269613591), prefix_context, new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), datascript.query.concatv.call(null, branch, next_clauses), new cljs.core.Keyword(null, "used-args", "used-args", 23596256), used_args, 
                                  new cljs.core.Keyword(null, "pending-guards", "pending-guards", -1255527308), pending_gs], null));
                                  var G__20937 = i__20927 + 1;
                                  i__20927 = G__20937;
                                  continue;
                                } else {
                                  return true;
                                }
                                break;
                              }
                            }()) {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20928), iter__20925.call(null, cljs.core.chunk_rest.call(null, s__20926__$2)));
                            } else {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20928), null);
                            }
                          } else {
                            var branch = cljs.core.first.call(null, s__20926__$2);
                            return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "prefix-clauses", "prefix-clauses", 1294180028), prefix_clauses, new cljs.core.Keyword(null, "prefix-context", "prefix-context", -1269613591), prefix_context, new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), datascript.query.concatv.call(null, branch, next_clauses), new cljs.core.Keyword(null, "used-args", "used-args", 23596256), used_args, new cljs.core.Keyword(null, 
                            "pending-guards", "pending-guards", -1255527308), pending_gs], null), iter__20925.call(null, cljs.core.rest.call(null, s__20926__$2)));
                          }
                        } else {
                          return null;
                        }
                        break;
                      }
                    };
                  }(stack, rel, used_args, branches, prefix_clauses, prefix_context, vec__20923, rule, call_args, guards, vec__20924, active_gs, pending_gs, vec__20921, clauses, vec__20922, rule_clause, next_clauses, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_), null, null);
                };
              }(stack, rel, used_args, branches, prefix_clauses, prefix_context, vec__20923, rule, call_args, guards, vec__20924, active_gs, pending_gs, vec__20921, clauses, vec__20922, rule_clause, next_clauses, frame, temp__4124__auto__, final_attrs, final_attrs_map, solve, empty_rels_QMARK_);
              return iter__4555__auto__.call(null, branches);
            }(), cljs.core.next.call(null, stack));
            var G__20936 = rel;
            stack = G__20935;
            rel = G__20936;
            continue;
          }
        }
      }
    } else {
      return rel;
    }
    break;
  }
};
datascript.query._resolve_clause = function _resolve_clause(context, clause) {
  var pred__20941 = datascript.query.looks_like_QMARK_;
  var expr__20942 = clause;
  if (cljs.core.truth_(pred__20941.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", 345799209, null)], null)], null), expr__20942))) {
    return datascript.query.filter_by_pred.call(null, context, clause);
  } else {
    if (cljs.core.truth_(pred__20941.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", 345799209, null)], null), new cljs.core.Symbol(null, "_", "_", -1201019570, null)], null), expr__20942))) {
      return datascript.query.bind_by_fn.call(null, context, clause);
    } else {
      if (cljs.core.truth_(pred__20941.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", 345799209, null)], null), expr__20942))) {
        var relation = datascript.query.lookup_pattern.call(null, context, clause);
        return cljs.core.update_in.call(null, context, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185)], null), datascript.query.collapse_rels, relation);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__20942)].join(""));
      }
    }
  }
};
datascript.query.resolve_clause = function resolve_clause(context, clause) {
  if (datascript.query.rule_QMARK_.call(null, context, clause)) {
    var vec__20945 = datascript.query.source_QMARK_.call(null, cljs.core.first.call(null, clause)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, clause), cljs.core.next.call(null, clause)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1580747756, null), clause], null);
    var source = cljs.core.nth.call(null, vec__20945, 0, null);
    var rule = cljs.core.nth.call(null, vec__20945, 1, null);
    var source__$1 = cljs.core.get_in.call(null, context, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sources", "sources", -321166424), source], null));
    var rel = datascript.query.solve_rule.call(null, cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "sources", "sources", -321166424), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "$", "$", -1580747756, null), source__$1], null)), rule);
    return cljs.core.update_in.call(null, context, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rels", "rels", 1770187185)], null), datascript.query.collapse_rels, rel);
  } else {
    return datascript.query._resolve_clause.call(null, context, clause);
  }
};
datascript.query._q = function _q(context, clauses) {
  return cljs.core.reduce.call(null, datascript.query.resolve_clause, context, clauses);
};
datascript.query._collect = function() {
  var _collect = null;
  var _collect__2 = function(context, symbols) {
    var rels = (new cljs.core.Keyword(null, "rels", "rels", 1770187185)).cljs$core$IFn$_invoke$arity$1(context);
    return _collect.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new Array(cljs.core.count.call(null, symbols))], null), rels, symbols);
  };
  var _collect__3 = function(acc, rels, symbols) {
    while (true) {
      var temp__4124__auto__ = cljs.core.first.call(null, rels);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var rel = temp__4124__auto__;
        var keep_attrs = cljs.core.select_keys.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(rel), symbols);
        if (cljs.core.empty_QMARK_.call(null, keep_attrs)) {
          var G__20959 = acc;
          var G__20960 = cljs.core.next.call(null, rels);
          var G__20961 = symbols;
          acc = G__20959;
          rels = G__20960;
          symbols = G__20961;
          continue;
        } else {
          var copy_map = cljs.core.to_array.call(null, cljs.core.map.call(null, function(acc, rels, symbols, keep_attrs, rel, temp__4124__auto__) {
            return function(p1__20946_SHARP_) {
              return cljs.core.get.call(null, keep_attrs, p1__20946_SHARP_);
            };
          }(acc, rels, symbols, keep_attrs, rel, temp__4124__auto__), symbols));
          var len = cljs.core.count.call(null, symbols);
          var G__20962 = function() {
            var iter__4555__auto__ = function(acc, rels, symbols, copy_map, len, keep_attrs, rel, temp__4124__auto__) {
              return function iter__20953(s__20954) {
                return new cljs.core.LazySeq(null, function(acc, rels, symbols, copy_map, len, keep_attrs, rel, temp__4124__auto__) {
                  return function() {
                    var s__20954__$1 = s__20954;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__20954__$1);
                      if (temp__4126__auto__) {
                        var xs__4624__auto__ = temp__4126__auto__;
                        var t1 = cljs.core.first.call(null, xs__4624__auto__);
                        var iterys__4551__auto__ = function(s__20954__$1, acc, rels, symbols, t1, xs__4624__auto__, temp__4126__auto__, copy_map, len, keep_attrs, rel, temp__4124__auto__) {
                          return function iter__20955(s__20956) {
                            return new cljs.core.LazySeq(null, function(s__20954__$1, acc, rels, symbols, t1, xs__4624__auto__, temp__4126__auto__, copy_map, len, keep_attrs, rel, temp__4124__auto__) {
                              return function() {
                                var s__20956__$1 = s__20956;
                                while (true) {
                                  var temp__4126__auto____$1 = cljs.core.seq.call(null, s__20956__$1);
                                  if (temp__4126__auto____$1) {
                                    var s__20956__$2 = temp__4126__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__20956__$2)) {
                                      var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20956__$2);
                                      var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                                      var b__20958 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                                      if (function() {
                                        var i__20957 = 0;
                                        while (true) {
                                          if (i__20957 < size__4554__auto__) {
                                            var t2 = cljs.core._nth.call(null, c__4553__auto__, i__20957);
                                            cljs.core.chunk_append.call(null, b__20958, function() {
                                              var res = cljs.core.aclone.call(null, t1);
                                              var n__4686__auto___20965 = len;
                                              var i_20966 = 0;
                                              while (true) {
                                                if (i_20966 < n__4686__auto___20965) {
                                                  var temp__4126__auto___20967__$2 = copy_map[i_20966];
                                                  if (cljs.core.truth_(temp__4126__auto___20967__$2)) {
                                                    var idx_20968 = temp__4126__auto___20967__$2;
                                                    res[i_20966] = t2[idx_20968];
                                                  } else {
                                                  }
                                                  var G__20969 = i_20966 + 1;
                                                  i_20966 = G__20969;
                                                  continue;
                                                } else {
                                                }
                                                break;
                                              }
                                              return res;
                                            }());
                                            var G__20970 = i__20957 + 1;
                                            i__20957 = G__20970;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20958), iter__20955.call(null, cljs.core.chunk_rest.call(null, s__20956__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20958), null);
                                      }
                                    } else {
                                      var t2 = cljs.core.first.call(null, s__20956__$2);
                                      return cljs.core.cons.call(null, function() {
                                        var res = cljs.core.aclone.call(null, t1);
                                        var n__4686__auto___20971 = len;
                                        var i_20972 = 0;
                                        while (true) {
                                          if (i_20972 < n__4686__auto___20971) {
                                            var temp__4126__auto___20973__$2 = copy_map[i_20972];
                                            if (cljs.core.truth_(temp__4126__auto___20973__$2)) {
                                              var idx_20974 = temp__4126__auto___20973__$2;
                                              res[i_20972] = t2[idx_20974];
                                            } else {
                                            }
                                            var G__20975 = i_20972 + 1;
                                            i_20972 = G__20975;
                                            continue;
                                          } else {
                                          }
                                          break;
                                        }
                                        return res;
                                      }(), iter__20955.call(null, cljs.core.rest.call(null, s__20956__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(s__20954__$1, acc, rels, symbols, t1, xs__4624__auto__, temp__4126__auto__, copy_map, len, keep_attrs, rel, temp__4124__auto__), null, null);
                          };
                        }(s__20954__$1, acc, rels, symbols, t1, xs__4624__auto__, temp__4126__auto__, copy_map, len, keep_attrs, rel, temp__4124__auto__);
                        var fs__4552__auto__ = cljs.core.seq.call(null, iterys__4551__auto__.call(null, (new cljs.core.Keyword(null, "tuples", "tuples", -676032639)).cljs$core$IFn$_invoke$arity$1(rel)));
                        if (fs__4552__auto__) {
                          return cljs.core.concat.call(null, fs__4552__auto__, iter__20953.call(null, cljs.core.rest.call(null, s__20954__$1)));
                        } else {
                          var G__20976 = cljs.core.rest.call(null, s__20954__$1);
                          s__20954__$1 = G__20976;
                          continue;
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(acc, rels, symbols, copy_map, len, keep_attrs, rel, temp__4124__auto__), null, null);
              };
            }(acc, rels, symbols, copy_map, len, keep_attrs, rel, temp__4124__auto__);
            return iter__4555__auto__.call(null, acc);
          }();
          var G__20963 = cljs.core.next.call(null, rels);
          var G__20964 = symbols;
          acc = G__20962;
          rels = G__20963;
          symbols = G__20964;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  };
  _collect = function(acc, rels, symbols) {
    switch(arguments.length) {
      case 2:
        return _collect__2.call(this, acc, rels);
      case 3:
        return _collect__3.call(this, acc, rels, symbols);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _collect.cljs$core$IFn$_invoke$arity$2 = _collect__2;
  _collect.cljs$core$IFn$_invoke$arity$3 = _collect__3;
  return _collect;
}();
datascript.query.collect = function collect(context, symbols) {
  return cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.vec, datascript.query._collect.call(null, context, symbols)));
};
datascript.query.find_attrs = function find_attrs(q) {
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(p1__20977_SHARP_) {
    if (cljs.core.sequential_QMARK_.call(null, p1__20977_SHARP_)) {
      return cljs.core.last.call(null, p1__20977_SHARP_);
    } else {
      return p1__20977_SHARP_;
    }
  }, (new cljs.core.Keyword(null, "find", "find", 496279456)).cljs$core$IFn$_invoke$arity$1(q)), (new cljs.core.Keyword(null, "with", "with", -1536296876)).cljs$core$IFn$_invoke$arity$1(q));
};
datascript.query._aggregate = function _aggregate(q, context, tuples) {
  return cljs.core.mapv.call(null, function(form, fixed_value, i) {
    if (cljs.core.sequential_QMARK_.call(null, form)) {
      var vec__20981 = form;
      var f = cljs.core.nth.call(null, vec__20981, 0, null);
      var args = cljs.core.nthnext.call(null, vec__20981, 1);
      var vals = cljs.core.map.call(null, function(vec__20981, f, args) {
        return function(p1__20978_SHARP_) {
          return cljs.core.nth.call(null, p1__20978_SHARP_, i);
        };
      }(vec__20981, f, args), tuples);
      var args__$1 = cljs.core.map.call(null, function(vec__20981, f, args, vals) {
        return function(p1__20979_SHARP_) {
          if (p1__20979_SHARP_ instanceof cljs.core.Symbol) {
            return datascript.query.context_resolve_val.call(null, context, p1__20979_SHARP_);
          } else {
            return p1__20979_SHARP_;
          }
        };
      }(vec__20981, f, args, vals), cljs.core.butlast.call(null, args));
      var f__$1 = function() {
        var or__3799__auto__ = datascript.query.built_in_aggregates.call(null, f);
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return datascript.query.context_resolve_val.call(null, context, f);
        }
      }();
      return cljs.core.apply.call(null, f__$1, cljs.core.concat.call(null, args__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vals], null)));
    } else {
      return fixed_value;
    }
  }, (new cljs.core.Keyword(null, "find", "find", 496279456)).cljs$core$IFn$_invoke$arity$1(q), cljs.core.first.call(null, tuples), cljs.core.range.call(null));
};
datascript.query.aggregate = function aggregate(q, context, resultset) {
  var group_idxs = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(p1__20982_SHARP_, p2__20983_SHARP_) {
    if (cljs.core.sequential_QMARK_.call(null, p1__20982_SHARP_)) {
      return null;
    } else {
      return p2__20983_SHARP_;
    }
  }, (new cljs.core.Keyword(null, "find", "find", 496279456)).cljs$core$IFn$_invoke$arity$1(q), cljs.core.range.call(null)));
  var group_fn = function(group_idxs) {
    return function(tuple) {
      return cljs.core.map.call(null, function(group_idxs) {
        return function(p1__20984_SHARP_) {
          return cljs.core.nth.call(null, tuple, p1__20984_SHARP_);
        };
      }(group_idxs), group_idxs);
    };
  }(group_idxs);
  var grouped = cljs.core.group_by.call(null, group_fn, resultset);
  var iter__4555__auto__ = function(group_idxs, group_fn, grouped) {
    return function iter__20993(s__20994) {
      return new cljs.core.LazySeq(null, function(group_idxs, group_fn, grouped) {
        return function() {
          var s__20994__$1 = s__20994;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__20994__$1);
            if (temp__4126__auto__) {
              var s__20994__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20994__$2)) {
                var c__4553__auto__ = cljs.core.chunk_first.call(null, s__20994__$2);
                var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                var b__20996 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                if (function() {
                  var i__20995 = 0;
                  while (true) {
                    if (i__20995 < size__4554__auto__) {
                      var vec__20999 = cljs.core._nth.call(null, c__4553__auto__, i__20995);
                      var _ = cljs.core.nth.call(null, vec__20999, 0, null);
                      var tuples = cljs.core.nth.call(null, vec__20999, 1, null);
                      cljs.core.chunk_append.call(null, b__20996, datascript.query._aggregate.call(null, q, context, tuples));
                      var G__21001 = i__20995 + 1;
                      i__20995 = G__21001;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20996), iter__20993.call(null, cljs.core.chunk_rest.call(null, s__20994__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20996), null);
                }
              } else {
                var vec__21000 = cljs.core.first.call(null, s__20994__$2);
                var _ = cljs.core.nth.call(null, vec__21000, 0, null);
                var tuples = cljs.core.nth.call(null, vec__21000, 1, null);
                return cljs.core.cons.call(null, datascript.query._aggregate.call(null, q, context, tuples), iter__20993.call(null, cljs.core.rest.call(null, s__20994__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(group_idxs, group_fn, grouped), null, null);
    };
  }(group_idxs, group_fn, grouped);
  return iter__4555__auto__.call(null, grouped);
};
datascript.query.parse_query = function parse_query(query) {
  var parsed = cljs.core.PersistentArrayMap.EMPTY;
  var key = null;
  var qs = query;
  while (true) {
    var temp__4124__auto__ = cljs.core.first.call(null, qs);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var q = temp__4124__auto__;
      if (q instanceof cljs.core.Keyword) {
        var G__21002 = parsed;
        var G__21003 = q;
        var G__21004 = cljs.core.next.call(null, qs);
        parsed = G__21002;
        key = G__21003;
        qs = G__21004;
        continue;
      } else {
        var G__21005 = cljs.core.update_in.call(null, parsed, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentVector.EMPTY), q);
        var G__21006 = key;
        var G__21007 = cljs.core.next.call(null, qs);
        parsed = G__21005;
        key = G__21006;
        qs = G__21007;
        continue;
      }
    } else {
      return parsed;
    }
    break;
  }
};
datascript.query.q = function() {
  var q__delegate = function(q__$1, inputs) {
    var q__$2 = cljs.core.sequential_QMARK_.call(null, q__$1) ? datascript.query.parse_query.call(null, q__$1) : q__$1;
    var find = datascript.query.find_attrs.call(null, q__$2);
    var ins = (new cljs.core.Keyword(null, "in", "in", -1531184865)).cljs$core$IFn$_invoke$arity$2(q__$2, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "$", "$", -1580747756, null)], null));
    var wheres = (new cljs.core.Keyword(null, "where", "where", -2044795965)).cljs$core$IFn$_invoke$arity$1(q__$2);
    var context = datascript.query.parse_ins.call(null, new datascript.query.Context(cljs.core.PersistentVector.EMPTY, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY, null, null, null), ins, inputs);
    var resultset = datascript.query.collect.call(null, datascript.query._q.call(null, context, wheres), find);
    var G__21010 = resultset;
    var G__21010__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "with", "with", -1536296876)).cljs$core$IFn$_invoke$arity$1(q__$2)) ? cljs.core.mapv.call(null, function(G__21010, q__$2, find, ins, wheres, context, resultset) {
      return function(p1__21008_SHARP_) {
        return cljs.core.subvec.call(null, p1__21008_SHARP_, 0, cljs.core.count.call(null, (new cljs.core.Keyword(null, "find", "find", 496279456)).cljs$core$IFn$_invoke$arity$1(q__$2)));
      };
    }(G__21010, q__$2, find, ins, wheres, context, resultset), G__21010) : G__21010;
    var G__21010__$2 = cljs.core.truth_(cljs.core.not_empty.call(null, cljs.core.filter.call(null, cljs.core.sequential_QMARK_, (new cljs.core.Keyword(null, "find", "find", 496279456)).cljs$core$IFn$_invoke$arity$1(q__$2)))) ? datascript.query.aggregate.call(null, q__$2, context, G__21010__$1) : G__21010__$1;
    return G__21010__$2;
  };
  var q = function(q__$1, var_args) {
    var inputs = null;
    if (arguments.length > 1) {
      var G__21011__i = 0, G__21011__a = new Array(arguments.length - 1);
      while (G__21011__i < G__21011__a.length) {
        G__21011__a[G__21011__i] = arguments[G__21011__i + 1];
        ++G__21011__i;
      }
      inputs = new cljs.core.IndexedSeq(G__21011__a, 0);
    }
    return q__delegate.call(this, q__$1, inputs);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__21012) {
    var q__$1 = cljs.core.first(arglist__21012);
    var inputs = cljs.core.rest(arglist__21012);
    return q__delegate(q__$1, inputs);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
// Input 73
goog.provide("datascript");
goog.require("cljs.core");
goog.require("datascript.btset");
goog.require("datascript.impl.entity");
goog.require("datascript.query");
goog.require("datascript.core");
datascript.q = datascript.query.q;
datascript.entity = datascript.impl.entity.entity;
datascript.entity_db = function entity_db(entity) {
  return entity.db;
};
datascript.touch = datascript.impl.entity.touch;
datascript.tx0 = datascript.core.tx0;
datascript.refs = function refs(schema) {
  return cljs.core.reduce_kv.call(null, function(acc, attr, v) {
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword("db.type", "ref", "db.type/ref", -1728373079))) {
      return cljs.core.conj.call(null, acc, attr);
    } else {
      return acc;
    }
  }, cljs.core.PersistentHashSet.EMPTY, schema);
};
datascript.empty_db = function() {
  var empty_db__delegate = function(p__20345) {
    var vec__20347 = p__20345;
    var schema = cljs.core.nth.call(null, vec__20347, 0, null);
    return datascript.core.map__GT_DB.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), datascript.btset.btset_by.call(null, datascript.core.cmp_datoms_eavt), new cljs.core.Keyword(null, "aevt", "aevt", -585148059), datascript.btset.btset_by.call(null, datascript.core.cmp_datoms_aevt), new cljs.core.Keyword(null, "avet", "avet", 1383857032), datascript.btset.btset_by.call(null, 
    datascript.core.cmp_datoms_avet), new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075), 0, new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339), datascript.tx0, new cljs.core.Keyword(null, "refs", "refs", -1560051448), datascript.refs.call(null, schema)], null));
  };
  var empty_db = function(var_args) {
    var p__20345 = null;
    if (arguments.length > 0) {
      var G__20348__i = 0, G__20348__a = new Array(arguments.length - 0);
      while (G__20348__i < G__20348__a.length) {
        G__20348__a[G__20348__i] = arguments[G__20348__i + 0];
        ++G__20348__i;
      }
      p__20345 = new cljs.core.IndexedSeq(G__20348__a, 0);
    }
    return empty_db__delegate.call(this, p__20345);
  };
  empty_db.cljs$lang$maxFixedArity = 0;
  empty_db.cljs$lang$applyTo = function(arglist__20349) {
    var p__20345 = cljs.core.seq(arglist__20349);
    return empty_db__delegate(p__20345);
  };
  empty_db.cljs$core$IFn$_invoke$arity$variadic = empty_db__delegate;
  return empty_db;
}();
datascript.init_db = function() {
  var init_db__delegate = function(datoms, p__20351) {
    var vec__20353 = p__20351;
    var schema = cljs.core.nth.call(null, vec__20353, 0, null);
    var datoms__$1 = cljs.core.into_array.call(null, datoms);
    var len = datoms__$1.length;
    var eavt = datascript.btset._btset_from_sorted_arr.call(null, datoms__$1.sort(datascript.core.cmp_datoms_eavt_quick), datascript.core.cmp_datoms_eavt);
    var max_eid = len > 0 ? datoms__$1[len - 1].e : 0;
    var aevt = datascript.btset._btset_from_sorted_arr.call(null, datoms__$1.sort(datascript.core.cmp_datoms_aevt_quick), datascript.core.cmp_datoms_aevt);
    var avet = datascript.btset._btset_from_sorted_arr.call(null, datoms__$1.sort(datascript.core.cmp_datoms_avet_quick), datascript.core.cmp_datoms_avet);
    var max_tx = cljs.core.transduce.call(null, cljs.core.map.call(null, function(datoms__$1, len, eavt, max_eid, aevt, avet, vec__20353, schema) {
      return function(p1__20350_SHARP_) {
        return p1__20350_SHARP_.tx;
      };
    }(datoms__$1, len, eavt, max_eid, aevt, avet, vec__20353, schema)), cljs.core.max, datascript.tx0, datoms__$1);
    return datascript.core.map__GT_DB.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), eavt, new cljs.core.Keyword(null, "aevt", "aevt", -585148059), aevt, new cljs.core.Keyword(null, "avet", "avet", 1383857032), avet, new cljs.core.Keyword(null, "max-eid", "max-eid", 2134868075), max_eid, new cljs.core.Keyword(null, "max-tx", "max-tx", 1119558339), max_tx, new cljs.core.Keyword(null, 
    "refs", "refs", -1560051448), datascript.refs.call(null, schema)], null));
  };
  var init_db = function(datoms, var_args) {
    var p__20351 = null;
    if (arguments.length > 1) {
      var G__20354__i = 0, G__20354__a = new Array(arguments.length - 1);
      while (G__20354__i < G__20354__a.length) {
        G__20354__a[G__20354__i] = arguments[G__20354__i + 1];
        ++G__20354__i;
      }
      p__20351 = new cljs.core.IndexedSeq(G__20354__a, 0);
    }
    return init_db__delegate.call(this, datoms, p__20351);
  };
  init_db.cljs$lang$maxFixedArity = 1;
  init_db.cljs$lang$applyTo = function(arglist__20355) {
    var datoms = cljs.core.first(arglist__20355);
    var p__20351 = cljs.core.rest(arglist__20355);
    return init_db__delegate(datoms, p__20351);
  };
  init_db.cljs$core$IFn$_invoke$arity$variadic = init_db__delegate;
  return init_db;
}();
datascript.is_filtered = function is_filtered(db) {
  return db instanceof datascript.core.FilteredDB;
};
datascript.filter = function filter(db, pred) {
  if (datascript.is_filtered.call(null, db)) {
    var u = db.unfiltered_db;
    return new datascript.core.FilteredDB(u, function(u) {
      return function(p1__20356_SHARP_) {
        var and__3787__auto__ = pred.call(null, u, p1__20356_SHARP_);
        if (cljs.core.truth_(and__3787__auto__)) {
          return db.pred.call(null, p1__20356_SHARP_);
        } else {
          return and__3787__auto__;
        }
      };
    }(u), null, null, null);
  } else {
    return new datascript.core.FilteredDB(db, function(p1__20357_SHARP_) {
      return pred.call(null, db, p1__20357_SHARP_);
    }, null, null, null);
  }
};
datascript.with$ = function() {
  var with$__delegate = function(db, tx_data, p__20358) {
    var vec__20360 = p__20358;
    var tx_meta = cljs.core.nth.call(null, vec__20360, 0, null);
    if (datascript.is_filtered.call(null, db)) {
      throw new Error("Filtered DB cannot be modified");
    } else {
      return datascript.core.transact_tx_data.call(null, datascript.core.map__GT_TxReport.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "db-before", "db-before", -553691536), db, new cljs.core.Keyword(null, "db-after", "db-after", -571884666), db, new cljs.core.Keyword(null, "tx-data", "tx-data", 934159761), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "tempids", "tempids", 1767509089), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
      "tx-meta", "tx-meta", 1159283194), tx_meta], null)), tx_data);
    }
  };
  var with$ = function(db, tx_data, var_args) {
    var p__20358 = null;
    if (arguments.length > 2) {
      var G__20361__i = 0, G__20361__a = new Array(arguments.length - 2);
      while (G__20361__i < G__20361__a.length) {
        G__20361__a[G__20361__i] = arguments[G__20361__i + 2];
        ++G__20361__i;
      }
      p__20358 = new cljs.core.IndexedSeq(G__20361__a, 0);
    }
    return with$__delegate.call(this, db, tx_data, p__20358);
  };
  with$.cljs$lang$maxFixedArity = 2;
  with$.cljs$lang$applyTo = function(arglist__20362) {
    var db = cljs.core.first(arglist__20362);
    arglist__20362 = cljs.core.next(arglist__20362);
    var tx_data = cljs.core.first(arglist__20362);
    var p__20358 = cljs.core.rest(arglist__20362);
    return with$__delegate(db, tx_data, p__20358);
  };
  with$.cljs$core$IFn$_invoke$arity$variadic = with$__delegate;
  return with$;
}();
datascript.db_with = function db_with(db, tx_data) {
  return(new cljs.core.Keyword(null, "db-after", "db-after", -571884666)).cljs$core$IFn$_invoke$arity$1(datascript.with$.call(null, db, tx_data));
};
datascript.datoms = function() {
  var datoms__delegate = function(db, index, cs) {
    return datascript.core._datoms.call(null, db, index, cs);
  };
  var datoms = function(db, index, var_args) {
    var cs = null;
    if (arguments.length > 2) {
      var G__20363__i = 0, G__20363__a = new Array(arguments.length - 2);
      while (G__20363__i < G__20363__a.length) {
        G__20363__a[G__20363__i] = arguments[G__20363__i + 2];
        ++G__20363__i;
      }
      cs = new cljs.core.IndexedSeq(G__20363__a, 0);
    }
    return datoms__delegate.call(this, db, index, cs);
  };
  datoms.cljs$lang$maxFixedArity = 2;
  datoms.cljs$lang$applyTo = function(arglist__20364) {
    var db = cljs.core.first(arglist__20364);
    arglist__20364 = cljs.core.next(arglist__20364);
    var index = cljs.core.first(arglist__20364);
    var cs = cljs.core.rest(arglist__20364);
    return datoms__delegate(db, index, cs);
  };
  datoms.cljs$core$IFn$_invoke$arity$variadic = datoms__delegate;
  return datoms;
}();
datascript.seek_datoms = function() {
  var seek_datoms__delegate = function(db, index, cs) {
    return datascript.core._seek_datoms.call(null, db, index, cs);
  };
  var seek_datoms = function(db, index, var_args) {
    var cs = null;
    if (arguments.length > 2) {
      var G__20365__i = 0, G__20365__a = new Array(arguments.length - 2);
      while (G__20365__i < G__20365__a.length) {
        G__20365__a[G__20365__i] = arguments[G__20365__i + 2];
        ++G__20365__i;
      }
      cs = new cljs.core.IndexedSeq(G__20365__a, 0);
    }
    return seek_datoms__delegate.call(this, db, index, cs);
  };
  seek_datoms.cljs$lang$maxFixedArity = 2;
  seek_datoms.cljs$lang$applyTo = function(arglist__20366) {
    var db = cljs.core.first(arglist__20366);
    arglist__20366 = cljs.core.next(arglist__20366);
    var index = cljs.core.first(arglist__20366);
    var cs = cljs.core.rest(arglist__20366);
    return seek_datoms__delegate(db, index, cs);
  };
  seek_datoms.cljs$core$IFn$_invoke$arity$variadic = seek_datoms__delegate;
  return seek_datoms;
}();
datascript.index_range = function index_range(db, attr, start, end) {
  return datascript.core._index_range.call(null, db, attr, start, end);
};
datascript.create_conn = function() {
  var create_conn__delegate = function(p__20367) {
    var vec__20369 = p__20367;
    var schema = cljs.core.nth.call(null, vec__20369, 0, null);
    return cljs.core.atom.call(null, datascript.empty_db.call(null, schema), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "listeners", "listeners", 394544445), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null));
  };
  var create_conn = function(var_args) {
    var p__20367 = null;
    if (arguments.length > 0) {
      var G__20370__i = 0, G__20370__a = new Array(arguments.length - 0);
      while (G__20370__i < G__20370__a.length) {
        G__20370__a[G__20370__i] = arguments[G__20370__i + 0];
        ++G__20370__i;
      }
      p__20367 = new cljs.core.IndexedSeq(G__20370__a, 0);
    }
    return create_conn__delegate.call(this, p__20367);
  };
  create_conn.cljs$lang$maxFixedArity = 0;
  create_conn.cljs$lang$applyTo = function(arglist__20371) {
    var p__20367 = cljs.core.seq(arglist__20371);
    return create_conn__delegate(p__20367);
  };
  create_conn.cljs$core$IFn$_invoke$arity$variadic = create_conn__delegate;
  return create_conn;
}();
datascript._transact_BANG_ = function _transact_BANG_(conn, tx_data, tx_meta) {
  var report = cljs.core.atom.call(null, null);
  cljs.core.swap_BANG_.call(null, conn, function(report) {
    return function(db) {
      var r = datascript.with$.call(null, db, tx_data, tx_meta);
      cljs.core.reset_BANG_.call(null, report, r);
      return(new cljs.core.Keyword(null, "db-after", "db-after", -571884666)).cljs$core$IFn$_invoke$arity$1(r);
    };
  }(report));
  return cljs.core.deref.call(null, report);
};
datascript.transact_BANG_ = function() {
  var transact_BANG___delegate = function(conn, tx_data, p__20372) {
    var vec__20380 = p__20372;
    var tx_meta = cljs.core.nth.call(null, vec__20380, 0, null);
    var report = datascript._transact_BANG_.call(null, conn, tx_data, tx_meta);
    var seq__20381_20387 = cljs.core.seq.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "listeners", "listeners", 394544445)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, conn))));
    var chunk__20382_20388 = null;
    var count__20383_20389 = 0;
    var i__20384_20390 = 0;
    while (true) {
      if (i__20384_20390 < count__20383_20389) {
        var vec__20385_20391 = cljs.core._nth.call(null, chunk__20382_20388, i__20384_20390);
        var __20392 = cljs.core.nth.call(null, vec__20385_20391, 0, null);
        var callback_20393 = cljs.core.nth.call(null, vec__20385_20391, 1, null);
        callback_20393.call(null, report);
        var G__20394 = seq__20381_20387;
        var G__20395 = chunk__20382_20388;
        var G__20396 = count__20383_20389;
        var G__20397 = i__20384_20390 + 1;
        seq__20381_20387 = G__20394;
        chunk__20382_20388 = G__20395;
        count__20383_20389 = G__20396;
        i__20384_20390 = G__20397;
        continue;
      } else {
        var temp__4126__auto___20398 = cljs.core.seq.call(null, seq__20381_20387);
        if (temp__4126__auto___20398) {
          var seq__20381_20399__$1 = temp__4126__auto___20398;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20381_20399__$1)) {
            var c__4586__auto___20400 = cljs.core.chunk_first.call(null, seq__20381_20399__$1);
            var G__20401 = cljs.core.chunk_rest.call(null, seq__20381_20399__$1);
            var G__20402 = c__4586__auto___20400;
            var G__20403 = cljs.core.count.call(null, c__4586__auto___20400);
            var G__20404 = 0;
            seq__20381_20387 = G__20401;
            chunk__20382_20388 = G__20402;
            count__20383_20389 = G__20403;
            i__20384_20390 = G__20404;
            continue;
          } else {
            var vec__20386_20405 = cljs.core.first.call(null, seq__20381_20399__$1);
            var __20406 = cljs.core.nth.call(null, vec__20386_20405, 0, null);
            var callback_20407 = cljs.core.nth.call(null, vec__20386_20405, 1, null);
            callback_20407.call(null, report);
            var G__20408 = cljs.core.next.call(null, seq__20381_20399__$1);
            var G__20409 = null;
            var G__20410 = 0;
            var G__20411 = 0;
            seq__20381_20387 = G__20408;
            chunk__20382_20388 = G__20409;
            count__20383_20389 = G__20410;
            i__20384_20390 = G__20411;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return report;
  };
  var transact_BANG_ = function(conn, tx_data, var_args) {
    var p__20372 = null;
    if (arguments.length > 2) {
      var G__20412__i = 0, G__20412__a = new Array(arguments.length - 2);
      while (G__20412__i < G__20412__a.length) {
        G__20412__a[G__20412__i] = arguments[G__20412__i + 2];
        ++G__20412__i;
      }
      p__20372 = new cljs.core.IndexedSeq(G__20412__a, 0);
    }
    return transact_BANG___delegate.call(this, conn, tx_data, p__20372);
  };
  transact_BANG_.cljs$lang$maxFixedArity = 2;
  transact_BANG_.cljs$lang$applyTo = function(arglist__20413) {
    var conn = cljs.core.first(arglist__20413);
    arglist__20413 = cljs.core.next(arglist__20413);
    var tx_data = cljs.core.first(arglist__20413);
    var p__20372 = cljs.core.rest(arglist__20413);
    return transact_BANG___delegate(conn, tx_data, p__20372);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$variadic = transact_BANG___delegate;
  return transact_BANG_;
}();
datascript.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(conn, callback) {
    return listen_BANG_.call(null, conn, cljs.core.rand.call(null), callback);
  };
  var listen_BANG___3 = function(conn, key, callback) {
    cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "listeners", "listeners", 394544445)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, conn)), cljs.core.assoc, key, callback);
    return key;
  };
  listen_BANG_ = function(conn, key, callback) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, conn, key);
      case 3:
        return listen_BANG___3.call(this, conn, key, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
datascript.unlisten_BANG_ = function unlisten_BANG_(conn, key) {
  return cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "listeners", "listeners", 394544445)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, conn)), cljs.core.dissoc, key);
};
datascript.core.Datom.prototype.cljs$core$IPrintWithWriter$ = true;
datascript.core.Datom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(d, w, opts) {
  var d__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, w, cljs.core.pr_writer, "#datascript/Datom [", " ", "]", opts, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [d__$1.e, d__$1.a, d__$1.v, d__$1.tx, d__$1.added], null));
};
datascript.datom = function() {
  var datom__delegate = function(e, a, v, p__20414) {
    var vec__20416 = p__20414;
    var tx = cljs.core.nth.call(null, vec__20416, 0, null);
    var added = cljs.core.nth.call(null, vec__20416, 1, null);
    return new datascript.core.Datom(e, a, v, function() {
      var or__3799__auto__ = tx;
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return datascript.tx0;
      }
    }(), added == null ? true : added, null, null, null);
  };
  var datom = function(e, a, v, var_args) {
    var p__20414 = null;
    if (arguments.length > 3) {
      var G__20417__i = 0, G__20417__a = new Array(arguments.length - 3);
      while (G__20417__i < G__20417__a.length) {
        G__20417__a[G__20417__i] = arguments[G__20417__i + 3];
        ++G__20417__i;
      }
      p__20414 = new cljs.core.IndexedSeq(G__20417__a, 0);
    }
    return datom__delegate.call(this, e, a, v, p__20414);
  };
  datom.cljs$lang$maxFixedArity = 3;
  datom.cljs$lang$applyTo = function(arglist__20418) {
    var e = cljs.core.first(arglist__20418);
    arglist__20418 = cljs.core.next(arglist__20418);
    var a = cljs.core.first(arglist__20418);
    arglist__20418 = cljs.core.next(arglist__20418);
    var v = cljs.core.first(arglist__20418);
    var p__20414 = cljs.core.rest(arglist__20418);
    return datom__delegate(e, a, v, p__20414);
  };
  datom.cljs$core$IFn$_invoke$arity$variadic = datom__delegate;
  return datom;
}();
datascript.datom_from_reader = function datom_from_reader(p__20419) {
  var vec__20421 = p__20419;
  var e = cljs.core.nth.call(null, vec__20421, 0, null);
  var a = cljs.core.nth.call(null, vec__20421, 1, null);
  var v = cljs.core.nth.call(null, vec__20421, 2, null);
  var tx = cljs.core.nth.call(null, vec__20421, 3, null);
  var added = cljs.core.nth.call(null, vec__20421, 4, null);
  return datascript.datom.call(null, e, a, v, tx, added);
};
datascript.pr_db = function pr_db(db, w, opts) {
  cljs.core._write.call(null, w, "#datascript/DB {");
  cljs.core._write.call(null, w, ":schema ");
  cljs.core.pr_writer.call(null, datascript.core._schema.call(null, db), w, opts);
  cljs.core._write.call(null, w, ", :datoms ");
  cljs.core.pr_sequential_writer.call(null, w, function(d, w__$1, opts__$1) {
    return cljs.core.pr_sequential_writer.call(null, w__$1, cljs.core.pr_writer, "[", " ", "]", opts__$1, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.e, d.a, d.v, d.tx], null));
  }, "[", " ", "]", opts, datascript.core._datoms.call(null, db, new cljs.core.Keyword(null, "eavt", "eavt", -666437073), cljs.core.PersistentVector.EMPTY));
  return cljs.core._write.call(null, w, "}");
};
datascript.core.FilteredDB.prototype.cljs$core$IPrintWithWriter$ = true;
datascript.core.FilteredDB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(db, w, opts) {
  var db__$1 = this;
  return datascript.pr_db.call(null, db__$1, w, opts);
};
datascript.core.DB.prototype.cljs$core$IPrintWithWriter$ = true;
datascript.core.DB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(db, w, opts) {
  var db__$1 = this;
  return datascript.pr_db.call(null, db__$1, w, opts);
};
datascript.db_from_reader = function db_from_reader(p__20422) {
  var map__20426 = p__20422;
  var map__20426__$1 = cljs.core.seq_QMARK_.call(null, map__20426) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20426) : map__20426;
  var datoms = cljs.core.get.call(null, map__20426__$1, new cljs.core.Keyword(null, "datoms", "datoms", -290874434));
  var schema = cljs.core.get.call(null, map__20426__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  return datascript.init_db.call(null, cljs.core.map.call(null, function(map__20426, map__20426__$1, datoms, schema) {
    return function(p__20427) {
      var vec__20428 = p__20427;
      var e = cljs.core.nth.call(null, vec__20428, 0, null);
      var a = cljs.core.nth.call(null, vec__20428, 1, null);
      var v = cljs.core.nth.call(null, vec__20428, 2, null);
      var tx = cljs.core.nth.call(null, vec__20428, 3, null);
      return new datascript.core.Datom(e, a, v, tx, true, null, null, null);
    };
  }(map__20426, map__20426__$1, datoms, schema), datoms), schema);
};
datascript.last_tempid = cljs.core.atom.call(null, -1E6);
datascript.tempid = function() {
  var tempid = null;
  var tempid__1 = function(part) {
    if (cljs.core._EQ_.call(null, part, new cljs.core.Keyword("db.part", "tx", "db.part/tx", -1480923213))) {
      return new cljs.core.Keyword("db", "current-tx", "db/current-tx", 1600722132);
    } else {
      return cljs.core.swap_BANG_.call(null, datascript.last_tempid, cljs.core.dec);
    }
  };
  var tempid__2 = function(part, x) {
    if (cljs.core._EQ_.call(null, part, new cljs.core.Keyword("db.part", "tx", "db.part/tx", -1480923213))) {
      return new cljs.core.Keyword("db", "current-tx", "db/current-tx", 1600722132);
    } else {
      return x;
    }
  };
  tempid = function(part, x) {
    switch(arguments.length) {
      case 1:
        return tempid__1.call(this, part);
      case 2:
        return tempid__2.call(this, part, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tempid.cljs$core$IFn$_invoke$arity$1 = tempid__1;
  tempid.cljs$core$IFn$_invoke$arity$2 = tempid__2;
  return tempid;
}();
datascript.resolve_tempid = function resolve_tempid(_db, tempids, tempid) {
  return cljs.core.get.call(null, tempids, tempid);
};
datascript.db = cljs.core.deref;
datascript.transact = function() {
  var transact__delegate = function(conn, tx_data, p__20429) {
    var vec__20434 = p__20429;
    var tx_meta = cljs.core.nth.call(null, vec__20434, 0, null);
    var res = datascript.transact_BANG_.call(null, conn, tx_data, tx_meta);
    if (typeof datascript.t20435 !== "undefined") {
    } else {
      datascript.t20435 = function(res, tx_meta, vec__20434, p__20429, tx_data, conn, transact, meta20436) {
        this.res = res;
        this.tx_meta = tx_meta;
        this.vec__20434 = vec__20434;
        this.p__20429 = p__20429;
        this.tx_data = tx_data;
        this.conn = conn;
        this.transact = transact;
        this.meta20436 = meta20436;
        this.cljs$lang$protocol_mask$partition1$ = 1;
        this.cljs$lang$protocol_mask$partition0$ = 491520;
      };
      datascript.t20435.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(res, vec__20434, tx_meta) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
      }(res, vec__20434, tx_meta);
      datascript.t20435.prototype.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 = function(res, vec__20434, tx_meta) {
        return function(_, ___$1, ___$2) {
          var self__ = this;
          var ___$3 = this;
          return self__.res;
        };
      }(res, vec__20434, tx_meta);
      datascript.t20435.prototype.cljs$core$IDeref$_deref$arity$1 = function(res, vec__20434, tx_meta) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.res;
        };
      }(res, vec__20434, tx_meta);
      datascript.t20435.prototype.cljs$core$IMeta$_meta$arity$1 = function(res, vec__20434, tx_meta) {
        return function(_20437) {
          var self__ = this;
          var _20437__$1 = this;
          return self__.meta20436;
        };
      }(res, vec__20434, tx_meta);
      datascript.t20435.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(res, vec__20434, tx_meta) {
        return function(_20437, meta20436__$1) {
          var self__ = this;
          var _20437__$1 = this;
          return new datascript.t20435(self__.res, self__.tx_meta, self__.vec__20434, self__.p__20429, self__.tx_data, self__.conn, self__.transact, meta20436__$1);
        };
      }(res, vec__20434, tx_meta);
      datascript.t20435.cljs$lang$type = true;
      datascript.t20435.cljs$lang$ctorStr = "datascript/t20435";
      datascript.t20435.cljs$lang$ctorPrWriter = function(res, vec__20434, tx_meta) {
        return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
          return cljs.core._write.call(null, writer__4387__auto__, "datascript/t20435");
        };
      }(res, vec__20434, tx_meta);
      datascript.__GT_t20435 = function(res, vec__20434, tx_meta) {
        return function __GT_t20435(res__$1, tx_meta__$1, vec__20434__$1, p__20429__$1, tx_data__$1, conn__$1, transact__$1, meta20436) {
          return new datascript.t20435(res__$1, tx_meta__$1, vec__20434__$1, p__20429__$1, tx_data__$1, conn__$1, transact__$1, meta20436);
        };
      }(res, vec__20434, tx_meta);
    }
    return new datascript.t20435(res, tx_meta, vec__20434, p__20429, tx_data, conn, transact, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 178, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 172, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/datascript.cljs"], 
    null));
  };
  var transact = function(conn, tx_data, var_args) {
    var p__20429 = null;
    if (arguments.length > 2) {
      var G__20438__i = 0, G__20438__a = new Array(arguments.length - 2);
      while (G__20438__i < G__20438__a.length) {
        G__20438__a[G__20438__i] = arguments[G__20438__i + 2];
        ++G__20438__i;
      }
      p__20429 = new cljs.core.IndexedSeq(G__20438__a, 0);
    }
    return transact__delegate.call(this, conn, tx_data, p__20429);
  };
  transact.cljs$lang$maxFixedArity = 2;
  transact.cljs$lang$applyTo = function(arglist__20439) {
    var conn = cljs.core.first(arglist__20439);
    arglist__20439 = cljs.core.next(arglist__20439);
    var tx_data = cljs.core.first(arglist__20439);
    var p__20429 = cljs.core.rest(arglist__20439);
    return transact__delegate(conn, tx_data, p__20429);
  };
  transact.cljs$core$IFn$_invoke$arity$variadic = transact__delegate;
  return transact;
}();
datascript.future_call = function future_call(f) {
  var res = cljs.core.atom.call(null, null);
  var realized = cljs.core.atom.call(null, false);
  setTimeout(function(res, realized) {
    return function() {
      cljs.core.reset_BANG_.call(null, res, f.call(null));
      return cljs.core.reset_BANG_.call(null, realized, true);
    };
  }(res, realized), 0);
  if (typeof datascript.t20443 !== "undefined") {
  } else {
    datascript.t20443 = function(realized, res, f, future_call, meta20444) {
      this.realized = realized;
      this.res = res;
      this.f = f;
      this.future_call = future_call;
      this.meta20444 = meta20444;
      this.cljs$lang$protocol_mask$partition1$ = 1;
      this.cljs$lang$protocol_mask$partition0$ = 491520;
    };
    datascript.t20443.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(res, realized) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.realized);
      };
    }(res, realized);
    datascript.t20443.prototype.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 = function(res, realized) {
      return function(_, ___$1, timeout_val) {
        var self__ = this;
        var ___$2 = this;
        if (cljs.core.truth_(cljs.core.deref.call(null, self__.realized))) {
          return cljs.core.deref.call(null, self__.res);
        } else {
          return timeout_val;
        }
      };
    }(res, realized);
    datascript.t20443.prototype.cljs$core$IDeref$_deref$arity$1 = function(res, realized) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.res);
      };
    }(res, realized);
    datascript.t20443.prototype.cljs$core$IMeta$_meta$arity$1 = function(res, realized) {
      return function(_20445) {
        var self__ = this;
        var _20445__$1 = this;
        return self__.meta20444;
      };
    }(res, realized);
    datascript.t20443.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(res, realized) {
      return function(_20445, meta20444__$1) {
        var self__ = this;
        var _20445__$1 = this;
        return new datascript.t20443(self__.realized, self__.res, self__.f, self__.future_call, meta20444__$1);
      };
    }(res, realized);
    datascript.t20443.cljs$lang$type = true;
    datascript.t20443.cljs$lang$ctorStr = "datascript/t20443";
    datascript.t20443.cljs$lang$ctorPrWriter = function(res, realized) {
      return function(this__4386__auto__, writer__4387__auto__, opt__4388__auto__) {
        return cljs.core._write.call(null, writer__4387__auto__, "datascript/t20443");
      };
    }(res, realized);
    datascript.__GT_t20443 = function(res, realized) {
      return function __GT_t20443(realized__$1, res__$1, f__$1, future_call__$1, meta20444) {
        return new datascript.t20443(realized__$1, res__$1, f__$1, future_call__$1, meta20444);
      };
    }(res, realized);
  }
  return new datascript.t20443(realized, res, f, future_call, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 191, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 185, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brpocock/Projects/censorius/censorius/www/js/datascript.cljs"], 
  null));
};
datascript.transact_async = function() {
  var transact_async__delegate = function(conn, tx_data, p__20446) {
    var vec__20448 = p__20446;
    var tx_meta = cljs.core.nth.call(null, vec__20448, 0, null);
    return datascript.future_call.call(null, function(vec__20448, tx_meta) {
      return function() {
        return datascript.transact_BANG_.call(null, conn, tx_data, tx_meta);
      };
    }(vec__20448, tx_meta));
  };
  var transact_async = function(conn, tx_data, var_args) {
    var p__20446 = null;
    if (arguments.length > 2) {
      var G__20449__i = 0, G__20449__a = new Array(arguments.length - 2);
      while (G__20449__i < G__20449__a.length) {
        G__20449__a[G__20449__i] = arguments[G__20449__i + 2];
        ++G__20449__i;
      }
      p__20446 = new cljs.core.IndexedSeq(G__20449__a, 0);
    }
    return transact_async__delegate.call(this, conn, tx_data, p__20446);
  };
  transact_async.cljs$lang$maxFixedArity = 2;
  transact_async.cljs$lang$applyTo = function(arglist__20450) {
    var conn = cljs.core.first(arglist__20450);
    arglist__20450 = cljs.core.next(arglist__20450);
    var tx_data = cljs.core.first(arglist__20450);
    var p__20446 = cljs.core.rest(arglist__20450);
    return transact_async__delegate(conn, tx_data, p__20446);
  };
  transact_async.cljs$core$IFn$_invoke$arity$variadic = transact_async__delegate;
  return transact_async;
}();
datascript.rand_bits = function rand_bits(pow) {
  return cljs.core.rand_int.call(null, 1 << pow);
};
datascript.squuid = function squuid() {
  return new cljs.core.UUID([cljs.core.str(Math.round.call(null, (new Date).getTime() / 1E3).toString(16)), cljs.core.str("-"), cljs.core.str(datascript.rand_bits.call(null, 16).toString(16)), cljs.core.str("-"), cljs.core.str((datascript.rand_bits.call(null, 16) & 4095 | 16384).toString(16)), cljs.core.str("-"), cljs.core.str((datascript.rand_bits.call(null, 16) & 16383 | 32768).toString(16)), cljs.core.str("-"), cljs.core.str(datascript.rand_bits.call(null, 16).toString(16)), cljs.core.str(datascript.rand_bits.call(null, 
  16).toString(16)), cljs.core.str(datascript.rand_bits.call(null, 16).toString(16))].join(""));
};
datascript.squuid_time_millis = function squuid_time_millis(uuid) {
  return parseInt(cljs.core.subs.call(null, uuid.uuid, 0, 8), 16) * 1E3;
};
// Input 74
goog.provide("censorius.staff");
goog.require("cljs.core");
goog.require("reagent.session");
goog.require("reagent.core");
goog.require("clojure.string");
censorius.staff._PLUS_staff_mail_PLUS_ = new cljs.core.PersistentArrayMap(null, 3, ["ama422@aol.com", new cljs.core.Keyword(null, "ann-marie", "ann-marie", 1311777704), "brpocock@star-hope.org", new cljs.core.Keyword(null, "brfp", "brfp", -453321611), "sage@star-hope.org", new cljs.core.Keyword(null, "sage", "sage", -2121201294)], null);
censorius.staff._PLUS_bod_PLUS_ = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ann-marie", "ann-marie", 1311777704), new cljs.core.Keyword(null, "lady-rae", "lady-rae", -725479217), new cljs.core.Keyword(null, "medea", "medea", 1885392994), new cljs.core.Keyword(null, "teresa", "teresa", -257696462), new cljs.core.Keyword(null, "paul", "paul", 692559859)], null);
censorius.staff._PLUS_div_PLUS_ = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cauldron", "cauldron", -203144344), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord", "coord", -1453656639), new cljs.core.Keyword(null, "alysia", "alysia", -719994884), new cljs.core.Keyword(null, "name", "name", 1843675177), "Bubbling Cauldron"], null), new cljs.core.Keyword(null, "hearth", "hearth", 2129007546), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"coord", "coord", -1453656639), new cljs.core.Keyword(null, "narissa", "narissa", -445229323), new cljs.core.Keyword(null, "name", "name", 1843675177), "Guest Hearth"], null), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord", "coord", -1453656639), new cljs.core.Keyword(null, "mystral", "mystral", -87066447), new cljs.core.Keyword(null, "name", "name", 1843675177), "Operations"], null), new cljs.core.Keyword(null, 
"registration", "registration", 1079145595), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord", "coord", -1453656639), new cljs.core.Keyword(null, "bobbi-jo", "bobbi-jo", 1767669210), new cljs.core.Keyword(null, "name", "name", 1843675177), "Registration"], null), new cljs.core.Keyword(null, "site", "site", -1852581499), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord", "coord", -1453656639), new cljs.core.Keyword(null, "doug", "doug", -1595921985), 
new cljs.core.Keyword(null, "name", "name", 1843675177), "Site"], null), new cljs.core.Keyword(null, "staff", "staff", -921597568), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord", "coord", -1453656639), new cljs.core.Keyword(null, "sandi", "sandi", -551873699), new cljs.core.Keyword(null, "name", "name", 1843675177), "Staff Services"], null), new cljs.core.Keyword(null, "bod", "bod", 276101359), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"name", "name", 1843675177), "Board of Directors' Division"], null)], null);
censorius.staff._PLUS_service_leaders_PLUS_ = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guardian", "guardian", -1005105625), new cljs.core.Keyword(null, "sqrl", "sqrl", 178580718), new cljs.core.Keyword(null, "drums", "drums", 641393692), new cljs.core.Keyword(null, "nicole", "nicole", -437967428)], null);
censorius.staff._PLUS_advisory_PLUS_ = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scott-kelly", "scott-kelly", -1093270568), new cljs.core.Keyword(null, "mystral", "mystral", -87066447)], null);
censorius.staff._PLUS_elders_PLUS_ = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "roger", "roger", -24647299), new cljs.core.Keyword(null, "galan", "galan", 729267610), new cljs.core.Keyword(null, "thundar", "thundar", -768471345), new cljs.core.Keyword(null, "guardian-bob", "guardian-bob", -863988012), new cljs.core.Keyword(null, "arachne", "arachne", -1788332555)], null);
censorius.staff._PLUS_departments_PLUS_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "fire", "fire", -144730624), new cljs.core.Keyword(null, "site", "site", -1852581499), new cljs.core.Keyword(null, "store", "store", 1512230022), new cljs.core.Keyword(null, "community", "community", 1600340198), new cljs.core.Keyword(null, "workshops", "workshops", -154332472), new cljs.core.Keyword(null, "staffing", "staffing", -485495093), new cljs.core.Keyword(null, "gungans", "gungans", 
532803435), new cljs.core.Keyword(null, "vendors", "vendors", -153040496), new cljs.core.Keyword(null, "office", "office", -733494767), new cljs.core.Keyword(null, "parking", "parking", -952236974), new cljs.core.Keyword(null, "comptroller", "comptroller", 197415026), new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword(null, "ritual", "ritual", 1818141075), new cljs.core.Keyword(null, "taxi", "taxi", 1533748116), new cljs.core.Keyword(null, "gate", "gate", 818072149), new cljs.core.Keyword(null, 
"tween", "tween", 1743568853), new cljs.core.Keyword(null, "design", "design", 1241338903), new cljs.core.Keyword(null, "hearth", "hearth", 2129007546), new cljs.core.Keyword(null, "registration", "registration", 1079145595), new cljs.core.Keyword(null, "tech", "tech", -2100994563), new cljs.core.Keyword(null, "concert", "concert", 1864837917), new cljs.core.Keyword(null, "trash", "trash", -1136970594), new cljs.core.Keyword(null, "teen", "teen", -987391202), new cljs.core.Keyword(null, "web", "web", 
-654701153)], [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "dee", "dee", -1453464236), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "site", "site", -1852581499), new cljs.core.Keyword(null, "name", "name", 1843675177), "Fire Circle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cliff", "cliff", 175533848), new cljs.core.Keyword(null, "joe", "joe", 253775498)], null), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "site", "site", -1852581499), new cljs.core.Keyword(null, "name", "name", 1843675177), "Site \x26 Strike"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "beth", 
"beth", 1126685256), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Store Runner"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "thor", "thor", -116169080), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, 
"name", "name", 1843675177), "Community Groups"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "sage", "sage", -2121201294), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Workshops"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), 
new cljs.core.Keyword(null, "medea", "medea", 1885392994), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "bod", "bod", 276101359), new cljs.core.Keyword(null, "name", "name", 1843675177), "Staffing"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "perseus", "perseus", -187104979), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "site", 
"site", -1852581499), new cljs.core.Keyword(null, "name", "name", 1843675177), "Gungans"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "sage", "sage", -2121201294), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Vendors"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"lugal", "lugal", -403063582), new cljs.core.Keyword(null, "jessica", "jessica", -1730042811), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "staff", "staff", -921597568), new cljs.core.Keyword(null, "name", "name", 1843675177), "Ministry of Magic"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "geoffrey", "geoffrey", -2101332274), new cljs.core.Keyword(null, "div", "div", 
1057191632), new cljs.core.Keyword(null, "registration", "registration", 1079145595), new cljs.core.Keyword(null, "name", "name", 1843675177), "Parking"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ray", "ray", -972479417), new cljs.core.Keyword(null, "jade", "jade", -1018802444)], null), new cljs.core.Keyword(null, "div", 
"div", 1057191632), new cljs.core.Keyword(null, "bod", "bod", 276101359), new cljs.core.Keyword(null, "name", "name", 1843675177), "Comptroller"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "jennifer", "jennifer", 55370407), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Kids' Realm"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "roger", "roger", -24647299), new cljs.core.Keyword(null, "scion", "scion", -476471628)], null), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "bod", "bod", 276101359), new cljs.core.Keyword(null, "name", "name", 1843675177), "Ritual"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "aurora", "aurora", -1771270263), new cljs.core.Keyword(null, "jim", "jim", 1658027601)], null), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "hearth", "hearth", 2129007546), new cljs.core.Keyword(null, "name", "name", 1843675177), "Taxi/Trolley"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "tony", "tony", -215676110), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "registration", "registration", 1079145595), new cljs.core.Keyword(null, "name", "name", 1843675177), "Gate"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "soren", "soren", 
-1209624393), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Tween Time"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mystral", "mystral", -87066447), new cljs.core.Keyword(null, "diane", "diane", 1117169956), 
new cljs.core.Keyword(null, "medea", "medea", 1885392994)], null), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Design Team"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "cowboy", "cowboy", -1169819704), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, 
"hearth", "hearth", 2129007546), new cljs.core.Keyword(null, "name", "name", 1843675177), "Guest Hearth"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "amanda", "amanda", -1928035343), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "registration", "registration", 1079145595), new cljs.core.Keyword(null, "name", "name", 1843675177), "Registration"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "brfp", "brfp", -453321611), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Technology"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "paul", "paul", 692559859), new cljs.core.Keyword(null, "div", 
"div", 1057191632), new cljs.core.Keyword(null, "bod", "bod", 276101359), new cljs.core.Keyword(null, "name", "name", 1843675177), "Concert Sound \x26 Lights"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), null, new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "site", "site", -1852581499), new cljs.core.Keyword(null, "name", "name", 1843675177), "Trash"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), null, new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, "ops", "ops", 1237330063), new cljs.core.Keyword(null, "name", "name", 1843675177), "Teen Forge"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "lugal", "lugal", -403063582), new cljs.core.Keyword(null, "diane", "diane", 1117169956), new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.Keyword(null, 
"bod", "bod", 276101359), new cljs.core.Keyword(null, "name", "name", 1843675177), "Photography \x26 Web Design"], null)]);
censorius.staff._PLUS_drummers_PLUS_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "nicole", "nicole", -437967428), null], null), null);
censorius.staff._PLUS_guardians_PLUS_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fox", "fox", -471953117), null, new cljs.core.Keyword(null, "sqrl", "sqrl", 178580718), null], null), null);
censorius.staff.highest_job_QMARK_ = function highest_job_QMARK_(staff_id) {
  var or__3799__auto__ = function() {
    var and__3787__auto__ = cljs.core.get.call(null, censorius.staff._PLUS_bod_PLUS_, staff_id);
    if (cljs.core.truth_(and__3787__auto__)) {
      return new cljs.core.Keyword(null, "bod", "bod", 276101359);
    } else {
      return and__3787__auto__;
    }
  }();
  if (cljs.core.truth_(or__3799__auto__)) {
    return or__3799__auto__;
  } else {
    var or__3799__auto____$1 = function() {
      var and__3787__auto__ = cljs.core.some.call(null, function(or__3799__auto__) {
        return function(p1__10360_SHARP_) {
          return cljs.core._EQ_.call(null, staff_id, (new cljs.core.Keyword(null, "coord", "coord", -1453656639)).cljs$core$IFn$_invoke$arity$1(censorius.staff._PLUS_div_PLUS_.call(null, p1__10360_SHARP_)));
        };
      }(or__3799__auto__), cljs.core.keys.call(null, censorius.staff._PLUS_div_PLUS_));
      if (cljs.core.truth_(and__3787__auto__)) {
        return new cljs.core.Keyword(null, "dc", "dc", 1726058308);
      } else {
        return and__3787__auto__;
      }
    }();
    if (cljs.core.truth_(or__3799__auto____$1)) {
      return or__3799__auto____$1;
    } else {
      var or__3799__auto____$2 = function() {
        var and__3787__auto__ = cljs.core.some.call(null, function(or__3799__auto____$1, or__3799__auto__) {
          return function(p1__10361_SHARP_) {
            return cljs.core._EQ_.call(null, staff_id, censorius.staff._PLUS_service_leaders_PLUS_.call(null, p1__10361_SHARP_));
          };
        }(or__3799__auto____$1, or__3799__auto__), cljs.core.keys.call(null, censorius.staff._PLUS_service_leaders_PLUS_));
        if (cljs.core.truth_(and__3787__auto__)) {
          return new cljs.core.Keyword(null, "service-leader", "service-leader", -61065763);
        } else {
          return and__3787__auto__;
        }
      }();
      if (cljs.core.truth_(or__3799__auto____$2)) {
        return or__3799__auto____$2;
      } else {
        var or__3799__auto____$3 = function() {
          var and__3787__auto__ = cljs.core.get.call(null, censorius.staff._PLUS_advisory_PLUS_, staff_id);
          if (cljs.core.truth_(and__3787__auto__)) {
            return new cljs.core.Keyword(null, "advisory-board", "advisory-board", -2057412054);
          } else {
            return and__3787__auto__;
          }
        }();
        if (cljs.core.truth_(or__3799__auto____$3)) {
          return or__3799__auto____$3;
        } else {
          var or__3799__auto____$4 = function() {
            var and__3787__auto__ = cljs.core.get.call(null, censorius.staff._PLUS_elders_PLUS_, staff_id);
            if (cljs.core.truth_(and__3787__auto__)) {
              return new cljs.core.Keyword(null, "elder", "elder", -39663383);
            } else {
              return and__3787__auto__;
            }
          }();
          if (cljs.core.truth_(or__3799__auto____$4)) {
            return or__3799__auto____$4;
          } else {
            var or__3799__auto____$5 = function() {
              var and__3787__auto__ = cljs.core.some.call(null, function(or__3799__auto____$4, or__3799__auto____$3, or__3799__auto____$2, or__3799__auto____$1, or__3799__auto__) {
                return function(p1__10362_SHARP_) {
                  return cljs.core._EQ_.call(null, staff_id, (new cljs.core.Keyword(null, "lugal", "lugal", -403063582)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, censorius.staff._PLUS_departments_PLUS_, p1__10362_SHARP_)));
                };
              }(or__3799__auto____$4, or__3799__auto____$3, or__3799__auto____$2, or__3799__auto____$1, or__3799__auto__), cljs.core.keys.call(null, censorius.staff._PLUS_departments_PLUS_));
              if (cljs.core.truth_(and__3787__auto__)) {
                return new cljs.core.Keyword(null, "lugal", "lugal", -403063582);
              } else {
                return and__3787__auto__;
              }
            }();
            if (cljs.core.truth_(or__3799__auto____$5)) {
              return or__3799__auto____$5;
            } else {
              var or__3799__auto____$6 = function() {
                var and__3787__auto__ = cljs.core.get.call(null, censorius.staff._PLUS_guardians_PLUS_, staff_id);
                if (cljs.core.truth_(and__3787__auto__)) {
                  return new cljs.core.Keyword(null, "guardian", "guardian", -1005105625);
                } else {
                  return and__3787__auto__;
                }
              }();
              if (cljs.core.truth_(or__3799__auto____$6)) {
                return or__3799__auto____$6;
              } else {
                var or__3799__auto____$7 = function() {
                  var and__3787__auto__ = cljs.core.get.call(null, censorius.staff._PLUS_drummers_PLUS_, staff_id);
                  if (cljs.core.truth_(and__3787__auto__)) {
                    return new cljs.core.Keyword(null, "drummer", "drummer", -1100253010);
                  } else {
                    return and__3787__auto__;
                  }
                }();
                if (cljs.core.truth_(or__3799__auto____$7)) {
                  return or__3799__auto____$7;
                } else {
                  var or__3799__auto____$8 = function() {
                    var and__3787__auto__ = cljs.core.some.call(null, function(or__3799__auto____$7, or__3799__auto____$6, or__3799__auto____$5, or__3799__auto____$4, or__3799__auto____$3, or__3799__auto____$2, or__3799__auto____$1, or__3799__auto__) {
                      return function(p1__10363_SHARP_) {
                        return cljs.core.get.call(null, (new cljs.core.Keyword(null, "staff", "staff", -921597568)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, censorius.staff._PLUS_departments_PLUS_, p1__10363_SHARP_)), staff_id);
                      };
                    }(or__3799__auto____$7, or__3799__auto____$6, or__3799__auto____$5, or__3799__auto____$4, or__3799__auto____$3, or__3799__auto____$2, or__3799__auto____$1, or__3799__auto__), cljs.core.keys.call(null, censorius.staff._PLUS_departments_PLUS_));
                    if (cljs.core.truth_(and__3787__auto__)) {
                      return new cljs.core.Keyword(null, "staff", "staff", -921597568);
                    } else {
                      return and__3787__auto__;
                    }
                  }();
                  if (cljs.core.truth_(or__3799__auto____$8)) {
                    return or__3799__auto____$8;
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
censorius.staff.staff_id = function staff_id(person) {
  return cljs.core.get.call(null, censorius.staff._PLUS_staff_mail_PLUS_, person);
};
censorius.staff.lugal_PLUS__QMARK_ = function lugal_PLUS__QMARK_(person) {
  var temp__4126__auto__ = censorius.staff.staff_id.call(null, person);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var staff_id = temp__4126__auto__;
    var job = censorius.staff.highest_job_QMARK_.call(null, staff_id);
    return cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [null, null, new cljs.core.Keyword(null, "staff", "staff", -921597568), null], null), null)).call(null, job));
  } else {
    return null;
  }
};
// Input 75
goog.provide("censorius.radio");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("secretary.core");
goog.require("reagent.session");
goog.require("clojure.data");
goog.require("goog.history.EventType");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("goog.events");
goog.require("censorius.utils");
goog.require("clojure.string");
censorius.radio.write_select = function write_select(cursor, label, korks, tags, size, name) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "size", "size", 1098693007), size, new cljs.core.Keyword(null, "name", "name", 1843675177), name, new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.get.call(null, cursor, korks), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(event) {
    return cljs.core.swap_BANG_.call(null, cursor, cljs.core.assoc, korks, event.target.value);
  }], null), cljs.core.map.call(null, function(p__10367) {
    var vec__10368 = p__10367;
    var tag = cljs.core.nth.call(null, vec__10368, 0, null);
    var name__$1 = cljs.core.nth.call(null, vec__10368, 1, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), [cljs.core.str(tag)].join("")], null), name__$1], null);
  }, tags)], null);
};
censorius.radio.radio_set = function radio_set(p__10369, children, this$) {
  var map__10375 = p__10369;
  var map__10375__$1 = cljs.core.seq_QMARK_.call(null, map__10375) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10375) : map__10375;
  var tags = cljs.core.get.call(null, map__10375__$1, new cljs.core.Keyword(null, "tags", "tags", 1771418977));
  var korks = cljs.core.get.call(null, map__10375__$1, new cljs.core.Keyword(null, "korks", "korks", -1343842342));
  var label = cljs.core.get.call(null, map__10375__$1, new cljs.core.Keyword(null, "label", "label", 1718410804));
  var cursor = cljs.core.get.call(null, map__10375__$1, new cljs.core.Keyword(null, "cursor", "cursor", 1011937484));
  var name = censorius.utils.gensymreally.call(null, label);
  var key_string = censorius.utils.keyword__GT_string.call(null, korks);
  return function(name, key_string, map__10375, map__10375__$1, tags, korks, label, cursor) {
    return function(cursor__$1, p__10376) {
      var map__10377 = p__10376;
      var map__10377__$1 = cljs.core.seq_QMARK_.call(null, map__10377) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10377) : map__10377;
      var tags__$1 = cljs.core.get.call(null, map__10377__$1, new cljs.core.Keyword(null, "tags", "tags", 1771418977));
      var korks__$1 = cljs.core.get.call(null, map__10377__$1, new cljs.core.Keyword(null, "korks", "korks", -1343842342));
      var label__$1 = cljs.core.get.call(null, map__10377__$1, new cljs.core.Keyword(null, "label", "label", 1718410804));
      var cursor__$2 = cljs.core.get.call(null, map__10377__$1, new cljs.core.Keyword(null, "cursor", "cursor", 1011937484));
      if (15 > cljs.core.count.call(null, tags__$1)) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
        "for", "for", -1323786319), name], null), label__$1], null)], null), censorius.radio.write_select.call(null, cursor__$2, label__$1, korks__$1, tags__$1, 10, name)], null);
      } else {
        if (5 > cljs.core.count.call(null, tags__$1)) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), label__$1, censorius.radio.write_select.call(null, cursor__$2, label__$1, korks__$1, tags__$1, 1, name)], null);
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), label__$1], null)], null), cljs.core.map.call(null, 
          function(map__10377, map__10377__$1, tags__$1, korks__$1, label__$1, cursor__$2, name, key_string, map__10375, map__10375__$1, tags, korks, label, cursor) {
            return function(p__10378) {
              var vec__10379 = p__10378;
              var tag = cljs.core.nth.call(null, vec__10379, 0, null);
              var name__$1 = cljs.core.nth.call(null, vec__10379, 1, null);
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
              "name", "name", 1843675177), [cljs.core.str(name__$1), cljs.core.str("-"), cljs.core.str(key_string)].join(""), new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "value", "value", 305978217), [cljs.core.str(tag)].join(""), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(vec__10379, tag, name__$1, map__10377, map__10377__$1, tags__$1, korks__$1, label__$1, cursor__$2, name, key_string, map__10375, map__10375__$1, tags, 
              korks, label, cursor) {
                return function(event) {
                  var node = event.target;
                  var checked = node.checked;
                  if (cljs.core.truth_(checked)) {
                    return cljs.core.swap_BANG_.call(null, cursor__$2, cljs.core.assoc, korks__$1, tag);
                  } else {
                    return null;
                  }
                };
              }(vec__10379, tag, name__$1, map__10377, map__10377__$1, tags__$1, korks__$1, label__$1, cursor__$2, name, key_string, map__10375, map__10375__$1, tags, korks, label, cursor), new cljs.core.Keyword(null, "checked", "checked", -50955819), cljs.core._EQ_.call(null, tag, cljs.core.get.call(null, cursor__$2, korks__$1))], null)], null), name__$1], null)], null);
            };
          }(map__10377, map__10377__$1, tags__$1, korks__$1, label__$1, cursor__$2, name, key_string, map__10375, map__10375__$1, tags, korks, label, cursor), tags__$1)], null);
        }
      }
    };
  }(name, key_string, map__10375, map__10375__$1, tags, korks, label, cursor);
};
// Input 76
goog.provide("censorius.data");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("clojure.string");
if (typeof censorius.data.guests !== "undefined") {
} else {
  censorius.data.guests = reagent.core.atom.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800), new cljs.core.Keyword(null, "called-by", "called-by", -644178399), new cljs.core.Keyword(null, "day", "day", -274800446), new cljs.core.Keyword(null, "coffee?", "coffee?", -1296287323), new cljs.core.Keyword(null, "presenter-requests", 
  "presenter-requests", -1238457146), new cljs.core.Keyword(null, "lugal+?", "lugal+?", 1775456646), new cljs.core.Keyword(null, "telephone", "telephone", 1304285416), new cljs.core.Keyword(null, "surname", "surname", 1407918027), new cljs.core.Keyword(null, "e-mail", "e-mail", 270044236), new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.Keyword(null, "formal-name", "formal-name", 2039222E3), new cljs.core.Keyword(null, "presenter-bio", "presenter-bio", 10810706), 
  new cljs.core.Keyword(null, "staff?", "staff?", 1233722098), new cljs.core.Keyword(null, "tote?", "tote?", -1225962794), new cljs.core.Keyword(null, "eat", "eat", 1686757401), new cljs.core.Keyword(null, "sleep", "sleep", -1932665860), new cljs.core.Keyword(null, "adult?", "adult?", -133070051)], [new cljs.core.Keyword(null, "xs", "xs", 649443341), "Sage", null, false, null, true, null, "Starkie", "sage@star-hope.org", "John", null, null, true, false, new cljs.core.Keyword(null, "looney", "looney", 
  -1976949904), new cljs.core.Keyword(null, "tent", "tent", 1392898711), true]))], null));
}
if (typeof censorius.data.extras !== "undefined") {
} else {
  censorius.data.extras = reagent.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
}
if (typeof censorius.data.vending !== "undefined") {
} else {
  censorius.data.vending = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "title", "title", 636505583), null, new cljs.core.Keyword(null, "blurb", "blurb", -769928228), null, new cljs.core.Keyword(null, "notes", "notes", -1039600523), null, new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "agreement", "agreement", -156381462), false], null));
}
if (typeof censorius.data.workshops !== "undefined") {
} else {
  censorius.data.workshops = reagent.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
}
if (typeof censorius.data.festival !== "undefined") {
} else {
  censorius.data.festival = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "season", "season", 851675697), "Beltane", new cljs.core.Keyword(null, "year", "year", 335913393), 2015], null));
}
if (typeof censorius.data.scholarships !== "undefined") {
} else {
  censorius.data.scholarships = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "php", "php", -97199496), 0, new cljs.core.Keyword(null, "seva", "seva", -1044185878), 0, new cljs.core.Keyword(null, "baiardi", "baiardi", -146956275), 0], null));
}
if (typeof censorius.data.prices !== "undefined") {
} else {
  censorius.data.prices = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ticket", "ticket", 1810559700), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "adult", "adult", -1130256462), 95, new cljs.core.Keyword(null, "child", "child", 623967545), 30, new cljs.core.Keyword(null, "under5", "under5", 1338888986), 0, new cljs.core.Keyword(null, "lugal-so", "lugal-so", 1937404932), 30, new cljs.core.Keyword(null, "staff", "staff", 
  -921597568), 30], null), new cljs.core.Keyword(null, "vendor", "vendor", 1931975424), 25, new cljs.core.Keyword(null, "cauldron", "cauldron", -203144344), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "fri-sun", "fri-sun", 1228382169), 45, new cljs.core.Keyword(null, "adult", "adult", -1130256462), 65, new cljs.core.Keyword(null, "child", "child", 623967545), 30, new cljs.core.Keyword(null, "under5", "under5", 1338888986), 0], null), new cljs.core.Keyword(null, "cabin", 
  "cabin", -2096716613), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "regular", "regular", -1153375582), 45, new cljs.core.Keyword(null, "staff", "staff", -921597568), 25], null), new cljs.core.Keyword(null, "lodge", "lodge", 2044562092), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "regular", "regular", -1153375582), 60, new cljs.core.Keyword(null, "staff", "staff", -921597568), 45], null)], null));
}
if (typeof censorius.data.merch !== "undefined") {
} else {
  censorius.data.merch = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "general-shirt", "general-shirt", -1606751454), reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "title", "title", 636505583), "FPG General T-Shirt", new cljs.core.Keyword(null, "description", "description", -1428560544), "The FPG general T-shirt", new cljs.core.Keyword(null, "image", "image", -58725096), "/merch/tshirt_Gen.png", 
  new cljs.core.Keyword(null, "price", "price", 22129180), 175, new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xs", "xs", 649443341), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, 
  "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "s", "s", 1705939918), new cljs.core.Keyword(null, "title", "title", 636505583), "Small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 2], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, 
  "m", "m", 1632677161), new cljs.core.Keyword(null, "title", "title", 636505583), "Medium", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "l", "l", 1395893423), new cljs.core.Keyword(null, "title", "title", 636505583), "Large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, 
  "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xl", "xl", -1689552936), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 
  new cljs.core.Keyword(null, "x2l", "x2l", -1610730555), new cljs.core.Keyword(null, "title", "title", 636505583), "Double extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 1], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x3l", "x3l", -1804109322), new cljs.core.Keyword(null, "title", "title", 636505583), "Triple extra-large", 
  new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 3], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x4l", "x4l", -174833367), new cljs.core.Keyword(null, "title", "title", 636505583), "Quadruple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 2], null), 
  new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x5l", "x5l", -221950248), new cljs.core.Keyword(null, "title", "title", 636505583), "Quintuple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 2], null)], null)], null)), new cljs.core.Keyword(null, "tote-bag", "tote-bag", -1462493277), reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 
  5, [new cljs.core.Keyword(null, "title", "title", 636505583), "FPG Tote Bag", new cljs.core.Keyword(null, "description", "description", -1428560544), "The FPG general T-shirt", new cljs.core.Keyword(null, "image", "image", -58725096), "/merch/tote-bag.jpeg", new cljs.core.Keyword(null, "price", "price", 22129180), 325, new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "tote", "tote", 1783327514), new cljs.core.Keyword(null, "title", "title", 636505583), "Tote Bag", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 13], null)], null)], null)), new cljs.core.Keyword(null, "coffee", "coffee", 23772871), reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "title", 
  "title", 636505583), "FPG Coffee Mug", new cljs.core.Keyword(null, "price", "price", 22129180), 325, new cljs.core.Keyword(null, "description", "description", -1428560544), "The FPG thermal coffee mug is great for other beverages, too", new cljs.core.Keyword(null, "image", "image", -58725096), "/merch/tote-bag.jpeg", new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "tote", "tote", 1783327514), new cljs.core.Keyword(null, "title", "title", 636505583), "Coffee mug", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 140], null)], null)], null)), new cljs.core.Keyword(null, "water", "water", -824098213), reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
  "title", "title", 636505583), "FPG Water Bottle", new cljs.core.Keyword(null, "price", "price", 22129180), 325, new cljs.core.Keyword(null, "description", "description", -1428560544), "The FPG water bottle is great for other beverages, too", new cljs.core.Keyword(null, "image", "image", -58725096), "/merch/tote-bag.jpeg", new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "tote", "tote", 1783327514), new cljs.core.Keyword(null, "title", "title", 636505583), "Water bottle", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 62], null)], null)], null)), new cljs.core.Keyword(null, "festival-shirt", "festival-shirt", -336123619), reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
  "title", "title", 636505583), "Festival T-Shirt", new cljs.core.Keyword(null, "description", "description", -1428560544), "The new T-shirt for Beltane 2015", new cljs.core.Keyword(null, "image", "image", -58725096), "/merch/tshirtS14.png", new cljs.core.Keyword(null, "price", "price", 22129180), 798, new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
  "id", "id", -1388402092), new cljs.core.Keyword(null, "xs", "xs", 649443341), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "s", "s", 1705939918), new cljs.core.Keyword(null, "title", "title", 636505583), "Small", 
  new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "m", "m", 1632677161), new cljs.core.Keyword(null, "title", "title", 636505583), "Medium", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "l", "l", 1395893423), new cljs.core.Keyword(null, "title", "title", 636505583), "Large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xl", "xl", -1689552936), new cljs.core.Keyword(null, "title", 
  "title", 636505583), "Extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x2l", "x2l", -1610730555), new cljs.core.Keyword(null, "title", "title", 636505583), "Double extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", 
  "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x3l", "x3l", -1804109322), new cljs.core.Keyword(null, "title", "title", 636505583), "Triple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 
  new cljs.core.Keyword(null, "x4l", "x4l", -174833367), new cljs.core.Keyword(null, "title", "title", 636505583), "Quadruple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x5l", "x5l", -221950248), new cljs.core.Keyword(null, "title", "title", 636505583), "Quintuple extra-large", 
  new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 999], null)], null)], null)), new cljs.core.Keyword(null, "shirt-b13", "shirt-b13", 1211393936), reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "title", "title", 636505583), "Beltane 2013 T-shirt", new cljs.core.Keyword(null, "description", "description", -1428560544), "The T-shirt from Beltane 2013", new cljs.core.Keyword(null, 
  "image", "image", -58725096), "/merch/tshirtB13.png", new cljs.core.Keyword(null, "price", "price", 22129180), 798, new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xs", "xs", 649443341), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-small", new cljs.core.Keyword(null, 
  "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "s", "s", 1705939918), new cljs.core.Keyword(null, "title", "title", 636505583), "Small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
  "id", "id", -1388402092), new cljs.core.Keyword(null, "m", "m", 1632677161), new cljs.core.Keyword(null, "title", "title", 636505583), "Medium", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "l", "l", 1395893423), new cljs.core.Keyword(null, "title", "title", 636505583), "Large", new cljs.core.Keyword(null, 
  "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xl", "xl", -1689552936), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x2l", "x2l", -1610730555), new cljs.core.Keyword(null, "title", "title", 636505583), "Double extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 1], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x3l", "x3l", -1804109322), new cljs.core.Keyword(null, 
  "title", "title", 636505583), "Triple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 3], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x4l", "x4l", -174833367), new cljs.core.Keyword(null, "title", "title", 636505583), "Quadruple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, 
  "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x5l", "x5l", -221950248), new cljs.core.Keyword(null, "title", "title", 636505583), "Quintuple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 1], null)], null)], null)), new cljs.core.Keyword(null, "shirt-s13", "shirt-s13", 1518117781), 
  reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "title", "title", 636505583), "Samhain 2013 T-shirt", new cljs.core.Keyword(null, "description", "description", -1428560544), "The T-shirt from Samhain 2013", new cljs.core.Keyword(null, "image", "image", -58725096), "/merch/tshirtS13.png", new cljs.core.Keyword(null, "price", "price", 22129180), 798, new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 
  9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xs", "xs", 649443341), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), 
  new cljs.core.Keyword(null, "s", "s", 1705939918), new cljs.core.Keyword(null, "title", "title", 636505583), "Small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "m", "m", 1632677161), new cljs.core.Keyword(null, "title", "title", 636505583), "Medium", new cljs.core.Keyword(null, "qty", 
  "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "l", "l", 1395893423), new cljs.core.Keyword(null, "title", "title", 636505583), "Large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
  "id", "id", -1388402092), new cljs.core.Keyword(null, "xl", "xl", -1689552936), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x2l", "x2l", -1610730555), new cljs.core.Keyword(null, "title", "title", 636505583), "Double extra-large", 
  new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 3], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x3l", "x3l", -1804109322), new cljs.core.Keyword(null, "title", "title", 636505583), "Triple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), 
  new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x4l", "x4l", -174833367), new cljs.core.Keyword(null, "title", "title", 636505583), "Quadruple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 1], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x5l", 
  "x5l", -221950248), new cljs.core.Keyword(null, "title", "title", 636505583), "Quintuple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 1], null)], null)], null)), new cljs.core.Keyword(null, "tank-s13", "tank-s13", 367109427), reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "title", "title", 636505583), "Samhain 2013 Tank top", new cljs.core.Keyword(null, 
  "description", "description", -1428560544), "The Tank top shirt from Samhain 2013", new cljs.core.Keyword(null, "image", "image", -58725096), "/merch/tshirtS13.png", new cljs.core.Keyword(null, "price", "price", 22129180), 798, new cljs.core.Keyword(null, "styles", "styles", 1954480375), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xs", 
  "xs", 649443341), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "s", "s", 1705939918), new cljs.core.Keyword(null, "title", "title", 636505583), "Small", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, 
  "inventory", "inventory", 860201871), 1], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "m", "m", 1632677161), new cljs.core.Keyword(null, "title", "title", 636505583), "Medium", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 3], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, 
  "l", "l", 1395893423), new cljs.core.Keyword(null, "title", "title", 636505583), "Large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 3], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "xl", "xl", -1689552936), new cljs.core.Keyword(null, "title", "title", 636505583), "Extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 
  0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 3], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x2l", "x2l", -1610730555), new cljs.core.Keyword(null, "title", "title", 636505583), "Double extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 1], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
  "id", "id", -1388402092), new cljs.core.Keyword(null, "x3l", "x3l", -1804109322), new cljs.core.Keyword(null, "title", "title", 636505583), "Triple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 1], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x4l", "x4l", -174833367), new cljs.core.Keyword(null, "title", "title", 636505583), 
  "Quadruple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 860201871), 0], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "x5l", "x5l", -221950248), new cljs.core.Keyword(null, "title", "title", 636505583), "Quintuple extra-large", new cljs.core.Keyword(null, "qty", "qty", 155560951), 0, new cljs.core.Keyword(null, "inventory", "inventory", 
  860201871), 0], null)], null)], null))], null));
}
if (typeof censorius.data.people !== "undefined") {
} else {
  censorius.data.people = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "brfp", "brfp", -453321611), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Bruce-Robert"], null), new cljs.core.Keyword(null, "surname", "surname", 1407918027), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["Pocock"], null), new cljs.core.Keyword(null, "dob", "dob", 1329146449), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "year", "year", 335913393), 1977, new cljs.core.Keyword(null, "month", "month", -1960248533), 10, new cljs.core.Keyword(null, "day", "day", -274800446), 21], null), new cljs.core.Keyword(null, "e-mail", "e-mail", 270044236), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "personal", "personal", 342373220), "brpocock@star-hope.org"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "personal", "personal", 342373220), "brpocock@gmail.com"], null)], null), new cljs.core.Keyword(null, "phone", "phone", -763596057), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "mobile", "mobile", 1403078170), "321-396-2625"], null)], null), new cljs.core.Keyword(null, "rel", "rel", 1378823488), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "spouse", "spouse", -750497167), new cljs.core.Keyword(null, "sage", "sage", -2121201294)], null)], null)], null), new cljs.core.Keyword(null, "diane", "diane", 
  1117169956), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Diane"], null)], null), new cljs.core.Keyword(null, "sage", "sage", -2121201294), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John"], null), 
  new cljs.core.Keyword(null, "surname", "surname", 1407918027), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Starkie"], null), new cljs.core.Keyword(null, "called-by", "called-by", -644178399), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sage"], null), new cljs.core.Keyword(null, "rel", "rel", 1378823488), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "spouse", "spouse", -750497167), new cljs.core.Keyword(null, "brfp", "brfp", -453321611)], null)], null)], null), new cljs.core.Keyword(null, "annemarie", "annemarie", 530642681), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ann Marie"], null), new cljs.core.Keyword(null, "surname", 
  "surname", 1407918027), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Augustino"], null), new cljs.core.Keyword(null, "e-mail", "e-mail", 270044236), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "personal", "personal", 342373220), "ama422@aol.com"], null)], null)], null), new cljs.core.Keyword(null, "mystral", 
  "mystral", -87066447), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sue Anne"], null), new cljs.core.Keyword(null, "surname", "surname", 1407918027), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Gould"], null), new cljs.core.Keyword(null, "called-by", "called-by", -644178399), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Mystral"], null), new cljs.core.Keyword(null, "rel", "rel", 1378823488), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "spouse", "spouse", -750497167), new cljs.core.Keyword(null, "thor", "thor", -116169080)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "child", "child", 623967545), new cljs.core.Keyword(null, "soren", "soren", -1209624393)], null)], null)], null), new cljs.core.Keyword(null, "thor", "thor", -116169080), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["John"], null), new cljs.core.Keyword(null, "surname", "surname", 1407918027), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["Gould"], null), new cljs.core.Keyword(null, "called-by", "called-by", -644178399), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thor"], null), new cljs.core.Keyword(null, "rel", "rel", 1378823488), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "spouse", "spouse", -750497167), new cljs.core.Keyword(null, "mystral", 
  "mystral", -87066447)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "child", "child", 623967545), new cljs.core.Keyword(null, "soren", "soren", -1209624393)], null)], null)], null), new cljs.core.Keyword(null, "soren", "soren", -1209624393), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["Soren"], null), new cljs.core.Keyword(null, "surname", "surname", 1407918027), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Gould"], null), new cljs.core.Keyword(null, "rel", "rel", 1378823488), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "mystral", 
  "mystral", -87066447)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "thor", "thor", -116169080)], null)], null)], null)], null));
}
;
// Input 77
goog.provide("censorius.guest");
goog.require("cljs.core");
goog.require("censorius.staff");
goog.require("reagent.core");
goog.require("secretary.core");
goog.require("reagent.session");
goog.require("censorius.text");
goog.require("clojure.data");
goog.require("goog.history.EventType");
goog.require("censorius.radio");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("goog.events");
goog.require("censorius.utils");
goog.require("clojure.string");
goog.require("censorius.data");
censorius.guest.set_edit_BANG_ = function set_edit_BANG_(editing, tag) {
  return cljs.core.reset_BANG_.call(null, editing, cljs.core._EQ_.call(null, cljs.core.deref.call(null, editing), tag) ? null : tag);
};
censorius.guest.click_edit_PERCENT_ = function click_edit_PERCENT_(editing, tag) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function() {
    return censorius.guest.set_edit_BANG_.call(null, editing, tag);
  }, new cljs.core.Keyword(null, "class", "class", -2030961996), [cljs.core.str([cljs.core.str(tag)].join("").substring(1, cljs.core.count.call(null, [cljs.core.str(tag)].join("")))), cljs.core.str(" "), cljs.core.str(cljs.core._EQ_.call(null, tag, cljs.core.deref.call(null, editing)) ? "display" : "editing")].join("")], null);
};
censorius.guest.close_edit_BANG_ = function close_edit_BANG_(editing) {
  censorius.utils.log.call(null, "Closing edits");
  return cljs.core.reset_BANG_.call(null, editing, null);
};
censorius.guest.person_icon = function person_icon(guest) {
  var G__9770 = (new cljs.core.Keyword(null, "gender", "gender", -733930727)).cljs$core$IFn$_invoke$arity$1(guest) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "gender", "gender", -733930727)).cljs$core$IFn$_invoke$arity$1(guest).fqn : null;
  switch(G__9770) {
    case "f":
      return "\ud83d\udc69";
      break;
    case "m":
      return "\ud83d\udc68";
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "gender", "gender", -733930727)).cljs$core$IFn$_invoke$arity$1(guest))].join(""));;
  }
};
censorius.guest.couple_icon = function() {
  var couple_icon = null;
  var couple_icon__1 = function(guest) {
    return couple_icon.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [guest, (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(guest)], null));
  };
  var couple_icon__2 = function(guest, spouse) {
    var gender1 = function() {
      var or__3799__auto__ = (new cljs.core.Keyword(null, "gender", "gender", -733930727)).cljs$core$IFn$_invoke$arity$1(guest);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "m", "m", 1632677161), new cljs.core.Keyword(null, "f", "f", -1597136552)], null));
      }
    }();
    var gender2 = function() {
      var and__3787__auto__ = spouse;
      if (cljs.core.truth_(and__3787__auto__)) {
        var or__3799__auto__ = (new cljs.core.Keyword(null, "gender", "gender", -733930727)).cljs$core$IFn$_invoke$arity$1(spouse);
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "m", "m", 1632677161), new cljs.core.Keyword(null, "f", "f", -1597136552)], null));
        }
      } else {
        return and__3787__auto__;
      }
    }();
    if (cljs.core.not.call(null, spouse)) {
      return censorius.guest.person_icon.call(null, guest);
    } else {
      if (cljs.core.not_EQ_.call(null, gender1, gender2)) {
        return "\ud83d\udc6b";
      } else {
        if (cljs.core._EQ_.call(null, gender2, new cljs.core.Keyword(null, "f", "f", -1597136552))) {
          return "\ud83d\udc6d";
        } else {
          return "\ud83d\udc6c";
        }
      }
    }
  };
  couple_icon = function(guest, spouse) {
    switch(arguments.length) {
      case 1:
        return couple_icon__1.call(this, guest);
      case 2:
        return couple_icon__2.call(this, guest, spouse);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  couple_icon.cljs$core$IFn$_invoke$arity$1 = couple_icon__1;
  couple_icon.cljs$core$IFn$_invoke$arity$2 = couple_icon__2;
  return couple_icon;
}();
censorius.guest._PLUS_t_shirt_long_names_PLUS_ = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "xs", "xs", 649443341), "Extra-small"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "s", "s", 1705939918), "Small"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "m", "m", 1632677161), "Medium"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "l", "l", 1395893423), "Large"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "xl", "xl", -1689552936), "Extra-large"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "2xl", "2xl", 
54696595), "Double extra-large"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "3xl", "3xl", 661405837), "Triple extra-large"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "4xl", "4xl", 1642175821), "Quadruple extra-large"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "5xl", "5xl", 
-1819661541), "Quintuple extra-large"], null)], null);
censorius.guest.t_shirt_size_long_name = function t_shirt_size_long_name(size) {
  return cljs.core.some.call(null, function(p__9774) {
    var vec__9775 = p__9774;
    var k = cljs.core.nth.call(null, vec__9775, 0, null);
    var v = cljs.core.nth.call(null, vec__9775, 1, null);
    if (cljs.core._EQ_.call(null, k, size)) {
      return v;
    } else {
      return null;
    }
  }, censorius.guest._PLUS_t_shirt_long_names_PLUS_);
};
censorius.guest.t_shirt_size_short_name = function t_shirt_size_short_name(size) {
  return clojure.string.upper_case.call(null, censorius.utils.keyword__GT_string.call(null, size));
};
censorius.guest.abbr = function abbr(short$, long$) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "abbr", "abbr", 2088591884), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), long$], null), short$, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 
  -2030961996), "ellide hint"], null), " ", long$], null)], null);
};
censorius.guest.lugal_PLUS__spouse_QMARK_ = function lugal_PLUS__spouse_QMARK_(guest) {
  var and__3787__auto__ = (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(guest);
  if (cljs.core.truth_(and__3787__auto__)) {
    return censorius.staff.lugal_PLUS__QMARK_.call(null, (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(guest));
  } else {
    return and__3787__auto__;
  }
};
censorius.guest.unmarried_lugal_PLUS__QMARK_ = function unmarried_lugal_PLUS__QMARK_(guest) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "adult", "adult", -1130256462), (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(guest)) && (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(guest) == null;
};
censorius.guest.married_line = function married_line(p__9776, children, self) {
  var map__9779 = p__9776;
  var map__9779__$1 = cljs.core.seq_QMARK_.call(null, map__9779) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9779) : map__9779;
  var to = cljs.core.get.call(null, map__9779__$1, new cljs.core.Keyword(null, "to", "to", 192099007));
  var from = cljs.core.get.call(null, map__9779__$1, new cljs.core.Keyword(null, "from", "from", 1815293044));
  return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), censorius.guest.couple_icon.call(null, from, to), " ", function() {
    var G__9780 = (new cljs.core.Keyword(null, "gender", "gender", -733930727)).cljs$core$IFn$_invoke$arity$1(from) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "gender", "gender", -733930727)).cljs$core$IFn$_invoke$arity$1(from).fqn : null;
    switch(G__9780) {
      case "f":
        return "wife";
        break;
      case "m":
        return "husband";
        break;
      default:
        return "married";
    }
  }(), " to ", cljs.core.truth_(censorius.staff.lugal_PLUS__QMARK_.call(null, to)) ? "\ud808\ude17 " : null, function() {
    var or__3799__auto__ = (new cljs.core.Keyword(null, "called-by", "called-by", -644178399)).cljs$core$IFn$_invoke$arity$1(to);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return(new cljs.core.Keyword(null, "given-name", "given-name", 208174286)).cljs$core$IFn$_invoke$arity$1(to);
    }
  }(), " ", (new cljs.core.Keyword(null, "surname", "surname", 1407918027)).cljs$core$IFn$_invoke$arity$1(to)], null);
};
censorius.guest.marry_BANG_ = function marry_BANG_(one, other) {
  if ((new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(one) == null && (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(other) == null) {
    cljs.core.swap_BANG_.call(null, one, cljs.core.assoc, new cljs.core.Keyword(null, "spouse", "spouse", -750497167), other);
    return cljs.core.swap_BANG_.call(null, other, cljs.core.assoc, new cljs.core.Keyword(null, "spouse", "spouse", -750497167), one);
  } else {
    return null;
  }
};
censorius.guest.divorce_BANG_ = function divorce_BANG_(one, other) {
  if (cljs.core._EQ_.call(null, other, (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(one)) && cljs.core._EQ_.call(null, one, (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(other))) {
    cljs.core.swap_BANG_.call(null, one, cljs.core.assoc, new cljs.core.Keyword(null, "spouse", "spouse", -750497167), null);
    return cljs.core.swap_BANG_.call(null, other, cljs.core.assoc, new cljs.core.Keyword(null, "spouse", "spouse", -750497167), null);
  } else {
    return null;
  }
};
censorius.guest.marital_edit = function marital_edit(p__9782, children, this$) {
  var map__9788 = p__9782;
  var map__9788__$1 = cljs.core.seq_QMARK_.call(null, map__9788) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9788) : map__9788;
  var guest = cljs.core.get.call(null, map__9788__$1, new cljs.core.Keyword(null, "guest", "guest", 692663006));
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "adult", "adult", -1130256462), (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(guest))) {
    var bachelors = cljs.core.filter.call(null, censorius.guest.unmarried_lugal_PLUS__QMARK_, cljs.core.deref.call(null, censorius.data.guests));
    var spouse = (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(guest);
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), "Lugal Spouse?"], null), cljs.core.truth_(function() {
      var and__3787__auto__ = spouse;
      if (cljs.core.truth_(and__3787__auto__)) {
        return censorius.staff.lugal_PLUS__QMARK_.call(null, spouse);
      } else {
        return and__3787__auto__;
      }
    }()) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "As a spouse to a lugal (or\n            higher) staff member, you receive discounted admission."], null) : !cljs.core.empty_QMARK_.call(null, bachelors) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "A lugal (or higher) staff member's\n                 spouse receives a discounted admission."], null) : null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(bachelors, spouse, map__9788, map__9788__$1, guest) {
      return function() {
        return censorius.guest.divorce_BANG_.call(null, guest, spouse);
      };
    }(bachelors, spouse, map__9788, map__9788__$1, guest), new cljs.core.Keyword(null, "name", "name", 1843675177), [cljs.core.str(cljs.core.name), cljs.core.str("/spouse")].join(""), new cljs.core.Keyword(null, "checked", "checked", -50955819), true], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.guest.married_line, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "from", "from", 1815293044), guest, new cljs.core.Keyword(null, 
    "to", "to", 192099007), spouse], null)], null)], null), !cljs.core.empty_QMARK_.call(null, bachelors) ? function() {
      var iter__4555__auto__ = function(bachelors, spouse, map__9788, map__9788__$1, guest) {
        return function iter__9789(s__9790) {
          return new cljs.core.LazySeq(null, function(bachelors, spouse, map__9788, map__9788__$1, guest) {
            return function() {
              var s__9790__$1 = s__9790;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__9790__$1);
                if (temp__4126__auto__) {
                  var s__9790__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__9790__$2)) {
                    var c__4553__auto__ = cljs.core.chunk_first.call(null, s__9790__$2);
                    var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
                    var b__9792 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
                    if (function() {
                      var i__9791 = 0;
                      while (true) {
                        if (i__9791 < size__4554__auto__) {
                          var bachelor = cljs.core._nth.call(null, c__4553__auto__, i__9791);
                          cljs.core.chunk_append.call(null, b__9792, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "on-click", 
                          "on-click", 1632826543), function(i__9791, bachelor, c__4553__auto__, size__4554__auto__, b__9792, s__9790__$2, temp__4126__auto__, bachelors, spouse, map__9788, map__9788__$1, guest) {
                            return function() {
                              return censorius.guest.marry_BANG_.call(null, guest, bachelor);
                            };
                          }(i__9791, bachelor, c__4553__auto__, size__4554__auto__, b__9792, s__9790__$2, temp__4126__auto__, bachelors, spouse, map__9788, map__9788__$1, guest), new cljs.core.Keyword(null, "name", "name", 1843675177), censorius.utils.gensymreally.call(null, [cljs.core.str(cljs.core.name), cljs.core.str("/marry")].join("")), new cljs.core.Keyword(null, "checked", "checked", -50955819), false], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                          [censorius.guest.married_line, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "from", "from", 1815293044), guest, new cljs.core.Keyword(null, "to", "to", 192099007), bachelor], null)], null)], null));
                          var G__9793 = i__9791 + 1;
                          i__9791 = G__9793;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9792), iter__9789.call(null, cljs.core.chunk_rest.call(null, s__9790__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9792), null);
                    }
                  } else {
                    var bachelor = cljs.core.first.call(null, s__9790__$2);
                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), 
                    function(bachelor, s__9790__$2, temp__4126__auto__, bachelors, spouse, map__9788, map__9788__$1, guest) {
                      return function() {
                        return censorius.guest.marry_BANG_.call(null, guest, bachelor);
                      };
                    }(bachelor, s__9790__$2, temp__4126__auto__, bachelors, spouse, map__9788, map__9788__$1, guest), new cljs.core.Keyword(null, "name", "name", 1843675177), censorius.utils.gensymreally.call(null, [cljs.core.str(cljs.core.name), cljs.core.str("/marry")].join("")), new cljs.core.Keyword(null, "checked", "checked", -50955819), false], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.guest.married_line, new cljs.core.PersistentArrayMap(null, 
                    2, [new cljs.core.Keyword(null, "from", "from", 1815293044), guest, new cljs.core.Keyword(null, "to", "to", 192099007), bachelor], null)], null)], null), iter__9789.call(null, cljs.core.rest.call(null, s__9790__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(bachelors, spouse, map__9788, map__9788__$1, guest), null, null);
        };
      }(bachelors, spouse, map__9788, map__9788__$1, guest);
      return iter__4555__auto__.call(null, bachelors);
    }() : null], null);
  } else {
    return null;
  }
};
censorius.guest.name_edit_box = function name_edit_box(p__9794, children, this$) {
  var map__9796 = p__9794;
  var map__9796__$1 = cljs.core.seq_QMARK_.call(null, map__9796) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9796) : map__9796;
  var guest = cljs.core.get.call(null, map__9796__$1, new cljs.core.Keyword(null, "guest", "guest", 692663006));
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs.core.conj.call(null, cljs.core.PersistentVector.EMPTY, children), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), guest, new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, 
  "given-name", "given-name", 208174286), new cljs.core.Keyword(null, "label", "label", 1718410804), "Given name", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "John", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.name_case, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.a_name_QMARK_, new cljs.core.Keyword(null, "rows", "rows", 850049680), 1], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [censorius.text.text_input, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), guest, new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "surname", "surname", 1407918027), new cljs.core.Keyword(null, "label", "label", 1718410804), "Surname", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Doe", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.name_case, 
  new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.a_name_QMARK_, new cljs.core.Keyword(null, "rows", "rows", 850049680), 1], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), guest, new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "called-by", "called-by", 
  -644178399), new cljs.core.Keyword(null, "label", "label", 1718410804), "Called by", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Fuzzy Owl", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.name_case, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.a_name_QMARK_, new cljs.core.Keyword(null, "rows", "rows", 850049680), 1], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [censorius.radio.radio_set, guest, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Gender", new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "gender", "gender", -733930727), new cljs.core.Keyword(null, "tags", "tags", 1771418977), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, "\u2295 (not required)"], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "m", "m", 1632677161), "\u2642 Male"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", -1597136552), "\u2640 Female"], null)], null)], null)], null)], null);
};
censorius.guest.suggest_staff_apply = function suggest_staff_apply(props, children, this$) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), "Join the Staff!"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "Join the FPG staff for discounted admission and more. Give back to the community too!"], null), children, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentVector(null, 3, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/staff-apply"], null), "Apply now"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", 
  "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/staff-confirm"], null), "On Staff"], null)], null)], null)], null);
};
censorius.guest.guest_row = function guest_row(p__9797) {
  var map__9804 = p__9797;
  var map__9804__$1 = cljs.core.seq_QMARK_.call(null, map__9804) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9804) : map__9804;
  var guest = cljs.core.get.call(null, map__9804__$1, new cljs.core.Keyword(null, "guest", "guest", 692663006));
  var name = censorius.utils.gensymreally.call(null, "guest");
  var editing = reagent.core.atom.call(null, null);
  return function(name, editing, map__9804, map__9804__$1, guest) {
    return function(guest__$1) {
      return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "name", "name", 1843675177)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.deref.call(null, 
      editing)) ? new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.guest.name_edit_box, guest__$1], null), cljs.core.count.call(null, cljs.core.deref.call(null, censorius.data.guests)) > 1 ? new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "false", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return alert("Should delete but TODO");
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "Remove from party"], null)], null) : null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "close true", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : null, censorius.guest.abbr.call(null, function() {
        var or__3799__auto__ = (new cljs.core.Keyword(null, "called-by", "called-by", -644178399)).cljs$core$IFn$_invoke$arity$1(guest__$1);
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return(new cljs.core.Keyword(null, "given-name", "given-name", 208174286)).cljs$core$IFn$_invoke$arity$1(guest__$1);
        }
      }(), [cljs.core.str((new cljs.core.Keyword(null, "given-name", "given-name", 208174286)).cljs$core$IFn$_invoke$arity$1(guest__$1)), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword(null, "surname", "surname", 1407918027)).cljs$core$IFn$_invoke$arity$1(guest__$1))].join(""))], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, 
      "mail", "mail", 795732905)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "mail", "mail", 795732905), cljs.core.deref.call(null, editing)) ? censorius.utils.modality.call(null, function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return cljs.core.reset_BANG_.call(null, editing, null);
        };
      }(name, editing, map__9804, map__9804__$1, guest), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cursor", 
      "cursor", 1011937484), guest__$1, new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "e-mail", "e-mail", 270044236), new cljs.core.Keyword(null, "label", "label", 1718410804), "eMail address", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "jdoe@example.com", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.format_email, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.email_QMARK_, 
      new cljs.core.Keyword(null, "rows", "rows", 850049680), 1], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "close true", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null)) : null, function() {
        var temp__4124__auto__ = (new cljs.core.Keyword(null, "e-mail", "e-mail", 270044236)).cljs$core$IFn$_invoke$arity$1(guest__$1);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var mail = temp__4124__auto__;
          return censorius.guest.abbr.call(null, "\u2709", mail);
        } else {
          return censorius.guest.abbr.call(null, "\u20e0", "No e-mail address");
        }
      }()], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "phone", "phone", -763596057)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "phone", "phone", -763596057), cljs.core.deref.call(null, editing)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
      "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), guest__$1, new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "telephone", "telephone", 1304285416), 
      new cljs.core.Keyword(null, "label", "label", 1718410804), "Phone number", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "(305) 555-1234", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.format_phone, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.phone_number_QMARK_, new cljs.core.Keyword(null, "rows", "rows", 850049680), 1], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "close true", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : null, function() {
        var temp__4124__auto__ = (new cljs.core.Keyword(null, "telephone", "telephone", 1304285416)).cljs$core$IFn$_invoke$arity$1(guest__$1);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var phone = temp__4124__auto__;
          return censorius.guest.abbr.call(null, "\ud83d\udcde", phone);
        } else {
          return censorius.guest.abbr.call(null, "\u20e0", "No telephone number");
        }
      }()], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505), cljs.core.deref.call(null, editing)) ? function() {
        if (cljs.core.truth_(censorius.staff.lugal_PLUS__QMARK_.call(null, guest__$1))) {
          new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "As a lugal (or higher) staff member,\n            your admission is free. You may also admit your spouse at a\n            discounted rate."], null);
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "staff?", "staff?", 1233722098)).cljs$core$IFn$_invoke$arity$1(guest__$1))) {
            new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "Staff members receive discounted admission."], null);
          } else {
          }
        }
        var tag_list_9810 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "adult", "adult", -1130256462), "\ud83c\udfab Adult"], null)], null);
        var tag_list_9811__$1 = (new cljs.core.Keyword(null, "spouse", "spouse", -750497167)).cljs$core$IFn$_invoke$arity$1(guest__$1) == null ? cljs.core.conj.call(null, tag_list_9810, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "child", "child", 623967545), "\ud83c\udfab\ud83d\udeb8 Child (ages 5\u219217)"], null)) : tag_list_9810;
        var tag_list_9812__$2 = cljs.core.not.call(null, (new cljs.core.Keyword(null, "staff?", "staff?", 1233722098)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? cljs.core.conj.call(null, tag_list_9811__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "baby", "baby", -1305225347), "\ud83c\udfab\ud83d\udeb6 Child (birth\u21924 years)"], null)) : tag_list_9811__$1;
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.radio.radio_set, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Ticket type", new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), guest__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505), new cljs.core.Keyword(null, "tags", "tags", 1771418977), tag_list_9812__$2], 
        null)], null);
        if (cljs.core.not_EQ_.call(null, new cljs.core.Keyword(null, "baby", "baby", -1305225347), (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(guest__$1))) {
          new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.guest.suggest_staff_apply], null);
        } else {
        }
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.guest.marital_edit, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "guest", "guest", 692663006), guest__$1], null)], null);
      }() : null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), function() {
        var G__9805 = (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(guest__$1) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(guest__$1).fqn : null;
        switch(G__9805) {
          case "baby":
            return censorius.guest.abbr.call(null, "\ud83c\udfab\ud83d\udeb6", "Baby");
            break;
          case "child":
            return censorius.guest.abbr.call(null, "\ud83c\udfab\ud83d\udeb8", "Child");
            break;
          case "adult":
            return censorius.guest.abbr.call(null, "\ud83c\udfab", "Adult");
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(guest__$1))].join(""));;
        }
      }(), " ", cljs.core.truth_(censorius.staff.lugal_PLUS__QMARK_.call(null, guest__$1)) ? censorius.guest.abbr.call(null, "\ud808\ude17", "Lugal") : cljs.core.truth_(censorius.guest.lugal_PLUS__spouse_QMARK_.call(null, guest__$1)) ? censorius.guest.abbr.call(null, [cljs.core.str("\ud808\ude17"), cljs.core.str(censorius.guest.couple_icon.call(null, guest__$1))].join(""), "Lugal spouse") : cljs.core.truth_((new cljs.core.Keyword(null, "staff?", "staff?", 1233722098)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? 
      censorius.guest.abbr.call(null, "\u26e4", "Staff") : null], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "days", "days", -1394072564)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), cljs.core.deref.call(null, editing)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), cljs.core.truth_((new cljs.core.Keyword(null, "staff?", "staff?", 1233722098)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "Tuesday\u2192Sunday", new cljs.core.PersistentVector(null, 
      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "Staff members are always a full week admission"], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.radio.radio_set, guest__$1, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 
      1718410804), "Days attending", new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "days", "days", -1394072564), new cljs.core.Keyword(null, "tags", "tags", 1771418977), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, "Wednesday\u2192Sunday"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
      "week-end", "week-end", -1868033285), "Friday\u2192Sunday"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "day", "day", -274800446), "One day"], null)], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), 
      "close true", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : censorius.guest.abbr.call(null, function() {
        var G__9806 = (new cljs.core.Keyword(null, "days", "days", -1394072564)).cljs$core$IFn$_invoke$arity$1(guest__$1);
        if (cljs.core._EQ_.call(null, null, G__9806)) {
          return[cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "staff?", "staff?", 1233722098)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? "Tue" : "Wed"), cljs.core.str("-Sun")].join("");
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "week-end", "week-end", -1868033285), G__9806)) {
            return "Fri-Sun";
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "day", "day", -274800446), G__9806)) {
              return "Day";
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "days", "days", -1394072564)).cljs$core$IFn$_invoke$arity$1(guest__$1))].join(""));
            }
          }
        }
      }(), function() {
        var G__9807 = (new cljs.core.Keyword(null, "days", "days", -1394072564)).cljs$core$IFn$_invoke$arity$1(guest__$1);
        if (cljs.core._EQ_.call(null, null, G__9807)) {
          return[cljs.core.str("Full week, "), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "staff?", "staff?", 1233722098)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? "Tuesday" : "Wednesday"), cljs.core.str("\u2192Sunday")].join("");
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "week-end", "week-end", -1868033285), G__9807)) {
            return "Week-end only, Friday\u2192Sunday";
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "day", "day", -274800446), G__9807)) {
              return "Any one day";
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "days", "days", -1394072564)).cljs$core$IFn$_invoke$arity$1(guest__$1))].join(""));
            }
          }
        }
      }())], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "sleep", "sleep", -1932665860)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "sleep", "sleep", -1932665860), cljs.core.deref.call(null, editing)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
      "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.radio.radio_set, guest__$1, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Sleeping Arrangements", new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "sleep", "sleep", 
      -1932665860), new cljs.core.Keyword(null, "tags", "tags", 1771418977), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tent", "tent", 1392898711), "\u26fa Tent camping"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cabin", "cabin", -2096716613), "\ud83c\udfe1 Cabin camping"], 
      null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lodge", "lodge", 2044562092), "\ud83c\udfe0 Lodge camping"], null)], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "close true", new cljs.core.Keyword(null, 
      "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : function() {
        var G__9808 = (new cljs.core.Keyword(null, "sleep", "sleep", -1932665860)).cljs$core$IFn$_invoke$arity$1(guest__$1) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "sleep", "sleep", -1932665860)).cljs$core$IFn$_invoke$arity$1(guest__$1).fqn : null;
        switch(G__9808) {
          case "lodge":
            return censorius.guest.abbr.call(null, "\ud83c\udfe0", "Lodge camping");
            break;
          case "cabin":
            return censorius.guest.abbr.call(null, "\ud83c\udfe1", "Cabin camping");
            break;
          case "tent":
            return censorius.guest.abbr.call(null, "\u26fa", "Tent camping");
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "sleep", "sleep", -1932665860)).cljs$core$IFn$_invoke$arity$1(guest__$1))].join(""));;
        }
      }()], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "eat", "eat", 1686757401)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "eat", "eat", 1686757401), cljs.core.deref.call(null, editing)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", 
      "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.radio.radio_set, guest__$1, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Eating Arrangements", new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "eat", "eat", 1686757401), 
      new cljs.core.Keyword(null, "tags", "tags", 1771418977), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "looney", "looney", -1976949904), "\ud83c\udf71\ud83d\udc07 Looney Bin secret meal plan"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cauldron", "cauldron", -203144344), 
      "\ud83c\udf72\ud83c\udf74 Bubbling Cauldron meal plan"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, "\u20e0 Bringing food along or eating with food vendors"], null)], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "close true", 
      new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : function() {
        var G__9809 = (new cljs.core.Keyword(null, "eat", "eat", 1686757401)).cljs$core$IFn$_invoke$arity$1(guest__$1);
        if (cljs.core._EQ_.call(null, null, G__9809)) {
          return censorius.guest.abbr.call(null, "\u20e0", "Bringing food along");
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "cauldron", "cauldron", -203144344), G__9809)) {
            return censorius.guest.abbr.call(null, "\ud83c\udf72\ud83c\udf74", "Bubbling Cauldron meal plan");
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "looney", "looney", -1976949904), G__9809)) {
              return censorius.guest.abbr.call(null, "\ud83c\udf71\ud83d\udc07", "Looney Bin secret meal plan");
            } else {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "eat", "eat", 1686757401)).cljs$core$IFn$_invoke$arity$1(guest__$1))].join(""));
            }
          }
        }
      }()], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800), cljs.core.deref.call(null, editing)) ? new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
      "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.radio.radio_set, guest__$1, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Buy a Festival T-shirt", new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "t-shirt", "t-shirt", 
      -2121900800), new cljs.core.Keyword(null, "tags", "tags", 1771418977), cljs.core.conj.call(null, censorius.guest._PLUS_t_shirt_long_names_PLUS_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, "\ud83d\uddfd Not buying a T-shirt"], null))], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "class", "class", -2030961996), "hint"], null), "Buy other T-shirts and merchandise below, under ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "q", "q", 689001697), "Extras."], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), 
      "close true", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : cljs.core.truth_((new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? censorius.guest.abbr.call(null, [cljs.core.str("\ud83d\udc55 "), cljs.core.str(censorius.guest.t_shirt_size_short_name.call(null, (new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800)).cljs$core$IFn$_invoke$arity$1(guest__$1)))].join(""), [cljs.core.str((new cljs.core.Keyword(null, 
      "season", "season", 851675697)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.festival))), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword(null, "year", "year", 335913393)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.festival))), cljs.core.str("T-shirt: "), cljs.core.str(censorius.guest.t_shirt_size_long_name.call(null, (new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800)).cljs$core$IFn$_invoke$arity$1(guest__$1)))].join("")) : 
      censorius.guest.abbr.call(null, "\u20e0", "No T-shirt")], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, editing, new cljs.core.Keyword(null, "tote", "tote", 1783327514)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "tote", "tote", 1783327514), cljs.core.deref.call(null, editing)) ? new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.radio.radio_set, guest__$1, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Buy a Festival Tote Bag", new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, 
      "tote?", "tote?", -1225962794), new cljs.core.Keyword(null, "tags", "tags", 1771418977), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, "\ud83d\udcbc Tote bag"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, "\u20e0 No tote bag"], null)], null)], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "Buy other merchandise below, under ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "q", "q", 689001697), "Extras."], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 
      1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "close true", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : null, cljs.core.truth_((new cljs.core.Keyword(null, "tote?", "tote?", -1225962794)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? censorius.guest.abbr.call(null, "\ud83d\udcbc", "Tote Bag") : censorius.guest.abbr.call(null, "\u20e0", "No tote mug")], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.guest.click_edit_PERCENT_.call(null, 
      editing, new cljs.core.Keyword(null, "coffee", "coffee", 23772871)), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "coffee", "coffee", 23772871), cljs.core.deref.call(null, editing)) ? new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "pop-out"], null), new cljs.core.PersistentVector(null, 3, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [censorius.radio.radio_set, guest__$1, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Buy a Festival Coffee Mug", new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "coffee?", "coffee?", -1296287323), new cljs.core.Keyword(null, "tags", "tags", 1771418977), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, "\ud83c\udf7a Coffee Mug"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, "\u20e0 No coffee bag"], null)], null)], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "Buy other merchandise below, under ", 
      new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "q", "q", 689001697), "Extras."], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "close true", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(name, 
      editing, map__9804, map__9804__$1, guest) {
        return function() {
          return censorius.guest.close_edit_BANG_.call(null, editing);
        };
      }(name, editing, map__9804, map__9804__$1, guest)], null), "\u2713"], null)], null) : null, cljs.core.truth_((new cljs.core.Keyword(null, "coffee?", "coffee?", -1296287323)).cljs$core$IFn$_invoke$arity$1(guest__$1)) ? censorius.guest.abbr.call(null, "\ud83c\udf7a", "Coffee Mug") : censorius.guest.abbr.call(null, "\u20e0", "No coffee mug")], null)], null);
    };
  }(name, editing, map__9804, map__9804__$1, guest);
};
// Input 78
goog.provide("censorius.page");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("secretary.core");
goog.require("censorius.guest");
goog.require("reagent.session");
goog.require("censorius.text");
goog.require("datascript");
goog.require("goog.history.EventType");
goog.require("goog.History");
goog.require("goog.events");
goog.require("censorius.utils");
goog.require("clojure.string");
goog.require("censorius.data");
cljs.core.enable_console_print_BANG_.call(null);
censorius.page._PLUS_escape_key_PLUS_ = 27;
censorius.page._PLUS_return_key_PLUS_ = 13;
censorius.utils.log.call(null, "Censorius loading\u2026");
censorius.page.hidden = function hidden(is_hidden) {
  if (is_hidden) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "none"], null);
  } else {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
censorius.page.alert_hint = function alert_hint(event) {
  var target = event.target;
  return alert(target.getAttribute("title"));
};
censorius.page.abbr = function abbr(short$, long$) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "abbr", "abbr", 2088591884), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), long$, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function() {
    return censorius.page.alert_hint.call(null, short$, " \u2014 ", long$);
  }], null), short$, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "ellide hint"], null), " ", long$], null)], null);
};
censorius.page.guests_thead = function guests_thead() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "thead", "thead", -291875296), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "Name", "Names of each party member.")], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "\u2709", "eMail")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "\ud83d\udcde", "Phone#")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "th", "th", -545608566), censorius.page.abbr.call(null, "\ud83d\udeb8", "Ticket")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "\ud83d\udcc5", "Days")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "\u26fa/\ud83c\udfe0", "Sleeping")], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "\ud83c\udf72\ud83c\udf74", "Meals")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "\ud83d\udc55", "T-Shirt")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "th", "th", -545608566), censorius.page.abbr.call(null, "\ud83d\udcbc", "Tote")], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), censorius.page.abbr.call(null, "\ud83c\udf7a", "Mug")], null)], null)], null);
};
censorius.page.guest_price = function guest_price(guest) {
  return(cljs.core.truth_((new cljs.core.Keyword(null, "lugal+?", "lugal+?", 1775456646)).cljs$core$IFn$_invoke$arity$1(guest)) ? 0 : cljs.core.truth_((new cljs.core.Keyword(null, "staff?", "staff?", 1233722098)).cljs$core$IFn$_invoke$arity$1(guest)) ? 300 : cljs.core.truth_((new cljs.core.Keyword(null, "adult?", "adult?", -133070051)).cljs$core$IFn$_invoke$arity$1(guest)) ? function() {
    var G__10311 = (new cljs.core.Keyword(null, "days", "days", -1394072564)).cljs$core$IFn$_invoke$arity$1(guest);
    if (cljs.core._EQ_.call(null, null, G__10311)) {
      return 950.13;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "week-end", "week-end", -1868033285), G__10311)) {
        return 762.39;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "day", "day", -274800446), G__10311)) {
          return 490.24;
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "days", "days", -1394072564)).cljs$core$IFn$_invoke$arity$1(guest))].join(""));
        }
      }
    }
  }() : 178.2) + function() {
    var G__10312 = (new cljs.core.Keyword(null, "sleep", "sleep", -1932665860)).cljs$core$IFn$_invoke$arity$1(guest) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "sleep", "sleep", -1932665860)).cljs$core$IFn$_invoke$arity$1(guest).fqn : null;
    switch(G__10312) {
      case "lodge":
        return 2E3;
        break;
      case "cabin":
        return 85;
        break;
      default:
        return 0;
    }
  }() + function() {
    var G__10313 = (new cljs.core.Keyword(null, "eat", "eat", 1686757401)).cljs$core$IFn$_invoke$arity$1(guest) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "eat", "eat", 1686757401)).cljs$core$IFn$_invoke$arity$1(guest).fqn : null;
    switch(G__10313) {
      case "cauldron":
        return 7E3;
        break;
      case "looney":
        return 1.000000001E7;
        break;
      default:
        return 0;
    }
  }() + (cljs.core.truth_((new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800)).cljs$core$IFn$_invoke$arity$1(guest)) ? (new cljs.core.Keyword(null, "price", "price", 22129180)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "festival-shirt", "festival-shirt", -336123619)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.merch)))) : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "coffee?", "coffee?", -1296287323)).cljs$core$IFn$_invoke$arity$1(guest)) ? 
  (new cljs.core.Keyword(null, "price", "price", 22129180)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "coffee", "coffee", 23772871)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.merch)))) : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "tote?", "tote?", -1225962794)).cljs$core$IFn$_invoke$arity$1(guest)) ? (new cljs.core.Keyword(null, "price", "price", 22129180)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, 
  "tote-bag", "tote-bag", -1462493277)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.merch)))) : 0);
};
censorius.page.guests_price_sum = function guests_price_sum() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), censorius.utils.format_money.call(null, cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, censorius.page.guest_price, cljs.core.deref.call(null, censorius.data.guests))))], null);
};
var new_name_10318 = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "new-name", "new-name", 1288355058), ""], null));
censorius.page.add_to_party = function(new_name_10318) {
  return function add_to_party(event) {
    var name = (new cljs.core.Keyword(null, "new-name", "new-name", 1288355058)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, new_name_10318));
    var name_parts = clojure.string.split.call(null, clojure.string.trim.call(null, name), /\s+/);
    var vec__10317 = cljs.core._EQ_.call(null, 2, name_parts) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, name_parts), cljs.core.second.call(null, name_parts)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, name_parts), (new cljs.core.Keyword(null, "surname", "surname", 1407918027)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.first.call(null, 
    cljs.core.deref.call(null, censorius.data.guests))))], null);
    var given = cljs.core.nth.call(null, vec__10317, 0, null);
    var surname = cljs.core.nth.call(null, vec__10317, 1, null);
    if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, given))) {
      cljs.core.reset_BANG_.call(null, new_name_10318, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "new-name", "new-name", 1288355058), ""], null));
      return cljs.core.swap_BANG_.call(null, censorius.data.guests, cljs.core.conj, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800), new cljs.core.Keyword(null, "called-by", "called-by", -644178399), new cljs.core.Keyword(null, "lugal+?", "lugal+?", 1775456646), new cljs.core.Keyword(null, "coffee", "coffee", 23772871), new cljs.core.Keyword(null, "telephone", "telephone", 1304285416), new cljs.core.Keyword(null, "surname", "surname", 1407918027), 
      new cljs.core.Keyword(null, "e-mail", "e-mail", 270044236), new cljs.core.Keyword(null, "given-name", "given-name", 208174286), new cljs.core.Keyword(null, "staff?", "staff?", 1233722098), new cljs.core.Keyword(null, "eat", "eat", 1686757401), new cljs.core.Keyword(null, "tote", "tote", 1783327514), new cljs.core.Keyword(null, "sleep", "sleep", -1932665860), new cljs.core.Keyword(null, "adult?", "adult?", -133070051)], [null, null, false, false, null, surname, null, given, false, null, false, 
      new cljs.core.Keyword(null, "tent", "tent", 1392898711), true]));
    } else {
      return null;
    }
  };
}(new_name_10318);
censorius.page.guest_list_add_row = function(new_name_10318) {
  return function guest_list_add_row() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "col-span", "col-span", -232603210), 10], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, 
    new_name_10318, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "new-name", "new-name", 1288355058), new cljs.core.Keyword(null, "label", "label", 1718410804), "Add a person", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "John Doe", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.name_case, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.a_name_QMARK_, 
    new cljs.core.Keyword(null, "rows", "rows", 850049680), 0], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), censorius.page.add_to_party, new cljs.core.Keyword(null, "class", "class", -2030961996), [cljs.core.str(function() {
      var name$ = (new cljs.core.Keyword(null, "new-name", "new-name", 1288355058)).cljs$core$IFn$_invoke$arity$1(new_name_10318);
      if (cljs.core.truth_(function() {
        var and__3787__auto__ = name$;
        if (cljs.core.truth_(and__3787__auto__)) {
          var and__3787__auto____$1 = typeof name$ === "string";
          if (and__3787__auto____$1) {
            return clojure.string.blank_QMARK_.call(null, name$);
          } else {
            return and__3787__auto____$1;
          }
        } else {
          return and__3787__auto__;
        }
      }())) {
        return "false";
      } else {
        return "true ";
      }
    }()), cljs.core.str(cljs.core.count.call(null, cljs.core.deref.call(null, censorius.data.guests)) === 0 ? "urgent" : "")].join("")], null), "+ Add to party"], null)], null)], null);
  };
}(new_name_10318);
censorius.page.guest_list_box = function guest_list_box() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), "Registration for ", (new cljs.core.Keyword(null, "season", "season", 851675697)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.festival)), " ", (new cljs.core.Keyword(null, "year", "year", 
  335913393)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.festival)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/load"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "title", "title", 636505583), "Load a previous registration"], null), "\ud83d\udcc2"], null)], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "h2", "h2", -372662728), function() {
    var temp__4124__auto__ = cljs.core.first.call(null, cljs.core.deref.call(null, censorius.data.guests));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var leader = temp__4124__auto__;
      return[cljs.core.str(function() {
        var or__3799__auto__ = (new cljs.core.Keyword(null, "surname", "surname", 1407918027)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, leader));
        if (cljs.core.truth_(or__3799__auto__)) {
          return or__3799__auto__;
        } else {
          return "No name yet";
        }
      }()), cljs.core.str(" \u2014 "), cljs.core.str(" Party of "), cljs.core.str(censorius.utils.counting.call(null, cljs.core.count.call(null, cljs.core.deref.call(null, censorius.data.guests)), "Guest"))].join("");
    } else {
      return "New party";
    }
  }()], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "people"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.guests_thead], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "tbody", "tbody", -80678300), cljs.core.map.call(null, censorius.guest.guest_row, cljs.core.deref.call(null, censorius.data.guests))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tfoot", "tfoot", -701599890), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.guest_list_add_row], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "col-span", "col-span", -232603210), 7], null), "Subtotal"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "col-span", "col-span", -232603210), 3], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.guests_price_sum], null)], null)], null)], null)], null)], null)], null);
};
censorius.page.running_out_style = function running_out_style(style) {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529E3), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "warning"], null), "Please change your order."], null), "Only ", clojure.string.lower_case.call(null, censorius.utils.counting.call(null, 
  (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style), "item")), " of this style remain. You'll need to remove ", clojure.string.lower_case.call(null, censorius.utils.counting.call(null, (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(style) - (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style), "item")), " from your order.", function() {
    var left = (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "false", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(left) {
      return function() {
        return cljs.core.swap_BANG_.call(null, style, new cljs.core.Keyword(null, "qty", "qty", 155560951), left);
      };
    }(left)], null), "\ud83d\ude26 Change to ", left], null);
  }()], null);
};
censorius.page.merch_product_style = function merch_product_style(style) {
  if ((new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style) === 0) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(style), " \u2014 Sold out."], null), new cljs.core.PersistentVector(null, 
    3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, style, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "qty", "qty", 155560951), new cljs.core.Keyword(null, "label", "label", 1718410804), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(style), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "0", new cljs.core.Keyword(null, 
    "size", "size", 1098693007), 3, new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.just_digits, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.just_digits_QMARK_], null)], null), 10 > (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), censorius.utils.counting.call(null, (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style), "item"), " left"], null) : null, (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style) < (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(style) ? new cljs.core.PersistentVector(null, 2, 5, 
    cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.running_out_style, style], null) : null], null);
  } else {
    return null;
  }
};
censorius.page.merch_product_style_1 = function merch_product_style_1(style) {
  if ((new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style) === 0) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "Sold out."], null);
  } else {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style) < (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(style) ? new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentVector(null, 
    3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529E3), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "warning"], null), "Please change your order."], null), " Only ", clojure.string.lower_case.call(null, censorius.utils.counting.call(null, (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style), "item")), " of this style remain. You'll need to remove ", 
    clojure.string.lower_case.call(null, censorius.utils.counting.call(null, (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(style) - (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style), "item")), " from your order.", function() {
      var left = (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style);
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), "false", new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), function(left) {
        return function() {
          return cljs.core.swap_BANG_.call(null, style, cljs.core.assoc, new cljs.core.Keyword(null, "qty", "qty", 155560951), left);
        };
      }(left)], null), "\ud83d\ude26 Change to ", left], null);
    }()], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, style, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "qty", "qty", 155560951), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "0", new cljs.core.Keyword(null, "rows", "rows", 850049680), 0, new cljs.core.Keyword(null, "size", "size", 1098693007), 3, new cljs.core.Keyword(null, 
    "format", "format", -1306924766), censorius.utils.just_digits, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.just_digits_QMARK_], null)], null), 10 > (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
    "class", "class", -2030961996), "hint"], null), censorius.utils.counting.call(null, (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style), "item"), " left"], null) : null, (new cljs.core.Keyword(null, "inventory", "inventory", 860201871)).cljs$core$IFn$_invoke$arity$1(style) < (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(style) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [censorius.page.running_out_style, style], null) : null], null);
  }
};
censorius.page.product_row = function product_row(p__10320) {
  var vec__10322 = p__10320;
  var id = cljs.core.nth.call(null, vec__10322, 0, null);
  var item = cljs.core.nth.call(null, vec__10322, 1, null);
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", 
  -1651076051), (new cljs.core.Keyword(null, "image", "image", -58725096)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.Keyword(null, "class", "class", -2030961996), "merch-thumb"], null)], null), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "class", "class", -2030961996), "hint"], null), (new cljs.core.Keyword(null, "description", "description", -1428560544)).cljs$core$IFn$_invoke$arity$1(item)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.utils.format_money.call(null, (new cljs.core.Keyword(null, "price", "price", 22129180)).cljs$core$IFn$_invoke$arity$1(item))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "td", "td", 1479933353), cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, (new cljs.core.Keyword(null, "styles", "styles", 1954480375)).cljs$core$IFn$_invoke$arity$1(item))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.merch_product_style_1, cljs.core.first.call(null, (new cljs.core.Keyword(null, "styles", "styles", 1954480375)).cljs$core$IFn$_invoke$arity$1(item))], null) : cljs.core.map.call(null, censorius.page.merch_product_style, 
  (new cljs.core.Keyword(null, "styles", "styles", 1954480375)).cljs$core$IFn$_invoke$arity$1(item))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), censorius.utils.format_money.call(null, cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(vec__10322, id, item) {
    return function(p1__10319_SHARP_) {
      return(new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(p1__10319_SHARP_);
    };
  }(vec__10322, id, item), (new cljs.core.Keyword(null, "styles", "styles", 1954480375)).cljs$core$IFn$_invoke$arity$1(item))) * (new cljs.core.Keyword(null, "price", "price", 22129180)).cljs$core$IFn$_invoke$arity$1(item))], null)], null);
};
censorius.page.sum_merch_prices = function sum_merch_prices() {
  return censorius.utils.format_money.call(null, cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(style) {
    return cljs.core.get.call(null, style, new cljs.core.Keyword(null, "qty", "qty", 155560951));
  }, cljs.core.map.call(null, function(item) {
    return(new cljs.core.Keyword(null, "styles", "styles", 1954480375)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, item));
  }, cljs.core.deref.call(null, censorius.data.merch)))));
};
censorius.page.merch_box = function merch_box() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Extras"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "extras"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "thead", "thead", -291875296), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Item"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Price Ea."], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Style / Qty."], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "th", "th", -545608566), "Subtotal"], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tbody", "tbody", -80678300), cljs.core.map.call(null, censorius.page.product_row, cljs.core.deref.call(null, censorius.data.merch))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tfoot", "tfoot", -701599890), new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "col-span", "col-span", -232603210), 3], null), "Subtotal"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.sum_merch_prices], null)], null)], null)], null)], null)], null);
};
censorius.page.workshop_box = function workshop_box() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Workshops"], null), cljs.core.count.call(null, cljs.core.deref.call(null, censorius.data.workshops)) > 
  0 ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fieldset", "fieldset", -1949770816), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "legend", "legend", -1027192245), "Workshop Requests"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "thead", "thead", -291875296), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Title"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "th", "th", -545608566), "Presenter"], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tbody", "tbody", -80678300), function() {
    var iter__4555__auto__ = function iter__10327(s__10328) {
      return new cljs.core.LazySeq(null, function() {
        var s__10328__$1 = s__10328;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__10328__$1);
          if (temp__4126__auto__) {
            var s__10328__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__10328__$2)) {
              var c__4553__auto__ = cljs.core.chunk_first.call(null, s__10328__$2);
              var size__4554__auto__ = cljs.core.count.call(null, c__4553__auto__);
              var b__10330 = cljs.core.chunk_buffer.call(null, size__4554__auto__);
              if (function() {
                var i__10329 = 0;
                while (true) {
                  if (i__10329 < size__4554__auto__) {
                    var workshop = cljs.core._nth.call(null, c__4553__auto__, i__10329);
                    cljs.core.chunk_append.call(null, b__10330, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
                    1, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("#/workshops/"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, workshop)))].join("")], null), (new cljs.core.Keyword(null, "long-name", "long-name", 184126232)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, workshop))], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                    [new cljs.core.Keyword(null, "td", "td", 1479933353), (new cljs.core.Keyword(null, "formal-name", "formal-name", 2039222E3)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "presenter", "presenter", -436645309)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, workshop)))], null)], null));
                    var G__10331 = i__10329 + 1;
                    i__10329 = G__10331;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10330), iter__10327.call(null, cljs.core.chunk_rest.call(null, s__10328__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10330), null);
              }
            } else {
              var workshop = cljs.core.first.call(null, s__10328__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
              "href", "href", -793805698), [cljs.core.str("#/workshops/"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, workshop)))].join("")], null), (new cljs.core.Keyword(null, "long-name", "long-name", 184126232)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, workshop))], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", 
              "td", 1479933353), (new cljs.core.Keyword(null, "formal-name", "formal-name", 2039222E3)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "presenter", "presenter", -436645309)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, workshop)))], null)], null), iter__10327.call(null, cljs.core.rest.call(null, s__10328__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4555__auto__.call(null, cljs.core.deref.call(null, censorius.data.workshops));
  }()], null)], null)], null) : null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/add-workshop"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "class", "class", -2030961996), "true"], null), cljs.core.count.call(null, cljs.core.deref.call(null, censorius.data.workshops)) === 0 ? "\u2042 Present a workshop" : "+ Add another"], null)], null)], null);
};
censorius.page.vendor_box = function vendor_box() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Vending"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, censorius.data.guests)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "Vendors must have at least one paid, adult admission"], null), "No "], null) : cljs.core.not.call(null, (new cljs.core.Keyword(null, "agreement", 
  "agreement", -156381462)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.vending))) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h3", "h3", 2067611163), "Vendor agreement"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "Before you can become an vendor, you need to agree to the festival's vendor rules."], 
  null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/vendor-agreement"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 
  -2030961996), "true"], null), "Vendor Rules"], null)], null), "No "], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, cljs.core.deref.call(null, censorius.data.vending), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "qty", "qty", 155560951), new cljs.core.Keyword(null, "label", "label", 1718410804), "Quantity", new cljs.core.Keyword(null, "placeholder", 
  "placeholder", -104873083), "0", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.just_number, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.just_digits_QMARK_, new cljs.core.Keyword(null, "rows", "rows", 850049680), 0, new cljs.core.Keyword(null, "size", "size", 1098693007), 3], null)], null), " vendor ", cljs.core._EQ_.call(null, 1, (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  censorius.data.vending))) ? "slip" : "slips", " (", 1 < (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.vending)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529E3), 10 * (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.vending))], null) : 10, "\u2032\u00d710\u2032) @ ", 
  censorius.utils.format_money.call(null, (new cljs.core.Keyword(null, "vendor", "vendor", 1931975424)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.prices))), " each", 1 < (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.vending)) ? new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), " (total ", censorius.utils.format_money.call(null, (new cljs.core.Keyword(null, "vendor", "vendor", 1931975424)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.prices)) * (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.data.vending))), ")"], null) : null], null), (new cljs.core.Keyword(null, "qty", "qty", 155560951)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
  censorius.data.vending)) > 0 ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, cljs.core.deref.call(null, censorius.data.vending), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.Keyword(null, 
  "label", "label", 1718410804), "Vending Booth Name", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Plonkee Plonkee Shoppe", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.name_case, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.name_like_QMARK_, new cljs.core.Keyword(null, "rows", "rows", 850049680), 1], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, 
  cljs.core.deref.call(null, censorius.data.vending), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "blurb", "blurb", -769928228), new cljs.core.Keyword(null, "label", "label", 1718410804), "Description (Handbook/Web)", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Come and have lots of fun with our widgets and doodads! You'll want to collect all nine.", new cljs.core.Keyword(null, "validate", 
  "validate", -201300827), function(p1__10332_SHARP_) {
    return 250 > cljs.core.count.call(null, p1__10332_SHARP_) && cljs.core.count.call(null, p1__10332_SHARP_) > 32;
  }, new cljs.core.Keyword(null, "rows", "rows", 850049680), 3], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, cljs.core.deref.call(null, censorius.data.vending), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "notes", "notes", -1039600523), new cljs.core.Keyword(null, "label", "label", 1718410804), "Requests/Notes", new cljs.core.Keyword(null, 
  "placeholder", "placeholder", -104873083), "", new cljs.core.Keyword(null, "rows", "rows", 850049680), 2], null)], null)], null) : null], null);
};
censorius.page.assistant_box = function assistant_box(props, children, self) {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "assistant"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Assistant"], null), cljs.core.count.call(null, cljs.core.deref.call(null, censorius.data.guests)) === 
  0 ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), "Getting Started"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "First, enter the (legal) name of your party's leader. Since\n                                      you're entering this, that's\n                                      probably you! This will be the\n                                      name that your registration will\n                                      be ", 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "q", "q", 689001697), "filed under"], null), " when you arrive at the Festival. Then, click (or tap) ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529E3), "+ Add to Party"], null), "."], null)], null) : new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), "Editing your Party"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "For each person in your party, click the buttons under each\n       column to fill in their complete details."], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "p", "p", 151049309), "The information you fill in for your party leader will\n       become the default for other party members, so check out your\n       options first."], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "You can add as many party members as you need to."], null)], null), cljs.core.filter.call(null, function(p1__10333_SHARP_) {
    return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "adult", "adult", -1130256462), (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(p1__10333_SHARP_)) && !((new cljs.core.Keyword(null, "e-mail", "e-mail", 270044236)).cljs$core$IFn$_invoke$arity$1(p1__10333_SHARP_) == null);
  }, cljs.core.deref.call(null, censorius.data.guests)) == null ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "warning"], null), "eMail Address Needed"], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "The eMail address of at least one adult in the party must be provided."], null)], null) : null, function() {
    var babies = cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__10334_SHARP_) {
      return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "baby", "baby", -1305225347), (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(p1__10334_SHARP_));
    }, cljs.core.deref.call(null, censorius.data.guests)));
    var children__$1 = cljs.core.count.call(null, cljs.core.filter.call(null, function(babies) {
      return function(p1__10335_SHARP_) {
        return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "child", "child", 623967545), (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(p1__10335_SHARP_));
      };
    }(babies), cljs.core.deref.call(null, censorius.data.guests)));
    var adults = cljs.core.count.call(null, cljs.core.filter.call(null, function(babies, children__$1) {
      return function(p1__10336_SHARP_) {
        return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "adult", "adult", -1130256462), (new cljs.core.Keyword(null, "ticket-type", "ticket-type", -847802505)).cljs$core$IFn$_invoke$arity$1(p1__10336_SHARP_));
      };
    }(babies, children__$1), cljs.core.deref.call(null, censorius.data.guests)));
    var adults_needed = babies + (children__$1 > 0 ? 1 : 0);
    if (adults_needed > adults) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "warning"], null), censorius.utils.counting.call(null, adults_needed - adults, "Adult"), " Required"], null), new cljs.core.PersistentVector(null, 
      7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "At least ", clojure.string.lower_case.call(null, censorius.utils.counting.call(null, adults_needed, "adult")), " must accompany ", babies > 0 ? [cljs.core.str(clojure.string.lower_case.call(null, censorius.utils.counting.call(null, babies, "child"))), cljs.core.str(" under 5"), cljs.core.str(children__$1 > 0 ? " and" : null)].join("") : null, children__$1 > 0 ? [cljs.core.str(clojure.string.lower_case.call(null, 
      censorius.utils.counting.call(null, children__$1, "child"))), cljs.core.str(babies > 0 ? " ages 5-17" : null)].join("") : null, "."], null)], null);
    } else {
      return null;
    }
  }(), 1 < cljs.core.count.call(null, cljs.core.deref.call(null, censorius.data.guests)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), "Removing tickets"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "p", "p", 151049309), "To remove someone from your party, click on their name, then click the ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529E3), "Remove from Party"], null), " button."], null)], null) : null, cljs.core.truth_(cljs.core.some.call(null, function(guest_atom) {
    var guest = cljs.core.deref.call(null, guest_atom);
    var or__3799__auto__ = (new cljs.core.Keyword(null, "t-shirt", "t-shirt", -2121900800)).cljs$core$IFn$_invoke$arity$1(guest);
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      var or__3799__auto____$1 = (new cljs.core.Keyword(null, "coffee?", "coffee?", -1296287323)).cljs$core$IFn$_invoke$arity$1(guest);
      if (cljs.core.truth_(or__3799__auto____$1)) {
        return or__3799__auto____$1;
      } else {
        return(new cljs.core.Keyword(null, "tote?", "tote?", -1225962794)).cljs$core$IFn$_invoke$arity$1(guest);
      }
    }
  }, cljs.core.deref.call(null, censorius.data.guests))) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), "Merchandise"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "You can purchase great merchandise for every member of your party, and order extra items to take home from the ", 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529E3), "Extras"], null), " box as well. There are additional items, like general T-shirts, also available this way."], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "h4", "h4", 2004862993), "Merchandise"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "Buy your festival T-shirts for every party member, or order more merchandise from the ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529E3), "Extras"], null), " box."], null)], null), new cljs.core.PersistentVector(null, 3, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), "Vendors"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "Set up your vending booth by picking the number of spaces you'll\n                                                     need, then put in\n                                                     your booth's name\n                                                     and description to\n                                                     appear in\n                                                     the handbook."], 
  null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 2004862993), "Workshops"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "If any members of your party want to present a workshop at FPG, just fill out the information here."], 
  null)], null)], null);
};
censorius.page.scholarship_box = function scholarship_box() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Scholarship Donations"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tbody", "tbody", -80678300), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Pagans Helping Pagans", 
  new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "These funds are used to provide scholarships for guests who would like to attend FPG but need financial assistance."], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "td", "td", 1479933353), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, cljs.core.deref.call(null, censorius.data.scholarships), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "php", "php", -97199496), new cljs.core.Keyword(null, "label", "label", 1718410804), "Pagans Helping Pagans Fund", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), 
  "$5.00", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.format_money, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.money_QMARK_, new cljs.core.Keyword(null, "size", "size", 1098693007), 6, new cljs.core.Keyword(null, "rows", "rows", 850049680), 0], null)], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Robert Baiardi Memorial", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "Named in remembrance of Robert Baiardi, the husband of a member of FPG staff who passed away shortly after FPG Samhain 2012. This fund has been set up to provide financial assistance for staff admissions."], 
  null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, cljs.core.deref.call(null, censorius.data.scholarships), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), new cljs.core.Keyword(null, "baiardi", "baiardi", -146956275), new cljs.core.Keyword(null, 
  "label", "label", 1718410804), "Robert Baiardi Memorial Fund", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "$5.00", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.format_money, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.money_QMARK_, new cljs.core.Keyword(null, "size", "size", 1098693007), 6, new cljs.core.Keyword(null, "rows", "rows", 850049680), 0], null)], null)], null)], null), new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), "Seva", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), 
  "The Seva Scholarship offers financial assistance to FPG staff members who need it."], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.text.text_input, cljs.core.deref.call(null, censorius.data.scholarships), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "korks", "korks", -1343842342), 
  new cljs.core.Keyword(null, "seva", "seva", -1044185878), new cljs.core.Keyword(null, "label", "label", 1718410804), "Seva Fund", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "$5.00", new cljs.core.Keyword(null, "format", "format", -1306924766), censorius.utils.format_money, new cljs.core.Keyword(null, "validate", "validate", -201300827), censorius.utils.money_QMARK_, new cljs.core.Keyword(null, "size", "size", 1098693007), 6, new cljs.core.Keyword(null, "rows", "rows", 
  850049680), 0], null)], null)], null)], null)], null)], null)], null);
};
censorius.page.check_out_box = function check_out_box() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Ready to check out?"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "buttonBox"], null), " Total: ", "$399.97", " ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), "Pay Now"], null)], null)], null);
};
censorius.page.registration_page = function registration_page() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.guest_list_box], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.merch_box], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.vendor_box], null), 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.workshop_box], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.scholarship_box], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.assistant_box], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.page.check_out_box], null)], null);
};
censorius.page.about_page = function about_page() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), "About Censorius"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "Copyright \u00a9 2014-2015, Bruce-Robert Fenn Pocock."], 
  null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), "\u2190 Back to Registration"], null)], null)], null);
};
censorius.page.staff_apply = function staff_apply(guest$) {
  var guest = cljs.core.get.call(null, cljs.core.deref.call(null, censorius.data.guests), guest$);
  if (cljs.core.not.call(null, guest)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), "Staff Application"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, 
    [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null)], null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), "Staff Application"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, 
    [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Confirm Name"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [censorius.guest.name_edit_box, guest], null)], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 
    1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Already on Staff?"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "If you're already a staff member, you can get your Lugal's\n    confirmation and get your staff discount. You must have already\n    applied, been accepted, and been assigned to your Lugal to receive\n    the discount."], 
    null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/staff-confirm"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), "Confirm Staff"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "hint"], null), "If you're a Lugal, Division Co\u00f6rdinator,\n    Director, Guardian, Shiny Happy People Drum Tribe, Headliner, or\n    other individual who should receive a discounted admission, make\n    sure that you've entered your eMail address and that it matches the\n    one you gave to the Festival previously. If your discount does not\n    appear, then "], 
    null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "mailto:festival-censorius@star-hope.org"], null), "send an eMail"], null), "with the details of your problem and I'll look into it."], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", 
    "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "button", "button", 1456579943), "\u2190 Back to Registration"], null)], null)], null)], null);
  }
};
censorius.page.vendor_quiz = function vendor_quiz() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), "Staff Application"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, 
  [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), "\u2190 Back to Registration"], null)], null)], null)], null);
};
censorius.page.staff_confirm = function staff_confirm() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), "Staff Confirmation"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "href", "href", -793805698), "#/staff-apply"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), "Apply for Staff"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/"], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), "\u2190 Back to Registration"], null)], null)], null);
};
censorius.page.page_404 = function page_404() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), "404: Incorrect link"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.PersistentArrayMap(null, 1, 
  [new cljs.core.Keyword(null, "class", "class", -2030961996), "card"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), "Festival Registration"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), "The link you followed is not valid; but you can ", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "#/"], null), "return to Registration"], null), " here."], null)], null)], null);
};
censorius.page.uri_view = reagent.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.registration_page, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "filter", "filter", -948537934), null], null));
secretary.core.set_config_BANG_.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), "#");
censorius.page.location_hash = function location_hash(x) {
  return window.location.hash = x;
};
var action__10299__auto___10339 = function(params__10300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__10300__auto__)) {
    var map__10337 = params__10300__auto__;
    var map__10337__$1 = cljs.core.seq_QMARK_.call(null, map__10337) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10337) : map__10337;
    return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.registration_page);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__10300__auto__)) {
      var vec__10338 = params__10300__auto__;
      return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.registration_page);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/", action__10299__auto___10339);
var action__10299__auto___10342 = function(params__10300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__10300__auto__)) {
    var map__10340 = params__10300__auto__;
    var map__10340__$1 = cljs.core.seq_QMARK_.call(null, map__10340) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10340) : map__10340;
    return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.about_page);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__10300__auto__)) {
      var vec__10341 = params__10300__auto__;
      return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.about_page);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/about", action__10299__auto___10342);
var action__10299__auto___10345 = function(params__10300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__10300__auto__)) {
    var map__10343 = params__10300__auto__;
    var map__10343__$1 = cljs.core.seq_QMARK_.call(null, map__10343) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10343) : map__10343;
    return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.vendor_quiz);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__10300__auto__)) {
      var vec__10344 = params__10300__auto__;
      return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.vendor_quiz);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/vendor-agreement", action__10299__auto___10345);
var action__10299__auto___10350 = function(params__10300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__10300__auto__)) {
    var map__10346 = params__10300__auto__;
    var map__10346__$1 = cljs.core.seq_QMARK_.call(null, map__10346) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10346) : map__10346;
    var map__10347 = cljs.core.get.call(null, map__10346__$1, new cljs.core.Keyword(null, "{:keys [id]}", "{:keys [id]}", -1604799786));
    var map__10347__$1 = cljs.core.seq_QMARK_.call(null, map__10347) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10347) : map__10347;
    var id = cljs.core.get.call(null, map__10347__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
    return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.staff_apply, new cljs.core.Keyword(null, "id", "id", -1388402092), id);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__10300__auto__)) {
      var vec__10348 = params__10300__auto__;
      var map__10349 = cljs.core.nth.call(null, vec__10348, 0, null);
      var map__10349__$1 = cljs.core.seq_QMARK_.call(null, map__10349) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10349) : map__10349;
      var id = cljs.core.get.call(null, map__10349__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.staff_apply, new cljs.core.Keyword(null, "id", "id", -1388402092), id);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/staff-apply/:id", action__10299__auto___10350);
var action__10299__auto___10355 = function(params__10300__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__10300__auto__)) {
    var map__10351 = params__10300__auto__;
    var map__10351__$1 = cljs.core.seq_QMARK_.call(null, map__10351) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10351) : map__10351;
    var map__10352 = cljs.core.get.call(null, map__10351__$1, new cljs.core.Keyword(null, "{:keys [id]}", "{:keys [id]}", -1604799786));
    var map__10352__$1 = cljs.core.seq_QMARK_.call(null, map__10352) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10352) : map__10352;
    var id = cljs.core.get.call(null, map__10352__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
    return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.staff_confirm, new cljs.core.Keyword(null, "id", "id", -1388402092), id);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__10300__auto__)) {
      var vec__10353 = params__10300__auto__;
      var map__10354 = cljs.core.nth.call(null, vec__10353, 0, null);
      var map__10354__$1 = cljs.core.seq_QMARK_.call(null, map__10354) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10354) : map__10354;
      var id = cljs.core.get.call(null, map__10354__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      return cljs.core.swap_BANG_.call(null, censorius.page.uri_view, cljs.core.assoc, new cljs.core.Keyword(null, "current-page", "current-page", -101294180), censorius.page.staff_confirm, new cljs.core.Keyword(null, "id", "id", -1388402092), id);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/staff-confirm/:id", action__10299__auto___10355);
censorius.page.init_BANG_ = function init_BANG_() {
  return reagent.core.render_component.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "current-page", "current-page", -101294180)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, censorius.page.uri_view)), censorius.page.uri_view], null), document.getElementById("censorius"));
};
censorius.page.hook_browser_navigation_BANG_ = function hook_browser_navigation_BANG_() {
  var history = new goog.History;
  goog.events.listen(history, goog.history.EventType.NAVIGATE, function(history) {
    return function(p1__10356_SHARP_) {
      return secretary.core.dispatch_BANG_.call(null, p1__10356_SHARP_.token);
    };
  }(history));
  var G__10358 = history;
  G__10358.setEnabled(true);
  return G__10358;
};
censorius.page.main = function main() {
  censorius.utils.log.call(null, "clearTimeout ", not_loaded);
  window.clearTimeout(not_loaded);
  censorius.page.hook_browser_navigation_BANG_.call(null);
  return censorius.page.init_BANG_.call(null);
};
censorius.page.main.call(null);
// Input 79
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
// Input 80
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
// Input 81
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
// Input 82
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
// Input 83
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
// Input 84
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
// Input 85
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
// Input 86
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
// Input 87
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
// Input 88
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
// Input 89
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
// Input 90
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
// Input 91
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
// Input 92
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
// Input 93
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
// Input 94
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
// Input 95
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
// Input 96
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
// Input 97
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
// Input 98
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
// Input 99
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
// Input 100
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
// Input 101
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
// Input 102
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
// Input 103
goog.provide("goog.async.run");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
// Input 104
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
// Input 105
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
// Input 106
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
// Input 107
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
// Input 108
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
// Input 109
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
// Input 110
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
// Input 111
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
// Input 112
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    var outerRole = this.channel_.getRole() == CrossPageChannelRole.OUTER;
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = (payload.split(DirectTransport.MESSAGE_DELIMITER_));
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return{"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
// Input 113
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
// Input 114
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0;receiver = receivers[i];i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
// Input 115
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet(("area,base,br,col,command," + "embed,hr,img,input,keygen,link,meta,param,source,track,wbr").split(","));
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
// Input 116
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
// Input 117
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
// Input 118
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  var safeStyle = new goog.html.SafeStyle;
  safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return safeStyle;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-.%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.VALUE_RE_ = /^[-.%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
// Input 119
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0, UNKNOWN:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return!goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /\d/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
// Input 120
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    url = goog.html.SafeUrl.normalize_(url);
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.normalize_ = function(url) {
  try {
    var normalized = encodeURI(url);
  } catch (e) {
    return goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return normalized.replace(goog.html.SafeUrl.NORMALIZE_MATCHER_, function(match) {
    return goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_[match];
  });
};
goog.html.SafeUrl.NORMALIZE_MATCHER_ = /[()']|%5B|%5D|%25/g;
goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_ = {"'":"%27", "(":"%28", ")":"%29", "%5B":"[", "%5D":"]", "%25":"%"};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
// Input 121
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet("link", "script", "style");
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toLowerCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (value == null) {
        continue;
      }
      if (value instanceof goog.string.Const) {
        value = goog.string.Const.unwrap(value);
      } else {
        if (name.toLowerCase() == "style") {
          value = goog.html.SafeHtml.getStyleValue_(value);
        } else {
          if (/^on/i.test(name)) {
            throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
                throw Error('Attribute "' + name + '" requires goog.string.Const or goog.html.SafeUrl value, "' + value + '" given.');
              }
            }
          }
        }
      }
      goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
      result += " " + name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
    }
  }
  var content = opt_content;
  if (!goog.isDef(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  var safeHtml = new goog.html.SafeHtml;
  safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  safeHtml.dir_ = dir;
  return safeHtml;
};
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
// Input 122
goog.provide("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
// Input 123
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.html.SafeHtml");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    goog.dom.safe.setInnerHtml(div, goog.html.SafeHtml.create("iframe", {"onload":goog.string.Const.from("this.xpcOnload()")}));
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
// Input 124
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = (payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_));
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
// Input 125
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
// Input 126
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported((this.peerWindowObject_))) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
// Input 127
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.IEventType = function() {
  var obj21144 = {};
  return obj21144;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.clojure$browser$event$IEventType$event_types$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__21145) {
      var vec__21146 = p__21145;
      var k = cljs.core.nth.call(null, vec__21146, 0, null);
      var v = cljs.core.nth.call(null, vec__21146, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = true;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
      return function(p__21147) {
        var vec__21148 = p__21147;
        var k = cljs.core.nth.call(null, vec__21148, 0, null);
        var v = cljs.core.nth.call(null, vec__21148, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
      };
    }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
// Input 128
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.json");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__21150) {
  var vec__21151 = p__21150;
  var k = cljs.core.nth.call(null, vec__21151, 0, null);
  var v = cljs.core.nth.call(null, vec__21151, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj21153 = {};
  return obj21153;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.connect[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.connect[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.connect[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.connect[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = clojure.browser.net.close[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = clojure.browser.net.close["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__21154) {
      var vec__21155 = p__21154;
      var k = cljs.core.nth.call(null, vec__21155, 0, null);
      var v = cljs.core.nth.call(null, vec__21155, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__21156) {
  var vec__21157 = p__21156;
  var k = cljs.core.nth.call(null, vec__21157, 0, null);
  var v = cljs.core.nth.call(null, vec__21157, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj21159 = {};
  return obj21159;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3787__auto__ = this$;
      if (and__3787__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3787__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4443__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3799__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4443__auto__)];
        if (or__3799__auto__) {
          return or__3799__auto__;
        } else {
          var or__3799__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3799__auto____$1) {
            return or__3799__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__21165) {
      var vec__21166 = p__21165;
      var k = cljs.core.nth.call(null, vec__21166, 0, null);
      var v = cljs.core.nth.call(null, vec__21166, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__21167 = sum;
        G__21167[field] = v;
        return G__21167;
      } else {
        return sum;
      }
    }, function() {
      var obj21169 = {};
      return obj21169;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
// Input 129
goog.provide("goog.net.WebSocket");
goog.provide("goog.net.WebSocket.ErrorEvent");
goog.provide("goog.net.WebSocket.EventType");
goog.provide("goog.net.WebSocket.MessageEvent");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.log");
goog.net.WebSocket = function(opt_autoReconnect, opt_getNextReconnect) {
  goog.net.WebSocket.base(this, "constructor");
  this.autoReconnect_ = goog.isDef(opt_autoReconnect) ? opt_autoReconnect : true;
  this.getNextReconnect_ = opt_getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = undefined;
goog.net.WebSocket.prototype.closeExpected_ = false;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1E3;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {
  var time = Math.pow(2, attempt) * 1E3;
  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(errorHandler) {
  goog.net.WebSocket.prototype.onOpen_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(url, opt_protocol) {
  goog.asserts.assert(goog.global["WebSocket"], "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = url;
  this.protocol_ = opt_protocol;
  if (this.protocol_) {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_);
    this.webSocket_ = new WebSocket(this.url_, this.protocol_);
  } else {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_);
    this.webSocket_ = new WebSocket(this.url_);
  }
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  if (this.webSocket_) {
    goog.log.info(this.logger_, "Closing the WebSocket.");
    this.closeExpected_ = true;
    this.webSocket_.close();
    this.webSocket_ = null;
  }
};
goog.net.WebSocket.prototype.send = function(message) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(message);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return!!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(event) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  if (this.closeExpected_) {
    goog.log.info(this.logger_, "The WebSocket closed normally.");
    this.url_ = null;
    this.protocol_ = undefined;
  } else {
    goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + event.data);
    if (this.autoReconnect_) {
      var seconds = Math.floor(this.nextReconnect_ / 1E3);
      goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + seconds);
      this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this);
      this.reconnectAttempt_++;
      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
    }
  }
  this.closeExpected_ = false;
};
goog.net.WebSocket.prototype.onMessage_ = function(event) {
  var message = event.data;
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(message));
};
goog.net.WebSocket.prototype.onError_ = function(event) {
  var data = (event.data);
  goog.log.error(this.logger_, "An error occurred: " + data);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  if (goog.isDefAndNotNull(this.reconnectTimer_)) {
    goog.Timer.clear(this.reconnectTimer_);
  }
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.base(this, "disposeInternal");
  this.close();
};
goog.net.WebSocket.MessageEvent = function(message) {
  goog.net.WebSocket.MessageEvent.base(this, "constructor", goog.net.WebSocket.EventType.MESSAGE);
  this.message = message;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(data) {
  goog.net.WebSocket.ErrorEvent.base(this, "constructor", goog.net.WebSocket.EventType.ERROR);
  this.data = data;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.WebSocket.prototype.onOpen_ = transformer(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = transformer(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = transformer(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = transformer(goog.net.WebSocket.prototype.onError_);
});
// Input 130
goog.provide("weasel.impls.websocket");
goog.require("cljs.core");
goog.require("goog.net.WebSocket");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
weasel.impls.websocket.IWebSocket = function() {
  var obj21172 = {};
  return obj21172;
}();
weasel.impls.websocket.open_QMARK_ = function open_QMARK_(this$) {
  if (function() {
    var and__3787__auto__ = this$;
    if (and__3787__auto__) {
      return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1;
    } else {
      return and__3787__auto__;
    }
  }()) {
    return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1(this$);
  } else {
    var x__4443__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3799__auto__ = weasel.impls.websocket.open_QMARK_[goog.typeOf(x__4443__auto__)];
      if (or__3799__auto__) {
        return or__3799__auto__;
      } else {
        var or__3799__auto____$1 = weasel.impls.websocket.open_QMARK_["_"];
        if (or__3799__auto____$1) {
          return or__3799__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", this$);
        }
      }
    }().call(null, this$);
  }
};
weasel.impls.websocket.websocket_connection = function() {
  var websocket_connection = null;
  var websocket_connection__0 = function() {
    return websocket_connection.call(null, null, null);
  };
  var websocket_connection__1 = function(auto_reconnect_QMARK_) {
    return websocket_connection.call(null, auto_reconnect_QMARK_, null);
  };
  var websocket_connection__2 = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    return new goog.net.WebSocket(auto_reconnect_QMARK_, next_reconnect_fn);
  };
  websocket_connection = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    switch(arguments.length) {
      case 0:
        return websocket_connection__0.call(this);
      case 1:
        return websocket_connection__1.call(this, auto_reconnect_QMARK_);
      case 2:
        return websocket_connection__2.call(this, auto_reconnect_QMARK_, next_reconnect_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  websocket_connection.cljs$core$IFn$_invoke$arity$0 = websocket_connection__0;
  websocket_connection.cljs$core$IFn$_invoke$arity$1 = websocket_connection__1;
  websocket_connection.cljs$core$IFn$_invoke$arity$2 = websocket_connection__2;
  return websocket_connection;
}();
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = true;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__21173) {
      var vec__21174 = p__21173;
      var k = cljs.core.nth.call(null, vec__21174, 0, null);
      var v = cljs.core.nth.call(null, vec__21174, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = true;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, url) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, url, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, url, protocol) {
  var this$__$1 = this;
  return this$__$1.open(url, protocol);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, message) {
  var this$__$1 = this;
  return this$__$1.send(message);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$ = true;
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.isOpen(cljs.core.List.EMPTY);
};
// Input 131
goog.provide("weasel.repl");
goog.require("cljs.core");
goog.require("weasel.impls.websocket");
goog.require("cljs.reader");
goog.require("clojure.browser.net");
goog.require("clojure.browser.event");
weasel.repl.ws_connection = cljs.core.atom.call(null, null);
weasel.repl.alive_QMARK_ = function alive_QMARK_() {
  return!(cljs.core.deref.call(null, weasel.repl.ws_connection) == null);
};
weasel.repl.process_message = function() {
  var method_table__4696__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4697__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4698__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4699__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4700__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "weasel.repl", "process-message"), new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4700__auto__, method_table__4696__auto__, prefer_table__4697__auto__, method_cache__4698__auto__, cached_hierarchy__4699__auto__);
}();
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "error", "error", -978969032), function(message) {
  return console.error([cljs.core.str("Websocket REPL error "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(message))].join(""));
});
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "eval-js", "eval-js", 760905924), function(message) {
  var code = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(message);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "value", "value", 305978217), function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), [cljs.core.str(eval(code))].join("")], null);
    } catch (e21127) {
      if (e21127 instanceof Error) {
        var e = e21127;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], null);
      } else {
        var e = e21127;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), "No stacktrace available."], null);
      }
    }
  }()], null);
});
weasel.repl.repl_print = function() {
  var repl_print__delegate = function(args) {
    var temp__4124__auto__ = cljs.core.deref.call(null, weasel.repl.ws_connection);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var conn = temp__4124__auto__;
      return clojure.browser.net.transmit.call(null, cljs.core.deref.call(null, weasel.repl.ws_connection), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "print", "print", 1299562414), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.apply.call(null, cljs.core.pr_str, args)], null));
    } else {
      return null;
    }
  };
  var repl_print = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__21128__i = 0, G__21128__a = new Array(arguments.length - 0);
      while (G__21128__i < G__21128__a.length) {
        G__21128__a[G__21128__i] = arguments[G__21128__i + 0];
        ++G__21128__i;
      }
      args = new cljs.core.IndexedSeq(G__21128__a, 0);
    }
    return repl_print__delegate.call(this, args);
  };
  repl_print.cljs$lang$maxFixedArity = 0;
  repl_print.cljs$lang$applyTo = function(arglist__21129) {
    var args = cljs.core.seq(arglist__21129);
    return repl_print__delegate(args);
  };
  repl_print.cljs$core$IFn$_invoke$arity$variadic = repl_print__delegate;
  return repl_print;
}();
weasel.repl.console_print = function() {
  var console_print__delegate = function(args) {
    return console.log.apply(console, cljs.core.into_array.call(null, args));
  };
  var console_print = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__21130__i = 0, G__21130__a = new Array(arguments.length - 0);
      while (G__21130__i < G__21130__a.length) {
        G__21130__a[G__21130__i] = arguments[G__21130__i + 0];
        ++G__21130__i;
      }
      args = new cljs.core.IndexedSeq(G__21130__a, 0);
    }
    return console_print__delegate.call(this, args);
  };
  console_print.cljs$lang$maxFixedArity = 0;
  console_print.cljs$lang$applyTo = function(arglist__21131) {
    var args = cljs.core.seq(arglist__21131);
    return console_print__delegate(args);
  };
  console_print.cljs$core$IFn$_invoke$arity$variadic = console_print__delegate;
  return console_print;
}();
weasel.repl.print_fns = new cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "repl", "repl", -35398667), weasel.repl.repl_print, new cljs.core.Keyword(null, "console", "console", 1228072057), weasel.repl.console_print, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "repl", "repl", -35398667), null, new cljs.core.Keyword(null, "console", "console", 1228072057), null], null), null), function() {
  var G__21132__delegate = function(args) {
    cljs.core.apply.call(null, weasel.repl.console_print, args);
    return cljs.core.apply.call(null, weasel.repl.repl_print, args);
  };
  var G__21132 = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__21133__i = 0, G__21133__a = new Array(arguments.length - 0);
      while (G__21133__i < G__21133__a.length) {
        G__21133__a[G__21133__i] = arguments[G__21133__i + 0];
        ++G__21133__i;
      }
      args = new cljs.core.IndexedSeq(G__21133__a, 0);
    }
    return G__21132__delegate.call(this, args);
  };
  G__21132.cljs$lang$maxFixedArity = 0;
  G__21132.cljs$lang$applyTo = function(arglist__21134) {
    var args = cljs.core.seq(arglist__21134);
    return G__21132__delegate(args);
  };
  G__21132.cljs$core$IFn$_invoke$arity$variadic = G__21132__delegate;
  return G__21132;
}()], true, false);
weasel.repl.connect = function() {
  var connect__delegate = function(repl_server_url, p__21135) {
    var map__21138 = p__21135;
    var map__21138__$1 = cljs.core.seq_QMARK_.call(null, map__21138) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21138) : map__21138;
    var print = cljs.core.get.call(null, map__21138__$1, new cljs.core.Keyword(null, "print", "print", 1299562414), new cljs.core.Keyword(null, "repl", "repl", -35398667));
    var on_close = cljs.core.get.call(null, map__21138__$1, new cljs.core.Keyword(null, "on-close", "on-close", -761178394));
    var on_error = cljs.core.get.call(null, map__21138__$1, new cljs.core.Keyword(null, "on-error", "on-error", 1728533530));
    var on_open = cljs.core.get.call(null, map__21138__$1, new cljs.core.Keyword(null, "on-open", "on-open", -1391088163));
    var verbose = cljs.core.get.call(null, map__21138__$1, new cljs.core.Keyword(null, "verbose", "verbose", 1694226060), true);
    var repl_connection = weasel.impls.websocket.websocket_connection.call(null);
    cljs.core.swap_BANG_.call(null, weasel.repl.ws_connection, cljs.core.constantly.call(null, repl_connection));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "opened", "opened", -1451743091), function(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose) {
      return function(evt) {
        cljs.core.set_print_fn_BANG_.call(null, cljs.core.fn_QMARK_.call(null, print) ? print : cljs.core.get.call(null, weasel.repl.print_fns, print));
        clojure.browser.net.transmit.call(null, repl_connection, cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "ready", "ready", 1086465795)], null)));
        if (cljs.core.truth_(verbose)) {
          console.info("Opened Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_open)) {
          return on_open.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "message", "message", -406056002), function(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose) {
      return function(evt) {
        var map__21139 = cljs.reader.read_string.call(null, evt.message);
        var map__21139__$1 = cljs.core.seq_QMARK_.call(null, map__21139) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21139) : map__21139;
        var message = map__21139__$1;
        var op = cljs.core.get.call(null, map__21139__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
        var response = cljs.core.pr_str.call(null, weasel.repl.process_message.call(null, message));
        return clojure.browser.net.transmit.call(null, repl_connection, response);
      };
    }(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "closed", "closed", -919675359), function(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose) {
      return function(evt) {
        cljs.core.reset_BANG_.call(null, weasel.repl.ws_connection, null);
        if (cljs.core.truth_(verbose)) {
          console.info("Closed Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_close)) {
          return on_close.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "error", "error", -978969032), function(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose) {
      return function(evt) {
        if (cljs.core.truth_(verbose)) {
          console.error("WebSocket error", evt);
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_error)) {
          return on_error.call(null, evt);
        } else {
          return null;
        }
      };
    }(repl_connection, map__21138, map__21138__$1, print, on_close, on_error, on_open, verbose));
    return clojure.browser.net.connect.call(null, repl_connection, repl_server_url);
  };
  var connect = function(repl_server_url, var_args) {
    var p__21135 = null;
    if (arguments.length > 1) {
      var G__21140__i = 0, G__21140__a = new Array(arguments.length - 1);
      while (G__21140__i < G__21140__a.length) {
        G__21140__a[G__21140__i] = arguments[G__21140__i + 1];
        ++G__21140__i;
      }
      p__21135 = new cljs.core.IndexedSeq(G__21140__a, 0);
    }
    return connect__delegate.call(this, repl_server_url, p__21135);
  };
  connect.cljs$lang$maxFixedArity = 1;
  connect.cljs$lang$applyTo = function(arglist__21141) {
    var repl_server_url = cljs.core.first(arglist__21141);
    var p__21135 = cljs.core.rest(arglist__21141);
    return connect__delegate(repl_server_url, p__21135);
  };
  connect.cljs$core$IFn$_invoke$arity$variadic = connect__delegate;
  return connect;
}();
// Input 132
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5E3;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.loadMany = function(uris, opt_options) {
  if (!uris.length) {
    return;
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, uris);
  if (isAnotherModuleLoading) {
    return;
  }
  uris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var uri = uris.shift();
    var deferred = goog.net.jsloader.load(uri, opt_options);
    if (uris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
  };
  popAndLoadNextScript();
};
goog.net.jsloader.load = function(uri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  goog.dom.setProperties(script, {"type":"text/javascript", "charset":"UTF-8", "src":uri});
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.loadAndVerify = function(uri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.load(uri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = doc.getElementsByTagName(goog.dom.TagName.HEAD);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == "SCRIPT") {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
// Input 133
goog.provide("figwheel.client");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("goog.net.jsloader");
figwheel.client.log = function() {
  var log__delegate = function(p__21176, args) {
    var map__21178 = p__21176;
    var map__21178__$1 = cljs.core.seq_QMARK_.call(null, map__21178) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21178) : map__21178;
    var debug = cljs.core.get.call(null, map__21178__$1, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
    if (cljs.core.truth_(debug)) {
      return console.log(cljs.core.to_array.call(null, args));
    } else {
      return null;
    }
  };
  var log = function(p__21176, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__21179__i = 0, G__21179__a = new Array(arguments.length - 1);
      while (G__21179__i < G__21179__a.length) {
        G__21179__a[G__21179__i] = arguments[G__21179__i + 1];
        ++G__21179__i;
      }
      args = new cljs.core.IndexedSeq(G__21179__a, 0);
    }
    return log__delegate.call(this, p__21176, args);
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__21180) {
    var p__21176 = cljs.core.first(arglist__21180);
    var args = cljs.core.rest(arglist__21180);
    return log__delegate(p__21176, args);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
figwheel.client.reload_host = function reload_host(p__21181) {
  var map__21183 = p__21181;
  var map__21183__$1 = cljs.core.seq_QMARK_.call(null, map__21183) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21183) : map__21183;
  var websocket_url = cljs.core.get.call(null, map__21183__$1, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938));
  return cljs.core.first.call(null, clojure.string.split.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, websocket_url, /^ws:/, ""), /^\/\//, ""), /\//));
};
figwheel.client.add_cache_buster = function add_cache_buster(url) {
  return[cljs.core.str(url), cljs.core.str("?rel\x3d"), cljs.core.str((new Date).getTime())].join("");
};
figwheel.client.js_reload = function js_reload(p__21184, callback) {
  var map__21186 = p__21184;
  var map__21186__$1 = cljs.core.seq_QMARK_.call(null, map__21186) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21186) : map__21186;
  var msg = map__21186__$1;
  var dependency_file = cljs.core.get.call(null, map__21186__$1, new cljs.core.Keyword(null, "dependency-file", "dependency-file", -1682436382));
  var namespace = cljs.core.get.call(null, map__21186__$1, new cljs.core.Keyword(null, "namespace", "namespace", -377510372));
  var request_url = cljs.core.get.call(null, map__21186__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  if (cljs.core.truth_(function() {
    var or__3799__auto__ = dependency_file;
    if (cljs.core.truth_(or__3799__auto__)) {
      return or__3799__auto__;
    } else {
      return goog.isProvided_(namespace);
    }
  }())) {
    return goog.net.jsloader.load(figwheel.client.add_cache_buster.call(null, request_url)).addCallback(function(map__21186, map__21186__$1, msg, dependency_file, namespace, request_url) {
      return function() {
        return cljs.core.apply.call(null, callback, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null));
      };
    }(map__21186, map__21186__$1, msg, dependency_file, namespace, request_url));
  } else {
    return cljs.core.apply.call(null, callback, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null));
  }
};
figwheel.client.reload_js_file = function reload_js_file(file_msg) {
  var out = cljs.core.async.chan.call(null);
  figwheel.client.js_reload.call(null, file_msg, function(out) {
    return function(url) {
      cljs.core.async.put_BANG_.call(null, out, url);
      return cljs.core.async.close_BANG_.call(null, out);
    };
  }(out));
  return out;
};
figwheel.client.load_all_js_files = function load_all_js_files(files) {
  return cljs.core.async.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.async.filter_LT_.call(null, cljs.core.identity, cljs.core.async.merge.call(null, cljs.core.mapv.call(null, figwheel.client.reload_js_file, files))));
};
figwheel.client.add_request_url = function add_request_url(p__21187, p__21188) {
  var map__21191 = p__21187;
  var map__21191__$1 = cljs.core.seq_QMARK_.call(null, map__21191) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21191) : map__21191;
  var opts = map__21191__$1;
  var url_rewriter = cljs.core.get.call(null, map__21191__$1, new cljs.core.Keyword(null, "url-rewriter", "url-rewriter", 200543838));
  var map__21192 = p__21188;
  var map__21192__$1 = cljs.core.seq_QMARK_.call(null, map__21192) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21192) : map__21192;
  var d = map__21192__$1;
  var file = cljs.core.get.call(null, map__21192__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596), url_rewriter.call(null, [cljs.core.str("//"), cljs.core.str(figwheel.client.reload_host.call(null, opts)), cljs.core.str(file)].join("")));
};
figwheel.client.add_request_urls = function add_request_urls(opts, files) {
  return cljs.core.map.call(null, cljs.core.partial.call(null, figwheel.client.add_request_url, opts), files);
};
figwheel.client.reload_js_files = function reload_js_files(p__21193, p__21194) {
  var map__21236 = p__21193;
  var map__21236__$1 = cljs.core.seq_QMARK_.call(null, map__21236) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21236) : map__21236;
  var opts = map__21236__$1;
  var on_jsload = cljs.core.get.call(null, map__21236__$1, new cljs.core.Keyword(null, "on-jsload", "on-jsload", -395756602));
  var before_jsload = cljs.core.get.call(null, map__21236__$1, new cljs.core.Keyword(null, "before-jsload", "before-jsload", -847513128));
  var map__21237 = p__21194;
  var map__21237__$1 = cljs.core.seq_QMARK_.call(null, map__21237) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21237) : map__21237;
  var files = cljs.core.get.call(null, map__21237__$1, new cljs.core.Keyword(null, "files", "files", -472457450));
  var c__6777__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto__, map__21236, map__21236__$1, opts, on_jsload, before_jsload, map__21237, map__21237__$1, files) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto__, map__21236, map__21236__$1, opts, on_jsload, before_jsload, map__21237, map__21237__$1, files) {
          return function(state_21260) {
            var state_val_21261 = state_21260[1];
            if (state_val_21261 === 6) {
              var inst_21242 = state_21260[7];
              var inst_21251 = state_21260[2];
              var inst_21252 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_21253 = [inst_21242];
              var inst_21254 = new cljs.core.PersistentVector(null, 1, 5, inst_21252, inst_21253, null);
              var inst_21255 = cljs.core.apply.call(null, on_jsload, inst_21254);
              var state_21260__$1 = function() {
                var statearr_21262 = state_21260;
                statearr_21262[8] = inst_21251;
                return statearr_21262;
              }();
              var statearr_21263_21277 = state_21260__$1;
              statearr_21263_21277[2] = inst_21255;
              statearr_21263_21277[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21261 === 5) {
                var inst_21258 = state_21260[2];
                var state_21260__$1 = state_21260;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21260__$1, inst_21258);
              } else {
                if (state_val_21261 === 4) {
                  var state_21260__$1 = state_21260;
                  var statearr_21264_21278 = state_21260__$1;
                  statearr_21264_21278[2] = null;
                  statearr_21264_21278[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21261 === 3) {
                    var inst_21242 = state_21260[7];
                    var inst_21245 = console.debug("Figwheel: loaded these files");
                    var inst_21246 = cljs.core.map.call(null, new cljs.core.Keyword(null, "file", "file", -1269645878), inst_21242);
                    var inst_21247 = cljs.core.prn_str.call(null, inst_21246);
                    var inst_21248 = console.log(inst_21247);
                    var inst_21249 = cljs.core.async.timeout.call(null, 10);
                    var state_21260__$1 = function() {
                      var statearr_21265 = state_21260;
                      statearr_21265[9] = inst_21248;
                      statearr_21265[10] = inst_21245;
                      return statearr_21265;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21260__$1, 6, inst_21249);
                  } else {
                    if (state_val_21261 === 2) {
                      var inst_21242 = state_21260[7];
                      var inst_21242__$1 = state_21260[2];
                      var inst_21243 = cljs.core.not_empty.call(null, inst_21242__$1);
                      var state_21260__$1 = function() {
                        var statearr_21266 = state_21260;
                        statearr_21266[7] = inst_21242__$1;
                        return statearr_21266;
                      }();
                      if (cljs.core.truth_(inst_21243)) {
                        var statearr_21267_21279 = state_21260__$1;
                        statearr_21267_21279[1] = 3;
                      } else {
                        var statearr_21268_21280 = state_21260__$1;
                        statearr_21268_21280[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21261 === 1) {
                        var inst_21238 = before_jsload.call(null, files);
                        var inst_21239 = figwheel.client.add_request_urls.call(null, opts, files);
                        var inst_21240 = figwheel.client.load_all_js_files.call(null, inst_21239);
                        var state_21260__$1 = function() {
                          var statearr_21269 = state_21260;
                          statearr_21269[11] = inst_21238;
                          return statearr_21269;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21260__$1, 2, inst_21240);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6777__auto__, map__21236, map__21236__$1, opts, on_jsload, before_jsload, map__21237, map__21237__$1, files);
        return function(switch__6721__auto__, c__6777__auto__, map__21236, map__21236__$1, opts, on_jsload, before_jsload, map__21237, map__21237__$1, files) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_21273 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_21273[0] = state_machine__6722__auto__;
              statearr_21273[1] = 1;
              return statearr_21273;
            };
            var state_machine__6722__auto____1 = function(state_21260) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_21260);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e21274) {
                    if (e21274 instanceof Object) {
                      var ex__6725__auto__ = e21274;
                      var statearr_21275_21281 = state_21260;
                      statearr_21275_21281[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21260);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21274;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21282 = state_21260;
                  state_21260 = G__21282;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_21260) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_21260);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto__, map__21236, map__21236__$1, opts, on_jsload, before_jsload, map__21237, map__21237__$1, files);
      }();
      var state__6779__auto__ = function() {
        var statearr_21276 = f__6778__auto__.call(null);
        statearr_21276[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto__;
        return statearr_21276;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto__, map__21236, map__21236__$1, opts, on_jsload, before_jsload, map__21237, map__21237__$1, files));
  return c__6777__auto__;
};
figwheel.client.current_links = function current_links() {
  return Array.prototype.slice.call(document.getElementsByTagName("link"));
};
figwheel.client.truncate_url = function truncate_url(url) {
  return clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, cljs.core.first.call(null, clojure.string.split.call(null, url, /\?/)), [cljs.core.str(location.protocol), cljs.core.str("//")].join(""), ""), "http://", ""), "https://", ""), /^\/\//, ""), /[^\\/]*/, "");
};
figwheel.client.matches_file_QMARK_ = function matches_file_QMARK_(p__21283, link_href) {
  var map__21285 = p__21283;
  var map__21285__$1 = cljs.core.seq_QMARK_.call(null, map__21285) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21285) : map__21285;
  var request_url = cljs.core.get.call(null, map__21285__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  var file = cljs.core.get.call(null, map__21285__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var trunc_href = figwheel.client.truncate_url.call(null, link_href);
  return cljs.core._EQ_.call(null, file, trunc_href) || cljs.core._EQ_.call(null, figwheel.client.truncate_url.call(null, request_url), trunc_href);
};
figwheel.client.get_correct_link = function get_correct_link(f_data) {
  return cljs.core.some.call(null, function(l) {
    if (figwheel.client.matches_file_QMARK_.call(null, f_data, l.href)) {
      return l;
    } else {
      return null;
    }
  }, figwheel.client.current_links.call(null));
};
figwheel.client.clone_link = function clone_link(link, url) {
  var clone = document.createElement("link");
  clone.rel = "stylesheet";
  clone.media = link.media;
  clone.disabled = link.disabled;
  clone.href = figwheel.client.add_cache_buster.call(null, url);
  return clone;
};
figwheel.client.create_link = function create_link(url) {
  var link = document.createElement("link");
  link.rel = "stylesheet";
  link.href = figwheel.client.add_cache_buster.call(null, url);
  return link;
};
figwheel.client.add_link_to_doc = function() {
  var add_link_to_doc = null;
  var add_link_to_doc__1 = function(new_link) {
    return document.getElementsByTagName("head")[0].appendChild(new_link);
  };
  var add_link_to_doc__2 = function(orig_link, klone) {
    var parent = orig_link.parentNode;
    if (cljs.core._EQ_.call(null, orig_link, parent.lastChild)) {
      parent.appendChild(klone);
    } else {
      parent.insertBefore(klone, orig_link.nextSibling);
    }
    var c__6777__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto__, parent) {
      return function() {
        var f__6778__auto__ = function() {
          var switch__6721__auto__ = function(c__6777__auto__, parent) {
            return function(state_21306) {
              var state_val_21307 = state_21306[1];
              if (state_val_21307 === 2) {
                var inst_21303 = state_21306[2];
                var inst_21304 = parent.removeChild(orig_link);
                var state_21306__$1 = function() {
                  var statearr_21308 = state_21306;
                  statearr_21308[7] = inst_21303;
                  return statearr_21308;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21306__$1, inst_21304);
              } else {
                if (state_val_21307 === 1) {
                  var inst_21301 = cljs.core.async.timeout.call(null, 200);
                  var state_21306__$1 = state_21306;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21306__$1, 2, inst_21301);
                } else {
                  return null;
                }
              }
            };
          }(c__6777__auto__, parent);
          return function(switch__6721__auto__, c__6777__auto__, parent) {
            return function() {
              var state_machine__6722__auto__ = null;
              var state_machine__6722__auto____0 = function() {
                var statearr_21312 = [null, null, null, null, null, null, null, null];
                statearr_21312[0] = state_machine__6722__auto__;
                statearr_21312[1] = 1;
                return statearr_21312;
              };
              var state_machine__6722__auto____1 = function(state_21306) {
                while (true) {
                  var ret_value__6723__auto__ = function() {
                    try {
                      while (true) {
                        var result__6724__auto__ = switch__6721__auto__.call(null, state_21306);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6724__auto__;
                        }
                        break;
                      }
                    } catch (e21313) {
                      if (e21313 instanceof Object) {
                        var ex__6725__auto__ = e21313;
                        var statearr_21314_21316 = state_21306;
                        statearr_21314_21316[5] = ex__6725__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21306);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21313;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21317 = state_21306;
                    state_21306 = G__21317;
                    continue;
                  } else {
                    return ret_value__6723__auto__;
                  }
                  break;
                }
              };
              state_machine__6722__auto__ = function(state_21306) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6722__auto____0.call(this);
                  case 1:
                    return state_machine__6722__auto____1.call(this, state_21306);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
              state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
              return state_machine__6722__auto__;
            }();
          }(switch__6721__auto__, c__6777__auto__, parent);
        }();
        var state__6779__auto__ = function() {
          var statearr_21315 = f__6778__auto__.call(null);
          statearr_21315[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto__;
          return statearr_21315;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
      };
    }(c__6777__auto__, parent));
    return c__6777__auto__;
  };
  add_link_to_doc = function(orig_link, klone) {
    switch(arguments.length) {
      case 1:
        return add_link_to_doc__1.call(this, orig_link);
      case 2:
        return add_link_to_doc__2.call(this, orig_link, klone);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_link_to_doc.cljs$core$IFn$_invoke$arity$1 = add_link_to_doc__1;
  add_link_to_doc.cljs$core$IFn$_invoke$arity$2 = add_link_to_doc__2;
  return add_link_to_doc;
}();
figwheel.client.reload_css_file = function reload_css_file(p__21318) {
  var map__21320 = p__21318;
  var map__21320__$1 = cljs.core.seq_QMARK_.call(null, map__21320) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21320) : map__21320;
  var f_data = map__21320__$1;
  var request_url = cljs.core.get.call(null, map__21320__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  var file = cljs.core.get.call(null, map__21320__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var temp__4124__auto__ = figwheel.client.get_correct_link.call(null, f_data);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var link = temp__4124__auto__;
    return figwheel.client.add_link_to_doc.call(null, link, figwheel.client.clone_link.call(null, link, request_url));
  } else {
    return figwheel.client.add_link_to_doc.call(null, figwheel.client.create_link.call(null, request_url));
  }
};
figwheel.client.reload_css_files = function reload_css_files(p__21321, files_msg) {
  var map__21343 = p__21321;
  var map__21343__$1 = cljs.core.seq_QMARK_.call(null, map__21343) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21343) : map__21343;
  var opts = map__21343__$1;
  var on_cssload = cljs.core.get.call(null, map__21343__$1, new cljs.core.Keyword(null, "on-cssload", "on-cssload", 1825432318));
  var seq__21344_21364 = cljs.core.seq.call(null, figwheel.client.add_request_urls.call(null, opts, (new cljs.core.Keyword(null, "files", "files", -472457450)).cljs$core$IFn$_invoke$arity$1(files_msg)));
  var chunk__21345_21365 = null;
  var count__21346_21366 = 0;
  var i__21347_21367 = 0;
  while (true) {
    if (i__21347_21367 < count__21346_21366) {
      var f_21368 = cljs.core._nth.call(null, chunk__21345_21365, i__21347_21367);
      figwheel.client.reload_css_file.call(null, f_21368);
      var G__21369 = seq__21344_21364;
      var G__21370 = chunk__21345_21365;
      var G__21371 = count__21346_21366;
      var G__21372 = i__21347_21367 + 1;
      seq__21344_21364 = G__21369;
      chunk__21345_21365 = G__21370;
      count__21346_21366 = G__21371;
      i__21347_21367 = G__21372;
      continue;
    } else {
      var temp__4126__auto___21373 = cljs.core.seq.call(null, seq__21344_21364);
      if (temp__4126__auto___21373) {
        var seq__21344_21374__$1 = temp__4126__auto___21373;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21344_21374__$1)) {
          var c__4586__auto___21375 = cljs.core.chunk_first.call(null, seq__21344_21374__$1);
          var G__21376 = cljs.core.chunk_rest.call(null, seq__21344_21374__$1);
          var G__21377 = c__4586__auto___21375;
          var G__21378 = cljs.core.count.call(null, c__4586__auto___21375);
          var G__21379 = 0;
          seq__21344_21364 = G__21376;
          chunk__21345_21365 = G__21377;
          count__21346_21366 = G__21378;
          i__21347_21367 = G__21379;
          continue;
        } else {
          var f_21380 = cljs.core.first.call(null, seq__21344_21374__$1);
          figwheel.client.reload_css_file.call(null, f_21380);
          var G__21381 = cljs.core.next.call(null, seq__21344_21374__$1);
          var G__21382 = null;
          var G__21383 = 0;
          var G__21384 = 0;
          seq__21344_21364 = G__21381;
          chunk__21345_21365 = G__21382;
          count__21346_21366 = G__21383;
          i__21347_21367 = G__21384;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var c__6777__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6777__auto__, map__21343, map__21343__$1, opts, on_cssload) {
    return function() {
      var f__6778__auto__ = function() {
        var switch__6721__auto__ = function(c__6777__auto__, map__21343, map__21343__$1, opts, on_cssload) {
          return function(state_21354) {
            var state_val_21355 = state_21354[1];
            if (state_val_21355 === 2) {
              var inst_21350 = state_21354[2];
              var inst_21351 = (new cljs.core.Keyword(null, "files", "files", -472457450)).cljs$core$IFn$_invoke$arity$1(files_msg);
              var inst_21352 = on_cssload.call(null, inst_21351);
              var state_21354__$1 = function() {
                var statearr_21356 = state_21354;
                statearr_21356[7] = inst_21350;
                return statearr_21356;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21354__$1, inst_21352);
            } else {
              if (state_val_21355 === 1) {
                var inst_21348 = cljs.core.async.timeout.call(null, 100);
                var state_21354__$1 = state_21354;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21354__$1, 2, inst_21348);
              } else {
                return null;
              }
            }
          };
        }(c__6777__auto__, map__21343, map__21343__$1, opts, on_cssload);
        return function(switch__6721__auto__, c__6777__auto__, map__21343, map__21343__$1, opts, on_cssload) {
          return function() {
            var state_machine__6722__auto__ = null;
            var state_machine__6722__auto____0 = function() {
              var statearr_21360 = [null, null, null, null, null, null, null, null];
              statearr_21360[0] = state_machine__6722__auto__;
              statearr_21360[1] = 1;
              return statearr_21360;
            };
            var state_machine__6722__auto____1 = function(state_21354) {
              while (true) {
                var ret_value__6723__auto__ = function() {
                  try {
                    while (true) {
                      var result__6724__auto__ = switch__6721__auto__.call(null, state_21354);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6724__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6724__auto__;
                      }
                      break;
                    }
                  } catch (e21361) {
                    if (e21361 instanceof Object) {
                      var ex__6725__auto__ = e21361;
                      var statearr_21362_21385 = state_21354;
                      statearr_21362_21385[5] = ex__6725__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21354);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21361;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6723__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21386 = state_21354;
                  state_21354 = G__21386;
                  continue;
                } else {
                  return ret_value__6723__auto__;
                }
                break;
              }
            };
            state_machine__6722__auto__ = function(state_21354) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6722__auto____0.call(this);
                case 1:
                  return state_machine__6722__auto____1.call(this, state_21354);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6722__auto____0;
            state_machine__6722__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6722__auto____1;
            return state_machine__6722__auto__;
          }();
        }(switch__6721__auto__, c__6777__auto__, map__21343, map__21343__$1, opts, on_cssload);
      }();
      var state__6779__auto__ = function() {
        var statearr_21363 = f__6778__auto__.call(null);
        statearr_21363[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6777__auto__;
        return statearr_21363;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6779__auto__);
    };
  }(c__6777__auto__, map__21343, map__21343__$1, opts, on_cssload));
  return c__6777__auto__;
};
figwheel.client.compile_failed = function compile_failed(fail_msg, compile_fail_callback) {
  return compile_fail_callback.call(null, cljs.core.dissoc.call(null, fail_msg, new cljs.core.Keyword(null, "msg-name", "msg-name", -353709863)));
};
figwheel.client.figwheel_closure_import_script = function figwheel_closure_import_script(src) {
  if (cljs.core.truth_(goog.inHtmlDocument_())) {
    goog.net.jsloader.load(figwheel.client.add_cache_buster.call(null, src));
    return true;
  } else {
    return false;
  }
};
figwheel.client.patch_goog_base = function patch_goog_base() {
  goog.provide = goog.exportPath_;
  return goog.global.CLOSURE_IMPORT_SCRIPT = figwheel.client.figwheel_closure_import_script;
};
figwheel.client.watch_and_reload_STAR_ = function watch_and_reload_STAR_(p__21387) {
  var map__21392 = p__21387;
  var map__21392__$1 = cljs.core.seq_QMARK_.call(null, map__21392) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21392) : map__21392;
  var opts = map__21392__$1;
  var on_compile_fail = cljs.core.get.call(null, map__21392__$1, new cljs.core.Keyword(null, "on-compile-fail", "on-compile-fail", 728013036));
  var jsload_callback = cljs.core.get.call(null, map__21392__$1, new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369));
  var websocket_url = cljs.core.get.call(null, map__21392__$1, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938));
  var retry_count = cljs.core.get.call(null, map__21392__$1, new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875));
  console.debug("Figwheel: trying to open cljs reload socket");
  var socket = new WebSocket(websocket_url);
  socket.onmessage = function(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(msg_str) {
      var msg = cljs.reader.read_string.call(null, msg_str.data);
      var pred__21393 = cljs.core._EQ_;
      var expr__21394 = (new cljs.core.Keyword(null, "msg-name", "msg-name", -353709863)).cljs$core$IFn$_invoke$arity$1(msg);
      if (cljs.core.truth_(pred__21393.call(null, new cljs.core.Keyword(null, "files-changed", "files-changed", -1418200563), expr__21394))) {
        return figwheel.client.reload_js_files.call(null, opts, msg);
      } else {
        if (cljs.core.truth_(pred__21393.call(null, new cljs.core.Keyword(null, "css-files-changed", "css-files-changed", 720773874), expr__21394))) {
          return figwheel.client.reload_css_files.call(null, opts, msg);
        } else {
          if (cljs.core.truth_(pred__21393.call(null, new cljs.core.Keyword(null, "compile-failed", "compile-failed", -477639289), expr__21394))) {
            return figwheel.client.compile_failed.call(null, msg, on_compile_fail);
          } else {
            return null;
          }
        }
      }
    };
  }(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  socket.onopen = function(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      figwheel.client.patch_goog_base.call(null);
      return console.debug("Figwheel: socket connection established");
    };
  }(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  socket.onclose = function(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      figwheel.client.log.call(null, opts, "Figwheel: socket closed or failed to open");
      if (retry_count > 0) {
        return window.setTimeout(function(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
          return function() {
            return watch_and_reload_STAR_.call(null, cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875), retry_count - 1));
          };
        }(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count), 2E3);
      } else {
        return null;
      }
    };
  }(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  return socket.onerror = function(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      return figwheel.client.log.call(null, opts, "Figwheel: socket error ");
    };
  }(socket, map__21392, map__21392__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
};
figwheel.client.default_on_jsload = function default_on_jsload(url) {
  return document.querySelector("body").dispatchEvent(new CustomEvent("figwheel.js-reload", function() {
    var obj21399 = {"detail":url};
    return obj21399;
  }()));
};
figwheel.client.get_essential_messages = function get_essential_messages(ed) {
  if (cljs.core.truth_(ed)) {
    return cljs.core.cons.call(null, cljs.core.select_keys.call(null, ed, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "message", "message", -406056002), new cljs.core.Keyword(null, "class", "class", -2030961996)], null)), get_essential_messages.call(null, (new cljs.core.Keyword(null, "cause", "cause", 231901252)).cljs$core$IFn$_invoke$arity$1(ed)));
  } else {
    return null;
  }
};
figwheel.client.error_msg_format = function error_msg_format(p__21400) {
  var map__21402 = p__21400;
  var map__21402__$1 = cljs.core.seq_QMARK_.call(null, map__21402) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21402) : map__21402;
  var class$ = cljs.core.get.call(null, map__21402__$1, new cljs.core.Keyword(null, "class", "class", -2030961996));
  var message = cljs.core.get.call(null, map__21402__$1, new cljs.core.Keyword(null, "message", "message", -406056002));
  return[cljs.core.str(class$), cljs.core.str(" : "), cljs.core.str(message)].join("");
};
figwheel.client.format_messages = cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.core.map, figwheel.client.error_msg_format), figwheel.client.get_essential_messages);
figwheel.client.default_on_compile_fail = function default_on_compile_fail(p__21403) {
  var map__21409 = p__21403;
  var map__21409__$1 = cljs.core.seq_QMARK_.call(null, map__21409) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21409) : map__21409;
  var ed = map__21409__$1;
  var exception_data = cljs.core.get.call(null, map__21409__$1, new cljs.core.Keyword(null, "exception-data", "exception-data", -512474886));
  var formatted_exception = cljs.core.get.call(null, map__21409__$1, new cljs.core.Keyword(null, "formatted-exception", "formatted-exception", -116489026));
  console.debug("Figwheel: Compile Exception");
  var seq__21410_21414 = cljs.core.seq.call(null, figwheel.client.format_messages.call(null, exception_data));
  var chunk__21411_21415 = null;
  var count__21412_21416 = 0;
  var i__21413_21417 = 0;
  while (true) {
    if (i__21413_21417 < count__21412_21416) {
      var msg_21418 = cljs.core._nth.call(null, chunk__21411_21415, i__21413_21417);
      console.log(msg_21418);
      var G__21419 = seq__21410_21414;
      var G__21420 = chunk__21411_21415;
      var G__21421 = count__21412_21416;
      var G__21422 = i__21413_21417 + 1;
      seq__21410_21414 = G__21419;
      chunk__21411_21415 = G__21420;
      count__21412_21416 = G__21421;
      i__21413_21417 = G__21422;
      continue;
    } else {
      var temp__4126__auto___21423 = cljs.core.seq.call(null, seq__21410_21414);
      if (temp__4126__auto___21423) {
        var seq__21410_21424__$1 = temp__4126__auto___21423;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__21410_21424__$1)) {
          var c__4586__auto___21425 = cljs.core.chunk_first.call(null, seq__21410_21424__$1);
          var G__21426 = cljs.core.chunk_rest.call(null, seq__21410_21424__$1);
          var G__21427 = c__4586__auto___21425;
          var G__21428 = cljs.core.count.call(null, c__4586__auto___21425);
          var G__21429 = 0;
          seq__21410_21414 = G__21426;
          chunk__21411_21415 = G__21427;
          count__21412_21416 = G__21428;
          i__21413_21417 = G__21429;
          continue;
        } else {
          var msg_21430 = cljs.core.first.call(null, seq__21410_21424__$1);
          console.log(msg_21430);
          var G__21431 = cljs.core.next.call(null, seq__21410_21424__$1);
          var G__21432 = null;
          var G__21433 = 0;
          var G__21434 = 0;
          seq__21410_21414 = G__21431;
          chunk__21411_21415 = G__21432;
          count__21412_21416 = G__21433;
          i__21413_21417 = G__21434;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ed;
};
figwheel.client.default_before_load = function default_before_load(files) {
  console.debug("Figwheel: loading files");
  return files;
};
figwheel.client.default_on_cssload = function default_on_cssload(files) {
  console.debug("Figwheel: loaded CSS files");
  console.log(cljs.core.prn_str.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "file", "file", -1269645878), files)));
  return files;
};
figwheel.client.watch_and_reload_with_opts = function watch_and_reload_with_opts(opts) {
  if (cljs.core.truth_(figwheel.client.hasOwnProperty("watch_and_reload_singleton"))) {
    return null;
  } else {
    figwheel.client.watch_and_reload_singleton = figwheel.client.watch_and_reload_STAR_.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875), 100, new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369), figwheel.client.default_on_jsload, new cljs.core.Keyword(null, "on-jsload", "on-jsload", -395756602), function() {
      var or__3799__auto__ = (new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369)).cljs$core$IFn$_invoke$arity$1(opts);
      if (cljs.core.truth_(or__3799__auto__)) {
        return or__3799__auto__;
      } else {
        return figwheel.client.default_on_jsload;
      }
    }(), new cljs.core.Keyword(null, "on-cssload", "on-cssload", 1825432318), figwheel.client.default_on_cssload, new cljs.core.Keyword(null, "before-jsload", "before-jsload", -847513128), figwheel.client.default_before_load, new cljs.core.Keyword(null, "on-compile-fail", "on-compile-fail", 728013036), figwheel.client.default_on_compile_fail, new cljs.core.Keyword(null, "url-rewriter", "url-rewriter", 200543838), cljs.core.identity, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938), 
    [cljs.core.str("ws://"), cljs.core.str(location.host), cljs.core.str("/figwheel-ws")].join("")], null), opts));
  }
};
figwheel.client.watch_and_reload = function() {
  var watch_and_reload__delegate = function(p__21435) {
    var map__21437 = p__21435;
    var map__21437__$1 = cljs.core.seq_QMARK_.call(null, map__21437) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21437) : map__21437;
    var opts = map__21437__$1;
    return figwheel.client.watch_and_reload_with_opts.call(null, opts);
  };
  var watch_and_reload = function(var_args) {
    var p__21435 = null;
    if (arguments.length > 0) {
      var G__21438__i = 0, G__21438__a = new Array(arguments.length - 0);
      while (G__21438__i < G__21438__a.length) {
        G__21438__a[G__21438__i] = arguments[G__21438__i + 0];
        ++G__21438__i;
      }
      p__21435 = new cljs.core.IndexedSeq(G__21438__a, 0);
    }
    return watch_and_reload__delegate.call(this, p__21435);
  };
  watch_and_reload.cljs$lang$maxFixedArity = 0;
  watch_and_reload.cljs$lang$applyTo = function(arglist__21439) {
    var p__21435 = cljs.core.seq(arglist__21439);
    return watch_and_reload__delegate(p__21435);
  };
  watch_and_reload.cljs$core$IFn$_invoke$arity$variadic = watch_and_reload__delegate;
  return watch_and_reload;
}();
// Input 134
goog.provide("censorius.dev");
goog.require("cljs.core");
goog.require("weasel.repl");
goog.require("figwheel.client");
goog.require("censorius.page");
cljs.core.enable_console_print_BANG_.call(null);
figwheel.client.watch_and_reload.call(null, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938), "ws://localhost:3449/figwheel-ws", new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369), function() {
  return censorius.page.main.call(null);
});
weasel.repl.connect.call(null, "ws://localhost:9001", new cljs.core.Keyword(null, "verbose", "verbose", 1694226060), true);
censorius.page.main.call(null);
// Input 135
goog.provide("censorius.address");
goog.require("cljs.core");
goog.require("reagent.core");
goog.require("secretary.core");
goog.require("reagent.session");
goog.require("censorius.text");
goog.require("clojure.data");
goog.require("goog.history.EventType");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("goog.events");
goog.require("censorius.utils");
goog.require("clojure.string");

//# sourceMappingURL=app.js.map