// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__10964__delegate = function (args){
return console.log.apply(console,(function (){var G__10963 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__10963) : cljs.core.into_array.call(null,G__10963));
})());
};
var G__10964 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10965__i = 0, G__10965__a = new Array(arguments.length -  0);
while (G__10965__i < G__10965__a.length) {G__10965__a[G__10965__i] = arguments[G__10965__i + 0]; ++G__10965__i;}
  args = new cljs.core.IndexedSeq(G__10965__a,0);
} 
return G__10964__delegate.call(this,args);};
G__10964.cljs$lang$maxFixedArity = 0;
G__10964.cljs$lang$applyTo = (function (arglist__10966){
var args = cljs.core.seq(arglist__10966);
return G__10964__delegate(args);
});
G__10964.cljs$core$IFn$_invoke$arity$variadic = G__10964__delegate;
return G__10964;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__10968 = x;
return goog.isString(G__10968);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__10970 = x__$1;
return goog.typeOf(G__10970);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3787__auto__ = ty;
if(cljs.core.truth_(and__3787__auto__)){
return ty.cljs$lang$type;
} else {
return and__3787__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__10972 = obj;
return goog.typeOf(G__10972);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__10974 = Symbol;
return goog.typeOf(G__10974);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4686__auto___10976 = len;
var i_10977 = (0);
while(true){
if((i_10977 < n__4686__auto___10976)){
(new_arr[i_10977] = (arr[i_10977]));

var G__10978 = (i_10977 + (1));
i_10977 = G__10978;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__10979 = (i + (1));
i = G__10979;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__10988__delegate = function (array,i,idxs){
var G__10985 = aget;
var G__10986 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__10987 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__10985,G__10986,G__10987) : cljs.core.apply.call(null,G__10985,G__10986,G__10987));
};
var G__10988 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__10989__i = 0, G__10989__a = new Array(arguments.length -  2);
while (G__10989__i < G__10989__a.length) {G__10989__a[G__10989__i] = arguments[G__10989__i + 2]; ++G__10989__i;}
  idxs = new cljs.core.IndexedSeq(G__10989__a,0);
} 
return G__10988__delegate.call(this,array,i,idxs);};
G__10988.cljs$lang$maxFixedArity = 2;
G__10988.cljs$lang$applyTo = (function (arglist__10990){
var array = cljs.core.first(arglist__10990);
arglist__10990 = cljs.core.next(arglist__10990);
var i = cljs.core.first(arglist__10990);
var idxs = cljs.core.rest(arglist__10990);
return G__10988__delegate(array,i,idxs);
});
G__10988.cljs$core$IFn$_invoke$arity$variadic = G__10988__delegate;
return G__10988;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__10991 = null;
if (arguments.length > 2) {
var G__10992__i = 0, G__10992__a = new Array(arguments.length -  2);
while (G__10992__i < G__10992__a.length) {G__10992__a[G__10992__i] = arguments[G__10992__i + 2]; ++G__10992__i;}
G__10991 = new cljs.core.IndexedSeq(G__10992__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__10991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11001__delegate = function (array,idx,idx2,idxv){
var G__10997 = aset;
var G__10998 = (array[idx]);
var G__10999 = idx2;
var G__11000 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__10997,G__10998,G__10999,G__11000) : cljs.core.apply.call(null,G__10997,G__10998,G__10999,G__11000));
};
var G__11001 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11002__i = 0, G__11002__a = new Array(arguments.length -  3);
while (G__11002__i < G__11002__a.length) {G__11002__a[G__11002__i] = arguments[G__11002__i + 3]; ++G__11002__i;}
  idxv = new cljs.core.IndexedSeq(G__11002__a,0);
} 
return G__11001__delegate.call(this,array,idx,idx2,idxv);};
G__11001.cljs$lang$maxFixedArity = 3;
G__11001.cljs$lang$applyTo = (function (arglist__11003){
var array = cljs.core.first(arglist__11003);
arglist__11003 = cljs.core.next(arglist__11003);
var idx = cljs.core.first(arglist__11003);
arglist__11003 = cljs.core.next(arglist__11003);
var idx2 = cljs.core.first(arglist__11003);
var idxv = cljs.core.rest(arglist__11003);
return G__11001__delegate(array,idx,idx2,idxv);
});
G__11001.cljs$core$IFn$_invoke$arity$variadic = G__11001__delegate;
return G__11001;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11004 = null;
if (arguments.length > 3) {
var G__11005__i = 0, G__11005__a = new Array(arguments.length -  3);
while (G__11005__i < G__11005__a.length) {G__11005__a[G__11005__i] = arguments[G__11005__i + 3]; ++G__11005__i;}
G__11004 = new cljs.core.IndexedSeq(G__11005__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11011 = (function (a,x){
a.push(x);

return a;
});
var G__11012 = [];
var G__11013 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11011,G__11012,G__11013) : cljs.core.reduce.call(null,G__11011,G__11012,G__11013));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11014__i = 0, G__11014__a = new Array(arguments.length -  2);
while (G__11014__i < G__11014__a.length) {G__11014__a[G__11014__i] = arguments[G__11014__i + 2]; ++G__11014__i;}
  args = new cljs.core.IndexedSeq(G__11014__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11015){
var obj = cljs.core.first(arglist__11015);
arglist__11015 = cljs.core.next(arglist__11015);
var s = cljs.core.first(arglist__11015);
var args = cljs.core.rest(arglist__11015);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11017 = {};
return obj11017;
})();


cljs.core.IFn = (function (){var obj11019 = {};
return obj11019;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11065 = x__4443__auto__;
return goog.typeOf(G__11065);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11067 = x__4443__auto__;
return goog.typeOf(G__11067);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11069 = x__4443__auto__;
return goog.typeOf(G__11069);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11071 = x__4443__auto__;
return goog.typeOf(G__11071);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11073 = x__4443__auto__;
return goog.typeOf(G__11073);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11075 = x__4443__auto__;
return goog.typeOf(G__11075);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11077 = x__4443__auto__;
return goog.typeOf(G__11077);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11079 = x__4443__auto__;
return goog.typeOf(G__11079);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11081 = x__4443__auto__;
return goog.typeOf(G__11081);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11083 = x__4443__auto__;
return goog.typeOf(G__11083);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11085 = x__4443__auto__;
return goog.typeOf(G__11085);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11087 = x__4443__auto__;
return goog.typeOf(G__11087);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11089 = x__4443__auto__;
return goog.typeOf(G__11089);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11091 = x__4443__auto__;
return goog.typeOf(G__11091);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11093 = x__4443__auto__;
return goog.typeOf(G__11093);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11095 = x__4443__auto__;
return goog.typeOf(G__11095);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11097 = x__4443__auto__;
return goog.typeOf(G__11097);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11099 = x__4443__auto__;
return goog.typeOf(G__11099);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11101 = x__4443__auto__;
return goog.typeOf(G__11101);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11103 = x__4443__auto__;
return goog.typeOf(G__11103);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11105 = x__4443__auto__;
return goog.typeOf(G__11105);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._invoke[(function (){var G__11107 = x__4443__auto__;
return goog.typeOf(G__11107);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._invoke["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11109 = {};
return obj11109;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3787__auto__ = value;
if(and__3787__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3787__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4443__auto__ = (((value == null))?null:value);
return (function (){var or__3799__auto__ = (cljs.core._clone[(function (){var G__11113 = x__4443__auto__;
return goog.typeOf(G__11113);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._clone["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11115 = {};
return obj11115;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._count[(function (){var G__11119 = x__4443__auto__;
return goog.typeOf(G__11119);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._count["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11121 = {};
return obj11121;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._empty[(function (){var G__11125 = x__4443__auto__;
return goog.typeOf(G__11125);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._empty["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11127 = {};
return obj11127;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._conj[(function (){var G__11131 = x__4443__auto__;
return goog.typeOf(G__11131);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._conj["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj11133 = {};
return obj11133;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._nth[(function (){var G__11139 = x__4443__auto__;
return goog.typeOf(G__11139);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._nth["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._nth[(function (){var G__11141 = x__4443__auto__;
return goog.typeOf(G__11141);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._nth["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj11143 = {};
return obj11143;
})();


cljs.core.ISeq = (function (){var obj11145 = {};
return obj11145;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._first[(function (){var G__11149 = x__4443__auto__;
return goog.typeOf(G__11149);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._first["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._rest[(function (){var G__11153 = x__4443__auto__;
return goog.typeOf(G__11153);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._rest["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj11155 = {};
return obj11155;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._next[(function (){var G__11159 = x__4443__auto__;
return goog.typeOf(G__11159);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._next["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj11161 = {};
return obj11161;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._lookup[(function (){var G__11167 = x__4443__auto__;
return goog.typeOf(G__11167);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._lookup["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._lookup[(function (){var G__11169 = x__4443__auto__;
return goog.typeOf(G__11169);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._lookup["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj11171 = {};
return obj11171;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__11175 = x__4443__auto__;
return goog.typeOf(G__11175);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._assoc[(function (){var G__11179 = x__4443__auto__;
return goog.typeOf(G__11179);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._assoc["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj11181 = {};
return obj11181;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._dissoc[(function (){var G__11185 = x__4443__auto__;
return goog.typeOf(G__11185);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj11187 = {};
return obj11187;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._key[(function (){var G__11191 = x__4443__auto__;
return goog.typeOf(G__11191);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._key["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._val[(function (){var G__11195 = x__4443__auto__;
return goog.typeOf(G__11195);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._val["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj11197 = {};
return obj11197;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._disjoin[(function (){var G__11201 = x__4443__auto__;
return goog.typeOf(G__11201);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj11203 = {};
return obj11203;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._peek[(function (){var G__11207 = x__4443__auto__;
return goog.typeOf(G__11207);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._peek["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._pop[(function (){var G__11211 = x__4443__auto__;
return goog.typeOf(G__11211);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._pop["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj11213 = {};
return obj11213;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._assoc_n[(function (){var G__11217 = x__4443__auto__;
return goog.typeOf(G__11217);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj11219 = {};
return obj11219;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._deref[(function (){var G__11223 = x__4443__auto__;
return goog.typeOf(G__11223);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._deref["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj11225 = {};
return obj11225;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._deref_with_timeout[(function (){var G__11229 = x__4443__auto__;
return goog.typeOf(G__11229);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj11231 = {};
return obj11231;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._meta[(function (){var G__11235 = x__4443__auto__;
return goog.typeOf(G__11235);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._meta["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj11237 = {};
return obj11237;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._with_meta[(function (){var G__11241 = x__4443__auto__;
return goog.typeOf(G__11241);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj11243 = {};
return obj11243;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._reduce[(function (){var G__11249 = x__4443__auto__;
return goog.typeOf(G__11249);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._reduce["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._reduce[(function (){var G__11251 = x__4443__auto__;
return goog.typeOf(G__11251);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._reduce["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj11253 = {};
return obj11253;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._kv_reduce[(function (){var G__11257 = x__4443__auto__;
return goog.typeOf(G__11257);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj11259 = {};
return obj11259;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._equiv[(function (){var G__11263 = x__4443__auto__;
return goog.typeOf(G__11263);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._equiv["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj11265 = {};
return obj11265;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._hash[(function (){var G__11269 = x__4443__auto__;
return goog.typeOf(G__11269);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._hash["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj11271 = {};
return obj11271;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._seq[(function (){var G__11275 = x__4443__auto__;
return goog.typeOf(G__11275);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._seq["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj11277 = {};
return obj11277;
})();


cljs.core.IList = (function (){var obj11279 = {};
return obj11279;
})();


cljs.core.IRecord = (function (){var obj11281 = {};
return obj11281;
})();


cljs.core.IReversible = (function (){var obj11283 = {};
return obj11283;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._rseq[(function (){var G__11287 = x__4443__auto__;
return goog.typeOf(G__11287);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._rseq["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj11289 = {};
return obj11289;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._sorted_seq[(function (){var G__11293 = x__4443__auto__;
return goog.typeOf(G__11293);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._sorted_seq_from[(function (){var G__11297 = x__4443__auto__;
return goog.typeOf(G__11297);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._entry_key[(function (){var G__11301 = x__4443__auto__;
return goog.typeOf(G__11301);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._comparator[(function (){var G__11305 = x__4443__auto__;
return goog.typeOf(G__11305);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._comparator["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj11307 = {};
return obj11307;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3787__auto__ = writer;
if(and__3787__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3787__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4443__auto__ = (((writer == null))?null:writer);
return (function (){var or__3799__auto__ = (cljs.core._write[(function (){var G__11311 = x__4443__auto__;
return goog.typeOf(G__11311);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._write["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3787__auto__ = writer;
if(and__3787__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3787__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4443__auto__ = (((writer == null))?null:writer);
return (function (){var or__3799__auto__ = (cljs.core._flush[(function (){var G__11315 = x__4443__auto__;
return goog.typeOf(G__11315);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._flush["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj11317 = {};
return obj11317;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._pr_writer[(function (){var G__11321 = x__4443__auto__;
return goog.typeOf(G__11321);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj11323 = {};
return obj11323;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3787__auto__ = d;
if(and__3787__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3787__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4443__auto__ = (((d == null))?null:d);
return (function (){var or__3799__auto__ = (cljs.core._realized_QMARK_[(function (){var G__11327 = x__4443__auto__;
return goog.typeOf(G__11327);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj11329 = {};
return obj11329;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._notify_watches[(function (){var G__11333 = x__4443__auto__;
return goog.typeOf(G__11333);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._add_watch[(function (){var G__11337 = x__4443__auto__;
return goog.typeOf(G__11337);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3787__auto__ = this$;
if(and__3787__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3787__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4443__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3799__auto__ = (cljs.core._remove_watch[(function (){var G__11341 = x__4443__auto__;
return goog.typeOf(G__11341);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj11343 = {};
return obj11343;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._as_transient[(function (){var G__11347 = x__4443__auto__;
return goog.typeOf(G__11347);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj11349 = {};
return obj11349;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3787__auto__ = tcoll;
if(and__3787__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3787__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4443__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3799__auto__ = (cljs.core._conj_BANG_[(function (){var G__11353 = x__4443__auto__;
return goog.typeOf(G__11353);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3787__auto__ = tcoll;
if(and__3787__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3787__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4443__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3799__auto__ = (cljs.core._persistent_BANG_[(function (){var G__11357 = x__4443__auto__;
return goog.typeOf(G__11357);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj11359 = {};
return obj11359;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3787__auto__ = tcoll;
if(and__3787__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3787__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4443__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3799__auto__ = (cljs.core._assoc_BANG_[(function (){var G__11363 = x__4443__auto__;
return goog.typeOf(G__11363);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj11365 = {};
return obj11365;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3787__auto__ = tcoll;
if(and__3787__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3787__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4443__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3799__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__11369 = x__4443__auto__;
return goog.typeOf(G__11369);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj11371 = {};
return obj11371;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3787__auto__ = tcoll;
if(and__3787__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3787__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4443__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3799__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__11375 = x__4443__auto__;
return goog.typeOf(G__11375);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3787__auto__ = tcoll;
if(and__3787__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3787__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4443__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3799__auto__ = (cljs.core._pop_BANG_[(function (){var G__11379 = x__4443__auto__;
return goog.typeOf(G__11379);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj11381 = {};
return obj11381;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3787__auto__ = tcoll;
if(and__3787__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3787__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4443__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3799__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__11385 = x__4443__auto__;
return goog.typeOf(G__11385);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj11387 = {};
return obj11387;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3787__auto__ = x;
if(and__3787__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3787__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4443__auto__ = (((x == null))?null:x);
return (function (){var or__3799__auto__ = (cljs.core._compare[(function (){var G__11391 = x__4443__auto__;
return goog.typeOf(G__11391);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._compare["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj11393 = {};
return obj11393;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._drop_first[(function (){var G__11397 = x__4443__auto__;
return goog.typeOf(G__11397);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj11399 = {};
return obj11399;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._chunked_first[(function (){var G__11403 = x__4443__auto__;
return goog.typeOf(G__11403);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._chunked_rest[(function (){var G__11407 = x__4443__auto__;
return goog.typeOf(G__11407);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj11409 = {};
return obj11409;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._chunked_next[(function (){var G__11413 = x__4443__auto__;
return goog.typeOf(G__11413);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj11415 = {};
return obj11415;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3787__auto__ = x;
if(and__3787__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3787__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4443__auto__ = (((x == null))?null:x);
return (function (){var or__3799__auto__ = (cljs.core._name[(function (){var G__11419 = x__4443__auto__;
return goog.typeOf(G__11419);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._name["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3787__auto__ = x;
if(and__3787__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3787__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4443__auto__ = (((x == null))?null:x);
return (function (){var or__3799__auto__ = (cljs.core._namespace[(function (){var G__11423 = x__4443__auto__;
return goog.typeOf(G__11423);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._namespace["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj11425 = {};
return obj11425;
})();


cljs.core.IReset = (function (){var obj11427 = {};
return obj11427;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._reset_BANG_[(function (){var G__11431 = x__4443__auto__;
return goog.typeOf(G__11431);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11433 = {};
return obj11433;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._swap_BANG_[(function (){var G__11443 = x__4443__auto__;
return goog.typeOf(G__11443);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._swap_BANG_[(function (){var G__11445 = x__4443__auto__;
return goog.typeOf(G__11445);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._swap_BANG_[(function (){var G__11447 = x__4443__auto__;
return goog.typeOf(G__11447);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._swap_BANG_[(function (){var G__11449 = x__4443__auto__;
return goog.typeOf(G__11449);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11451 = {};
return obj11451;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3787__auto__ = o;
if(and__3787__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3787__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4443__auto__ = (((o == null))?null:o);
return (function (){var or__3799__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11455 = x__4443__auto__;
return goog.typeOf(G__11455);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11457 = {};
return obj11457;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3787__auto__ = coll;
if(and__3787__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3787__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4443__auto__ = (((coll == null))?null:coll);
return (function (){var or__3799__auto__ = (cljs.core._iterator[(function (){var G__11461 = x__4443__auto__;
return goog.typeOf(G__11461);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._iterator["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11464 = (4294967295);
var G__11465 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11464,G__11465) : Math.imul.call(null,G__11464,G__11465));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11468 = a;
var G__11469 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11468,G__11469) : Math.imul.call(null,G__11468,G__11469));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11470 = (i + (2));
var G__11471 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11470;
h1 = G__11471;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11473 = {};
return obj11473;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11474 = (i + (1));
var G__11475 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11474;
hash = G__11475;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11479 = {};
return obj11479;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11482 = o;
if(G__11482){
var bit__4473__auto__ = (G__11482.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4473__auto__) || (G__11482.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11483 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11483) : Math.floor.call(null,G__11483));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3787__auto__ = cljs.core.not(a.ns);
if(and__3787__auto__){
return b.ns;
} else {
return and__3787__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11490 = a.ns;
var G__11491 = b.ns;
return goog.array.defaultCompare(G__11490,G__11491);
})();
if(((0) === nsc)){
var G__11492 = a.name;
var G__11493 = b.name;
return goog.array.defaultCompare(G__11492,G__11493);
} else {
return nsc;
}
}
} else {
var G__11494 = a.name;
var G__11495 = b.name;
return goog.array.defaultCompare(G__11494,G__11495);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4220__auto__ = self__._hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11497 = null;
var G__11497__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11497__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11497 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11497__2.call(this,self__,coll);
case 3:
return G__11497__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11497.cljs$core$IFn$_invoke$arity$2 = G__11497__2;
G__11497.cljs$core$IFn$_invoke$arity$3 = G__11497__3;
return G__11497;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11496){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11496)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11501 = x;
if(G__11501){
var bit__4480__auto__ = null;
if(cljs.core.truth_((function (){var or__3799__auto__ = bit__4480__auto__;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return G__11501.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11501.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11501);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11501);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11503 = value;
if(G__11503){
var bit__4480__auto__ = (G__11503.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4480__auto__) || (G__11503.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11503.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11503);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11505 = coll;
if(G__11505){
var bit__4473__auto__ = (G__11505.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4473__auto__) || (G__11505.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11507 = coll;
if(G__11507){
var bit__4473__auto__ = (G__11507.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4473__auto__) || (G__11507.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11509 = coll;
if(G__11509){
var bit__4473__auto__ = (G__11509.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4473__auto__) || (G__11509.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11511 = coll;
if(G__11511){
var bit__4473__auto__ = (G__11511.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4473__auto__) || (G__11511.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11516__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11517 = y;
var G__11518 = cljs.core.first(more);
var G__11519 = cljs.core.next(more);
x = G__11517;
y = G__11518;
more = G__11519;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11516 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11520__i = 0, G__11520__a = new Array(arguments.length -  2);
while (G__11520__i < G__11520__a.length) {G__11520__a[G__11520__i] = arguments[G__11520__i + 2]; ++G__11520__i;}
  more = new cljs.core.IndexedSeq(G__11520__a,0);
} 
return G__11516__delegate.call(this,x,y,more);};
G__11516.cljs$lang$maxFixedArity = 2;
G__11516.cljs$lang$applyTo = (function (arglist__11521){
var x = cljs.core.first(arglist__11521);
arglist__11521 = cljs.core.next(arglist__11521);
var y = cljs.core.first(arglist__11521);
var more = cljs.core.rest(arglist__11521);
return G__11516__delegate(x,y,more);
});
G__11516.cljs$core$IFn$_invoke$arity$variadic = G__11516__delegate;
return G__11516;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11522 = null;
if (arguments.length > 2) {
var G__11523__i = 0, G__11523__a = new Array(arguments.length -  2);
while (G__11523__i < G__11523__a.length) {G__11523__a[G__11523__i] = arguments[G__11523__i + 2]; ++G__11523__i;}
G__11522 = new cljs.core.IndexedSeq(G__11523__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11524 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11524) : cljs.core.es6_iterator_seq.call(null,G__11524));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11525 = (n + (1));
var G__11526 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11527 = cljs.core.next(coll__$1);
n = G__11525;
hash_code = G__11526;
coll__$1 = G__11527;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11528 = (n + (1));
var G__11529 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11530 = cljs.core.next(coll__$1);
n = G__11528;
hash_code = G__11529;
coll__$1 = G__11530;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11531 = o;
return goog.getUid(G__11531);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11533 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11533) : cljs.core.deref.call(null,G__11533));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11540 = val;
var G__11541 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11540,G__11541) : f.call(null,G__11540,G__11541));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11546 = nval;
var G__11547 = (n + (1));
val = G__11546;
n = G__11547;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11542 = val__$1;
var G__11543 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11542,G__11543) : f.call(null,G__11542,G__11543));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11548 = nval;
var G__11549 = (n + (1));
val__$1 = G__11548;
n = G__11549;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11544 = val__$1;
var G__11545 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11544,G__11545) : f.call(null,G__11544,G__11545));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11550 = nval;
var G__11551 = (n + (1));
val__$1 = G__11550;
n = G__11551;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11558 = val;
var G__11559 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11558,G__11559) : f.call(null,G__11558,G__11559));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11564 = nval;
var G__11565 = (n + (1));
val = G__11564;
n = G__11565;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11560 = val__$1;
var G__11561 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11560,G__11561) : f.call(null,G__11560,G__11561));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11566 = nval;
var G__11567 = (n + (1));
val__$1 = G__11566;
n = G__11567;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11562 = val__$1;
var G__11563 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11562,G__11563) : f.call(null,G__11562,G__11563));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11568 = nval;
var G__11569 = (n + (1));
val__$1 = G__11568;
n = G__11569;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__11571 = x;
if(G__11571){
var bit__4480__auto__ = (G__11571.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4480__auto__) || (G__11571.cljs$core$ICounted$)){
return true;
} else {
if((!G__11571.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11571);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11571);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__11573 = x;
if(G__11573){
var bit__4480__auto__ = (G__11573.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4480__auto__) || (G__11573.cljs$core$IIndexed$)){
return true;
} else {
if((!G__11573.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11573);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11573);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11574 = coll__$1;
var G__11575 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11574,G__11575) : cljs.core.equiv_sequential.call(null,G__11574,G__11575));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11576 = o;
var G__11577 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11576,G__11577) : cljs.core.cons.call(null,G__11576,G__11577));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11580 = coll__$1;
var G__11581 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11580,G__11581) : cljs.core.equiv_sequential.call(null,G__11580,G__11581));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11582 = cljs.core.List.EMPTY;
var G__11583 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11582,G__11583) : cljs.core.with_meta.call(null,G__11582,G__11583));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__11584 = f;
var G__11585 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11584,G__11585) : cljs.core.seq_reduce.call(null,G__11584,G__11585));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__11586 = f;
var G__11587 = start;
var G__11588 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11586,G__11587,G__11588) : cljs.core.seq_reduce.call(null,G__11586,G__11587,G__11588));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11589 = o;
var G__11590 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11589,G__11590) : cljs.core.cons.call(null,G__11589,G__11590));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__11591 = sn;
s = G__11591;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__11596__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__11597 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__11598 = cljs.core.first(xs);
var G__11599 = cljs.core.next(xs);
coll = G__11597;
x = G__11598;
xs = G__11599;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__11596 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__11600__i = 0, G__11600__a = new Array(arguments.length -  2);
while (G__11600__i < G__11600__a.length) {G__11600__a[G__11600__i] = arguments[G__11600__i + 2]; ++G__11600__i;}
  xs = new cljs.core.IndexedSeq(G__11600__a,0);
} 
return G__11596__delegate.call(this,coll,x,xs);};
G__11596.cljs$lang$maxFixedArity = 2;
G__11596.cljs$lang$applyTo = (function (arglist__11601){
var coll = cljs.core.first(arglist__11601);
arglist__11601 = cljs.core.next(arglist__11601);
var x = cljs.core.first(arglist__11601);
var xs = cljs.core.rest(arglist__11601);
return G__11596__delegate(coll,x,xs);
});
G__11596.cljs$core$IFn$_invoke$arity$variadic = G__11596__delegate;
return G__11596;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__11602 = null;
if (arguments.length > 2) {
var G__11603__i = 0, G__11603__a = new Array(arguments.length -  2);
while (G__11603__i < G__11603__a.length) {G__11603__a[G__11603__i] = arguments[G__11603__i + 2]; ++G__11603__i;}
G__11602 = new cljs.core.IndexedSeq(G__11603__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__11602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__11604 = cljs.core.next(s);
var G__11605 = (acc + (1));
s = G__11604;
acc = G__11605;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__11607 = coll;
if(G__11607){
var bit__4473__auto__ = (G__11607.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4473__auto__) || (G__11607.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__11608 = cljs.core.next(coll);
var G__11609 = (n - (1));
coll = G__11608;
n = G__11609;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__11610 = cljs.core.next(coll);
var G__11611 = (n - (1));
var G__11612 = not_found;
coll = G__11610;
n = G__11611;
not_found = G__11612;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__11617 = coll;
if(G__11617){
var bit__4473__auto__ = (G__11617.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4473__auto__) || (G__11617.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11618 = coll;
if(G__11618){
var bit__4480__auto__ = (G__11618.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4480__auto__) || (G__11618.cljs$core$ISeq$)){
return true;
} else {
if((!G__11618.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11618);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11618);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__11619 = coll;
if(G__11619){
var bit__4473__auto__ = (G__11619.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4473__auto__) || (G__11619.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11620 = coll;
if(G__11620){
var bit__4480__auto__ = (G__11620.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4480__auto__) || (G__11620.cljs$core$ISeq$)){
return true;
} else {
if((!G__11620.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11620);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11620);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__11621 = (n__$1 - (1));
var G__11622 = cljs.core.rest(xs);
n__$1 = G__11621;
xs = G__11622;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__11625 = o;
if(G__11625){
var bit__4473__auto__ = (G__11625.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4473__auto__) || (G__11625.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__11626 = o;
if(G__11626){
var bit__4473__auto__ = (G__11626.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4473__auto__) || (G__11626.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__11630__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__11631 = ret;
var G__11632 = cljs.core.first(kvs);
var G__11633 = cljs.core.second(kvs);
var G__11634 = cljs.core.nnext(kvs);
coll = G__11631;
k = G__11632;
v = G__11633;
kvs = G__11634;
continue;
} else {
return ret;
}
break;
}
};
var G__11630 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11635__i = 0, G__11635__a = new Array(arguments.length -  3);
while (G__11635__i < G__11635__a.length) {G__11635__a[G__11635__i] = arguments[G__11635__i + 3]; ++G__11635__i;}
  kvs = new cljs.core.IndexedSeq(G__11635__a,0);
} 
return G__11630__delegate.call(this,coll,k,v,kvs);};
G__11630.cljs$lang$maxFixedArity = 3;
G__11630.cljs$lang$applyTo = (function (arglist__11636){
var coll = cljs.core.first(arglist__11636);
arglist__11636 = cljs.core.next(arglist__11636);
var k = cljs.core.first(arglist__11636);
arglist__11636 = cljs.core.next(arglist__11636);
var v = cljs.core.first(arglist__11636);
var kvs = cljs.core.rest(arglist__11636);
return G__11630__delegate(coll,k,v,kvs);
});
G__11630.cljs$core$IFn$_invoke$arity$variadic = G__11630__delegate;
return G__11630;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__11637 = null;
if (arguments.length > 3) {
var G__11638__i = 0, G__11638__a = new Array(arguments.length -  3);
while (G__11638__i < G__11638__a.length) {G__11638__a[G__11638__i] = arguments[G__11638__i + 3]; ++G__11638__i;}
G__11637 = new cljs.core.IndexedSeq(G__11638__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__11637);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__11641__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11642 = ret;
var G__11643 = cljs.core.first(ks);
var G__11644 = cljs.core.next(ks);
coll = G__11642;
k = G__11643;
ks = G__11644;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11641 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11645__i = 0, G__11645__a = new Array(arguments.length -  2);
while (G__11645__i < G__11645__a.length) {G__11645__a[G__11645__i] = arguments[G__11645__i + 2]; ++G__11645__i;}
  ks = new cljs.core.IndexedSeq(G__11645__a,0);
} 
return G__11641__delegate.call(this,coll,k,ks);};
G__11641.cljs$lang$maxFixedArity = 2;
G__11641.cljs$lang$applyTo = (function (arglist__11646){
var coll = cljs.core.first(arglist__11646);
arglist__11646 = cljs.core.next(arglist__11646);
var k = cljs.core.first(arglist__11646);
var ks = cljs.core.rest(arglist__11646);
return G__11641__delegate(coll,k,ks);
});
G__11641.cljs$core$IFn$_invoke$arity$variadic = G__11641__delegate;
return G__11641;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__11647 = null;
if (arguments.length > 2) {
var G__11648__i = 0, G__11648__a = new Array(arguments.length -  2);
while (G__11648__i < G__11648__a.length) {G__11648__a[G__11648__i] = arguments[G__11648__i + 2]; ++G__11648__i;}
G__11647 = new cljs.core.IndexedSeq(G__11648__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3799__auto__ = (function (){var G__11653 = f;
return goog.isFunction(G__11653);
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var G__11654 = f;
if(G__11654){
var bit__4480__auto__ = null;
if(cljs.core.truth_((function (){var or__3799__auto____$1 = bit__4480__auto__;
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
return G__11654.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__11654.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11654);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11654);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__12120 = null;
var G__12120__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__12120__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11656 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11656) : self__.afn.call(null,G__11656));
});
var G__12120__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11657 = a;
var G__11658 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11657,G__11658) : self__.afn.call(null,G__11657,G__11658));
});
var G__12120__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11659 = a;
var G__11660 = b;
var G__11661 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11659,G__11660,G__11661) : self__.afn.call(null,G__11659,G__11660,G__11661));
});
var G__12120__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11662 = a;
var G__11663 = b;
var G__11664 = c;
var G__11665 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11662,G__11663,G__11664,G__11665) : self__.afn.call(null,G__11662,G__11663,G__11664,G__11665));
});
var G__12120__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11666 = a;
var G__11667 = b;
var G__11668 = c;
var G__11669 = d;
var G__11670 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11666,G__11667,G__11668,G__11669,G__11670) : self__.afn.call(null,G__11666,G__11667,G__11668,G__11669,G__11670));
});
var G__12120__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11671 = a;
var G__11672 = b;
var G__11673 = c;
var G__11674 = d;
var G__11675 = e;
var G__11676 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11671,G__11672,G__11673,G__11674,G__11675,G__11676) : self__.afn.call(null,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676));
});
var G__12120__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11677 = a;
var G__11678 = b;
var G__11679 = c;
var G__11680 = d;
var G__11681 = e;
var G__11682 = f;
var G__11683 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683) : self__.afn.call(null,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683));
});
var G__12120__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11684 = a;
var G__11685 = b;
var G__11686 = c;
var G__11687 = d;
var G__11688 = e;
var G__11689 = f;
var G__11690 = g;
var G__11691 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691) : self__.afn.call(null,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691));
});
var G__12120__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11692 = a;
var G__11693 = b;
var G__11694 = c;
var G__11695 = d;
var G__11696 = e;
var G__11697 = f;
var G__11698 = g;
var G__11699 = h;
var G__11700 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700) : self__.afn.call(null,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697,G__11698,G__11699,G__11700));
});
var G__12120__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11701 = a;
var G__11702 = b;
var G__11703 = c;
var G__11704 = d;
var G__11705 = e;
var G__11706 = f;
var G__11707 = g;
var G__11708 = h;
var G__11709 = i;
var G__11710 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710) : self__.afn.call(null,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710));
});
var G__12120__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11711 = a;
var G__11712 = b;
var G__11713 = c;
var G__11714 = d;
var G__11715 = e;
var G__11716 = f;
var G__11717 = g;
var G__11718 = h;
var G__11719 = i;
var G__11720 = j;
var G__11721 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721) : self__.afn.call(null,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721));
});
var G__12120__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11722 = a;
var G__11723 = b;
var G__11724 = c;
var G__11725 = d;
var G__11726 = e;
var G__11727 = f;
var G__11728 = g;
var G__11729 = h;
var G__11730 = i;
var G__11731 = j;
var G__11732 = k;
var G__11733 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733) : self__.afn.call(null,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733));
});
var G__12120__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11734 = a;
var G__11735 = b;
var G__11736 = c;
var G__11737 = d;
var G__11738 = e;
var G__11739 = f;
var G__11740 = g;
var G__11741 = h;
var G__11742 = i;
var G__11743 = j;
var G__11744 = k;
var G__11745 = l;
var G__11746 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746) : self__.afn.call(null,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746));
});
var G__12120__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11747 = a;
var G__11748 = b;
var G__11749 = c;
var G__11750 = d;
var G__11751 = e;
var G__11752 = f;
var G__11753 = g;
var G__11754 = h;
var G__11755 = i;
var G__11756 = j;
var G__11757 = k;
var G__11758 = l;
var G__11759 = m;
var G__11760 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760) : self__.afn.call(null,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760));
});
var G__12120__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11761 = a;
var G__11762 = b;
var G__11763 = c;
var G__11764 = d;
var G__11765 = e;
var G__11766 = f;
var G__11767 = g;
var G__11768 = h;
var G__11769 = i;
var G__11770 = j;
var G__11771 = k;
var G__11772 = l;
var G__11773 = m;
var G__11774 = n;
var G__11775 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775) : self__.afn.call(null,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775));
});
var G__12120__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11776 = a;
var G__11777 = b;
var G__11778 = c;
var G__11779 = d;
var G__11780 = e;
var G__11781 = f;
var G__11782 = g;
var G__11783 = h;
var G__11784 = i;
var G__11785 = j;
var G__11786 = k;
var G__11787 = l;
var G__11788 = m;
var G__11789 = n;
var G__11790 = o;
var G__11791 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791) : self__.afn.call(null,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791));
});
var G__12120__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11792 = a;
var G__11793 = b;
var G__11794 = c;
var G__11795 = d;
var G__11796 = e;
var G__11797 = f;
var G__11798 = g;
var G__11799 = h;
var G__11800 = i;
var G__11801 = j;
var G__11802 = k;
var G__11803 = l;
var G__11804 = m;
var G__11805 = n;
var G__11806 = o;
var G__11807 = p;
var G__11808 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808) : self__.afn.call(null,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808));
});
var G__12120__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11809 = a;
var G__11810 = b;
var G__11811 = c;
var G__11812 = d;
var G__11813 = e;
var G__11814 = f;
var G__11815 = g;
var G__11816 = h;
var G__11817 = i;
var G__11818 = j;
var G__11819 = k;
var G__11820 = l;
var G__11821 = m;
var G__11822 = n;
var G__11823 = o;
var G__11824 = p;
var G__11825 = q;
var G__11826 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826) : self__.afn.call(null,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826));
});
var G__12120__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11827 = a;
var G__11828 = b;
var G__11829 = c;
var G__11830 = d;
var G__11831 = e;
var G__11832 = f;
var G__11833 = g;
var G__11834 = h;
var G__11835 = i;
var G__11836 = j;
var G__11837 = k;
var G__11838 = l;
var G__11839 = m;
var G__11840 = n;
var G__11841 = o;
var G__11842 = p;
var G__11843 = q;
var G__11844 = r;
var G__11845 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845) : self__.afn.call(null,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845));
});
var G__12120__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11846 = a;
var G__11847 = b;
var G__11848 = c;
var G__11849 = d;
var G__11850 = e;
var G__11851 = f;
var G__11852 = g;
var G__11853 = h;
var G__11854 = i;
var G__11855 = j;
var G__11856 = k;
var G__11857 = l;
var G__11858 = m;
var G__11859 = n;
var G__11860 = o;
var G__11861 = p;
var G__11862 = q;
var G__11863 = r;
var G__11864 = s;
var G__11865 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865) : self__.afn.call(null,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865));
});
var G__12120__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11866 = self__.afn;
var G__11867 = a;
var G__11868 = b;
var G__11869 = c;
var G__11870 = d;
var G__11871 = e;
var G__11872 = f;
var G__11873 = g;
var G__11874 = h;
var G__11875 = i;
var G__11876 = j;
var G__11877 = k;
var G__11878 = l;
var G__11879 = m;
var G__11880 = n;
var G__11881 = o;
var G__11882 = p;
var G__11883 = q;
var G__11884 = r;
var G__11885 = s;
var G__11886 = t;
var G__11887 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887) : cljs.core.apply.call(null,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887));
});
G__12120 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12120__1.call(this,self__);
case 2:
return G__12120__2.call(this,self__,a);
case 3:
return G__12120__3.call(this,self__,a,b);
case 4:
return G__12120__4.call(this,self__,a,b,c);
case 5:
return G__12120__5.call(this,self__,a,b,c,d);
case 6:
return G__12120__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12120__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12120__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12120__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12120__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12120__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12120__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12120__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12120__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12120__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12120__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12120__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12120__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12120__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12120__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12120__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12120__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12120.cljs$core$IFn$_invoke$arity$1 = G__12120__1;
G__12120.cljs$core$IFn$_invoke$arity$2 = G__12120__2;
G__12120.cljs$core$IFn$_invoke$arity$3 = G__12120__3;
G__12120.cljs$core$IFn$_invoke$arity$4 = G__12120__4;
G__12120.cljs$core$IFn$_invoke$arity$5 = G__12120__5;
G__12120.cljs$core$IFn$_invoke$arity$6 = G__12120__6;
G__12120.cljs$core$IFn$_invoke$arity$7 = G__12120__7;
G__12120.cljs$core$IFn$_invoke$arity$8 = G__12120__8;
G__12120.cljs$core$IFn$_invoke$arity$9 = G__12120__9;
G__12120.cljs$core$IFn$_invoke$arity$10 = G__12120__10;
G__12120.cljs$core$IFn$_invoke$arity$11 = G__12120__11;
G__12120.cljs$core$IFn$_invoke$arity$12 = G__12120__12;
G__12120.cljs$core$IFn$_invoke$arity$13 = G__12120__13;
G__12120.cljs$core$IFn$_invoke$arity$14 = G__12120__14;
G__12120.cljs$core$IFn$_invoke$arity$15 = G__12120__15;
G__12120.cljs$core$IFn$_invoke$arity$16 = G__12120__16;
G__12120.cljs$core$IFn$_invoke$arity$17 = G__12120__17;
G__12120.cljs$core$IFn$_invoke$arity$18 = G__12120__18;
G__12120.cljs$core$IFn$_invoke$arity$19 = G__12120__19;
G__12120.cljs$core$IFn$_invoke$arity$20 = G__12120__20;
G__12120.cljs$core$IFn$_invoke$arity$21 = G__12120__21;
G__12120.cljs$core$IFn$_invoke$arity$22 = G__12120__22;
return G__12120;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args11655){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11655)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__11888 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11888) : self__.afn.call(null,G__11888));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__11889 = a;
var G__11890 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11889,G__11890) : self__.afn.call(null,G__11889,G__11890));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__11891 = a;
var G__11892 = b;
var G__11893 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11891,G__11892,G__11893) : self__.afn.call(null,G__11891,G__11892,G__11893));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__11894 = a;
var G__11895 = b;
var G__11896 = c;
var G__11897 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11894,G__11895,G__11896,G__11897) : self__.afn.call(null,G__11894,G__11895,G__11896,G__11897));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__11898 = a;
var G__11899 = b;
var G__11900 = c;
var G__11901 = d;
var G__11902 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11898,G__11899,G__11900,G__11901,G__11902) : self__.afn.call(null,G__11898,G__11899,G__11900,G__11901,G__11902));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__11903 = a;
var G__11904 = b;
var G__11905 = c;
var G__11906 = d;
var G__11907 = e;
var G__11908 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11903,G__11904,G__11905,G__11906,G__11907,G__11908) : self__.afn.call(null,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__11909 = a;
var G__11910 = b;
var G__11911 = c;
var G__11912 = d;
var G__11913 = e;
var G__11914 = f;
var G__11915 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915) : self__.afn.call(null,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__11916 = a;
var G__11917 = b;
var G__11918 = c;
var G__11919 = d;
var G__11920 = e;
var G__11921 = f;
var G__11922 = g;
var G__11923 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923) : self__.afn.call(null,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__11924 = a;
var G__11925 = b;
var G__11926 = c;
var G__11927 = d;
var G__11928 = e;
var G__11929 = f;
var G__11930 = g;
var G__11931 = h;
var G__11932 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932) : self__.afn.call(null,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__11933 = a;
var G__11934 = b;
var G__11935 = c;
var G__11936 = d;
var G__11937 = e;
var G__11938 = f;
var G__11939 = g;
var G__11940 = h;
var G__11941 = i;
var G__11942 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942) : self__.afn.call(null,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__11943 = a;
var G__11944 = b;
var G__11945 = c;
var G__11946 = d;
var G__11947 = e;
var G__11948 = f;
var G__11949 = g;
var G__11950 = h;
var G__11951 = i;
var G__11952 = j;
var G__11953 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953) : self__.afn.call(null,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__11954 = a;
var G__11955 = b;
var G__11956 = c;
var G__11957 = d;
var G__11958 = e;
var G__11959 = f;
var G__11960 = g;
var G__11961 = h;
var G__11962 = i;
var G__11963 = j;
var G__11964 = k;
var G__11965 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965) : self__.afn.call(null,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__11966 = a;
var G__11967 = b;
var G__11968 = c;
var G__11969 = d;
var G__11970 = e;
var G__11971 = f;
var G__11972 = g;
var G__11973 = h;
var G__11974 = i;
var G__11975 = j;
var G__11976 = k;
var G__11977 = l;
var G__11978 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978) : self__.afn.call(null,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977,G__11978));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__11979 = a;
var G__11980 = b;
var G__11981 = c;
var G__11982 = d;
var G__11983 = e;
var G__11984 = f;
var G__11985 = g;
var G__11986 = h;
var G__11987 = i;
var G__11988 = j;
var G__11989 = k;
var G__11990 = l;
var G__11991 = m;
var G__11992 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992) : self__.afn.call(null,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__11993 = a;
var G__11994 = b;
var G__11995 = c;
var G__11996 = d;
var G__11997 = e;
var G__11998 = f;
var G__11999 = g;
var G__12000 = h;
var G__12001 = i;
var G__12002 = j;
var G__12003 = k;
var G__12004 = l;
var G__12005 = m;
var G__12006 = n;
var G__12007 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007) : self__.afn.call(null,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12008 = a;
var G__12009 = b;
var G__12010 = c;
var G__12011 = d;
var G__12012 = e;
var G__12013 = f;
var G__12014 = g;
var G__12015 = h;
var G__12016 = i;
var G__12017 = j;
var G__12018 = k;
var G__12019 = l;
var G__12020 = m;
var G__12021 = n;
var G__12022 = o;
var G__12023 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023) : self__.afn.call(null,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12024 = a;
var G__12025 = b;
var G__12026 = c;
var G__12027 = d;
var G__12028 = e;
var G__12029 = f;
var G__12030 = g;
var G__12031 = h;
var G__12032 = i;
var G__12033 = j;
var G__12034 = k;
var G__12035 = l;
var G__12036 = m;
var G__12037 = n;
var G__12038 = o;
var G__12039 = p;
var G__12040 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040) : self__.afn.call(null,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12041 = a;
var G__12042 = b;
var G__12043 = c;
var G__12044 = d;
var G__12045 = e;
var G__12046 = f;
var G__12047 = g;
var G__12048 = h;
var G__12049 = i;
var G__12050 = j;
var G__12051 = k;
var G__12052 = l;
var G__12053 = m;
var G__12054 = n;
var G__12055 = o;
var G__12056 = p;
var G__12057 = q;
var G__12058 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12041,G__12042,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058) : self__.afn.call(null,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12059 = a;
var G__12060 = b;
var G__12061 = c;
var G__12062 = d;
var G__12063 = e;
var G__12064 = f;
var G__12065 = g;
var G__12066 = h;
var G__12067 = i;
var G__12068 = j;
var G__12069 = k;
var G__12070 = l;
var G__12071 = m;
var G__12072 = n;
var G__12073 = o;
var G__12074 = p;
var G__12075 = q;
var G__12076 = r;
var G__12077 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077) : self__.afn.call(null,G__12059,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12078 = a;
var G__12079 = b;
var G__12080 = c;
var G__12081 = d;
var G__12082 = e;
var G__12083 = f;
var G__12084 = g;
var G__12085 = h;
var G__12086 = i;
var G__12087 = j;
var G__12088 = k;
var G__12089 = l;
var G__12090 = m;
var G__12091 = n;
var G__12092 = o;
var G__12093 = p;
var G__12094 = q;
var G__12095 = r;
var G__12096 = s;
var G__12097 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097) : self__.afn.call(null,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12098 = self__.afn;
var G__12099 = a;
var G__12100 = b;
var G__12101 = c;
var G__12102 = d;
var G__12103 = e;
var G__12104 = f;
var G__12105 = g;
var G__12106 = h;
var G__12107 = i;
var G__12108 = j;
var G__12109 = k;
var G__12110 = l;
var G__12111 = m;
var G__12112 = n;
var G__12113 = o;
var G__12114 = p;
var G__12115 = q;
var G__12116 = r;
var G__12117 = s;
var G__12118 = t;
var G__12119 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119) : cljs.core.apply.call(null,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117,G__12118,G__12119));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__12124 = o;
if(G__12124){
var bit__4480__auto__ = (G__12124.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4480__auto__) || (G__12124.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__12124.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12124);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12124);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3787__auto__ = !((o == null));
if(and__3787__auto__){
var G__12128 = o;
if(G__12128){
var bit__4480__auto__ = (G__12128.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4480__auto__) || (G__12128.cljs$core$IMeta$)){
return true;
} else {
if((!G__12128.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12128);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12128);
}
} else {
return and__3787__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__12131__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12132 = ret;
var G__12133 = cljs.core.first(ks);
var G__12134 = cljs.core.next(ks);
coll = G__12132;
k = G__12133;
ks = G__12134;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12131 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12135__i = 0, G__12135__a = new Array(arguments.length -  2);
while (G__12135__i < G__12135__a.length) {G__12135__a[G__12135__i] = arguments[G__12135__i + 2]; ++G__12135__i;}
  ks = new cljs.core.IndexedSeq(G__12135__a,0);
} 
return G__12131__delegate.call(this,coll,k,ks);};
G__12131.cljs$lang$maxFixedArity = 2;
G__12131.cljs$lang$applyTo = (function (arglist__12136){
var coll = cljs.core.first(arglist__12136);
arglist__12136 = cljs.core.next(arglist__12136);
var k = cljs.core.first(arglist__12136);
var ks = cljs.core.rest(arglist__12136);
return G__12131__delegate(coll,k,ks);
});
G__12131.cljs$core$IFn$_invoke$arity$variadic = G__12131__delegate;
return G__12131;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__12137 = null;
if (arguments.length > 2) {
var G__12138__i = 0, G__12138__a = new Array(arguments.length -  2);
while (G__12138__i < G__12138__a.length) {G__12138__a[G__12138__i] = arguments[G__12138__i + 2]; ++G__12138__i;}
G__12137 = new cljs.core.IndexedSeq(G__12138__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12140 = x;
if(G__12140){
var bit__4480__auto__ = (G__12140.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4480__auto__) || (G__12140.cljs$core$ICollection$)){
return true;
} else {
if((!G__12140.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12140);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12140);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12142 = x;
if(G__12142){
var bit__4480__auto__ = (G__12142.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4480__auto__) || (G__12142.cljs$core$ISet$)){
return true;
} else {
if((!G__12142.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12142);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12142);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__12144 = x;
if(G__12144){
var bit__4480__auto__ = (G__12144.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4480__auto__) || (G__12144.cljs$core$IAssociative$)){
return true;
} else {
if((!G__12144.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12144);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12144);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__12146 = x;
if(G__12146){
var bit__4480__auto__ = (G__12146.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4480__auto__) || (G__12146.cljs$core$ISequential$)){
return true;
} else {
if((!G__12146.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12146);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12146);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__12148 = x;
if(G__12148){
var bit__4480__auto__ = (G__12148.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4480__auto__) || (G__12148.cljs$core$ISorted$)){
return true;
} else {
if((!G__12148.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12148);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12148);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__12150 = x;
if(G__12150){
var bit__4480__auto__ = (G__12150.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4480__auto__) || (G__12150.cljs$core$IReduce$)){
return true;
} else {
if((!G__12150.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12150);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12150);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12152 = x;
if(G__12152){
var bit__4480__auto__ = (G__12152.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4480__auto__) || (G__12152.cljs$core$IMap$)){
return true;
} else {
if((!G__12152.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12152);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12152);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__12154 = x;
if(G__12154){
var bit__4480__auto__ = (G__12154.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4480__auto__) || (G__12154.cljs$core$IVector$)){
return true;
} else {
if((!G__12154.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12154);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12154);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__12156 = x;
if(G__12156){
var bit__4473__auto__ = (G__12156.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4473__auto__) || (G__12156.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj12162 = {};
return obj12162;
});
var js_obj__1 = (function() { 
var G__12165__delegate = function (keyvals){
var G__12163 = goog.object.create;
var G__12164 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12163,G__12164) : cljs.core.apply.call(null,G__12163,G__12164));
};
var G__12165 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__12166__i = 0, G__12166__a = new Array(arguments.length -  0);
while (G__12166__i < G__12166__a.length) {G__12166__a[G__12166__i] = arguments[G__12166__i + 0]; ++G__12166__i;}
  keyvals = new cljs.core.IndexedSeq(G__12166__a,0);
} 
return G__12165__delegate.call(this,keyvals);};
G__12165.cljs$lang$maxFixedArity = 0;
G__12165.cljs$lang$applyTo = (function (arglist__12167){
var keyvals = cljs.core.seq(arglist__12167);
return G__12165__delegate(keyvals);
});
G__12165.cljs$core$IFn$_invoke$arity$variadic = G__12165__delegate;
return G__12165;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__12168 = null;
if (arguments.length > 0) {
var G__12169__i = 0, G__12169__a = new Array(arguments.length -  0);
while (G__12169__i < G__12169__a.length) {G__12169__a[G__12169__i] = arguments[G__12169__i + 0]; ++G__12169__i;}
G__12168 = new cljs.core.IndexedSeq(G__12169__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12168);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__12172_12174 = obj;
var G__12173_12175 = ((function (G__12172_12174,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__12172_12174,keys))
;
goog.object.forEach(G__12172_12174,G__12173_12175);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12176 = (i__$1 + (1));
var G__12177 = (j__$1 + (1));
var G__12178 = (len__$1 - (1));
i__$1 = G__12176;
j__$1 = G__12177;
len__$1 = G__12178;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12179 = (i__$1 - (1));
var G__12180 = (j__$1 - (1));
var G__12181 = (len__$1 - (1));
i__$1 = G__12179;
j__$1 = G__12180;
len__$1 = G__12181;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj12183 = {};
return obj12183;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__12185 = s;
if(G__12185){
var bit__4480__auto__ = (G__12185.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4480__auto__) || (G__12185.cljs$core$ISeq$)){
return true;
} else {
if((!G__12185.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12185);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12185);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__12187 = s;
if(G__12187){
var bit__4480__auto__ = (G__12187.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4480__auto__) || (G__12187.cljs$core$ISeqable$)){
return true;
} else {
if((!G__12187.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12187);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12187);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3799__auto__ = cljs.core.fn_QMARK_(f);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var G__12191 = f;
if(G__12191){
var bit__4480__auto__ = (G__12191.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4480__auto__) || (G__12191.cljs$core$IFn$)){
return true;
} else {
if((!G__12191.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12191);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12191);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__12204 = n;
return isNaN(G__12204);
})())) && (!((n === Infinity))) && (((function (){var G__12205 = n;
return parseFloat(G__12205);
})() === (function (){var G__12206 = n;
var G__12207 = (10);
return parseInt(G__12206,G__12207);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__12208__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__12209 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__12210 = etc;
s = G__12209;
xs = G__12210;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__12208 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12211__i = 0, G__12211__a = new Array(arguments.length -  2);
while (G__12211__i < G__12211__a.length) {G__12211__a[G__12211__i] = arguments[G__12211__i + 2]; ++G__12211__i;}
  more = new cljs.core.IndexedSeq(G__12211__a,0);
} 
return G__12208__delegate.call(this,x,y,more);};
G__12208.cljs$lang$maxFixedArity = 2;
G__12208.cljs$lang$applyTo = (function (arglist__12212){
var x = cljs.core.first(arglist__12212);
arglist__12212 = cljs.core.next(arglist__12212);
var y = cljs.core.first(arglist__12212);
var more = cljs.core.rest(arglist__12212);
return G__12208__delegate(x,y,more);
});
G__12208.cljs$core$IFn$_invoke$arity$variadic = G__12208__delegate;
return G__12208;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__12213 = null;
if (arguments.length > 2) {
var G__12214__i = 0, G__12214__a = new Array(arguments.length -  2);
while (G__12214__i < G__12214__a.length) {G__12214__a[G__12214__i] = arguments[G__12214__i + 2]; ++G__12214__i;}
G__12213 = new cljs.core.IndexedSeq(G__12214__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__12218 = x;
if(G__12218){
var bit__4473__auto__ = (G__12218.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4473__auto__) || (G__12218.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__12219 = x;
var G__12220 = y;
return goog.array.defaultCompare(G__12219,G__12220);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__12225 = xs;
var G__12226 = ys;
var G__12227 = len;
var G__12228 = (n + (1));
xs = G__12225;
ys = G__12226;
len = G__12227;
n = G__12228;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__12233 = x;
var G__12234 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12233,G__12234) : f.call(null,G__12233,G__12234));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12235 = y;
var G__12236 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12235,G__12236) : f.call(null,G__12235,G__12236));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__12242 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12242) : cljs.core.to_array.call(null,G__12242));
})();
var G__12243_12245 = a;
var G__12244_12246 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__12243_12245,G__12244_12246);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__12252 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12252) : keyfn.call(null,G__12252));
})(),(function (){var G__12253 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12253) : keyfn.call(null,G__12253));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__12259 = f;
var G__12260 = cljs.core.first(s);
var G__12261 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12259,G__12260,G__12261) : cljs.core.reduce.call(null,G__12259,G__12260,G__12261));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__12262 = val__$1;
var G__12263 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12262,G__12263) : f.call(null,G__12262,G__12263));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12264 = nval;
var G__12265 = cljs.core.next(coll__$1);
val__$1 = G__12264;
coll__$1 = G__12265;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__12269 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12269) : cljs.core.to_array.call(null,G__12269));
})();
var G__12270_12272 = a;
goog.array.shuffle(G__12270_12272);

var G__12271 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12271) : cljs.core.vec.call(null,G__12271));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__12275 = coll;
if(G__12275){
var bit__4473__auto__ = (G__12275.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4473__auto__) || (G__12275.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__12276 = coll;
if(G__12276){
var bit__4473__auto__ = (G__12276.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4473__auto__) || (G__12276.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__12285 = null;
var G__12285__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__12285__1 = (function (x){
var G__12282 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12282) : cf.call(null,G__12282));
});
var G__12285__2 = (function (x,y){
var G__12283 = x;
var G__12284 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12283,G__12284) : f.call(null,G__12283,G__12284));
});
G__12285 = function(x,y){
switch(arguments.length){
case 0:
return G__12285__0.call(this);
case 1:
return G__12285__1.call(this,x);
case 2:
return G__12285__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12285.cljs$core$IFn$_invoke$arity$0 = G__12285__0;
G__12285.cljs$core$IFn$_invoke$arity$1 = G__12285__1;
G__12285.cljs$core$IFn$_invoke$arity$2 = G__12285__2;
return G__12285;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__12292 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12292) : xform.call(null,G__12292));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__12293 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12293) : f__$1.call(null,G__12293));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__12294__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__12294 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12295__i = 0, G__12295__a = new Array(arguments.length -  2);
while (G__12295__i < G__12295__a.length) {G__12295__a[G__12295__i] = arguments[G__12295__i + 2]; ++G__12295__i;}
  more = new cljs.core.IndexedSeq(G__12295__a,0);
} 
return G__12294__delegate.call(this,x,y,more);};
G__12294.cljs$lang$maxFixedArity = 2;
G__12294.cljs$lang$applyTo = (function (arglist__12296){
var x = cljs.core.first(arglist__12296);
arglist__12296 = cljs.core.next(arglist__12296);
var y = cljs.core.first(arglist__12296);
var more = cljs.core.rest(arglist__12296);
return G__12294__delegate(x,y,more);
});
G__12294.cljs$core$IFn$_invoke$arity$variadic = G__12294__delegate;
return G__12294;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__12297 = null;
if (arguments.length > 2) {
var G__12298__i = 0, G__12298__a = new Array(arguments.length -  2);
while (G__12298__i < G__12298__a.length) {G__12298__a[G__12298__i] = arguments[G__12298__i + 2]; ++G__12298__i;}
G__12297 = new cljs.core.IndexedSeq(G__12298__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__12299__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__12299 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12300__i = 0, G__12300__a = new Array(arguments.length -  2);
while (G__12300__i < G__12300__a.length) {G__12300__a[G__12300__i] = arguments[G__12300__i + 2]; ++G__12300__i;}
  more = new cljs.core.IndexedSeq(G__12300__a,0);
} 
return G__12299__delegate.call(this,x,y,more);};
G__12299.cljs$lang$maxFixedArity = 2;
G__12299.cljs$lang$applyTo = (function (arglist__12301){
var x = cljs.core.first(arglist__12301);
arglist__12301 = cljs.core.next(arglist__12301);
var y = cljs.core.first(arglist__12301);
var more = cljs.core.rest(arglist__12301);
return G__12299__delegate(x,y,more);
});
G__12299.cljs$core$IFn$_invoke$arity$variadic = G__12299__delegate;
return G__12299;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__12302 = null;
if (arguments.length > 2) {
var G__12303__i = 0, G__12303__a = new Array(arguments.length -  2);
while (G__12303__i < G__12303__a.length) {G__12303__a[G__12303__i] = arguments[G__12303__i + 2]; ++G__12303__i;}
G__12302 = new cljs.core.IndexedSeq(G__12303__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__12304__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__12304 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12305__i = 0, G__12305__a = new Array(arguments.length -  2);
while (G__12305__i < G__12305__a.length) {G__12305__a[G__12305__i] = arguments[G__12305__i + 2]; ++G__12305__i;}
  more = new cljs.core.IndexedSeq(G__12305__a,0);
} 
return G__12304__delegate.call(this,x,y,more);};
G__12304.cljs$lang$maxFixedArity = 2;
G__12304.cljs$lang$applyTo = (function (arglist__12306){
var x = cljs.core.first(arglist__12306);
arglist__12306 = cljs.core.next(arglist__12306);
var y = cljs.core.first(arglist__12306);
var more = cljs.core.rest(arglist__12306);
return G__12304__delegate(x,y,more);
});
G__12304.cljs$core$IFn$_invoke$arity$variadic = G__12304__delegate;
return G__12304;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__12307 = null;
if (arguments.length > 2) {
var G__12308__i = 0, G__12308__a = new Array(arguments.length -  2);
while (G__12308__i < G__12308__a.length) {G__12308__a[G__12308__i] = arguments[G__12308__i + 2]; ++G__12308__i;}
G__12307 = new cljs.core.IndexedSeq(G__12308__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__12313__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12313 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12314__i = 0, G__12314__a = new Array(arguments.length -  2);
while (G__12314__i < G__12314__a.length) {G__12314__a[G__12314__i] = arguments[G__12314__i + 2]; ++G__12314__i;}
  more = new cljs.core.IndexedSeq(G__12314__a,0);
} 
return G__12313__delegate.call(this,x,y,more);};
G__12313.cljs$lang$maxFixedArity = 2;
G__12313.cljs$lang$applyTo = (function (arglist__12315){
var x = cljs.core.first(arglist__12315);
arglist__12315 = cljs.core.next(arglist__12315);
var y = cljs.core.first(arglist__12315);
var more = cljs.core.rest(arglist__12315);
return G__12313__delegate(x,y,more);
});
G__12313.cljs$core$IFn$_invoke$arity$variadic = G__12313__delegate;
return G__12313;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__12316 = null;
if (arguments.length > 2) {
var G__12317__i = 0, G__12317__a = new Array(arguments.length -  2);
while (G__12317__i < G__12317__a.length) {G__12317__a[G__12317__i] = arguments[G__12317__i + 2]; ++G__12317__i;}
G__12316 = new cljs.core.IndexedSeq(G__12317__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12316);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__12318__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__12319 = y;
var G__12320 = cljs.core.first(more);
var G__12321 = cljs.core.next(more);
x = G__12319;
y = G__12320;
more = G__12321;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12318 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12322__i = 0, G__12322__a = new Array(arguments.length -  2);
while (G__12322__i < G__12322__a.length) {G__12322__a[G__12322__i] = arguments[G__12322__i + 2]; ++G__12322__i;}
  more = new cljs.core.IndexedSeq(G__12322__a,0);
} 
return G__12318__delegate.call(this,x,y,more);};
G__12318.cljs$lang$maxFixedArity = 2;
G__12318.cljs$lang$applyTo = (function (arglist__12323){
var x = cljs.core.first(arglist__12323);
arglist__12323 = cljs.core.next(arglist__12323);
var y = cljs.core.first(arglist__12323);
var more = cljs.core.rest(arglist__12323);
return G__12318__delegate(x,y,more);
});
G__12318.cljs$core$IFn$_invoke$arity$variadic = G__12318__delegate;
return G__12318;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__12324 = null;
if (arguments.length > 2) {
var G__12325__i = 0, G__12325__a = new Array(arguments.length -  2);
while (G__12325__i < G__12325__a.length) {G__12325__a[G__12325__i] = arguments[G__12325__i + 2]; ++G__12325__i;}
G__12324 = new cljs.core.IndexedSeq(G__12325__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__12326__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__12327 = y;
var G__12328 = cljs.core.first(more);
var G__12329 = cljs.core.next(more);
x = G__12327;
y = G__12328;
more = G__12329;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12326 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12330__i = 0, G__12330__a = new Array(arguments.length -  2);
while (G__12330__i < G__12330__a.length) {G__12330__a[G__12330__i] = arguments[G__12330__i + 2]; ++G__12330__i;}
  more = new cljs.core.IndexedSeq(G__12330__a,0);
} 
return G__12326__delegate.call(this,x,y,more);};
G__12326.cljs$lang$maxFixedArity = 2;
G__12326.cljs$lang$applyTo = (function (arglist__12331){
var x = cljs.core.first(arglist__12331);
arglist__12331 = cljs.core.next(arglist__12331);
var y = cljs.core.first(arglist__12331);
var more = cljs.core.rest(arglist__12331);
return G__12326__delegate(x,y,more);
});
G__12326.cljs$core$IFn$_invoke$arity$variadic = G__12326__delegate;
return G__12326;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__12332 = null;
if (arguments.length > 2) {
var G__12333__i = 0, G__12333__a = new Array(arguments.length -  2);
while (G__12333__i < G__12333__a.length) {G__12333__a[G__12333__i] = arguments[G__12333__i + 2]; ++G__12333__i;}
G__12332 = new cljs.core.IndexedSeq(G__12333__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__12334__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__12335 = y;
var G__12336 = cljs.core.first(more);
var G__12337 = cljs.core.next(more);
x = G__12335;
y = G__12336;
more = G__12337;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12334 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12338__i = 0, G__12338__a = new Array(arguments.length -  2);
while (G__12338__i < G__12338__a.length) {G__12338__a[G__12338__i] = arguments[G__12338__i + 2]; ++G__12338__i;}
  more = new cljs.core.IndexedSeq(G__12338__a,0);
} 
return G__12334__delegate.call(this,x,y,more);};
G__12334.cljs$lang$maxFixedArity = 2;
G__12334.cljs$lang$applyTo = (function (arglist__12339){
var x = cljs.core.first(arglist__12339);
arglist__12339 = cljs.core.next(arglist__12339);
var y = cljs.core.first(arglist__12339);
var more = cljs.core.rest(arglist__12339);
return G__12334__delegate(x,y,more);
});
G__12334.cljs$core$IFn$_invoke$arity$variadic = G__12334__delegate;
return G__12334;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__12340 = null;
if (arguments.length > 2) {
var G__12341__i = 0, G__12341__a = new Array(arguments.length -  2);
while (G__12341__i < G__12341__a.length) {G__12341__a[G__12341__i] = arguments[G__12341__i + 2]; ++G__12341__i;}
G__12340 = new cljs.core.IndexedSeq(G__12341__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__12342__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__12343 = y;
var G__12344 = cljs.core.first(more);
var G__12345 = cljs.core.next(more);
x = G__12343;
y = G__12344;
more = G__12345;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12342 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12346__i = 0, G__12346__a = new Array(arguments.length -  2);
while (G__12346__i < G__12346__a.length) {G__12346__a[G__12346__i] = arguments[G__12346__i + 2]; ++G__12346__i;}
  more = new cljs.core.IndexedSeq(G__12346__a,0);
} 
return G__12342__delegate.call(this,x,y,more);};
G__12342.cljs$lang$maxFixedArity = 2;
G__12342.cljs$lang$applyTo = (function (arglist__12347){
var x = cljs.core.first(arglist__12347);
arglist__12347 = cljs.core.next(arglist__12347);
var y = cljs.core.first(arglist__12347);
var more = cljs.core.rest(arglist__12347);
return G__12342__delegate(x,y,more);
});
G__12342.cljs$core$IFn$_invoke$arity$variadic = G__12342__delegate;
return G__12342;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__12348 = null;
if (arguments.length > 2) {
var G__12349__i = 0, G__12349__a = new Array(arguments.length -  2);
while (G__12349__i < G__12349__a.length) {G__12349__a[G__12349__i] = arguments[G__12349__i + 2]; ++G__12349__i;}
G__12348 = new cljs.core.IndexedSeq(G__12349__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4116__auto__ = x;
var y__4117__auto__ = y;
return ((x__4116__auto__ > y__4117__auto__) ? x__4116__auto__ : y__4117__auto__);
});
var max__3 = (function() { 
var G__12350__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4116__auto__ = x;
var y__4117__auto__ = y;
return ((x__4116__auto__ > y__4117__auto__) ? x__4116__auto__ : y__4117__auto__);
})(),more);
};
var G__12350 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12351__i = 0, G__12351__a = new Array(arguments.length -  2);
while (G__12351__i < G__12351__a.length) {G__12351__a[G__12351__i] = arguments[G__12351__i + 2]; ++G__12351__i;}
  more = new cljs.core.IndexedSeq(G__12351__a,0);
} 
return G__12350__delegate.call(this,x,y,more);};
G__12350.cljs$lang$maxFixedArity = 2;
G__12350.cljs$lang$applyTo = (function (arglist__12352){
var x = cljs.core.first(arglist__12352);
arglist__12352 = cljs.core.next(arglist__12352);
var y = cljs.core.first(arglist__12352);
var more = cljs.core.rest(arglist__12352);
return G__12350__delegate(x,y,more);
});
G__12350.cljs$core$IFn$_invoke$arity$variadic = G__12350__delegate;
return G__12350;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__12353 = null;
if (arguments.length > 2) {
var G__12354__i = 0, G__12354__a = new Array(arguments.length -  2);
while (G__12354__i < G__12354__a.length) {G__12354__a[G__12354__i] = arguments[G__12354__i + 2]; ++G__12354__i;}
G__12353 = new cljs.core.IndexedSeq(G__12354__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4123__auto__ = x;
var y__4124__auto__ = y;
return ((x__4123__auto__ < y__4124__auto__) ? x__4123__auto__ : y__4124__auto__);
});
var min__3 = (function() { 
var G__12355__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4123__auto__ = x;
var y__4124__auto__ = y;
return ((x__4123__auto__ < y__4124__auto__) ? x__4123__auto__ : y__4124__auto__);
})(),more);
};
var G__12355 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12356__i = 0, G__12356__a = new Array(arguments.length -  2);
while (G__12356__i < G__12356__a.length) {G__12356__a[G__12356__i] = arguments[G__12356__i + 2]; ++G__12356__i;}
  more = new cljs.core.IndexedSeq(G__12356__a,0);
} 
return G__12355__delegate.call(this,x,y,more);};
G__12355.cljs$lang$maxFixedArity = 2;
G__12355.cljs$lang$applyTo = (function (arglist__12357){
var x = cljs.core.first(arglist__12357);
arglist__12357 = cljs.core.next(arglist__12357);
var y = cljs.core.first(arglist__12357);
var more = cljs.core.rest(arglist__12357);
return G__12355__delegate(x,y,more);
});
G__12355.cljs$core$IFn$_invoke$arity$variadic = G__12355__delegate;
return G__12355;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__12358 = null;
if (arguments.length > 2) {
var G__12359__i = 0, G__12359__a = new Array(arguments.length -  2);
while (G__12359__i < G__12359__a.length) {G__12359__a[G__12359__i] = arguments[G__12359__i + 2]; ++G__12359__i;}
G__12358 = new cljs.core.IndexedSeq(G__12359__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__12360__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__12360 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12361__i = 0, G__12361__a = new Array(arguments.length -  2);
while (G__12361__i < G__12361__a.length) {G__12361__a[G__12361__i] = arguments[G__12361__i + 2]; ++G__12361__i;}
  more = new cljs.core.IndexedSeq(G__12361__a,0);
} 
return G__12360__delegate.call(this,x,y,more);};
G__12360.cljs$lang$maxFixedArity = 2;
G__12360.cljs$lang$applyTo = (function (arglist__12362){
var x = cljs.core.first(arglist__12362);
arglist__12362 = cljs.core.next(arglist__12362);
var y = cljs.core.first(arglist__12362);
var more = cljs.core.rest(arglist__12362);
return G__12360__delegate(x,y,more);
});
G__12360.cljs$core$IFn$_invoke$arity$variadic = G__12360__delegate;
return G__12360;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__12363 = null;
if (arguments.length > 2) {
var G__12364__i = 0, G__12364__a = new Array(arguments.length -  2);
while (G__12364__i < G__12364__a.length) {G__12364__a[G__12364__i] = arguments[G__12364__i + 2]; ++G__12364__i;}
G__12363 = new cljs.core.IndexedSeq(G__12364__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__12365__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__12365 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12366__i = 0, G__12366__a = new Array(arguments.length -  2);
while (G__12366__i < G__12366__a.length) {G__12366__a[G__12366__i] = arguments[G__12366__i + 2]; ++G__12366__i;}
  more = new cljs.core.IndexedSeq(G__12366__a,0);
} 
return G__12365__delegate.call(this,x,y,more);};
G__12365.cljs$lang$maxFixedArity = 2;
G__12365.cljs$lang$applyTo = (function (arglist__12367){
var x = cljs.core.first(arglist__12367);
arglist__12367 = cljs.core.next(arglist__12367);
var y = cljs.core.first(arglist__12367);
var more = cljs.core.rest(arglist__12367);
return G__12365__delegate(x,y,more);
});
G__12365.cljs$core$IFn$_invoke$arity$variadic = G__12365__delegate;
return G__12365;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__12368 = null;
if (arguments.length > 2) {
var G__12369__i = 0, G__12369__a = new Array(arguments.length -  2);
while (G__12369__i < G__12369__a.length) {G__12369__a[G__12369__i] = arguments[G__12369__i + 2]; ++G__12369__i;}
G__12368 = new cljs.core.IndexedSeq(G__12369__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__12374__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12374 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12375__i = 0, G__12375__a = new Array(arguments.length -  2);
while (G__12375__i < G__12375__a.length) {G__12375__a[G__12375__i] = arguments[G__12375__i + 2]; ++G__12375__i;}
  more = new cljs.core.IndexedSeq(G__12375__a,0);
} 
return G__12374__delegate.call(this,x,y,more);};
G__12374.cljs$lang$maxFixedArity = 2;
G__12374.cljs$lang$applyTo = (function (arglist__12376){
var x = cljs.core.first(arglist__12376);
arglist__12376 = cljs.core.next(arglist__12376);
var y = cljs.core.first(arglist__12376);
var more = cljs.core.rest(arglist__12376);
return G__12374__delegate(x,y,more);
});
G__12374.cljs$core$IFn$_invoke$arity$variadic = G__12374__delegate;
return G__12374;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__12377 = null;
if (arguments.length > 2) {
var G__12378__i = 0, G__12378__a = new Array(arguments.length -  2);
while (G__12378__i < G__12378__a.length) {G__12378__a[G__12378__i] = arguments[G__12378__i + 2]; ++G__12378__i;}
G__12377 = new cljs.core.IndexedSeq(G__12378__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__12379__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__12379 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12380__i = 0, G__12380__a = new Array(arguments.length -  2);
while (G__12380__i < G__12380__a.length) {G__12380__a[G__12380__i] = arguments[G__12380__i + 2]; ++G__12380__i;}
  more = new cljs.core.IndexedSeq(G__12380__a,0);
} 
return G__12379__delegate.call(this,x,y,more);};
G__12379.cljs$lang$maxFixedArity = 2;
G__12379.cljs$lang$applyTo = (function (arglist__12381){
var x = cljs.core.first(arglist__12381);
arglist__12381 = cljs.core.next(arglist__12381);
var y = cljs.core.first(arglist__12381);
var more = cljs.core.rest(arglist__12381);
return G__12379__delegate(x,y,more);
});
G__12379.cljs$core$IFn$_invoke$arity$variadic = G__12379__delegate;
return G__12379;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__12382 = null;
if (arguments.length > 2) {
var G__12383__i = 0, G__12383__a = new Array(arguments.length -  2);
while (G__12383__i < G__12383__a.length) {G__12383__a[G__12383__i] = arguments[G__12383__i + 2]; ++G__12383__i;}
G__12382 = new cljs.core.IndexedSeq(G__12383__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12382);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__12384__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__12384 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12385__i = 0, G__12385__a = new Array(arguments.length -  2);
while (G__12385__i < G__12385__a.length) {G__12385__a[G__12385__i] = arguments[G__12385__i + 2]; ++G__12385__i;}
  more = new cljs.core.IndexedSeq(G__12385__a,0);
} 
return G__12384__delegate.call(this,x,y,more);};
G__12384.cljs$lang$maxFixedArity = 2;
G__12384.cljs$lang$applyTo = (function (arglist__12386){
var x = cljs.core.first(arglist__12386);
arglist__12386 = cljs.core.next(arglist__12386);
var y = cljs.core.first(arglist__12386);
var more = cljs.core.rest(arglist__12386);
return G__12384__delegate(x,y,more);
});
G__12384.cljs$core$IFn$_invoke$arity$variadic = G__12384__delegate;
return G__12384;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__12387 = null;
if (arguments.length > 2) {
var G__12388__i = 0, G__12388__a = new Array(arguments.length -  2);
while (G__12388__i < G__12388__a.length) {G__12388__a[G__12388__i] = arguments[G__12388__i + 2]; ++G__12388__i;}
G__12387 = new cljs.core.IndexedSeq(G__12388__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12387);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__12391 = x;
var G__12392 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12391,G__12392) : cljs.core.mod.call(null,G__12391,G__12392));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__12393__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__12393 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12394__i = 0, G__12394__a = new Array(arguments.length -  2);
while (G__12394__i < G__12394__a.length) {G__12394__a[G__12394__i] = arguments[G__12394__i + 2]; ++G__12394__i;}
  more = new cljs.core.IndexedSeq(G__12394__a,0);
} 
return G__12393__delegate.call(this,x,y,more);};
G__12393.cljs$lang$maxFixedArity = 2;
G__12393.cljs$lang$applyTo = (function (arglist__12395){
var x = cljs.core.first(arglist__12395);
arglist__12395 = cljs.core.next(arglist__12395);
var y = cljs.core.first(arglist__12395);
var more = cljs.core.rest(arglist__12395);
return G__12393__delegate(x,y,more);
});
G__12393.cljs$core$IFn$_invoke$arity$variadic = G__12393__delegate;
return G__12393;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__12396 = null;
if (arguments.length > 2) {
var G__12397__i = 0, G__12397__a = new Array(arguments.length -  2);
while (G__12397__i < G__12397__a.length) {G__12397__a[G__12397__i] = arguments[G__12397__i + 2]; ++G__12397__i;}
G__12396 = new cljs.core.IndexedSeq(G__12397__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__12398__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__12398 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12399__i = 0, G__12399__a = new Array(arguments.length -  2);
while (G__12399__i < G__12399__a.length) {G__12399__a[G__12399__i] = arguments[G__12399__i + 2]; ++G__12399__i;}
  more = new cljs.core.IndexedSeq(G__12399__a,0);
} 
return G__12398__delegate.call(this,x,y,more);};
G__12398.cljs$lang$maxFixedArity = 2;
G__12398.cljs$lang$applyTo = (function (arglist__12400){
var x = cljs.core.first(arglist__12400);
arglist__12400 = cljs.core.next(arglist__12400);
var y = cljs.core.first(arglist__12400);
var more = cljs.core.rest(arglist__12400);
return G__12398__delegate(x,y,more);
});
G__12398.cljs$core$IFn$_invoke$arity$variadic = G__12398__delegate;
return G__12398;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__12401 = null;
if (arguments.length > 2) {
var G__12402__i = 0, G__12402__a = new Array(arguments.length -  2);
while (G__12402__i < G__12402__a.length) {G__12402__a[G__12402__i] = arguments[G__12402__i + 2]; ++G__12402__i;}
G__12401 = new cljs.core.IndexedSeq(G__12402__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__12405 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12405) : Math.floor.call(null,G__12405));
} else {
var G__12406 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12406) : Math.ceil.call(null,G__12406));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__12411__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12412 = y;
var G__12413 = cljs.core.first(more);
var G__12414 = cljs.core.next(more);
x = G__12412;
y = G__12413;
more = G__12414;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12411 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12415__i = 0, G__12415__a = new Array(arguments.length -  2);
while (G__12415__i < G__12415__a.length) {G__12415__a[G__12415__i] = arguments[G__12415__i + 2]; ++G__12415__i;}
  more = new cljs.core.IndexedSeq(G__12415__a,0);
} 
return G__12411__delegate.call(this,x,y,more);};
G__12411.cljs$lang$maxFixedArity = 2;
G__12411.cljs$lang$applyTo = (function (arglist__12416){
var x = cljs.core.first(arglist__12416);
arglist__12416 = cljs.core.next(arglist__12416);
var y = cljs.core.first(arglist__12416);
var more = cljs.core.rest(arglist__12416);
return G__12411__delegate(x,y,more);
});
G__12411.cljs$core$IFn$_invoke$arity$variadic = G__12411__delegate;
return G__12411;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__12417 = null;
if (arguments.length > 2) {
var G__12418__i = 0, G__12418__a = new Array(arguments.length -  2);
while (G__12418__i < G__12418__a.length) {G__12418__a[G__12418__i] = arguments[G__12418__i + 2]; ++G__12418__i;}
G__12417 = new cljs.core.IndexedSeq(G__12418__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__12419 = (n__$1 - (1));
var G__12420 = cljs.core.next(xs);
n__$1 = G__12419;
xs = G__12420;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__12424 = x;
return goog.string.buildString(G__12424);
}
});
var str__2 = (function() { 
var G__12425__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__12426 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__12427 = cljs.core.next(more);
sb = G__12426;
more = G__12427;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__12425 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__12428__i = 0, G__12428__a = new Array(arguments.length -  1);
while (G__12428__i < G__12428__a.length) {G__12428__a[G__12428__i] = arguments[G__12428__i + 1]; ++G__12428__i;}
  ys = new cljs.core.IndexedSeq(G__12428__a,0);
} 
return G__12425__delegate.call(this,x,ys);};
G__12425.cljs$lang$maxFixedArity = 1;
G__12425.cljs$lang$applyTo = (function (arglist__12429){
var x = cljs.core.first(arglist__12429);
var ys = cljs.core.rest(arglist__12429);
return G__12425__delegate(x,ys);
});
G__12425.cljs$core$IFn$_invoke$arity$variadic = G__12425__delegate;
return G__12425;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__12430 = null;
if (arguments.length > 1) {
var G__12431__i = 0, G__12431__a = new Array(arguments.length -  1);
while (G__12431__i < G__12431__a.length) {G__12431__a[G__12431__i] = arguments[G__12431__i + 1]; ++G__12431__i;}
G__12430 = new cljs.core.IndexedSeq(G__12431__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12430);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12432 = cljs.core.next(xs);
var G__12433 = cljs.core.next(ys);
xs = G__12432;
ys = G__12433;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12434 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12435 = cljs.core.next(s);
res = G__12434;
s = G__12435;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12440 = ((h + (cljs.core.hash((function (){var G__12438 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12438) : cljs.core.key.call(null,G__12438));
})()) ^ cljs.core.hash((function (){var G__12439 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12439) : cljs.core.val.call(null,G__12439));
})()))) % (4503599627370496));
var G__12441 = cljs.core.next(s);
h = G__12440;
s = G__12441;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12442 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12443 = cljs.core.next(s__$1);
h = G__12442;
s__$1 = G__12443;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12454_12464 = cljs.core.seq(fn_map);
var chunk__12455_12465 = null;
var count__12456_12466 = (0);
var i__12457_12467 = (0);
while(true){
if((i__12457_12467 < count__12456_12466)){
var vec__12458_12468 = chunk__12455_12465.cljs$core$IIndexed$_nth$arity$2(null,i__12457_12467);
var key_name_12469 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12458_12468,(0),null);
var f_12470 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12458_12468,(1),null);
var str_name_12471 = (function (){var G__12459 = key_name_12469;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12459) : cljs.core.name.call(null,G__12459));
})();
(obj[str_name_12471] = f_12470);

var G__12472 = seq__12454_12464;
var G__12473 = chunk__12455_12465;
var G__12474 = count__12456_12466;
var G__12475 = (i__12457_12467 + (1));
seq__12454_12464 = G__12472;
chunk__12455_12465 = G__12473;
count__12456_12466 = G__12474;
i__12457_12467 = G__12475;
continue;
} else {
var temp__4126__auto___12476 = cljs.core.seq(seq__12454_12464);
if(temp__4126__auto___12476){
var seq__12454_12477__$1 = temp__4126__auto___12476;
if(cljs.core.chunked_seq_QMARK_(seq__12454_12477__$1)){
var c__4586__auto___12478 = (function (){var G__12460 = seq__12454_12477__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12460) : cljs.core.chunk_first.call(null,G__12460));
})();
var G__12479 = (function (){var G__12461 = seq__12454_12477__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12461) : cljs.core.chunk_rest.call(null,G__12461));
})();
var G__12480 = c__4586__auto___12478;
var G__12481 = cljs.core.count(c__4586__auto___12478);
var G__12482 = (0);
seq__12454_12464 = G__12479;
chunk__12455_12465 = G__12480;
count__12456_12466 = G__12481;
i__12457_12467 = G__12482;
continue;
} else {
var vec__12462_12483 = cljs.core.first(seq__12454_12477__$1);
var key_name_12484 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12462_12483,(0),null);
var f_12485 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12462_12483,(1),null);
var str_name_12486 = (function (){var G__12463 = key_name_12484;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12463) : cljs.core.name.call(null,G__12463));
})();
(obj[str_name_12486] = f_12485);

var G__12487 = cljs.core.next(seq__12454_12477__$1);
var G__12488 = null;
var G__12489 = (0);
var G__12490 = (0);
seq__12454_12464 = G__12487;
chunk__12455_12465 = G__12488;
count__12456_12466 = G__12489;
i__12457_12467 = G__12490;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12492 = coll;
if(G__12492){
var bit__4480__auto__ = (G__12492.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4480__auto__) || (G__12492.cljs$core$IReversible$)){
return true;
} else {
if((!G__12492.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12492);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12492);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12493 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12493;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12494 = (i - (1));
var G__12495 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12494;
r = G__12495;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12496__i = 0, G__12496__a = new Array(arguments.length -  0);
while (G__12496__i < G__12496__a.length) {G__12496__a[G__12496__i] = arguments[G__12496__i + 0]; ++G__12496__i;}
  xs = new cljs.core.IndexedSeq(G__12496__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12497){
var xs = cljs.core.seq(arglist__12497);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3799__auto__ = (coll == null);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var G__12501 = coll;
if(G__12501){
var bit__4473__auto__ = (G__12501.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4473__auto__) || (G__12501.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12503 = x;
if(G__12503){
var bit__4480__auto__ = (G__12503.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4480__auto__) || (G__12503.cljs$core$IList$)){
return true;
} else {
if((!G__12503.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12503);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3787__auto__ = cljs.core.not(a.ns);
if(and__3787__auto__){
return b.ns;
} else {
return and__3787__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12510 = a.ns;
var G__12511 = b.ns;
return goog.array.defaultCompare(G__12510,G__12511);
})();
if(((0) === nsc)){
var G__12512 = a.name;
var G__12513 = b.name;
return goog.array.defaultCompare(G__12512,G__12513);
} else {
return nsc;
}
}
} else {
var G__12514 = a.name;
var G__12515 = b.name;
return goog.array.defaultCompare(G__12514,G__12515);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4220__auto__ = self__._hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12517 = null;
var G__12517__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12517__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12517 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12517__2.call(this,self__,coll);
case 3:
return G__12517__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12517.cljs$core$IFn$_invoke$arity$2 = G__12517__2;
G__12517.cljs$core$IFn$_invoke$arity$3 = G__12517__3;
return G__12517;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12516){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12516)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__12519 = x;
if(G__12519){
var bit__4473__auto__ = (G__12519.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4473__auto__) || (G__12519.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12521 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12521) : cljs.core.name.call(null,G__12521));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12522 = ls.sval();
ls = G__12522;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12524 = s;
if(G__12524){
var bit__4473__auto__ = (G__12524.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4473__auto__) || (G__12524.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12525 = cljs.core.next(s__$1);
s__$1 = G__12525;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12526 = (0);
var xs_12527 = cljs.core.seq(coll);
while(true){
if(xs_12527){
(ret[i_12526] = cljs.core.to_array(cljs.core.first(xs_12527)));

var G__12528 = (i_12526 + (1));
var G__12529 = cljs.core.next(xs_12527);
i_12526 = G__12528;
xs_12527 = G__12529;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12532 = (i + (1));
var G__12533 = cljs.core.next(s__$1);
i = G__12532;
s__$1 = G__12533;
continue;
} else {
return a;
}
break;
}
} else {
var n__4686__auto___12534 = size;
var i_12535 = (0);
while(true){
if((i_12535 < n__4686__auto___12534)){
(a[i_12535] = init_val_or_seq);

var G__12536 = (i_12535 + (1));
i_12535 = G__12536;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12539 = (i + (1));
var G__12540 = cljs.core.next(s__$1);
i = G__12539;
s__$1 = G__12540;
continue;
} else {
return a;
}
break;
}
} else {
var n__4686__auto___12541 = size;
var i_12542 = (0);
while(true){
if((i_12542 < n__4686__auto___12541)){
(a[i_12542] = init_val_or_seq);

var G__12543 = (i_12542 + (1));
i_12542 = G__12543;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12546 = (i + (1));
var G__12547 = cljs.core.next(s__$1);
i = G__12546;
s__$1 = G__12547;
continue;
} else {
return a;
}
break;
}
} else {
var n__4686__auto___12548 = size;
var i_12549 = (0);
while(true){
if((i_12549 < n__4686__auto___12548)){
(a[i_12549] = init_val_or_seq);

var G__12550 = (i_12549 + (1));
i_12549 = G__12550;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12553 = (i + (1));
var G__12554 = cljs.core.next(s__$1);
i = G__12553;
s__$1 = G__12554;
continue;
} else {
return a;
}
break;
}
} else {
var n__4686__auto___12555 = size;
var i_12556 = (0);
while(true){
if((i_12556 < n__4686__auto___12555)){
(a[i_12556] = init_val_or_seq);

var G__12557 = (i_12556 + (1));
i_12556 = G__12557;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__12558 = cljs.core.next(s__$1);
var G__12559 = (i - (1));
var G__12560 = (sum + (1));
s__$1 = G__12558;
i = G__12559;
sum = G__12560;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__12580__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__12580 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12581__i = 0, G__12581__a = new Array(arguments.length -  2);
while (G__12581__i < G__12581__a.length) {G__12581__a[G__12581__i] = arguments[G__12581__i + 2]; ++G__12581__i;}
  zs = new cljs.core.IndexedSeq(G__12581__a,0);
} 
return G__12580__delegate.call(this,x,y,zs);};
G__12580.cljs$lang$maxFixedArity = 2;
G__12580.cljs$lang$applyTo = (function (arglist__12582){
var x = cljs.core.first(arglist__12582);
arglist__12582 = cljs.core.next(arglist__12582);
var y = cljs.core.first(arglist__12582);
var zs = cljs.core.rest(arglist__12582);
return G__12580__delegate(x,y,zs);
});
G__12580.cljs$core$IFn$_invoke$arity$variadic = G__12580__delegate;
return G__12580;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__12583 = null;
if (arguments.length > 2) {
var G__12584__i = 0, G__12584__a = new Array(arguments.length -  2);
while (G__12584__i < G__12584__a.length) {G__12584__a[G__12584__i] = arguments[G__12584__i + 2]; ++G__12584__i;}
G__12583 = new cljs.core.IndexedSeq(G__12584__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__12585__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__12585 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__12586__i = 0, G__12586__a = new Array(arguments.length -  4);
while (G__12586__i < G__12586__a.length) {G__12586__a[G__12586__i] = arguments[G__12586__i + 4]; ++G__12586__i;}
  more = new cljs.core.IndexedSeq(G__12586__a,0);
} 
return G__12585__delegate.call(this,a,b,c,d,more);};
G__12585.cljs$lang$maxFixedArity = 4;
G__12585.cljs$lang$applyTo = (function (arglist__12587){
var a = cljs.core.first(arglist__12587);
arglist__12587 = cljs.core.next(arglist__12587);
var b = cljs.core.first(arglist__12587);
arglist__12587 = cljs.core.next(arglist__12587);
var c = cljs.core.first(arglist__12587);
arglist__12587 = cljs.core.next(arglist__12587);
var d = cljs.core.first(arglist__12587);
var more = cljs.core.rest(arglist__12587);
return G__12585__delegate(a,b,c,d,more);
});
G__12585.cljs$core$IFn$_invoke$arity$variadic = G__12585__delegate;
return G__12585;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__12588 = null;
if (arguments.length > 4) {
var G__12589__i = 0, G__12589__a = new Array(arguments.length -  4);
while (G__12589__i < G__12589__a.length) {G__12589__a[G__12589__i] = arguments[G__12589__i + 4]; ++G__12589__i;}
G__12588 = new cljs.core.IndexedSeq(G__12589__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__12588);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__12590__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12591 = ntcoll;
var G__12592 = cljs.core.first(vals);
var G__12593 = cljs.core.next(vals);
tcoll = G__12591;
val = G__12592;
vals = G__12593;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12590 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12594__i = 0, G__12594__a = new Array(arguments.length -  2);
while (G__12594__i < G__12594__a.length) {G__12594__a[G__12594__i] = arguments[G__12594__i + 2]; ++G__12594__i;}
  vals = new cljs.core.IndexedSeq(G__12594__a,0);
} 
return G__12590__delegate.call(this,tcoll,val,vals);};
G__12590.cljs$lang$maxFixedArity = 2;
G__12590.cljs$lang$applyTo = (function (arglist__12595){
var tcoll = cljs.core.first(arglist__12595);
arglist__12595 = cljs.core.next(arglist__12595);
var val = cljs.core.first(arglist__12595);
var vals = cljs.core.rest(arglist__12595);
return G__12590__delegate(tcoll,val,vals);
});
G__12590.cljs$core$IFn$_invoke$arity$variadic = G__12590__delegate;
return G__12590;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__12596 = null;
if (arguments.length > 2) {
var G__12597__i = 0, G__12597__a = new Array(arguments.length -  2);
while (G__12597__i < G__12597__a.length) {G__12597__a[G__12597__i] = arguments[G__12597__i + 2]; ++G__12597__i;}
G__12596 = new cljs.core.IndexedSeq(G__12597__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__12598__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__12599 = ntcoll;
var G__12600 = cljs.core.first(kvs);
var G__12601 = cljs.core.second(kvs);
var G__12602 = cljs.core.nnext(kvs);
tcoll = G__12599;
key = G__12600;
val = G__12601;
kvs = G__12602;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12598 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12603__i = 0, G__12603__a = new Array(arguments.length -  3);
while (G__12603__i < G__12603__a.length) {G__12603__a[G__12603__i] = arguments[G__12603__i + 3]; ++G__12603__i;}
  kvs = new cljs.core.IndexedSeq(G__12603__a,0);
} 
return G__12598__delegate.call(this,tcoll,key,val,kvs);};
G__12598.cljs$lang$maxFixedArity = 3;
G__12598.cljs$lang$applyTo = (function (arglist__12604){
var tcoll = cljs.core.first(arglist__12604);
arglist__12604 = cljs.core.next(arglist__12604);
var key = cljs.core.first(arglist__12604);
arglist__12604 = cljs.core.next(arglist__12604);
var val = cljs.core.first(arglist__12604);
var kvs = cljs.core.rest(arglist__12604);
return G__12598__delegate(tcoll,key,val,kvs);
});
G__12598.cljs$core$IFn$_invoke$arity$variadic = G__12598__delegate;
return G__12598;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__12605 = null;
if (arguments.length > 3) {
var G__12606__i = 0, G__12606__a = new Array(arguments.length -  3);
while (G__12606__i < G__12606__a.length) {G__12606__a[G__12606__i] = arguments[G__12606__i + 3]; ++G__12606__i;}
G__12605 = new cljs.core.IndexedSeq(G__12606__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__12605);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__12607__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__12608 = ntcoll;
var G__12609 = cljs.core.first(ks);
var G__12610 = cljs.core.next(ks);
tcoll = G__12608;
key = G__12609;
ks = G__12610;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12607 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12611__i = 0, G__12611__a = new Array(arguments.length -  2);
while (G__12611__i < G__12611__a.length) {G__12611__a[G__12611__i] = arguments[G__12611__i + 2]; ++G__12611__i;}
  ks = new cljs.core.IndexedSeq(G__12611__a,0);
} 
return G__12607__delegate.call(this,tcoll,key,ks);};
G__12607.cljs$lang$maxFixedArity = 2;
G__12607.cljs$lang$applyTo = (function (arglist__12612){
var tcoll = cljs.core.first(arglist__12612);
arglist__12612 = cljs.core.next(arglist__12612);
var key = cljs.core.first(arglist__12612);
var ks = cljs.core.rest(arglist__12612);
return G__12607__delegate(tcoll,key,ks);
});
G__12607.cljs$core$IFn$_invoke$arity$variadic = G__12607__delegate;
return G__12607;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__12613 = null;
if (arguments.length > 2) {
var G__12614__i = 0, G__12614__a = new Array(arguments.length -  2);
while (G__12614__i < G__12614__a.length) {G__12614__a[G__12614__i] = arguments[G__12614__i + 2]; ++G__12614__i;}
G__12613 = new cljs.core.IndexedSeq(G__12614__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__12613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__12615__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12616 = ntcoll;
var G__12617 = cljs.core.first(vals);
var G__12618 = cljs.core.next(vals);
tcoll = G__12616;
val = G__12617;
vals = G__12618;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12615 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12619__i = 0, G__12619__a = new Array(arguments.length -  2);
while (G__12619__i < G__12619__a.length) {G__12619__a[G__12619__i] = arguments[G__12619__i + 2]; ++G__12619__i;}
  vals = new cljs.core.IndexedSeq(G__12619__a,0);
} 
return G__12615__delegate.call(this,tcoll,val,vals);};
G__12615.cljs$lang$maxFixedArity = 2;
G__12615.cljs$lang$applyTo = (function (arglist__12620){
var tcoll = cljs.core.first(arglist__12620);
arglist__12620 = cljs.core.next(arglist__12620);
var val = cljs.core.first(arglist__12620);
var vals = cljs.core.rest(arglist__12620);
return G__12615__delegate(tcoll,val,vals);
});
G__12615.cljs$core$IFn$_invoke$arity$variadic = G__12615__delegate;
return G__12615;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__12621 = null;
if (arguments.length > 2) {
var G__12622__i = 0, G__12622__a = new Array(arguments.length -  2);
while (G__12622__i < G__12622__a.length) {G__12622__a[G__12622__i] = arguments[G__12622__i + 2]; ++G__12622__i;}
G__12621 = new cljs.core.IndexedSeq(G__12622__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12621);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4730 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4730);
} else {
var G__12833 = a4730;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12833) : f.call(null,G__12833));
}
} else {
var b4731 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4730,b4731);
} else {
var G__12834 = a4730;
var G__12835 = b4731;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12834,G__12835) : f.call(null,G__12834,G__12835));
}
} else {
var c4732 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4730,b4731,c4732);
} else {
var G__12836 = a4730;
var G__12837 = b4731;
var G__12838 = c4732;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12836,G__12837,G__12838) : f.call(null,G__12836,G__12837,G__12838));
}
} else {
var d4733 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4730,b4731,c4732,d4733);
} else {
var G__12839 = a4730;
var G__12840 = b4731;
var G__12841 = c4732;
var G__12842 = d4733;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12839,G__12840,G__12841,G__12842) : f.call(null,G__12839,G__12840,G__12841,G__12842));
}
} else {
var e4734 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4730,b4731,c4732,d4733,e4734);
} else {
var G__12843 = a4730;
var G__12844 = b4731;
var G__12845 = c4732;
var G__12846 = d4733;
var G__12847 = e4734;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12843,G__12844,G__12845,G__12846,G__12847) : f.call(null,G__12843,G__12844,G__12845,G__12846,G__12847));
}
} else {
var f4735 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4730,b4731,c4732,d4733,e4734,f4735);
} else {
var G__12848 = a4730;
var G__12849 = b4731;
var G__12850 = c4732;
var G__12851 = d4733;
var G__12852 = e4734;
var G__12853 = f4735;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12848,G__12849,G__12850,G__12851,G__12852,G__12853) : f.call(null,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853));
}
} else {
var g4736 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4730,b4731,c4732,d4733,e4734,f4735,g4736);
} else {
var G__12854 = a4730;
var G__12855 = b4731;
var G__12856 = c4732;
var G__12857 = d4733;
var G__12858 = e4734;
var G__12859 = f4735;
var G__12860 = g4736;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860) : f.call(null,G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860));
}
} else {
var h4737 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737);
} else {
var G__12861 = a4730;
var G__12862 = b4731;
var G__12863 = c4732;
var G__12864 = d4733;
var G__12865 = e4734;
var G__12866 = f4735;
var G__12867 = g4736;
var G__12868 = h4737;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868) : f.call(null,G__12861,G__12862,G__12863,G__12864,G__12865,G__12866,G__12867,G__12868));
}
} else {
var i4738 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738);
} else {
var G__12869 = a4730;
var G__12870 = b4731;
var G__12871 = c4732;
var G__12872 = d4733;
var G__12873 = e4734;
var G__12874 = f4735;
var G__12875 = g4736;
var G__12876 = h4737;
var G__12877 = i4738;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877) : f.call(null,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876,G__12877));
}
} else {
var j4739 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739);
} else {
var G__12878 = a4730;
var G__12879 = b4731;
var G__12880 = c4732;
var G__12881 = d4733;
var G__12882 = e4734;
var G__12883 = f4735;
var G__12884 = g4736;
var G__12885 = h4737;
var G__12886 = i4738;
var G__12887 = j4739;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887) : f.call(null,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887));
}
} else {
var k4740 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740);
} else {
var G__12888 = a4730;
var G__12889 = b4731;
var G__12890 = c4732;
var G__12891 = d4733;
var G__12892 = e4734;
var G__12893 = f4735;
var G__12894 = g4736;
var G__12895 = h4737;
var G__12896 = i4738;
var G__12897 = j4739;
var G__12898 = k4740;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__12888,G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898) : f.call(null,G__12888,G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898));
}
} else {
var l4741 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741);
} else {
var G__12899 = a4730;
var G__12900 = b4731;
var G__12901 = c4732;
var G__12902 = d4733;
var G__12903 = e4734;
var G__12904 = f4735;
var G__12905 = g4736;
var G__12906 = h4737;
var G__12907 = i4738;
var G__12908 = j4739;
var G__12909 = k4740;
var G__12910 = l4741;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910) : f.call(null,G__12899,G__12900,G__12901,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910));
}
} else {
var m4742 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742);
} else {
var G__12911 = a4730;
var G__12912 = b4731;
var G__12913 = c4732;
var G__12914 = d4733;
var G__12915 = e4734;
var G__12916 = f4735;
var G__12917 = g4736;
var G__12918 = h4737;
var G__12919 = i4738;
var G__12920 = j4739;
var G__12921 = k4740;
var G__12922 = l4741;
var G__12923 = m4742;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923) : f.call(null,G__12911,G__12912,G__12913,G__12914,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923));
}
} else {
var n4743 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742,n4743);
} else {
var G__12924 = a4730;
var G__12925 = b4731;
var G__12926 = c4732;
var G__12927 = d4733;
var G__12928 = e4734;
var G__12929 = f4735;
var G__12930 = g4736;
var G__12931 = h4737;
var G__12932 = i4738;
var G__12933 = j4739;
var G__12934 = k4740;
var G__12935 = l4741;
var G__12936 = m4742;
var G__12937 = n4743;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937) : f.call(null,G__12924,G__12925,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937));
}
} else {
var o4744 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742,n4743,o4744);
} else {
var G__12938 = a4730;
var G__12939 = b4731;
var G__12940 = c4732;
var G__12941 = d4733;
var G__12942 = e4734;
var G__12943 = f4735;
var G__12944 = g4736;
var G__12945 = h4737;
var G__12946 = i4738;
var G__12947 = j4739;
var G__12948 = k4740;
var G__12949 = l4741;
var G__12950 = m4742;
var G__12951 = n4743;
var G__12952 = o4744;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952) : f.call(null,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952));
}
} else {
var p4745 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742,n4743,o4744,p4745);
} else {
var G__12953 = a4730;
var G__12954 = b4731;
var G__12955 = c4732;
var G__12956 = d4733;
var G__12957 = e4734;
var G__12958 = f4735;
var G__12959 = g4736;
var G__12960 = h4737;
var G__12961 = i4738;
var G__12962 = j4739;
var G__12963 = k4740;
var G__12964 = l4741;
var G__12965 = m4742;
var G__12966 = n4743;
var G__12967 = o4744;
var G__12968 = p4745;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968) : f.call(null,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968));
}
} else {
var q4746 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742,n4743,o4744,p4745,q4746);
} else {
var G__12969 = a4730;
var G__12970 = b4731;
var G__12971 = c4732;
var G__12972 = d4733;
var G__12973 = e4734;
var G__12974 = f4735;
var G__12975 = g4736;
var G__12976 = h4737;
var G__12977 = i4738;
var G__12978 = j4739;
var G__12979 = k4740;
var G__12980 = l4741;
var G__12981 = m4742;
var G__12982 = n4743;
var G__12983 = o4744;
var G__12984 = p4745;
var G__12985 = q4746;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985) : f.call(null,G__12969,G__12970,G__12971,G__12972,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985));
}
} else {
var r4747 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742,n4743,o4744,p4745,q4746,r4747);
} else {
var G__12986 = a4730;
var G__12987 = b4731;
var G__12988 = c4732;
var G__12989 = d4733;
var G__12990 = e4734;
var G__12991 = f4735;
var G__12992 = g4736;
var G__12993 = h4737;
var G__12994 = i4738;
var G__12995 = j4739;
var G__12996 = k4740;
var G__12997 = l4741;
var G__12998 = m4742;
var G__12999 = n4743;
var G__13000 = o4744;
var G__13001 = p4745;
var G__13002 = q4746;
var G__13003 = r4747;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003) : f.call(null,G__12986,G__12987,G__12988,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003));
}
} else {
var s4748 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742,n4743,o4744,p4745,q4746,r4747,s4748);
} else {
var G__13004 = a4730;
var G__13005 = b4731;
var G__13006 = c4732;
var G__13007 = d4733;
var G__13008 = e4734;
var G__13009 = f4735;
var G__13010 = g4736;
var G__13011 = h4737;
var G__13012 = i4738;
var G__13013 = j4739;
var G__13014 = k4740;
var G__13015 = l4741;
var G__13016 = m4742;
var G__13017 = n4743;
var G__13018 = o4744;
var G__13019 = p4745;
var G__13020 = q4746;
var G__13021 = r4747;
var G__13022 = s4748;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022) : f.call(null,G__13004,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021,G__13022));
}
} else {
var t4749 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4730,b4731,c4732,d4733,e4734,f4735,g4736,h4737,i4738,j4739,k4740,l4741,m4742,n4743,o4744,p4745,q4746,r4747,s4748,t4749);
} else {
var G__13023 = a4730;
var G__13024 = b4731;
var G__13025 = c4732;
var G__13026 = d4733;
var G__13027 = e4734;
var G__13028 = f4735;
var G__13029 = g4736;
var G__13030 = h4737;
var G__13031 = i4738;
var G__13032 = j4739;
var G__13033 = k4740;
var G__13034 = l4741;
var G__13035 = m4742;
var G__13036 = n4743;
var G__13037 = o4744;
var G__13038 = p4745;
var G__13039 = q4746;
var G__13040 = r4747;
var G__13041 = s4748;
var G__13042 = t4749;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042) : f.call(null,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038,G__13039,G__13040,G__13041,G__13042));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13043__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13043 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13044__i = 0, G__13044__a = new Array(arguments.length -  5);
while (G__13044__i < G__13044__a.length) {G__13044__a[G__13044__i] = arguments[G__13044__i + 5]; ++G__13044__i;}
  args = new cljs.core.IndexedSeq(G__13044__a,0);
} 
return G__13043__delegate.call(this,f,a,b,c,d,args);};
G__13043.cljs$lang$maxFixedArity = 5;
G__13043.cljs$lang$applyTo = (function (arglist__13045){
var f = cljs.core.first(arglist__13045);
arglist__13045 = cljs.core.next(arglist__13045);
var a = cljs.core.first(arglist__13045);
arglist__13045 = cljs.core.next(arglist__13045);
var b = cljs.core.first(arglist__13045);
arglist__13045 = cljs.core.next(arglist__13045);
var c = cljs.core.first(arglist__13045);
arglist__13045 = cljs.core.next(arglist__13045);
var d = cljs.core.first(arglist__13045);
var args = cljs.core.rest(arglist__13045);
return G__13043__delegate(f,a,b,c,d,args);
});
G__13043.cljs$core$IFn$_invoke$arity$variadic = G__13043__delegate;
return G__13043;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13046 = null;
if (arguments.length > 5) {
var G__13047__i = 0, G__13047__a = new Array(arguments.length -  5);
while (G__13047__i < G__13047__a.length) {G__13047__a[G__13047__i] = arguments[G__13047__i + 5]; ++G__13047__i;}
G__13046 = new cljs.core.IndexedSeq(G__13047__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13063 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13063) : f.call(null,G__13063));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13064 = cljs.core.meta(obj);
var G__13065 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13064,G__13065) : f.call(null,G__13064,G__13065));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__13066 = cljs.core.meta(obj);
var G__13067 = a;
var G__13068 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13066,G__13067,G__13068) : f.call(null,G__13066,G__13067,G__13068));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__13069 = cljs.core.meta(obj);
var G__13070 = a;
var G__13071 = b;
var G__13072 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13069,G__13070,G__13071,G__13072) : f.call(null,G__13069,G__13070,G__13071,G__13072));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__13073 = cljs.core.meta(obj);
var G__13074 = a;
var G__13075 = b;
var G__13076 = c;
var G__13077 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13073,G__13074,G__13075,G__13076,G__13077) : f.call(null,G__13073,G__13074,G__13075,G__13076,G__13077));
})());
});
var vary_meta__7 = (function() { 
var G__13078__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__13078 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__13079__i = 0, G__13079__a = new Array(arguments.length -  6);
while (G__13079__i < G__13079__a.length) {G__13079__a[G__13079__i] = arguments[G__13079__i + 6]; ++G__13079__i;}
  args = new cljs.core.IndexedSeq(G__13079__a,0);
} 
return G__13078__delegate.call(this,obj,f,a,b,c,d,args);};
G__13078.cljs$lang$maxFixedArity = 6;
G__13078.cljs$lang$applyTo = (function (arglist__13080){
var obj = cljs.core.first(arglist__13080);
arglist__13080 = cljs.core.next(arglist__13080);
var f = cljs.core.first(arglist__13080);
arglist__13080 = cljs.core.next(arglist__13080);
var a = cljs.core.first(arglist__13080);
arglist__13080 = cljs.core.next(arglist__13080);
var b = cljs.core.first(arglist__13080);
arglist__13080 = cljs.core.next(arglist__13080);
var c = cljs.core.first(arglist__13080);
arglist__13080 = cljs.core.next(arglist__13080);
var d = cljs.core.first(arglist__13080);
var args = cljs.core.rest(arglist__13080);
return G__13078__delegate(obj,f,a,b,c,d,args);
});
G__13078.cljs$core$IFn$_invoke$arity$variadic = G__13078__delegate;
return G__13078;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__13081 = null;
if (arguments.length > 6) {
var G__13082__i = 0, G__13082__a = new Array(arguments.length -  6);
while (G__13082__i < G__13082__a.length) {G__13082__a[G__13082__i] = arguments[G__13082__i + 6]; ++G__13082__i;}
G__13081 = new cljs.core.IndexedSeq(G__13082__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__13081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__13083__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__13083 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13084__i = 0, G__13084__a = new Array(arguments.length -  2);
while (G__13084__i < G__13084__a.length) {G__13084__a[G__13084__i] = arguments[G__13084__i + 2]; ++G__13084__i;}
  more = new cljs.core.IndexedSeq(G__13084__a,0);
} 
return G__13083__delegate.call(this,x,y,more);};
G__13083.cljs$lang$maxFixedArity = 2;
G__13083.cljs$lang$applyTo = (function (arglist__13085){
var x = cljs.core.first(arglist__13085);
arglist__13085 = cljs.core.next(arglist__13085);
var y = cljs.core.first(arglist__13085);
var more = cljs.core.rest(arglist__13085);
return G__13083__delegate(x,y,more);
});
G__13083.cljs$core$IFn$_invoke$arity$variadic = G__13083__delegate;
return G__13083;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__13086 = null;
if (arguments.length > 2) {
var G__13087__i = 0, G__13087__a = new Array(arguments.length -  2);
while (G__13087__i < G__13087__a.length) {G__13087__a[G__13087__i] = arguments[G__13087__i + 2]; ++G__13087__i;}
G__13086 = new cljs.core.IndexedSeq(G__13087__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t13091 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t13091 = (function (nil_iter,meta13092){
this.nil_iter = nil_iter;
this.meta13092 = meta13092;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t13091.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t13091.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t13091.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t13091.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_13093){
var self__ = this;
var _13093__$1 = this;
return self__.meta13092;
});

cljs.core.t13091.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_13093,meta13092__$1){
var self__ = this;
var _13093__$1 = this;
return (new cljs.core.t13091(self__.nil_iter,meta13092__$1));
});

cljs.core.t13091.cljs$lang$type = true;

cljs.core.t13091.cljs$lang$ctorStr = "cljs.core/t13091";

cljs.core.t13091.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/t13091");
});

cljs.core.__GT_t13091 = (function __GT_t13091(nil_iter__$1,meta13092){
return (new cljs.core.t13091(nil_iter__$1,meta13092));
});

}

return (new cljs.core.t13091(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/brpocock/Projects/censorius/censorius/www/js/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3787__auto__ = !((lt.stepper == null));
if(and__3787__auto__){
return self__.iter.hasNext();
} else {
return and__3787__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__13094 = lt;
var G__13095 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13094,G__13095) : self__.xform.call(null,G__13094,G__13095));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13096 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13096) : self__.xform.call(null,G__13096));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__13098 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13098) : xform.call(null,G__13098));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__13100 = cljs.core.next(iters__$1);
iters__$1 = G__13100;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4686__auto___13101 = self__.iters.length;
var i_13102 = (0);
while(true){
if((i_13102 < n__4686__auto___13101)){
(self__.nexts[i_13102] = (self__.iters[i_13102]).next());

var G__13103 = (i_13102 + (1));
i_13102 = G__13103;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3787__auto__ = !((lt.stepper == null));
if(and__3787__auto__){
return this$.hasNext();
} else {
return and__3787__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13099 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13099) : self__.xform.call(null,G__13099));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__13108 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13108) : xform.call(null,G__13108));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__13109_13113 = cljs.core.seq(colls);
var chunk__13110_13114 = null;
var count__13111_13115 = (0);
var i__13112_13116 = (0);
while(true){
if((i__13112_13116 < count__13111_13115)){
var coll_13117 = chunk__13110_13114.cljs$core$IIndexed$_nth$arity$2(null,i__13112_13116);
iters.push(cljs.core.iter(coll_13117));

var G__13118 = seq__13109_13113;
var G__13119 = chunk__13110_13114;
var G__13120 = count__13111_13115;
var G__13121 = (i__13112_13116 + (1));
seq__13109_13113 = G__13118;
chunk__13110_13114 = G__13119;
count__13111_13115 = G__13120;
i__13112_13116 = G__13121;
continue;
} else {
var temp__4126__auto___13122 = cljs.core.seq(seq__13109_13113);
if(temp__4126__auto___13122){
var seq__13109_13123__$1 = temp__4126__auto___13122;
if(cljs.core.chunked_seq_QMARK_(seq__13109_13123__$1)){
var c__4586__auto___13124 = cljs.core.chunk_first(seq__13109_13123__$1);
var G__13125 = cljs.core.chunk_rest(seq__13109_13123__$1);
var G__13126 = c__4586__auto___13124;
var G__13127 = cljs.core.count(c__4586__auto___13124);
var G__13128 = (0);
seq__13109_13113 = G__13125;
chunk__13110_13114 = G__13126;
count__13111_13115 = G__13127;
i__13112_13116 = G__13128;
continue;
} else {
var coll_13129 = cljs.core.first(seq__13109_13123__$1);
iters.push(cljs.core.iter(coll_13129));

var G__13130 = cljs.core.next(seq__13109_13123__$1);
var G__13131 = null;
var G__13132 = (0);
var G__13133 = (0);
seq__13109_13113 = G__13130;
chunk__13110_13114 = G__13131;
count__13111_13115 = G__13132;
i__13112_13116 = G__13133;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3799__auto__ = cljs.core.seq(coll);
if(or__3799__auto__){
return or__3799__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__13134__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__13134 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13135__i = 0, G__13135__a = new Array(arguments.length -  2);
while (G__13135__i < G__13135__a.length) {G__13135__a[G__13135__i] = arguments[G__13135__i + 2]; ++G__13135__i;}
  colls = new cljs.core.IndexedSeq(G__13135__a,0);
} 
return G__13134__delegate.call(this,xform,coll,colls);};
G__13134.cljs$lang$maxFixedArity = 2;
G__13134.cljs$lang$applyTo = (function (arglist__13136){
var xform = cljs.core.first(arglist__13136);
arglist__13136 = cljs.core.next(arglist__13136);
var coll = cljs.core.first(arglist__13136);
var colls = cljs.core.rest(arglist__13136);
return G__13134__delegate(xform,coll,colls);
});
G__13134.cljs$core$IFn$_invoke$arity$variadic = G__13134__delegate;
return G__13134;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__13137 = null;
if (arguments.length > 2) {
var G__13138__i = 0, G__13138__a = new Array(arguments.length -  2);
while (G__13138__i < G__13138__a.length) {G__13138__a[G__13138__i] = arguments[G__13138__i + 2]; ++G__13138__i;}
G__13137 = new cljs.core.IndexedSeq(G__13138__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__13137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__13140 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13140) : pred.call(null,G__13140));
})())){
var G__13141 = pred;
var G__13142 = cljs.core.next(coll);
pred = G__13141;
coll = G__13142;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3799__auto__ = (function (){var G__13146 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13146) : pred.call(null,G__13146));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var G__13147 = pred;
var G__13148 = cljs.core.next(coll);
pred = G__13147;
coll = G__13148;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__13155 = null;
var G__13155__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__13155__1 = (function (x){
return cljs.core.not((function (){var G__13152 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13152) : f.call(null,G__13152));
})());
});
var G__13155__2 = (function (x,y){
return cljs.core.not((function (){var G__13153 = x;
var G__13154 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13153,G__13154) : f.call(null,G__13153,G__13154));
})());
});
var G__13155__3 = (function() { 
var G__13156__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__13156 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13157__i = 0, G__13157__a = new Array(arguments.length -  2);
while (G__13157__i < G__13157__a.length) {G__13157__a[G__13157__i] = arguments[G__13157__i + 2]; ++G__13157__i;}
  zs = new cljs.core.IndexedSeq(G__13157__a,0);
} 
return G__13156__delegate.call(this,x,y,zs);};
G__13156.cljs$lang$maxFixedArity = 2;
G__13156.cljs$lang$applyTo = (function (arglist__13158){
var x = cljs.core.first(arglist__13158);
arglist__13158 = cljs.core.next(arglist__13158);
var y = cljs.core.first(arglist__13158);
var zs = cljs.core.rest(arglist__13158);
return G__13156__delegate(x,y,zs);
});
G__13156.cljs$core$IFn$_invoke$arity$variadic = G__13156__delegate;
return G__13156;
})()
;
G__13155 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__13155__0.call(this);
case 1:
return G__13155__1.call(this,x);
case 2:
return G__13155__2.call(this,x,y);
default:
var G__13159 = null;
if (arguments.length > 2) {
var G__13160__i = 0, G__13160__a = new Array(arguments.length -  2);
while (G__13160__i < G__13160__a.length) {G__13160__a[G__13160__i] = arguments[G__13160__i + 2]; ++G__13160__i;}
G__13159 = new cljs.core.IndexedSeq(G__13160__a,0);
}
return G__13155__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13159);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13155.cljs$lang$maxFixedArity = 2;
G__13155.cljs$lang$applyTo = G__13155__3.cljs$lang$applyTo;
G__13155.cljs$core$IFn$_invoke$arity$0 = G__13155__0;
G__13155.cljs$core$IFn$_invoke$arity$1 = G__13155__1;
G__13155.cljs$core$IFn$_invoke$arity$2 = G__13155__2;
G__13155.cljs$core$IFn$_invoke$arity$variadic = G__13155__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13155;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__13161__delegate = function (args){
return x;
};
var G__13161 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13162__i = 0, G__13162__a = new Array(arguments.length -  0);
while (G__13162__i < G__13162__a.length) {G__13162__a[G__13162__i] = arguments[G__13162__i + 0]; ++G__13162__i;}
  args = new cljs.core.IndexedSeq(G__13162__a,0);
} 
return G__13161__delegate.call(this,args);};
G__13161.cljs$lang$maxFixedArity = 0;
G__13161.cljs$lang$applyTo = (function (arglist__13163){
var args = cljs.core.seq(arglist__13163);
return G__13161__delegate(args);
});
G__13161.cljs$core$IFn$_invoke$arity$variadic = G__13161__delegate;
return G__13161;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__13218 = null;
var G__13218__0 = (function (){
var G__13191 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13191) : f.call(null,G__13191));
});
var G__13218__1 = (function (x){
var G__13192 = (function (){var G__13193 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13193) : g.call(null,G__13193));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13192) : f.call(null,G__13192));
});
var G__13218__2 = (function (x,y){
var G__13194 = (function (){var G__13195 = x;
var G__13196 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13195,G__13196) : g.call(null,G__13195,G__13196));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13194) : f.call(null,G__13194));
});
var G__13218__3 = (function (x,y,z){
var G__13197 = (function (){var G__13198 = x;
var G__13199 = y;
var G__13200 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13198,G__13199,G__13200) : g.call(null,G__13198,G__13199,G__13200));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13197) : f.call(null,G__13197));
});
var G__13218__4 = (function() { 
var G__13219__delegate = function (x,y,z,args){
var G__13201 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13201) : f.call(null,G__13201));
};
var G__13219 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13220__i = 0, G__13220__a = new Array(arguments.length -  3);
while (G__13220__i < G__13220__a.length) {G__13220__a[G__13220__i] = arguments[G__13220__i + 3]; ++G__13220__i;}
  args = new cljs.core.IndexedSeq(G__13220__a,0);
} 
return G__13219__delegate.call(this,x,y,z,args);};
G__13219.cljs$lang$maxFixedArity = 3;
G__13219.cljs$lang$applyTo = (function (arglist__13221){
var x = cljs.core.first(arglist__13221);
arglist__13221 = cljs.core.next(arglist__13221);
var y = cljs.core.first(arglist__13221);
arglist__13221 = cljs.core.next(arglist__13221);
var z = cljs.core.first(arglist__13221);
var args = cljs.core.rest(arglist__13221);
return G__13219__delegate(x,y,z,args);
});
G__13219.cljs$core$IFn$_invoke$arity$variadic = G__13219__delegate;
return G__13219;
})()
;
G__13218 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13218__0.call(this);
case 1:
return G__13218__1.call(this,x);
case 2:
return G__13218__2.call(this,x,y);
case 3:
return G__13218__3.call(this,x,y,z);
default:
var G__13222 = null;
if (arguments.length > 3) {
var G__13223__i = 0, G__13223__a = new Array(arguments.length -  3);
while (G__13223__i < G__13223__a.length) {G__13223__a[G__13223__i] = arguments[G__13223__i + 3]; ++G__13223__i;}
G__13222 = new cljs.core.IndexedSeq(G__13223__a,0);
}
return G__13218__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13218.cljs$lang$maxFixedArity = 3;
G__13218.cljs$lang$applyTo = G__13218__4.cljs$lang$applyTo;
G__13218.cljs$core$IFn$_invoke$arity$0 = G__13218__0;
G__13218.cljs$core$IFn$_invoke$arity$1 = G__13218__1;
G__13218.cljs$core$IFn$_invoke$arity$2 = G__13218__2;
G__13218.cljs$core$IFn$_invoke$arity$3 = G__13218__3;
G__13218.cljs$core$IFn$_invoke$arity$variadic = G__13218__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13218;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__13224 = null;
var G__13224__0 = (function (){
var G__13202 = (function (){var G__13203 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13203) : g.call(null,G__13203));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13202) : f.call(null,G__13202));
});
var G__13224__1 = (function (x){
var G__13204 = (function (){var G__13205 = (function (){var G__13206 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13206) : h.call(null,G__13206));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13205) : g.call(null,G__13205));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13204) : f.call(null,G__13204));
});
var G__13224__2 = (function (x,y){
var G__13207 = (function (){var G__13208 = (function (){var G__13209 = x;
var G__13210 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13209,G__13210) : h.call(null,G__13209,G__13210));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13208) : g.call(null,G__13208));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13207) : f.call(null,G__13207));
});
var G__13224__3 = (function (x,y,z){
var G__13211 = (function (){var G__13212 = (function (){var G__13213 = x;
var G__13214 = y;
var G__13215 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13213,G__13214,G__13215) : h.call(null,G__13213,G__13214,G__13215));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13212) : g.call(null,G__13212));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13211) : f.call(null,G__13211));
});
var G__13224__4 = (function() { 
var G__13225__delegate = function (x,y,z,args){
var G__13216 = (function (){var G__13217 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13217) : g.call(null,G__13217));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13216) : f.call(null,G__13216));
};
var G__13225 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13226__i = 0, G__13226__a = new Array(arguments.length -  3);
while (G__13226__i < G__13226__a.length) {G__13226__a[G__13226__i] = arguments[G__13226__i + 3]; ++G__13226__i;}
  args = new cljs.core.IndexedSeq(G__13226__a,0);
} 
return G__13225__delegate.call(this,x,y,z,args);};
G__13225.cljs$lang$maxFixedArity = 3;
G__13225.cljs$lang$applyTo = (function (arglist__13227){
var x = cljs.core.first(arglist__13227);
arglist__13227 = cljs.core.next(arglist__13227);
var y = cljs.core.first(arglist__13227);
arglist__13227 = cljs.core.next(arglist__13227);
var z = cljs.core.first(arglist__13227);
var args = cljs.core.rest(arglist__13227);
return G__13225__delegate(x,y,z,args);
});
G__13225.cljs$core$IFn$_invoke$arity$variadic = G__13225__delegate;
return G__13225;
})()
;
G__13224 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13224__0.call(this);
case 1:
return G__13224__1.call(this,x);
case 2:
return G__13224__2.call(this,x,y);
case 3:
return G__13224__3.call(this,x,y,z);
default:
var G__13228 = null;
if (arguments.length > 3) {
var G__13229__i = 0, G__13229__a = new Array(arguments.length -  3);
while (G__13229__i < G__13229__a.length) {G__13229__a[G__13229__i] = arguments[G__13229__i + 3]; ++G__13229__i;}
G__13228 = new cljs.core.IndexedSeq(G__13229__a,0);
}
return G__13224__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13224.cljs$lang$maxFixedArity = 3;
G__13224.cljs$lang$applyTo = G__13224__4.cljs$lang$applyTo;
G__13224.cljs$core$IFn$_invoke$arity$0 = G__13224__0;
G__13224.cljs$core$IFn$_invoke$arity$1 = G__13224__1;
G__13224.cljs$core$IFn$_invoke$arity$2 = G__13224__2;
G__13224.cljs$core$IFn$_invoke$arity$3 = G__13224__3;
G__13224.cljs$core$IFn$_invoke$arity$variadic = G__13224__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13224;
})()
});
var comp__4 = (function() { 
var G__13230__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__13231__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__13232 = cljs.core.first(fs__$2).call(null,ret);
var G__13233 = cljs.core.next(fs__$2);
ret = G__13232;
fs__$2 = G__13233;
continue;
} else {
return ret;
}
break;
}
};
var G__13231 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13234__i = 0, G__13234__a = new Array(arguments.length -  0);
while (G__13234__i < G__13234__a.length) {G__13234__a[G__13234__i] = arguments[G__13234__i + 0]; ++G__13234__i;}
  args = new cljs.core.IndexedSeq(G__13234__a,0);
} 
return G__13231__delegate.call(this,args);};
G__13231.cljs$lang$maxFixedArity = 0;
G__13231.cljs$lang$applyTo = (function (arglist__13235){
var args = cljs.core.seq(arglist__13235);
return G__13231__delegate(args);
});
G__13231.cljs$core$IFn$_invoke$arity$variadic = G__13231__delegate;
return G__13231;
})()
;
;})(fs__$1))
};
var G__13230 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__13236__i = 0, G__13236__a = new Array(arguments.length -  3);
while (G__13236__i < G__13236__a.length) {G__13236__a[G__13236__i] = arguments[G__13236__i + 3]; ++G__13236__i;}
  fs = new cljs.core.IndexedSeq(G__13236__a,0);
} 
return G__13230__delegate.call(this,f1,f2,f3,fs);};
G__13230.cljs$lang$maxFixedArity = 3;
G__13230.cljs$lang$applyTo = (function (arglist__13237){
var f1 = cljs.core.first(arglist__13237);
arglist__13237 = cljs.core.next(arglist__13237);
var f2 = cljs.core.first(arglist__13237);
arglist__13237 = cljs.core.next(arglist__13237);
var f3 = cljs.core.first(arglist__13237);
var fs = cljs.core.rest(arglist__13237);
return G__13230__delegate(f1,f2,f3,fs);
});
G__13230.cljs$core$IFn$_invoke$arity$variadic = G__13230__delegate;
return G__13230;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__13238 = null;
if (arguments.length > 3) {
var G__13239__i = 0, G__13239__a = new Array(arguments.length -  3);
while (G__13239__i < G__13239__a.length) {G__13239__a[G__13239__i] = arguments[G__13239__i + 3]; ++G__13239__i;}
G__13238 = new cljs.core.IndexedSeq(G__13239__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__13238);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__13324 = null;
var G__13324__0 = (function (){
var G__13282 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13282) : f.call(null,G__13282));
});
var G__13324__1 = (function (x){
var G__13283 = arg1;
var G__13284 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13283,G__13284) : f.call(null,G__13283,G__13284));
});
var G__13324__2 = (function (x,y){
var G__13285 = arg1;
var G__13286 = x;
var G__13287 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13285,G__13286,G__13287) : f.call(null,G__13285,G__13286,G__13287));
});
var G__13324__3 = (function (x,y,z){
var G__13288 = arg1;
var G__13289 = x;
var G__13290 = y;
var G__13291 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13288,G__13289,G__13290,G__13291) : f.call(null,G__13288,G__13289,G__13290,G__13291));
});
var G__13324__4 = (function() { 
var G__13325__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__13325 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13326__i = 0, G__13326__a = new Array(arguments.length -  3);
while (G__13326__i < G__13326__a.length) {G__13326__a[G__13326__i] = arguments[G__13326__i + 3]; ++G__13326__i;}
  args = new cljs.core.IndexedSeq(G__13326__a,0);
} 
return G__13325__delegate.call(this,x,y,z,args);};
G__13325.cljs$lang$maxFixedArity = 3;
G__13325.cljs$lang$applyTo = (function (arglist__13327){
var x = cljs.core.first(arglist__13327);
arglist__13327 = cljs.core.next(arglist__13327);
var y = cljs.core.first(arglist__13327);
arglist__13327 = cljs.core.next(arglist__13327);
var z = cljs.core.first(arglist__13327);
var args = cljs.core.rest(arglist__13327);
return G__13325__delegate(x,y,z,args);
});
G__13325.cljs$core$IFn$_invoke$arity$variadic = G__13325__delegate;
return G__13325;
})()
;
G__13324 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13324__0.call(this);
case 1:
return G__13324__1.call(this,x);
case 2:
return G__13324__2.call(this,x,y);
case 3:
return G__13324__3.call(this,x,y,z);
default:
var G__13328 = null;
if (arguments.length > 3) {
var G__13329__i = 0, G__13329__a = new Array(arguments.length -  3);
while (G__13329__i < G__13329__a.length) {G__13329__a[G__13329__i] = arguments[G__13329__i + 3]; ++G__13329__i;}
G__13328 = new cljs.core.IndexedSeq(G__13329__a,0);
}
return G__13324__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13328);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13324.cljs$lang$maxFixedArity = 3;
G__13324.cljs$lang$applyTo = G__13324__4.cljs$lang$applyTo;
G__13324.cljs$core$IFn$_invoke$arity$0 = G__13324__0;
G__13324.cljs$core$IFn$_invoke$arity$1 = G__13324__1;
G__13324.cljs$core$IFn$_invoke$arity$2 = G__13324__2;
G__13324.cljs$core$IFn$_invoke$arity$3 = G__13324__3;
G__13324.cljs$core$IFn$_invoke$arity$variadic = G__13324__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13324;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__13330 = null;
var G__13330__0 = (function (){
var G__13292 = arg1;
var G__13293 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13292,G__13293) : f.call(null,G__13292,G__13293));
});
var G__13330__1 = (function (x){
var G__13294 = arg1;
var G__13295 = arg2;
var G__13296 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13294,G__13295,G__13296) : f.call(null,G__13294,G__13295,G__13296));
});
var G__13330__2 = (function (x,y){
var G__13297 = arg1;
var G__13298 = arg2;
var G__13299 = x;
var G__13300 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13297,G__13298,G__13299,G__13300) : f.call(null,G__13297,G__13298,G__13299,G__13300));
});
var G__13330__3 = (function (x,y,z){
var G__13301 = arg1;
var G__13302 = arg2;
var G__13303 = x;
var G__13304 = y;
var G__13305 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13301,G__13302,G__13303,G__13304,G__13305) : f.call(null,G__13301,G__13302,G__13303,G__13304,G__13305));
});
var G__13330__4 = (function() { 
var G__13331__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__13331 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13332__i = 0, G__13332__a = new Array(arguments.length -  3);
while (G__13332__i < G__13332__a.length) {G__13332__a[G__13332__i] = arguments[G__13332__i + 3]; ++G__13332__i;}
  args = new cljs.core.IndexedSeq(G__13332__a,0);
} 
return G__13331__delegate.call(this,x,y,z,args);};
G__13331.cljs$lang$maxFixedArity = 3;
G__13331.cljs$lang$applyTo = (function (arglist__13333){
var x = cljs.core.first(arglist__13333);
arglist__13333 = cljs.core.next(arglist__13333);
var y = cljs.core.first(arglist__13333);
arglist__13333 = cljs.core.next(arglist__13333);
var z = cljs.core.first(arglist__13333);
var args = cljs.core.rest(arglist__13333);
return G__13331__delegate(x,y,z,args);
});
G__13331.cljs$core$IFn$_invoke$arity$variadic = G__13331__delegate;
return G__13331;
})()
;
G__13330 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13330__0.call(this);
case 1:
return G__13330__1.call(this,x);
case 2:
return G__13330__2.call(this,x,y);
case 3:
return G__13330__3.call(this,x,y,z);
default:
var G__13334 = null;
if (arguments.length > 3) {
var G__13335__i = 0, G__13335__a = new Array(arguments.length -  3);
while (G__13335__i < G__13335__a.length) {G__13335__a[G__13335__i] = arguments[G__13335__i + 3]; ++G__13335__i;}
G__13334 = new cljs.core.IndexedSeq(G__13335__a,0);
}
return G__13330__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13330.cljs$lang$maxFixedArity = 3;
G__13330.cljs$lang$applyTo = G__13330__4.cljs$lang$applyTo;
G__13330.cljs$core$IFn$_invoke$arity$0 = G__13330__0;
G__13330.cljs$core$IFn$_invoke$arity$1 = G__13330__1;
G__13330.cljs$core$IFn$_invoke$arity$2 = G__13330__2;
G__13330.cljs$core$IFn$_invoke$arity$3 = G__13330__3;
G__13330.cljs$core$IFn$_invoke$arity$variadic = G__13330__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13330;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__13336 = null;
var G__13336__0 = (function (){
var G__13306 = arg1;
var G__13307 = arg2;
var G__13308 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13306,G__13307,G__13308) : f.call(null,G__13306,G__13307,G__13308));
});
var G__13336__1 = (function (x){
var G__13309 = arg1;
var G__13310 = arg2;
var G__13311 = arg3;
var G__13312 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13309,G__13310,G__13311,G__13312) : f.call(null,G__13309,G__13310,G__13311,G__13312));
});
var G__13336__2 = (function (x,y){
var G__13313 = arg1;
var G__13314 = arg2;
var G__13315 = arg3;
var G__13316 = x;
var G__13317 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13313,G__13314,G__13315,G__13316,G__13317) : f.call(null,G__13313,G__13314,G__13315,G__13316,G__13317));
});
var G__13336__3 = (function (x,y,z){
var G__13318 = arg1;
var G__13319 = arg2;
var G__13320 = arg3;
var G__13321 = x;
var G__13322 = y;
var G__13323 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13318,G__13319,G__13320,G__13321,G__13322,G__13323) : f.call(null,G__13318,G__13319,G__13320,G__13321,G__13322,G__13323));
});
var G__13336__4 = (function() { 
var G__13337__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__13337 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13338__i = 0, G__13338__a = new Array(arguments.length -  3);
while (G__13338__i < G__13338__a.length) {G__13338__a[G__13338__i] = arguments[G__13338__i + 3]; ++G__13338__i;}
  args = new cljs.core.IndexedSeq(G__13338__a,0);
} 
return G__13337__delegate.call(this,x,y,z,args);};
G__13337.cljs$lang$maxFixedArity = 3;
G__13337.cljs$lang$applyTo = (function (arglist__13339){
var x = cljs.core.first(arglist__13339);
arglist__13339 = cljs.core.next(arglist__13339);
var y = cljs.core.first(arglist__13339);
arglist__13339 = cljs.core.next(arglist__13339);
var z = cljs.core.first(arglist__13339);
var args = cljs.core.rest(arglist__13339);
return G__13337__delegate(x,y,z,args);
});
G__13337.cljs$core$IFn$_invoke$arity$variadic = G__13337__delegate;
return G__13337;
})()
;
G__13336 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13336__0.call(this);
case 1:
return G__13336__1.call(this,x);
case 2:
return G__13336__2.call(this,x,y);
case 3:
return G__13336__3.call(this,x,y,z);
default:
var G__13340 = null;
if (arguments.length > 3) {
var G__13341__i = 0, G__13341__a = new Array(arguments.length -  3);
while (G__13341__i < G__13341__a.length) {G__13341__a[G__13341__i] = arguments[G__13341__i + 3]; ++G__13341__i;}
G__13340 = new cljs.core.IndexedSeq(G__13341__a,0);
}
return G__13336__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13336.cljs$lang$maxFixedArity = 3;
G__13336.cljs$lang$applyTo = G__13336__4.cljs$lang$applyTo;
G__13336.cljs$core$IFn$_invoke$arity$0 = G__13336__0;
G__13336.cljs$core$IFn$_invoke$arity$1 = G__13336__1;
G__13336.cljs$core$IFn$_invoke$arity$2 = G__13336__2;
G__13336.cljs$core$IFn$_invoke$arity$3 = G__13336__3;
G__13336.cljs$core$IFn$_invoke$arity$variadic = G__13336__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13336;
})()
});
var partial__5 = (function() { 
var G__13342__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__13343__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__13343 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13344__i = 0, G__13344__a = new Array(arguments.length -  0);
while (G__13344__i < G__13344__a.length) {G__13344__a[G__13344__i] = arguments[G__13344__i + 0]; ++G__13344__i;}
  args = new cljs.core.IndexedSeq(G__13344__a,0);
} 
return G__13343__delegate.call(this,args);};
G__13343.cljs$lang$maxFixedArity = 0;
G__13343.cljs$lang$applyTo = (function (arglist__13345){
var args = cljs.core.seq(arglist__13345);
return G__13343__delegate(args);
});
G__13343.cljs$core$IFn$_invoke$arity$variadic = G__13343__delegate;
return G__13343;
})()
;
};
var G__13342 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__13346__i = 0, G__13346__a = new Array(arguments.length -  4);
while (G__13346__i < G__13346__a.length) {G__13346__a[G__13346__i] = arguments[G__13346__i + 4]; ++G__13346__i;}
  more = new cljs.core.IndexedSeq(G__13346__a,0);
} 
return G__13342__delegate.call(this,f,arg1,arg2,arg3,more);};
G__13342.cljs$lang$maxFixedArity = 4;
G__13342.cljs$lang$applyTo = (function (arglist__13347){
var f = cljs.core.first(arglist__13347);
arglist__13347 = cljs.core.next(arglist__13347);
var arg1 = cljs.core.first(arglist__13347);
arglist__13347 = cljs.core.next(arglist__13347);
var arg2 = cljs.core.first(arglist__13347);
arglist__13347 = cljs.core.next(arglist__13347);
var arg3 = cljs.core.first(arglist__13347);
var more = cljs.core.rest(arglist__13347);
return G__13342__delegate(f,arg1,arg2,arg3,more);
});
G__13342.cljs$core$IFn$_invoke$arity$variadic = G__13342__delegate;
return G__13342;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__13348 = null;
if (arguments.length > 4) {
var G__13349__i = 0, G__13349__a = new Array(arguments.length -  4);
while (G__13349__i < G__13349__a.length) {G__13349__a[G__13349__i] = arguments[G__13349__i + 4]; ++G__13349__i;}
G__13348 = new cljs.core.IndexedSeq(G__13349__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__13348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__13382 = null;
var G__13382__1 = (function (a){
var G__13366 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13366) : f.call(null,G__13366));
});
var G__13382__2 = (function (a,b){
var G__13367 = (((a == null))?x:a);
var G__13368 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13367,G__13368) : f.call(null,G__13367,G__13368));
});
var G__13382__3 = (function (a,b,c){
var G__13369 = (((a == null))?x:a);
var G__13370 = b;
var G__13371 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13369,G__13370,G__13371) : f.call(null,G__13369,G__13370,G__13371));
});
var G__13382__4 = (function() { 
var G__13383__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__13383 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13384__i = 0, G__13384__a = new Array(arguments.length -  3);
while (G__13384__i < G__13384__a.length) {G__13384__a[G__13384__i] = arguments[G__13384__i + 3]; ++G__13384__i;}
  ds = new cljs.core.IndexedSeq(G__13384__a,0);
} 
return G__13383__delegate.call(this,a,b,c,ds);};
G__13383.cljs$lang$maxFixedArity = 3;
G__13383.cljs$lang$applyTo = (function (arglist__13385){
var a = cljs.core.first(arglist__13385);
arglist__13385 = cljs.core.next(arglist__13385);
var b = cljs.core.first(arglist__13385);
arglist__13385 = cljs.core.next(arglist__13385);
var c = cljs.core.first(arglist__13385);
var ds = cljs.core.rest(arglist__13385);
return G__13383__delegate(a,b,c,ds);
});
G__13383.cljs$core$IFn$_invoke$arity$variadic = G__13383__delegate;
return G__13383;
})()
;
G__13382 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__13382__1.call(this,a);
case 2:
return G__13382__2.call(this,a,b);
case 3:
return G__13382__3.call(this,a,b,c);
default:
var G__13386 = null;
if (arguments.length > 3) {
var G__13387__i = 0, G__13387__a = new Array(arguments.length -  3);
while (G__13387__i < G__13387__a.length) {G__13387__a[G__13387__i] = arguments[G__13387__i + 3]; ++G__13387__i;}
G__13386 = new cljs.core.IndexedSeq(G__13387__a,0);
}
return G__13382__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13382.cljs$lang$maxFixedArity = 3;
G__13382.cljs$lang$applyTo = G__13382__4.cljs$lang$applyTo;
G__13382.cljs$core$IFn$_invoke$arity$1 = G__13382__1;
G__13382.cljs$core$IFn$_invoke$arity$2 = G__13382__2;
G__13382.cljs$core$IFn$_invoke$arity$3 = G__13382__3;
G__13382.cljs$core$IFn$_invoke$arity$variadic = G__13382__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13382;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__13388 = null;
var G__13388__2 = (function (a,b){
var G__13372 = (((a == null))?x:a);
var G__13373 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13372,G__13373) : f.call(null,G__13372,G__13373));
});
var G__13388__3 = (function (a,b,c){
var G__13374 = (((a == null))?x:a);
var G__13375 = (((b == null))?y:b);
var G__13376 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13374,G__13375,G__13376) : f.call(null,G__13374,G__13375,G__13376));
});
var G__13388__4 = (function() { 
var G__13389__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__13389 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13390__i = 0, G__13390__a = new Array(arguments.length -  3);
while (G__13390__i < G__13390__a.length) {G__13390__a[G__13390__i] = arguments[G__13390__i + 3]; ++G__13390__i;}
  ds = new cljs.core.IndexedSeq(G__13390__a,0);
} 
return G__13389__delegate.call(this,a,b,c,ds);};
G__13389.cljs$lang$maxFixedArity = 3;
G__13389.cljs$lang$applyTo = (function (arglist__13391){
var a = cljs.core.first(arglist__13391);
arglist__13391 = cljs.core.next(arglist__13391);
var b = cljs.core.first(arglist__13391);
arglist__13391 = cljs.core.next(arglist__13391);
var c = cljs.core.first(arglist__13391);
var ds = cljs.core.rest(arglist__13391);
return G__13389__delegate(a,b,c,ds);
});
G__13389.cljs$core$IFn$_invoke$arity$variadic = G__13389__delegate;
return G__13389;
})()
;
G__13388 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13388__2.call(this,a,b);
case 3:
return G__13388__3.call(this,a,b,c);
default:
var G__13392 = null;
if (arguments.length > 3) {
var G__13393__i = 0, G__13393__a = new Array(arguments.length -  3);
while (G__13393__i < G__13393__a.length) {G__13393__a[G__13393__i] = arguments[G__13393__i + 3]; ++G__13393__i;}
G__13392 = new cljs.core.IndexedSeq(G__13393__a,0);
}
return G__13388__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13388.cljs$lang$maxFixedArity = 3;
G__13388.cljs$lang$applyTo = G__13388__4.cljs$lang$applyTo;
G__13388.cljs$core$IFn$_invoke$arity$2 = G__13388__2;
G__13388.cljs$core$IFn$_invoke$arity$3 = G__13388__3;
G__13388.cljs$core$IFn$_invoke$arity$variadic = G__13388__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13388;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__13394 = null;
var G__13394__2 = (function (a,b){
var G__13377 = (((a == null))?x:a);
var G__13378 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13377,G__13378) : f.call(null,G__13377,G__13378));
});
var G__13394__3 = (function (a,b,c){
var G__13379 = (((a == null))?x:a);
var G__13380 = (((b == null))?y:b);
var G__13381 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13379,G__13380,G__13381) : f.call(null,G__13379,G__13380,G__13381));
});
var G__13394__4 = (function() { 
var G__13395__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__13395 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13396__i = 0, G__13396__a = new Array(arguments.length -  3);
while (G__13396__i < G__13396__a.length) {G__13396__a[G__13396__i] = arguments[G__13396__i + 3]; ++G__13396__i;}
  ds = new cljs.core.IndexedSeq(G__13396__a,0);
} 
return G__13395__delegate.call(this,a,b,c,ds);};
G__13395.cljs$lang$maxFixedArity = 3;
G__13395.cljs$lang$applyTo = (function (arglist__13397){
var a = cljs.core.first(arglist__13397);
arglist__13397 = cljs.core.next(arglist__13397);
var b = cljs.core.first(arglist__13397);
arglist__13397 = cljs.core.next(arglist__13397);
var c = cljs.core.first(arglist__13397);
var ds = cljs.core.rest(arglist__13397);
return G__13395__delegate(a,b,c,ds);
});
G__13395.cljs$core$IFn$_invoke$arity$variadic = G__13395__delegate;
return G__13395;
})()
;
G__13394 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13394__2.call(this,a,b);
case 3:
return G__13394__3.call(this,a,b,c);
default:
var G__13398 = null;
if (arguments.length > 3) {
var G__13399__i = 0, G__13399__a = new Array(arguments.length -  3);
while (G__13399__i < G__13399__a.length) {G__13399__a[G__13399__i] = arguments[G__13399__i + 3]; ++G__13399__i;}
G__13398 = new cljs.core.IndexedSeq(G__13399__a,0);
}
return G__13394__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13394.cljs$lang$maxFixedArity = 3;
G__13394.cljs$lang$applyTo = G__13394__4.cljs$lang$applyTo;
G__13394.cljs$core$IFn$_invoke$arity$2 = G__13394__2;
G__13394.cljs$core$IFn$_invoke$arity$3 = G__13394__3;
G__13394.cljs$core$IFn$_invoke$arity$variadic = G__13394__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13394;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4686__auto___13448 = size;
var i_13449 = (0);
while(true){
if((i_13449 < n__4686__auto___13448)){
cljs.core.chunk_append(b,(function (){var G__13444 = (idx + i_13449);
var G__13445 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13449);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13444,G__13445) : f.call(null,G__13444,G__13445));
})());

var G__13450 = (i_13449 + (1));
i_13449 = G__13450;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13446 = idx;
var G__13447 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13446,G__13447) : f.call(null,G__13446,G__13447));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13469 = null;
var G__13469__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13469__1 = (function (result){
var G__13463 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13463) : rf.call(null,G__13463));
});
var G__13469__2 = (function (result,input){
var v = (function (){var G__13464 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13464) : f.call(null,G__13464));
})();
if((v == null)){
return result;
} else {
var G__13465 = result;
var G__13466 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13465,G__13466) : rf.call(null,G__13465,G__13466));
}
});
G__13469 = function(result,input){
switch(arguments.length){
case 0:
return G__13469__0.call(this);
case 1:
return G__13469__1.call(this,result);
case 2:
return G__13469__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13469.cljs$core$IFn$_invoke$arity$0 = G__13469__0;
G__13469.cljs$core$IFn$_invoke$arity$1 = G__13469__1;
G__13469.cljs$core$IFn$_invoke$arity$2 = G__13469__2;
return G__13469;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4686__auto___13470 = size;
var i_13471 = (0);
while(true){
if((i_13471 < n__4686__auto___13470)){
var x_13472 = (function (){var G__13467 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13471);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13467) : f.call(null,G__13467));
})();
if((x_13472 == null)){
} else {
cljs.core.chunk_append(b,x_13472);
}

var G__13473 = (i_13471 + (1));
i_13471 = G__13473;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13468 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13468) : f.call(null,G__13468));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13474 = this$__$1;
return goog.getUid(G__13474);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13475 = cljs.core.seq(self__.watches);
var chunk__13476 = null;
var count__13477 = (0);
var i__13478 = (0);
while(true){
if((i__13478 < count__13477)){
var vec__13479 = chunk__13476.cljs$core$IIndexed$_nth$arity$2(null,i__13478);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13479,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13479,(1),null);
var G__13480_13489 = key;
var G__13481_13490 = this$__$1;
var G__13482_13491 = oldval;
var G__13483_13492 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13480_13489,G__13481_13490,G__13482_13491,G__13483_13492) : f.call(null,G__13480_13489,G__13481_13490,G__13482_13491,G__13483_13492));

var G__13493 = seq__13475;
var G__13494 = chunk__13476;
var G__13495 = count__13477;
var G__13496 = (i__13478 + (1));
seq__13475 = G__13493;
chunk__13476 = G__13494;
count__13477 = G__13495;
i__13478 = G__13496;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13475);
if(temp__4126__auto__){
var seq__13475__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13475__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__13475__$1);
var G__13497 = cljs.core.chunk_rest(seq__13475__$1);
var G__13498 = c__4586__auto__;
var G__13499 = cljs.core.count(c__4586__auto__);
var G__13500 = (0);
seq__13475 = G__13497;
chunk__13476 = G__13498;
count__13477 = G__13499;
i__13478 = G__13500;
continue;
} else {
var vec__13484 = cljs.core.first(seq__13475__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13484,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13484,(1),null);
var G__13485_13501 = key;
var G__13486_13502 = this$__$1;
var G__13487_13503 = oldval;
var G__13488_13504 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13485_13501,G__13486_13502,G__13487_13503,G__13488_13504) : f.call(null,G__13485_13501,G__13486_13502,G__13487_13503,G__13488_13504));

var G__13505 = cljs.core.next(seq__13475__$1);
var G__13506 = null;
var G__13507 = (0);
var G__13508 = (0);
seq__13475 = G__13505;
chunk__13476 = G__13506;
count__13477 = G__13507;
i__13478 = G__13508;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13512__delegate = function (x,p__13509){
var map__13511 = p__13509;
var map__13511__$1 = ((cljs.core.seq_QMARK_(map__13511))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13511):map__13511);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13511__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13511__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13512 = function (x,var_args){
var p__13509 = null;
if (arguments.length > 1) {
var G__13513__i = 0, G__13513__a = new Array(arguments.length -  1);
while (G__13513__i < G__13513__a.length) {G__13513__a[G__13513__i] = arguments[G__13513__i + 1]; ++G__13513__i;}
  p__13509 = new cljs.core.IndexedSeq(G__13513__a,0);
} 
return G__13512__delegate.call(this,x,p__13509);};
G__13512.cljs$lang$maxFixedArity = 1;
G__13512.cljs$lang$applyTo = (function (arglist__13514){
var x = cljs.core.first(arglist__13514);
var p__13509 = cljs.core.rest(arglist__13514);
return G__13512__delegate(x,p__13509);
});
G__13512.cljs$core$IFn$_invoke$arity$variadic = G__13512__delegate;
return G__13512;
})()
;
atom = function(x,var_args){
var p__13509 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13515 = null;
if (arguments.length > 1) {
var G__13516__i = 0, G__13516__a = new Array(arguments.length -  1);
while (G__13516__i < G__13516__a.length) {G__13516__a[G__13516__i] = arguments[G__13516__i + 1]; ++G__13516__i;}
G__13515 = new cljs.core.IndexedSeq(G__13516__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13515);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__13519 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13519) : validate.call(null,G__13519));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__13520 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13520) : cljs.core.pr_str.call(null,G__13520));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13527 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13527) : f.call(null,G__13527));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13528 = a.state;
var G__13529 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13528,G__13529) : f.call(null,G__13528,G__13529));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13530 = a.state;
var G__13531 = x;
var G__13532 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13530,G__13531,G__13532) : f.call(null,G__13530,G__13531,G__13532));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13533__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13533 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13534__i = 0, G__13534__a = new Array(arguments.length -  4);
while (G__13534__i < G__13534__a.length) {G__13534__a[G__13534__i] = arguments[G__13534__i + 4]; ++G__13534__i;}
  more = new cljs.core.IndexedSeq(G__13534__a,0);
} 
return G__13533__delegate.call(this,a,f,x,y,more);};
G__13533.cljs$lang$maxFixedArity = 4;
G__13533.cljs$lang$applyTo = (function (arglist__13535){
var a = cljs.core.first(arglist__13535);
arglist__13535 = cljs.core.next(arglist__13535);
var f = cljs.core.first(arglist__13535);
arglist__13535 = cljs.core.next(arglist__13535);
var x = cljs.core.first(arglist__13535);
arglist__13535 = cljs.core.next(arglist__13535);
var y = cljs.core.first(arglist__13535);
var more = cljs.core.rest(arglist__13535);
return G__13533__delegate(a,f,x,y,more);
});
G__13533.cljs$core$IFn$_invoke$arity$variadic = G__13533__delegate;
return G__13533;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__13536 = null;
if (arguments.length > 4) {
var G__13537__i = 0, G__13537__a = new Array(arguments.length -  4);
while (G__13537__i < G__13537__a.length) {G__13537__a[G__13537__i] = arguments[G__13537__i + 4]; ++G__13537__i;}
G__13536 = new cljs.core.IndexedSeq(G__13537__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__13536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13604 = null;
var G__13604__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13604__1 = (function (result){
var G__13571 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13571) : rf.call(null,G__13571));
});
var G__13604__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__13572 = i;
var G__13573 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13572,G__13573) : f.call(null,G__13572,G__13573));
})();
if((v == null)){
return result;
} else {
var G__13574 = result;
var G__13575 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13574,G__13575) : rf.call(null,G__13574,G__13575));
}
});
G__13604 = function(result,input){
switch(arguments.length){
case 0:
return G__13604__0.call(this);
case 1:
return G__13604__1.call(this,result);
case 2:
return G__13604__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13604.cljs$core$IFn$_invoke$arity$0 = G__13604__0;
G__13604.cljs$core$IFn$_invoke$arity$1 = G__13604__1;
G__13604.cljs$core$IFn$_invoke$arity$2 = G__13604__2;
return G__13604;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4686__auto___13605 = size;
var i_13606 = (0);
while(true){
if((i_13606 < n__4686__auto___13605)){
var x_13607 = (function (){var G__13600 = (idx + i_13606);
var G__13601 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13606);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13600,G__13601) : f.call(null,G__13600,G__13601));
})();
if((x_13607 == null)){
} else {
cljs.core.chunk_append(b,x_13607);
}

var G__13608 = (i_13606 + (1));
i_13606 = G__13608;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13602 = idx;
var G__13603 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13602,G__13603) : f.call(null,G__13602,G__13603));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__13822 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13822) : p.call(null,G__13822));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13824 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13824) : p.call(null,G__13824));
})();
if(cljs.core.truth_(and__3787__auto__)){
var G__13825 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13825) : p.call(null,G__13825));
} else {
return and__3787__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13827 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13827) : p.call(null,G__13827));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13829 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13829) : p.call(null,G__13829));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var G__13830 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13830) : p.call(null,G__13830));
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__13999__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__13999 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14000__i = 0, G__14000__a = new Array(arguments.length -  3);
while (G__14000__i < G__14000__a.length) {G__14000__a[G__14000__i] = arguments[G__14000__i + 3]; ++G__14000__i;}
  args = new cljs.core.IndexedSeq(G__14000__a,0);
} 
return G__13999__delegate.call(this,x,y,z,args);};
G__13999.cljs$lang$maxFixedArity = 3;
G__13999.cljs$lang$applyTo = (function (arglist__14001){
var x = cljs.core.first(arglist__14001);
arglist__14001 = cljs.core.next(arglist__14001);
var y = cljs.core.first(arglist__14001);
arglist__14001 = cljs.core.next(arglist__14001);
var z = cljs.core.first(arglist__14001);
var args = cljs.core.rest(arglist__14001);
return G__13999__delegate(x,y,z,args);
});
G__13999.cljs$core$IFn$_invoke$arity$variadic = G__13999__delegate;
return G__13999;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14002 = null;
if (arguments.length > 3) {
var G__14003__i = 0, G__14003__a = new Array(arguments.length -  3);
while (G__14003__i < G__14003__a.length) {G__14003__a[G__14003__i] = arguments[G__14003__i + 3]; ++G__14003__i;}
G__14002 = new cljs.core.IndexedSeq(G__14003__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13862 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13862) : p1.call(null,G__13862));
})();
if(cljs.core.truth_(and__3787__auto__)){
var G__13863 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13863) : p2.call(null,G__13863));
} else {
return and__3787__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13865 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13865) : p1.call(null,G__13865));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13867 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13867) : p1.call(null,G__13867));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var and__3787__auto____$2 = (function (){var G__13869 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13869) : p2.call(null,G__13869));
})();
if(cljs.core.truth_(and__3787__auto____$2)){
var G__13870 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13870) : p2.call(null,G__13870));
} else {
return and__3787__auto____$2;
}
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13872 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13872) : p1.call(null,G__13872));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13874 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13874) : p1.call(null,G__13874));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var and__3787__auto____$2 = (function (){var G__13876 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13876) : p1.call(null,G__13876));
})();
if(cljs.core.truth_(and__3787__auto____$2)){
var and__3787__auto____$3 = (function (){var G__13878 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13878) : p2.call(null,G__13878));
})();
if(cljs.core.truth_(and__3787__auto____$3)){
var and__3787__auto____$4 = (function (){var G__13880 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13880) : p2.call(null,G__13880));
})();
if(cljs.core.truth_(and__3787__auto____$4)){
var G__13881 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13881) : p2.call(null,G__13881));
} else {
return and__3787__auto____$4;
}
} else {
return and__3787__auto____$3;
}
} else {
return and__3787__auto____$2;
}
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14004__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13609_SHARP_){
var and__3787__auto__ = (function (){var G__13886 = p1__13609_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13886) : p1.call(null,G__13886));
})();
if(cljs.core.truth_(and__3787__auto__)){
var G__13887 = p1__13609_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13887) : p2.call(null,G__13887));
} else {
return and__3787__auto__;
}
}),args)));
};
var G__14004 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14005__i = 0, G__14005__a = new Array(arguments.length -  3);
while (G__14005__i < G__14005__a.length) {G__14005__a[G__14005__i] = arguments[G__14005__i + 3]; ++G__14005__i;}
  args = new cljs.core.IndexedSeq(G__14005__a,0);
} 
return G__14004__delegate.call(this,x,y,z,args);};
G__14004.cljs$lang$maxFixedArity = 3;
G__14004.cljs$lang$applyTo = (function (arglist__14006){
var x = cljs.core.first(arglist__14006);
arglist__14006 = cljs.core.next(arglist__14006);
var y = cljs.core.first(arglist__14006);
arglist__14006 = cljs.core.next(arglist__14006);
var z = cljs.core.first(arglist__14006);
var args = cljs.core.rest(arglist__14006);
return G__14004__delegate(x,y,z,args);
});
G__14004.cljs$core$IFn$_invoke$arity$variadic = G__14004__delegate;
return G__14004;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14007 = null;
if (arguments.length > 3) {
var G__14008__i = 0, G__14008__a = new Array(arguments.length -  3);
while (G__14008__i < G__14008__a.length) {G__14008__a[G__14008__i] = arguments[G__14008__i + 3]; ++G__14008__i;}
G__14007 = new cljs.core.IndexedSeq(G__14008__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14007);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13933 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13933) : p1.call(null,G__13933));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13935 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13935) : p2.call(null,G__13935));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var G__13936 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13936) : p3.call(null,G__13936));
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13938 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13938) : p1.call(null,G__13938));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13940 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13940) : p2.call(null,G__13940));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var and__3787__auto____$2 = (function (){var G__13942 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13942) : p3.call(null,G__13942));
})();
if(cljs.core.truth_(and__3787__auto____$2)){
var and__3787__auto____$3 = (function (){var G__13944 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13944) : p1.call(null,G__13944));
})();
if(cljs.core.truth_(and__3787__auto____$3)){
var and__3787__auto____$4 = (function (){var G__13946 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13946) : p2.call(null,G__13946));
})();
if(cljs.core.truth_(and__3787__auto____$4)){
var G__13947 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13947) : p3.call(null,G__13947));
} else {
return and__3787__auto____$4;
}
} else {
return and__3787__auto____$3;
}
} else {
return and__3787__auto____$2;
}
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3787__auto__ = (function (){var G__13949 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13949) : p1.call(null,G__13949));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13951 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13951) : p2.call(null,G__13951));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var and__3787__auto____$2 = (function (){var G__13953 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13953) : p3.call(null,G__13953));
})();
if(cljs.core.truth_(and__3787__auto____$2)){
var and__3787__auto____$3 = (function (){var G__13955 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13955) : p1.call(null,G__13955));
})();
if(cljs.core.truth_(and__3787__auto____$3)){
var and__3787__auto____$4 = (function (){var G__13957 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13957) : p2.call(null,G__13957));
})();
if(cljs.core.truth_(and__3787__auto____$4)){
var and__3787__auto____$5 = (function (){var G__13959 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13959) : p3.call(null,G__13959));
})();
if(cljs.core.truth_(and__3787__auto____$5)){
var and__3787__auto____$6 = (function (){var G__13961 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13961) : p1.call(null,G__13961));
})();
if(cljs.core.truth_(and__3787__auto____$6)){
var and__3787__auto____$7 = (function (){var G__13963 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13963) : p2.call(null,G__13963));
})();
if(cljs.core.truth_(and__3787__auto____$7)){
var G__13964 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13964) : p3.call(null,G__13964));
} else {
return and__3787__auto____$7;
}
} else {
return and__3787__auto____$6;
}
} else {
return and__3787__auto____$5;
}
} else {
return and__3787__auto____$4;
}
} else {
return and__3787__auto____$3;
}
} else {
return and__3787__auto____$2;
}
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14009__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13610_SHARP_){
var and__3787__auto__ = (function (){var G__13971 = p1__13610_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13971) : p1.call(null,G__13971));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13973 = p1__13610_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13973) : p2.call(null,G__13973));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var G__13974 = p1__13610_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13974) : p3.call(null,G__13974));
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
}),args)));
};
var G__14009 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14010__i = 0, G__14010__a = new Array(arguments.length -  3);
while (G__14010__i < G__14010__a.length) {G__14010__a[G__14010__i] = arguments[G__14010__i + 3]; ++G__14010__i;}
  args = new cljs.core.IndexedSeq(G__14010__a,0);
} 
return G__14009__delegate.call(this,x,y,z,args);};
G__14009.cljs$lang$maxFixedArity = 3;
G__14009.cljs$lang$applyTo = (function (arglist__14011){
var x = cljs.core.first(arglist__14011);
arglist__14011 = cljs.core.next(arglist__14011);
var y = cljs.core.first(arglist__14011);
arglist__14011 = cljs.core.next(arglist__14011);
var z = cljs.core.first(arglist__14011);
var args = cljs.core.rest(arglist__14011);
return G__14009__delegate(x,y,z,args);
});
G__14009.cljs$core$IFn$_invoke$arity$variadic = G__14009__delegate;
return G__14009;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14012 = null;
if (arguments.length > 3) {
var G__14013__i = 0, G__14013__a = new Array(arguments.length -  3);
while (G__14013__i < G__14013__a.length) {G__14013__a[G__14013__i] = arguments[G__14013__i + 3]; ++G__14013__i;}
G__14012 = new cljs.core.IndexedSeq(G__14013__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14014__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13611_SHARP_){
var G__13990 = x;
return (p1__13611_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13611_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13990) : p1__13611_SHARP_.call(null,G__13990));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13612_SHARP_){
var and__3787__auto__ = (function (){var G__13992 = x;
return (p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13992) : p1__13612_SHARP_.call(null,G__13992));
})();
if(cljs.core.truth_(and__3787__auto__)){
var G__13993 = y;
return (p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13612_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13993) : p1__13612_SHARP_.call(null,G__13993));
} else {
return and__3787__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13613_SHARP_){
var and__3787__auto__ = (function (){var G__13995 = x;
return (p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13995) : p1__13613_SHARP_.call(null,G__13995));
})();
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__13997 = y;
return (p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13997) : p1__13613_SHARP_.call(null,G__13997));
})();
if(cljs.core.truth_(and__3787__auto____$1)){
var G__13998 = z;
return (p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13998) : p1__13613_SHARP_.call(null,G__13998));
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14015__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13614_SHARP_){
return cljs.core.every_QMARK_(p1__13614_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14015 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14016__i = 0, G__14016__a = new Array(arguments.length -  3);
while (G__14016__i < G__14016__a.length) {G__14016__a[G__14016__i] = arguments[G__14016__i + 3]; ++G__14016__i;}
  args = new cljs.core.IndexedSeq(G__14016__a,0);
} 
return G__14015__delegate.call(this,x,y,z,args);};
G__14015.cljs$lang$maxFixedArity = 3;
G__14015.cljs$lang$applyTo = (function (arglist__14017){
var x = cljs.core.first(arglist__14017);
arglist__14017 = cljs.core.next(arglist__14017);
var y = cljs.core.first(arglist__14017);
arglist__14017 = cljs.core.next(arglist__14017);
var z = cljs.core.first(arglist__14017);
var args = cljs.core.rest(arglist__14017);
return G__14015__delegate(x,y,z,args);
});
G__14015.cljs$core$IFn$_invoke$arity$variadic = G__14015__delegate;
return G__14015;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14018 = null;
if (arguments.length > 3) {
var G__14019__i = 0, G__14019__a = new Array(arguments.length -  3);
while (G__14019__i < G__14019__a.length) {G__14019__a[G__14019__i] = arguments[G__14019__i + 3]; ++G__14019__i;}
G__14018 = new cljs.core.IndexedSeq(G__14019__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14014 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14020__i = 0, G__14020__a = new Array(arguments.length -  3);
while (G__14020__i < G__14020__a.length) {G__14020__a[G__14020__i] = arguments[G__14020__i + 3]; ++G__14020__i;}
  ps = new cljs.core.IndexedSeq(G__14020__a,0);
} 
return G__14014__delegate.call(this,p1,p2,p3,ps);};
G__14014.cljs$lang$maxFixedArity = 3;
G__14014.cljs$lang$applyTo = (function (arglist__14021){
var p1 = cljs.core.first(arglist__14021);
arglist__14021 = cljs.core.next(arglist__14021);
var p2 = cljs.core.first(arglist__14021);
arglist__14021 = cljs.core.next(arglist__14021);
var p3 = cljs.core.first(arglist__14021);
var ps = cljs.core.rest(arglist__14021);
return G__14014__delegate(p1,p2,p3,ps);
});
G__14014.cljs$core$IFn$_invoke$arity$variadic = G__14014__delegate;
return G__14014;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14022 = null;
if (arguments.length > 3) {
var G__14023__i = 0, G__14023__a = new Array(arguments.length -  3);
while (G__14023__i < G__14023__a.length) {G__14023__a[G__14023__i] = arguments[G__14023__i + 3]; ++G__14023__i;}
G__14022 = new cljs.core.IndexedSeq(G__14023__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__14229 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14229) : p.call(null,G__14229));
});
var sp1__2 = (function (x,y){
var or__3799__auto__ = (function (){var G__14231 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14231) : p.call(null,G__14231));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var G__14232 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14232) : p.call(null,G__14232));
}
});
var sp1__3 = (function (x,y,z){
var or__3799__auto__ = (function (){var G__14234 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14234) : p.call(null,G__14234));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var G__14236 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14236) : p.call(null,G__14236));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var G__14237 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14237) : p.call(null,G__14237));
}
}
});
var sp1__4 = (function() { 
var G__14398__delegate = function (x,y,z,args){
var or__3799__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__14398 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14399__i = 0, G__14399__a = new Array(arguments.length -  3);
while (G__14399__i < G__14399__a.length) {G__14399__a[G__14399__i] = arguments[G__14399__i + 3]; ++G__14399__i;}
  args = new cljs.core.IndexedSeq(G__14399__a,0);
} 
return G__14398__delegate.call(this,x,y,z,args);};
G__14398.cljs$lang$maxFixedArity = 3;
G__14398.cljs$lang$applyTo = (function (arglist__14400){
var x = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var y = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var z = cljs.core.first(arglist__14400);
var args = cljs.core.rest(arglist__14400);
return G__14398__delegate(x,y,z,args);
});
G__14398.cljs$core$IFn$_invoke$arity$variadic = G__14398__delegate;
return G__14398;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__14401 = null;
if (arguments.length > 3) {
var G__14402__i = 0, G__14402__a = new Array(arguments.length -  3);
while (G__14402__i < G__14402__a.length) {G__14402__a[G__14402__i] = arguments[G__14402__i + 3]; ++G__14402__i;}
G__14401 = new cljs.core.IndexedSeq(G__14402__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3799__auto__ = (function (){var G__14269 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14269) : p1.call(null,G__14269));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var G__14270 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14270) : p2.call(null,G__14270));
}
});
var sp2__2 = (function (x,y){
var or__3799__auto__ = (function (){var G__14272 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14272) : p1.call(null,G__14272));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var G__14274 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14274) : p1.call(null,G__14274));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var or__3799__auto____$2 = (function (){var G__14276 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14276) : p2.call(null,G__14276));
})();
if(cljs.core.truth_(or__3799__auto____$2)){
return or__3799__auto____$2;
} else {
var G__14277 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14277) : p2.call(null,G__14277));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3799__auto__ = (function (){var G__14279 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14279) : p1.call(null,G__14279));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var G__14281 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14281) : p1.call(null,G__14281));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var or__3799__auto____$2 = (function (){var G__14283 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14283) : p1.call(null,G__14283));
})();
if(cljs.core.truth_(or__3799__auto____$2)){
return or__3799__auto____$2;
} else {
var or__3799__auto____$3 = (function (){var G__14285 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14285) : p2.call(null,G__14285));
})();
if(cljs.core.truth_(or__3799__auto____$3)){
return or__3799__auto____$3;
} else {
var or__3799__auto____$4 = (function (){var G__14287 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14287) : p2.call(null,G__14287));
})();
if(cljs.core.truth_(or__3799__auto____$4)){
return or__3799__auto____$4;
} else {
var G__14288 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14288) : p2.call(null,G__14288));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__14403__delegate = function (x,y,z,args){
var or__3799__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.some(((function (or__3799__auto__){
return (function (p1__14024_SHARP_){
var or__3799__auto____$1 = (function (){var G__14290 = p1__14024_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14290) : p1.call(null,G__14290));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var G__14291 = p1__14024_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14291) : p2.call(null,G__14291));
}
});})(or__3799__auto__))
,args);
}
};
var G__14403 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14404__i = 0, G__14404__a = new Array(arguments.length -  3);
while (G__14404__i < G__14404__a.length) {G__14404__a[G__14404__i] = arguments[G__14404__i + 3]; ++G__14404__i;}
  args = new cljs.core.IndexedSeq(G__14404__a,0);
} 
return G__14403__delegate.call(this,x,y,z,args);};
G__14403.cljs$lang$maxFixedArity = 3;
G__14403.cljs$lang$applyTo = (function (arglist__14405){
var x = cljs.core.first(arglist__14405);
arglist__14405 = cljs.core.next(arglist__14405);
var y = cljs.core.first(arglist__14405);
arglist__14405 = cljs.core.next(arglist__14405);
var z = cljs.core.first(arglist__14405);
var args = cljs.core.rest(arglist__14405);
return G__14403__delegate(x,y,z,args);
});
G__14403.cljs$core$IFn$_invoke$arity$variadic = G__14403__delegate;
return G__14403;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__14406 = null;
if (arguments.length > 3) {
var G__14407__i = 0, G__14407__a = new Array(arguments.length -  3);
while (G__14407__i < G__14407__a.length) {G__14407__a[G__14407__i] = arguments[G__14407__i + 3]; ++G__14407__i;}
G__14406 = new cljs.core.IndexedSeq(G__14407__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3799__auto__ = (function (){var G__14337 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14337) : p1.call(null,G__14337));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var G__14339 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14339) : p2.call(null,G__14339));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var G__14340 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14340) : p3.call(null,G__14340));
}
}
});
var sp3__2 = (function (x,y){
var or__3799__auto__ = (function (){var G__14342 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14342) : p1.call(null,G__14342));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var G__14344 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14344) : p2.call(null,G__14344));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var or__3799__auto____$2 = (function (){var G__14346 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14346) : p3.call(null,G__14346));
})();
if(cljs.core.truth_(or__3799__auto____$2)){
return or__3799__auto____$2;
} else {
var or__3799__auto____$3 = (function (){var G__14348 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14348) : p1.call(null,G__14348));
})();
if(cljs.core.truth_(or__3799__auto____$3)){
return or__3799__auto____$3;
} else {
var or__3799__auto____$4 = (function (){var G__14350 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14350) : p2.call(null,G__14350));
})();
if(cljs.core.truth_(or__3799__auto____$4)){
return or__3799__auto____$4;
} else {
var G__14351 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14351) : p3.call(null,G__14351));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3799__auto__ = (function (){var G__14353 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14353) : p1.call(null,G__14353));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var G__14355 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14355) : p2.call(null,G__14355));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var or__3799__auto____$2 = (function (){var G__14357 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14357) : p3.call(null,G__14357));
})();
if(cljs.core.truth_(or__3799__auto____$2)){
return or__3799__auto____$2;
} else {
var or__3799__auto____$3 = (function (){var G__14359 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14359) : p1.call(null,G__14359));
})();
if(cljs.core.truth_(or__3799__auto____$3)){
return or__3799__auto____$3;
} else {
var or__3799__auto____$4 = (function (){var G__14361 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14361) : p2.call(null,G__14361));
})();
if(cljs.core.truth_(or__3799__auto____$4)){
return or__3799__auto____$4;
} else {
var or__3799__auto____$5 = (function (){var G__14363 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14363) : p3.call(null,G__14363));
})();
if(cljs.core.truth_(or__3799__auto____$5)){
return or__3799__auto____$5;
} else {
var or__3799__auto____$6 = (function (){var G__14365 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14365) : p1.call(null,G__14365));
})();
if(cljs.core.truth_(or__3799__auto____$6)){
return or__3799__auto____$6;
} else {
var or__3799__auto____$7 = (function (){var G__14367 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14367) : p2.call(null,G__14367));
})();
if(cljs.core.truth_(or__3799__auto____$7)){
return or__3799__auto____$7;
} else {
var G__14368 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14368) : p3.call(null,G__14368));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__14408__delegate = function (x,y,z,args){
var or__3799__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.some(((function (or__3799__auto__){
return (function (p1__14025_SHARP_){
var or__3799__auto____$1 = (function (){var G__14370 = p1__14025_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14370) : p1.call(null,G__14370));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var or__3799__auto____$2 = (function (){var G__14372 = p1__14025_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14372) : p2.call(null,G__14372));
})();
if(cljs.core.truth_(or__3799__auto____$2)){
return or__3799__auto____$2;
} else {
var G__14373 = p1__14025_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14373) : p3.call(null,G__14373));
}
}
});})(or__3799__auto__))
,args);
}
};
var G__14408 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14409__i = 0, G__14409__a = new Array(arguments.length -  3);
while (G__14409__i < G__14409__a.length) {G__14409__a[G__14409__i] = arguments[G__14409__i + 3]; ++G__14409__i;}
  args = new cljs.core.IndexedSeq(G__14409__a,0);
} 
return G__14408__delegate.call(this,x,y,z,args);};
G__14408.cljs$lang$maxFixedArity = 3;
G__14408.cljs$lang$applyTo = (function (arglist__14410){
var x = cljs.core.first(arglist__14410);
arglist__14410 = cljs.core.next(arglist__14410);
var y = cljs.core.first(arglist__14410);
arglist__14410 = cljs.core.next(arglist__14410);
var z = cljs.core.first(arglist__14410);
var args = cljs.core.rest(arglist__14410);
return G__14408__delegate(x,y,z,args);
});
G__14408.cljs$core$IFn$_invoke$arity$variadic = G__14408__delegate;
return G__14408;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__14411 = null;
if (arguments.length > 3) {
var G__14412__i = 0, G__14412__a = new Array(arguments.length -  3);
while (G__14412__i < G__14412__a.length) {G__14412__a[G__14412__i] = arguments[G__14412__i + 3]; ++G__14412__i;}
G__14411 = new cljs.core.IndexedSeq(G__14412__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14411);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__14413__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14026_SHARP_){
var G__14389 = x;
return (p1__14026_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14026_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14389) : p1__14026_SHARP_.call(null,G__14389));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14027_SHARP_){
var or__3799__auto__ = (function (){var G__14391 = x;
return (p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14391) : p1__14027_SHARP_.call(null,G__14391));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var G__14392 = y;
return (p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14027_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14392) : p1__14027_SHARP_.call(null,G__14392));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14028_SHARP_){
var or__3799__auto__ = (function (){var G__14394 = x;
return (p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14394) : p1__14028_SHARP_.call(null,G__14394));
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var G__14396 = y;
return (p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14396) : p1__14028_SHARP_.call(null,G__14396));
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var G__14397 = z;
return (p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14397) : p1__14028_SHARP_.call(null,G__14397));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__14414__delegate = function (x,y,z,args){
var or__3799__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.some(((function (or__3799__auto__,ps__$1){
return (function (p1__14029_SHARP_){
return cljs.core.some(p1__14029_SHARP_,args);
});})(or__3799__auto__,ps__$1))
,ps__$1);
}
};
var G__14414 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14415__i = 0, G__14415__a = new Array(arguments.length -  3);
while (G__14415__i < G__14415__a.length) {G__14415__a[G__14415__i] = arguments[G__14415__i + 3]; ++G__14415__i;}
  args = new cljs.core.IndexedSeq(G__14415__a,0);
} 
return G__14414__delegate.call(this,x,y,z,args);};
G__14414.cljs$lang$maxFixedArity = 3;
G__14414.cljs$lang$applyTo = (function (arglist__14416){
var x = cljs.core.first(arglist__14416);
arglist__14416 = cljs.core.next(arglist__14416);
var y = cljs.core.first(arglist__14416);
arglist__14416 = cljs.core.next(arglist__14416);
var z = cljs.core.first(arglist__14416);
var args = cljs.core.rest(arglist__14416);
return G__14414__delegate(x,y,z,args);
});
G__14414.cljs$core$IFn$_invoke$arity$variadic = G__14414__delegate;
return G__14414;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__14417 = null;
if (arguments.length > 3) {
var G__14418__i = 0, G__14418__a = new Array(arguments.length -  3);
while (G__14418__i < G__14418__a.length) {G__14418__a[G__14418__i] = arguments[G__14418__i + 3]; ++G__14418__i;}
G__14417 = new cljs.core.IndexedSeq(G__14418__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__14413 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14419__i = 0, G__14419__a = new Array(arguments.length -  3);
while (G__14419__i < G__14419__a.length) {G__14419__a[G__14419__i] = arguments[G__14419__i + 3]; ++G__14419__i;}
  ps = new cljs.core.IndexedSeq(G__14419__a,0);
} 
return G__14413__delegate.call(this,p1,p2,p3,ps);};
G__14413.cljs$lang$maxFixedArity = 3;
G__14413.cljs$lang$applyTo = (function (arglist__14420){
var p1 = cljs.core.first(arglist__14420);
arglist__14420 = cljs.core.next(arglist__14420);
var p2 = cljs.core.first(arglist__14420);
arglist__14420 = cljs.core.next(arglist__14420);
var p3 = cljs.core.first(arglist__14420);
var ps = cljs.core.rest(arglist__14420);
return G__14413__delegate(p1,p2,p3,ps);
});
G__14413.cljs$core$IFn$_invoke$arity$variadic = G__14413__delegate;
return G__14413;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__14421 = null;
if (arguments.length > 3) {
var G__14422__i = 0, G__14422__a = new Array(arguments.length -  3);
while (G__14422__i < G__14422__a.length) {G__14422__a[G__14422__i] = arguments[G__14422__i + 3]; ++G__14422__i;}
G__14421 = new cljs.core.IndexedSeq(G__14422__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14477 = null;
var G__14477__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14477__1 = (function (result){
var G__14463 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14463) : rf.call(null,G__14463));
});
var G__14477__2 = (function (result,input){
var G__14464 = result;
var G__14465 = (function (){var G__14466 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14466) : f.call(null,G__14466));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14464,G__14465) : rf.call(null,G__14464,G__14465));
});
var G__14477__3 = (function() { 
var G__14478__delegate = function (result,input,inputs){
var G__14467 = result;
var G__14468 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14467,G__14468) : rf.call(null,G__14467,G__14468));
};
var G__14478 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14479__i = 0, G__14479__a = new Array(arguments.length -  2);
while (G__14479__i < G__14479__a.length) {G__14479__a[G__14479__i] = arguments[G__14479__i + 2]; ++G__14479__i;}
  inputs = new cljs.core.IndexedSeq(G__14479__a,0);
} 
return G__14478__delegate.call(this,result,input,inputs);};
G__14478.cljs$lang$maxFixedArity = 2;
G__14478.cljs$lang$applyTo = (function (arglist__14480){
var result = cljs.core.first(arglist__14480);
arglist__14480 = cljs.core.next(arglist__14480);
var input = cljs.core.first(arglist__14480);
var inputs = cljs.core.rest(arglist__14480);
return G__14478__delegate(result,input,inputs);
});
G__14478.cljs$core$IFn$_invoke$arity$variadic = G__14478__delegate;
return G__14478;
})()
;
G__14477 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14477__0.call(this);
case 1:
return G__14477__1.call(this,result);
case 2:
return G__14477__2.call(this,result,input);
default:
var G__14481 = null;
if (arguments.length > 2) {
var G__14482__i = 0, G__14482__a = new Array(arguments.length -  2);
while (G__14482__i < G__14482__a.length) {G__14482__a[G__14482__i] = arguments[G__14482__i + 2]; ++G__14482__i;}
G__14481 = new cljs.core.IndexedSeq(G__14482__a,0);
}
return G__14477__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14477.cljs$lang$maxFixedArity = 2;
G__14477.cljs$lang$applyTo = G__14477__3.cljs$lang$applyTo;
G__14477.cljs$core$IFn$_invoke$arity$0 = G__14477__0;
G__14477.cljs$core$IFn$_invoke$arity$1 = G__14477__1;
G__14477.cljs$core$IFn$_invoke$arity$2 = G__14477__2;
G__14477.cljs$core$IFn$_invoke$arity$variadic = G__14477__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14477;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4686__auto___14483 = size;
var i_14484 = (0);
while(true){
if((i_14484 < n__4686__auto___14483)){
cljs.core.chunk_append(b,(function (){var G__14469 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14484);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14469) : f.call(null,G__14469));
})());

var G__14485 = (i_14484 + (1));
i_14484 = G__14485;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14470 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14470) : f.call(null,G__14470));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14471 = cljs.core.first(s1);
var G__14472 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14471,G__14472) : f.call(null,G__14471,G__14472));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14473 = cljs.core.first(s1);
var G__14474 = cljs.core.first(s2);
var G__14475 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14473,G__14474,G__14475) : f.call(null,G__14473,G__14474,G__14475));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14486__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__14423_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__14423_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14486 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14487__i = 0, G__14487__a = new Array(arguments.length -  4);
while (G__14487__i < G__14487__a.length) {G__14487__a[G__14487__i] = arguments[G__14487__i + 4]; ++G__14487__i;}
  colls = new cljs.core.IndexedSeq(G__14487__a,0);
} 
return G__14486__delegate.call(this,f,c1,c2,c3,colls);};
G__14486.cljs$lang$maxFixedArity = 4;
G__14486.cljs$lang$applyTo = (function (arglist__14488){
var f = cljs.core.first(arglist__14488);
arglist__14488 = cljs.core.next(arglist__14488);
var c1 = cljs.core.first(arglist__14488);
arglist__14488 = cljs.core.next(arglist__14488);
var c2 = cljs.core.first(arglist__14488);
arglist__14488 = cljs.core.next(arglist__14488);
var c3 = cljs.core.first(arglist__14488);
var colls = cljs.core.rest(arglist__14488);
return G__14486__delegate(f,c1,c2,c3,colls);
});
G__14486.cljs$core$IFn$_invoke$arity$variadic = G__14486__delegate;
return G__14486;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14489 = null;
if (arguments.length > 4) {
var G__14490__i = 0, G__14490__a = new Array(arguments.length -  4);
while (G__14490__i < G__14490__a.length) {G__14490__a[G__14490__i] = arguments[G__14490__i + 4]; ++G__14490__i;}
G__14489 = new cljs.core.IndexedSeq(G__14490__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14499 = null;
var G__14499__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14499__1 = (function (result){
var G__14496 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14496) : rf.call(null,G__14496));
});
var G__14499__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14497 = result;
var G__14498 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14497,G__14498) : rf.call(null,G__14497,G__14498));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14499 = function(result,input){
switch(arguments.length){
case 0:
return G__14499__0.call(this);
case 1:
return G__14499__1.call(this,result);
case 2:
return G__14499__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14499.cljs$core$IFn$_invoke$arity$0 = G__14499__0;
G__14499.cljs$core$IFn$_invoke$arity$1 = G__14499__1;
G__14499.cljs$core$IFn$_invoke$arity$2 = G__14499__2;
return G__14499;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14506 = null;
var G__14506__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14506__1 = (function (result){
var G__14503 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14503) : rf.call(null,G__14503));
});
var G__14506__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14504 = result;
var G__14505 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14504,G__14505) : rf.call(null,G__14504,G__14505));
}
});
G__14506 = function(result,input){
switch(arguments.length){
case 0:
return G__14506__0.call(this);
case 1:
return G__14506__1.call(this,result);
case 2:
return G__14506__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14506.cljs$core$IFn$_invoke$arity$0 = G__14506__0;
G__14506.cljs$core$IFn$_invoke$arity$1 = G__14506__1;
G__14506.cljs$core$IFn$_invoke$arity$2 = G__14506__2;
return G__14506;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14507 = (n__$1 - (1));
var G__14508 = cljs.core.rest(s);
n__$1 = G__14507;
coll__$1 = G__14508;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14511 = cljs.core.next(s);
var G__14512 = cljs.core.next(lead);
s = G__14511;
lead = G__14512;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14525 = null;
var G__14525__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14525__1 = (function (result){
var G__14519 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14519) : rf.call(null,G__14519));
});
var G__14525__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3787__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3787__auto__)){
var G__14520 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14520) : pred.call(null,G__14520));
} else {
return and__3787__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14521 = result;
var G__14522 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14521,G__14522) : rf.call(null,G__14521,G__14522));
}
});
G__14525 = function(result,input){
switch(arguments.length){
case 0:
return G__14525__0.call(this);
case 1:
return G__14525__1.call(this,result);
case 2:
return G__14525__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14525.cljs$core$IFn$_invoke$arity$0 = G__14525__0;
G__14525.cljs$core$IFn$_invoke$arity$1 = G__14525__1;
G__14525.cljs$core$IFn$_invoke$arity$2 = G__14525__2;
return G__14525;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3787__auto__ = s;
if(and__3787__auto__){
var G__14524 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14524) : pred__$1.call(null,G__14524));
} else {
return and__3787__auto__;
}
})())){
var G__14526 = pred__$1;
var G__14527 = cljs.core.rest(s);
pred__$1 = G__14526;
coll__$1 = G__14527;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__14536 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14536) : f.call(null,G__14536));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__14539__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__14539 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14540__i = 0, G__14540__a = new Array(arguments.length -  2);
while (G__14540__i < G__14540__a.length) {G__14540__a[G__14540__i] = arguments[G__14540__i + 2]; ++G__14540__i;}
  colls = new cljs.core.IndexedSeq(G__14540__a,0);
} 
return G__14539__delegate.call(this,c1,c2,colls);};
G__14539.cljs$lang$maxFixedArity = 2;
G__14539.cljs$lang$applyTo = (function (arglist__14541){
var c1 = cljs.core.first(arglist__14541);
arglist__14541 = cljs.core.next(arglist__14541);
var c2 = cljs.core.first(arglist__14541);
var colls = cljs.core.rest(arglist__14541);
return G__14539__delegate(c1,c2,colls);
});
G__14539.cljs$core$IFn$_invoke$arity$variadic = G__14539__delegate;
return G__14539;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__14542 = null;
if (arguments.length > 2) {
var G__14543__i = 0, G__14543__a = new Array(arguments.length -  2);
while (G__14543__i < G__14543__a.length) {G__14543__a[G__14543__i] = arguments[G__14543__i + 2]; ++G__14543__i;}
G__14542 = new cljs.core.IndexedSeq(G__14543__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__14542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__14552__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__14552 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__14553__i = 0, G__14553__a = new Array(arguments.length -  1);
while (G__14553__i < G__14553__a.length) {G__14553__a[G__14553__i] = arguments[G__14553__i + 1]; ++G__14553__i;}
  colls = new cljs.core.IndexedSeq(G__14553__a,0);
} 
return G__14552__delegate.call(this,f,colls);};
G__14552.cljs$lang$maxFixedArity = 1;
G__14552.cljs$lang$applyTo = (function (arglist__14554){
var f = cljs.core.first(arglist__14554);
var colls = cljs.core.rest(arglist__14554);
return G__14552__delegate(f,colls);
});
G__14552.cljs$core$IFn$_invoke$arity$variadic = G__14552__delegate;
return G__14552;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__14555 = null;
if (arguments.length > 1) {
var G__14556__i = 0, G__14556__a = new Array(arguments.length -  1);
while (G__14556__i < G__14556__a.length) {G__14556__a[G__14556__i] = arguments[G__14556__i + 1]; ++G__14556__i;}
G__14555 = new cljs.core.IndexedSeq(G__14556__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__14575 = null;
var G__14575__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14575__1 = (function (result){
var G__14569 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14569) : rf.call(null,G__14569));
});
var G__14575__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14570 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14570) : pred.call(null,G__14570));
})())){
var G__14571 = result;
var G__14572 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14571,G__14572) : rf.call(null,G__14571,G__14572));
} else {
return result;
}
});
G__14575 = function(result,input){
switch(arguments.length){
case 0:
return G__14575__0.call(this);
case 1:
return G__14575__1.call(this,result);
case 2:
return G__14575__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14575.cljs$core$IFn$_invoke$arity$0 = G__14575__0;
G__14575.cljs$core$IFn$_invoke$arity$1 = G__14575__1;
G__14575.cljs$core$IFn$_invoke$arity$2 = G__14575__2;
return G__14575;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4686__auto___14576 = size;
var i_14577 = (0);
while(true){
if((i_14577 < n__4686__auto___14576)){
if(cljs.core.truth_((function (){var G__14573 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14577);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14573) : pred.call(null,G__14573));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14577));
} else {
}

var G__14578 = (i_14577 + (1));
i_14577 = G__14578;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__14574 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14574) : pred.call(null,G__14574));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__14585 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14585) : branch_QMARK_.call(null,G__14585));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__14586 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14586) : children.call(null,G__14586));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__14587_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__14587_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__14590 = to;
if(G__14590){
var bit__4473__auto__ = (G__14590.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4473__auto__) || (G__14590.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__14591 = to;
if(G__14591){
var bit__4473__auto__ = (G__14591.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4473__auto__) || (G__14591.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__14593 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14593) : f.call(null,G__14593));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__14594__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__14594 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14595__i = 0, G__14595__a = new Array(arguments.length -  4);
while (G__14595__i < G__14595__a.length) {G__14595__a[G__14595__i] = arguments[G__14595__i + 4]; ++G__14595__i;}
  colls = new cljs.core.IndexedSeq(G__14595__a,0);
} 
return G__14594__delegate.call(this,f,c1,c2,c3,colls);};
G__14594.cljs$lang$maxFixedArity = 4;
G__14594.cljs$lang$applyTo = (function (arglist__14596){
var f = cljs.core.first(arglist__14596);
arglist__14596 = cljs.core.next(arglist__14596);
var c1 = cljs.core.first(arglist__14596);
arglist__14596 = cljs.core.next(arglist__14596);
var c2 = cljs.core.first(arglist__14596);
arglist__14596 = cljs.core.next(arglist__14596);
var c3 = cljs.core.first(arglist__14596);
var colls = cljs.core.rest(arglist__14596);
return G__14594__delegate(f,c1,c2,c3,colls);
});
G__14594.cljs$core$IFn$_invoke$arity$variadic = G__14594__delegate;
return G__14594;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__14597 = null;
if (arguments.length > 4) {
var G__14598__i = 0, G__14598__a = new Array(arguments.length -  4);
while (G__14598__i < G__14598__a.length) {G__14598__a[G__14598__i] = arguments[G__14598__i + 4]; ++G__14598__i;}
G__14597 = new cljs.core.IndexedSeq(G__14598__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__14600 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14600) : pred.call(null,G__14600));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__14615 = m__$1;
if(G__14615){
var bit__4480__auto__ = (G__14615.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4480__auto__) || (G__14615.cljs$core$ILookup$)){
return true;
} else {
if((!G__14615.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14615);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14615);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__14616 = sentinel;
var G__14617 = m__$2;
var G__14618 = cljs.core.next(ks__$1);
sentinel = G__14616;
m__$1 = G__14617;
ks__$1 = G__14618;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__14619,v){
var vec__14624 = p__14619;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14624,(0),null);
var ks = cljs.core.nthnext(vec__14624,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__14625,f){
var vec__14663 = p__14625;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14663,(0),null);
var ks = cljs.core.nthnext(vec__14663,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14664 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14664) : f.call(null,G__14664));
})());
}
});
var update_in__4 = (function (m,p__14626,f,a){
var vec__14665 = p__14626;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14665,(0),null);
var ks = cljs.core.nthnext(vec__14665,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14666 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14667 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14666,G__14667) : f.call(null,G__14666,G__14667));
})());
}
});
var update_in__5 = (function (m,p__14627,f,a,b){
var vec__14668 = p__14627;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14668,(0),null);
var ks = cljs.core.nthnext(vec__14668,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14669 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14670 = a;
var G__14671 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14669,G__14670,G__14671) : f.call(null,G__14669,G__14670,G__14671));
})());
}
});
var update_in__6 = (function (m,p__14628,f,a,b,c){
var vec__14672 = p__14628;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14672,(0),null);
var ks = cljs.core.nthnext(vec__14672,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14673 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14674 = a;
var G__14675 = b;
var G__14676 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14673,G__14674,G__14675,G__14676) : f.call(null,G__14673,G__14674,G__14675,G__14676));
})());
}
});
var update_in__7 = (function() { 
var G__14678__delegate = function (m,p__14629,f,a,b,c,args){
var vec__14677 = p__14629;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14677,(0),null);
var ks = cljs.core.nthnext(vec__14677,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__14678 = function (m,p__14629,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__14679__i = 0, G__14679__a = new Array(arguments.length -  6);
while (G__14679__i < G__14679__a.length) {G__14679__a[G__14679__i] = arguments[G__14679__i + 6]; ++G__14679__i;}
  args = new cljs.core.IndexedSeq(G__14679__a,0);
} 
return G__14678__delegate.call(this,m,p__14629,f,a,b,c,args);};
G__14678.cljs$lang$maxFixedArity = 6;
G__14678.cljs$lang$applyTo = (function (arglist__14680){
var m = cljs.core.first(arglist__14680);
arglist__14680 = cljs.core.next(arglist__14680);
var p__14629 = cljs.core.first(arglist__14680);
arglist__14680 = cljs.core.next(arglist__14680);
var f = cljs.core.first(arglist__14680);
arglist__14680 = cljs.core.next(arglist__14680);
var a = cljs.core.first(arglist__14680);
arglist__14680 = cljs.core.next(arglist__14680);
var b = cljs.core.first(arglist__14680);
arglist__14680 = cljs.core.next(arglist__14680);
var c = cljs.core.first(arglist__14680);
var args = cljs.core.rest(arglist__14680);
return G__14678__delegate(m,p__14629,f,a,b,c,args);
});
G__14678.cljs$core$IFn$_invoke$arity$variadic = G__14678__delegate;
return G__14678;
})()
;
update_in = function(m,p__14629,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__14629,f);
case 4:
return update_in__4.call(this,m,p__14629,f,a);
case 5:
return update_in__5.call(this,m,p__14629,f,a,b);
case 6:
return update_in__6.call(this,m,p__14629,f,a,b,c);
default:
var G__14681 = null;
if (arguments.length > 6) {
var G__14682__i = 0, G__14682__a = new Array(arguments.length -  6);
while (G__14682__i < G__14682__a.length) {G__14682__a[G__14682__i] = arguments[G__14682__i + 6]; ++G__14682__i;}
G__14681 = new cljs.core.IndexedSeq(G__14682__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__14629,f,a,b,c, G__14681);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14693 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14693) : f.call(null,G__14693));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14694 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14695 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14694,G__14695) : f.call(null,G__14694,G__14695));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14696 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14697 = x;
var G__14698 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14696,G__14697,G__14698) : f.call(null,G__14696,G__14697,G__14698));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14699 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14700 = x;
var G__14701 = y;
var G__14702 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14699,G__14700,G__14701,G__14702) : f.call(null,G__14699,G__14700,G__14701,G__14702));
})());
});
var update__7 = (function() { 
var G__14703__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__14703 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__14704__i = 0, G__14704__a = new Array(arguments.length -  6);
while (G__14704__i < G__14704__a.length) {G__14704__a[G__14704__i] = arguments[G__14704__i + 6]; ++G__14704__i;}
  more = new cljs.core.IndexedSeq(G__14704__a,0);
} 
return G__14703__delegate.call(this,m,k,f,x,y,z,more);};
G__14703.cljs$lang$maxFixedArity = 6;
G__14703.cljs$lang$applyTo = (function (arglist__14705){
var m = cljs.core.first(arglist__14705);
arglist__14705 = cljs.core.next(arglist__14705);
var k = cljs.core.first(arglist__14705);
arglist__14705 = cljs.core.next(arglist__14705);
var f = cljs.core.first(arglist__14705);
arglist__14705 = cljs.core.next(arglist__14705);
var x = cljs.core.first(arglist__14705);
arglist__14705 = cljs.core.next(arglist__14705);
var y = cljs.core.first(arglist__14705);
arglist__14705 = cljs.core.next(arglist__14705);
var z = cljs.core.first(arglist__14705);
var more = cljs.core.rest(arglist__14705);
return G__14703__delegate(m,k,f,x,y,z,more);
});
G__14703.cljs$core$IFn$_invoke$arity$variadic = G__14703__delegate;
return G__14703;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__14706 = null;
if (arguments.length > 6) {
var G__14707__i = 0, G__14707__a = new Array(arguments.length -  6);
while (G__14707__i < G__14707__a.length) {G__14707__a[G__14707__i] = arguments[G__14707__i + 6]; ++G__14707__i;}
G__14706 = new cljs.core.IndexedSeq(G__14707__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__14706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__14708 = (ll - (5));
var G__14709 = r;
ll = G__14708;
ret = G__14709;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14714 = cljs.core.pv_aget(node,(0));
var G__14715 = (level - (5));
node = G__14714;
level = G__14715;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14716 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__14717 = (level - (5));
node = G__14716;
level = G__14717;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14727 = init__$2;
var G__14728 = (j + i);
var G__14729 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14727,G__14728,G__14729) : f.call(null,G__14727,G__14728,G__14729));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14740 = (j + (1));
var G__14741 = init__$3;
j = G__14740;
init__$2 = G__14741;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14730 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14730) : cljs.core.deref.call(null,G__14730));
} else {
var G__14742 = (i + len);
var G__14743 = init__$2;
i = G__14742;
init__$1 = G__14743;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__14731 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14731) : cljs.core.tv_editable_root.call(null,G__14731));
})(),(function (){var G__14732 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14732) : cljs.core.tv_editable_tail.call(null,G__14732));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14733 = init__$2;
var G__14734 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14733,G__14734) : f.call(null,G__14733,G__14734));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14744 = (j + (1));
var G__14745 = init__$3;
j = G__14744;
init__$2 = G__14745;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14735 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14735) : cljs.core.deref.call(null,G__14735));
} else {
var G__14746 = (i + len);
var G__14747 = init__$2;
i = G__14746;
init__$1 = G__14747;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__14736 = coll__$1;
var G__14737 = cljs.core.first_array_for_longvec(coll__$1);
var G__14738 = (0);
var G__14739 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14736,G__14737,G__14738,G__14739) : cljs.core.chunked_seq.call(null,G__14736,G__14737,G__14738,G__14739));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4686__auto___14748 = len;
var i_14749 = (0);
while(true){
if((i_14749 < n__4686__auto___14748)){
(new_tail[i_14749] = (self__.tail[i_14749]));

var G__14750 = (i_14749 + (1));
i_14749 = G__14750;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__14751 = null;
var G__14751__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14751__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14751 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14751__2.call(this,self__,k);
case 3:
return G__14751__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14751.cljs$core$IFn$_invoke$arity$2 = G__14751__2;
G__14751.cljs$core$IFn$_invoke$arity$3 = G__14751__3;
return G__14751;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args14726){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14726)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__14752 = (i + (1));
var G__14753 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__14752;
out = G__14753;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14754__i = 0, G__14754__a = new Array(arguments.length -  0);
while (G__14754__i < G__14754__a.length) {G__14754__a[G__14754__i] = arguments[G__14754__i + 0]; ++G__14754__i;}
  args = new cljs.core.IndexedSeq(G__14754__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__14755){
var args = cljs.core.seq(arglist__14755);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14756 = self__.vec;
var G__14757 = self__.node;
var G__14758 = self__.i;
var G__14759 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14756,G__14757,G__14758,G__14759) : cljs.core.chunked_seq.call(null,G__14756,G__14757,G__14758,G__14759));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__14760 = self__.vec;
var G__14761 = (self__.i + self__.off);
var G__14762 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14760,G__14761,G__14762) : cljs.core.subvec.call(null,G__14760,G__14761,G__14762));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__14763 = self__.vec;
var G__14764 = (self__.i + self__.off);
var G__14765 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14763,G__14764,G__14765) : cljs.core.subvec.call(null,G__14763,G__14764,G__14765));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14766 = self__.vec;
var G__14767 = self__.node;
var G__14768 = self__.i;
var G__14769 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14766,G__14767,G__14768,G__14769) : cljs.core.chunked_seq.call(null,G__14766,G__14767,G__14768,G__14769));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14770 = self__.vec;
var G__14771 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14772 = end;
var G__14773 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14770,G__14771,G__14772,G__14773) : cljs.core.chunked_seq.call(null,G__14770,G__14771,G__14772,G__14773));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__14774 = self__.vec;
var G__14775 = self__.node;
var G__14776 = self__.i;
var G__14777 = self__.off;
var G__14778 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14774,G__14775,G__14776,G__14777,G__14778) : cljs.core.chunked_seq.call(null,G__14774,G__14775,G__14776,G__14777,G__14778));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14779 = self__.vec;
var G__14780 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14781 = end;
var G__14782 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14779,G__14780,G__14781,G__14782) : cljs.core.chunked_seq.call(null,G__14779,G__14780,G__14781,G__14782));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__14784 = self__.meta;
var G__14785 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__14786 = self__.start;
var G__14787 = (function (){var x__4116__auto__ = self__.end;
var y__4117__auto__ = (v_pos + (1));
return ((x__4116__auto__ > y__4117__auto__) ? x__4116__auto__ : y__4117__auto__);
})();
var G__14788 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14784,G__14785,G__14786,G__14787,G__14788) : cljs.core.build_subvec.call(null,G__14784,G__14785,G__14786,G__14787,G__14788));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__14789 = self__.meta;
var G__14790 = self__.v;
var G__14791 = self__.start;
var G__14792 = (self__.end - (1));
var G__14793 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14789,G__14790,G__14791,G__14792,G__14793) : cljs.core.build_subvec.call(null,G__14789,G__14790,G__14791,G__14792,G__14793));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__14795 = meta__$1;
var G__14796 = self__.v;
var G__14797 = self__.start;
var G__14798 = self__.end;
var G__14799 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14795,G__14796,G__14797,G__14798,G__14799) : cljs.core.build_subvec.call(null,G__14795,G__14796,G__14797,G__14798,G__14799));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__14800 = self__.meta;
var G__14801 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__14802 = self__.start;
var G__14803 = (self__.end + (1));
var G__14804 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14800,G__14801,G__14802,G__14803,G__14804) : cljs.core.build_subvec.call(null,G__14800,G__14801,G__14802,G__14803,G__14804));
});

cljs.core.Subvec.prototype.call = (function() {
var G__14805 = null;
var G__14805__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14805__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14805 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14805__2.call(this,self__,k);
case 3:
return G__14805__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14805.cljs$core$IFn$_invoke$arity$2 = G__14805__2;
G__14805.cljs$core$IFn$_invoke$arity$3 = G__14805__3;
return G__14805;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args14783){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14783)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__14806 = meta;
var G__14807 = v.v;
var G__14808 = (v.start + start);
var G__14809 = (v.start + end);
var G__14810 = __hash;
meta = G__14806;
v = G__14807;
start = G__14808;
end = G__14809;
__hash = G__14810;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj14817 = {};
return obj14817;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__14825 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__14826 = (level - (5));
node = G__14825;
level = G__14826;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__14830 = null;
var G__14830__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14830__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14830 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14830__2.call(this,self__,k);
case 3:
return G__14830__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14830.cljs$core$IFn$_invoke$arity$2 = G__14830__2;
G__14830.cljs$core$IFn$_invoke$arity$3 = G__14830__3;
return G__14830;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args14827){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14827)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3799__auto__ = self__.front;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3799__auto__ = self__.rear;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__14831 = (i + incr);
i = G__14831;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__14832 = (i + (1));
var G__14833 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__14832;
out = G__14833;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj14837 = {};
return obj14837;
})();
var l = ks.length;
var i_14838 = (0);
while(true){
if((i_14838 < l)){
var k_14839 = (ks[i_14838]);
(new_obj[k_14839] = (obj[k_14839]));

var G__14840 = (i_14838 + (1));
i_14838 = G__14840;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3787__auto__ = (function (){var G__14844 = k;
return goog.isString(G__14844);
})();
if(cljs.core.truth_(and__3787__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3787__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__14845 = init__$1;
var G__14846 = k;
var G__14847 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14845,G__14846,G__14847) : f.call(null,G__14845,G__14846,G__14847));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14848 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14848) : cljs.core.deref.call(null,G__14848));
} else {
var G__14854 = cljs.core.rest(keys__$1);
var G__14855 = init__$2;
keys__$1 = G__14854;
init__$1 = G__14855;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3787__auto__ = (function (){var G__14850 = k;
return goog.isString(G__14850);
})();
if(cljs.core.truth_(and__3787__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3787__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__14851 = k;
return goog.isString(G__14851);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3787__auto__ = (function (){var G__14853 = k;
return goog.isString(G__14853);
})();
if(cljs.core.truth_(and__3787__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3787__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__14841_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__14841_SHARP_,(self__.strobj[p1__14841_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__14856 = null;
var G__14856__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14856__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14856 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14856__2.call(this,self__,k);
case 3:
return G__14856__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14856.cljs$core$IFn$_invoke$arity$2 = G__14856__2;
G__14856.cljs$core$IFn$_invoke$arity$3 = G__14856__3;
return G__14856;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args14842){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14842)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj14858 = {};
return obj14858;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__14859 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14859,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14859,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__14860 = (i + (2));
i = G__14860;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__14861 = (i + (2));
i = G__14861;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__14862 = (i + (2));
i = G__14862;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__14863 = (i + (2));
i = G__14863;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__14864 = (i + (2));
i = G__14864;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3799__auto__ = (function (){var G__14868 = k;
return goog.isString(G__14868);
})();
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_14869 = (0);
while(true){
if((i_14869 < l)){
(narr[i_14869] = (arr[i_14869]));

var G__14870 = (i_14869 + (1));
i_14869 = G__14870;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14872 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14872) : cljs.core.keys.call(null,G__14872));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14873 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14873) : cljs.core.vals.call(null,G__14873));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14874 = cljs.core.seq(coll);
var chunk__14875 = null;
var count__14876 = (0);
var i__14877 = (0);
while(true){
if((i__14877 < count__14876)){
var vec__14878 = chunk__14875.cljs$core$IIndexed$_nth$arity$2(null,i__14877);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14878,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14878,(1),null);
var G__14879_14892 = v;
var G__14880_14893 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14879_14892,G__14880_14893) : f.call(null,G__14879_14892,G__14880_14893));

var G__14894 = seq__14874;
var G__14895 = chunk__14875;
var G__14896 = count__14876;
var G__14897 = (i__14877 + (1));
seq__14874 = G__14894;
chunk__14875 = G__14895;
count__14876 = G__14896;
i__14877 = G__14897;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14874);
if(temp__4126__auto__){
var seq__14874__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14874__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__14874__$1);
var G__14898 = cljs.core.chunk_rest(seq__14874__$1);
var G__14899 = c__4586__auto__;
var G__14900 = cljs.core.count(c__4586__auto__);
var G__14901 = (0);
seq__14874 = G__14898;
chunk__14875 = G__14899;
count__14876 = G__14900;
i__14877 = G__14901;
continue;
} else {
var vec__14881 = cljs.core.first(seq__14874__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14881,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14881,(1),null);
var G__14882_14902 = v;
var G__14883_14903 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14882_14902,G__14883_14903) : f.call(null,G__14882_14902,G__14883_14903));

var G__14904 = cljs.core.next(seq__14874__$1);
var G__14905 = null;
var G__14906 = (0);
var G__14907 = (0);
seq__14874 = G__14904;
chunk__14875 = G__14905;
count__14876 = G__14906;
i__14877 = G__14907;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__14884 = init__$1;
var G__14885 = (self__.arr[i]);
var G__14886 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14884,G__14885,G__14886) : f.call(null,G__14884,G__14885,G__14886));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14887 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14887) : cljs.core.deref.call(null,G__14887));
} else {
var G__14908 = (i + (2));
var G__14909 = init__$2;
i = G__14908;
init__$1 = G__14909;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__14888 = other;
if(G__14888){
var bit__4473__auto__ = (G__14888.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4473__auto__) || (G__14888.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__14910 = (i + (2));
i = G__14910;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj14890 = {};
return obj14890;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__14911 = (s + (2));
var G__14912 = d;
s = G__14911;
d = G__14912;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__14913 = (s + (2));
var G__14914 = (d + (2));
s = G__14913;
d = G__14914;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__14891 = cljs.core.aclone(self__.arr);
(G__14891[(idx + (1))] = v);

return G__14891;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14915 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14916 = cljs.core.next(es);
ret = G__14915;
es = G__14916;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__14917 = null;
var G__14917__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14917__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14917 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14917__2.call(this,self__,k);
case 3:
return G__14917__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14917.cljs$core$IFn$_invoke$arity$2 = G__14917__2;
G__14917.cljs$core$IFn$_invoke$arity$3 = G__14917__3;
return G__14917;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args14871){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14871)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__14918 = (i + (2));
var G__14919 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__14918;
ret = G__14919;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__14920_14928 = self__.arr;
G__14920_14928.pop();

G__14920_14928.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__14921 = self__.len;
var G__14922 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__14921,G__14922) : cljs.core.array__GT_transient_hash_map.call(null,G__14921,G__14922));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__14923 = o;
if(G__14923){
var bit__4480__auto__ = (G__14923.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4480__auto__) || (G__14923.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__14923.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14923);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14923);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__14924 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14924) : cljs.core.key.call(null,G__14924));
})(),(function (){var G__14925 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14925) : cljs.core.val.call(null,G__14925));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__14929 = cljs.core.next(es);
var G__14930 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__14926 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14926) : cljs.core.key.call(null,G__14926));
})(),(function (){var G__14927 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14927) : cljs.core.val.call(null,G__14927));
})());
es = G__14929;
tcoll__$2 = G__14930;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__14931 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__14932 = (i + (2));
out = G__14931;
i = G__14932;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__14935 = cljs.core.aclone(arr);
(G__14935[i] = a);

return G__14935;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__14936 = cljs.core.aclone(arr);
(G__14936[i] = a);

(G__14936[j] = b);

return G__14936;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__14941 = init__$1;
var G__14942 = k;
var G__14943 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14941,G__14942,G__14943) : f.call(null,G__14941,G__14942,G__14943));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14944 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14944) : cljs.core.deref.call(null,G__14944));
} else {
var G__14945 = (i + (2));
var G__14946 = init__$2;
i = G__14945;
init__$1 = G__14946;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14947 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14947) : cljs.core.create_inode_seq.call(null,G__14947));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14961 = (0);
var j_14962 = (0);
while(true){
if((i_14961 < (32))){
if((((self__.bitmap >>> i_14961) & (1)) === (0))){
var G__14963 = (i_14961 + (1));
var G__14964 = j_14962;
i_14961 = G__14963;
j_14962 = G__14964;
continue;
} else {
(nodes[i_14961] = ((!(((self__.arr[j_14962]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_14962])),(self__.arr[j_14962]),(self__.arr[(j_14962 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14962 + (1))])));

var G__14965 = (i_14961 + (1));
var G__14966 = (j_14962 + (2));
i_14961 = G__14965;
j_14962 = G__14966;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__14948 = edit__$1;
var G__14949 = (shift + (5));
var G__14950 = key_or_nil;
var G__14951 = val_or_node;
var G__14952 = hash;
var G__14953 = key;
var G__14954 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__14948,G__14949,G__14950,G__14951,G__14952,G__14953,G__14954) : cljs.core.create_node.call(null,G__14948,G__14949,G__14950,G__14951,G__14952,G__14953,G__14954));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14967 = (0);
var j_14968 = (0);
while(true){
if((i_14967 < (32))){
if((((self__.bitmap >>> i_14967) & (1)) === (0))){
var G__14969 = (i_14967 + (1));
var G__14970 = j_14968;
i_14967 = G__14969;
j_14968 = G__14970;
continue;
} else {
(nodes[i_14967] = ((!(((self__.arr[j_14968]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_14968])),(self__.arr[j_14968]),(self__.arr[(j_14968 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14968 + (1))])));

var G__14971 = (i_14967 + (1));
var G__14972 = (j_14968 + (2));
i_14967 = G__14971;
j_14968 = G__14972;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__14955 = (shift + (5));
var G__14956 = key_or_nil;
var G__14957 = val_or_node;
var G__14958 = hash;
var G__14959 = key;
var G__14960 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__14955,G__14956,G__14957,G__14958,G__14959,G__14960) : cljs.core.create_node.call(null,G__14955,G__14956,G__14957,G__14958,G__14959,G__14960));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__14973 = (i + (1));
var G__14974 = (j + (2));
var G__14975 = (bitmap | ((1) << i));
i = G__14973;
j = G__14974;
bitmap = G__14975;
continue;
} else {
var G__14976 = (i + (1));
var G__14977 = j;
var G__14978 = bitmap;
i = G__14976;
j = G__14977;
bitmap = G__14978;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14979 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__14979) : cljs.core.create_array_node_seq.call(null,G__14979));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14980 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14980) : cljs.core.deref.call(null,G__14980));
} else {
var G__14981 = (i + (1));
var G__14982 = init__$2;
i = G__14981;
init__$1 = G__14982;
continue;
}
} else {
var G__14983 = (i + (1));
var G__14984 = init__$1;
i = G__14983;
init__$1 = G__14984;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__14985 = (i + (2));
i = G__14985;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14986 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14986) : cljs.core.create_inode_seq.call(null,G__14986));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__14987 = self__.nodes;
var G__14988 = (self__.i + (2));
var G__14989 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14987,G__14988,G__14989) : cljs.core.create_inode_seq.call(null,G__14987,G__14988,G__14989));
} else {
var G__14990 = self__.nodes;
var G__14991 = self__.i;
var G__14992 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14990,G__14991,G__14992) : cljs.core.create_inode_seq.call(null,G__14990,G__14991,G__14992));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__14996 = (j + (2));
j = G__14996;
continue;
}
} else {
var G__14997 = (j + (2));
j = G__14997;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__14998 = null;
var G__14999 = self__.nodes;
var G__15000 = self__.i;
var G__15001 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__14998,G__14999,G__15000,G__15001) : cljs.core.create_array_node_seq.call(null,G__14998,G__14999,G__15000,G__15001));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15006 = (j + (1));
j = G__15006;
continue;
}
} else {
var G__15007 = (j + (1));
j = G__15007;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15009 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15009) : cljs.core.keys.call(null,G__15009));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15010 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15010) : cljs.core.vals.call(null,G__15010));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15011 = cljs.core.seq(coll);
var chunk__15012 = null;
var count__15013 = (0);
var i__15014 = (0);
while(true){
if((i__15014 < count__15013)){
var vec__15015 = chunk__15012.cljs$core$IIndexed$_nth$arity$2(null,i__15014);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15015,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15015,(1),null);
var G__15016_15027 = v;
var G__15017_15028 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15016_15027,G__15017_15028) : f.call(null,G__15016_15027,G__15017_15028));

var G__15029 = seq__15011;
var G__15030 = chunk__15012;
var G__15031 = count__15013;
var G__15032 = (i__15014 + (1));
seq__15011 = G__15029;
chunk__15012 = G__15030;
count__15013 = G__15031;
i__15014 = G__15032;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15011);
if(temp__4126__auto__){
var seq__15011__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15011__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__15011__$1);
var G__15033 = cljs.core.chunk_rest(seq__15011__$1);
var G__15034 = c__4586__auto__;
var G__15035 = cljs.core.count(c__4586__auto__);
var G__15036 = (0);
seq__15011 = G__15033;
chunk__15012 = G__15034;
count__15013 = G__15035;
i__15014 = G__15036;
continue;
} else {
var vec__15018 = cljs.core.first(seq__15011__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15018,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15018,(1),null);
var G__15019_15037 = v;
var G__15020_15038 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15019_15037,G__15020_15038) : f.call(null,G__15019_15037,G__15020_15038));

var G__15039 = cljs.core.next(seq__15011__$1);
var G__15040 = null;
var G__15041 = (0);
var G__15042 = (0);
seq__15011 = G__15039;
chunk__15012 = G__15040;
count__15013 = G__15041;
i__15014 = G__15042;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15021 = init;
var G__15022 = null;
var G__15023 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15021,G__15022,G__15023) : f.call(null,G__15021,G__15022,G__15023));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15024 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15024) : cljs.core.deref.call(null,G__15024));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15026 = {};
return obj15026;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15043 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15044 = cljs.core.next(es);
ret = G__15043;
es = G__15044;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__15045 = null;
var G__15045__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15045__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15045 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15045__2.call(this,self__,k);
case 3:
return G__15045__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15045.cljs$core$IFn$_invoke$arity$2 = G__15045__2;
G__15045.cljs$core$IFn$_invoke$arity$3 = G__15045__3;
return G__15045;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15008){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15008)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15046 = (i + (1));
var G__15047 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__15046;
out = G__15047;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__15048 = o;
if(G__15048){
var bit__4480__auto__ = (G__15048.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4480__auto__) || (G__15048.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15048.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15048);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15048);
}
})()){
return tcoll.assoc_BANG_((function (){var G__15049 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15049) : cljs.core.key.call(null,G__15049));
})(),(function (){var G__15050 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15050) : cljs.core.val.call(null,G__15050));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15053 = cljs.core.next(es);
var G__15054 = tcoll__$1.assoc_BANG_((function (){var G__15051 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15051) : cljs.core.key.call(null,G__15051));
})(),(function (){var G__15052 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15052) : cljs.core.val.call(null,G__15052));
})());
es = G__15053;
tcoll__$1 = G__15054;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__15055 = ((ascending_QMARK_)?t.left:t.right);
var G__15056 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__15055;
stack__$1 = G__15056;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15069 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15069) : cljs.core.deref.call(null,G__15069));
} else {
var init__$2 = (function (){var G__15070 = init__$1;
var G__15071 = node.key;
var G__15072 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15070,G__15071,G__15072) : f.call(null,G__15070,G__15071,G__15072));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15073 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15073) : cljs.core.deref.call(null,G__15073));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__15074 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15074) : cljs.core.deref.call(null,G__15074));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__15076 = null;
var G__15076__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15076__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15076 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15076__2.call(this,self__,k);
case 3:
return G__15076__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15076.cljs$core$IFn$_invoke$arity$2 = G__15076__2;
G__15076.cljs$core$IFn$_invoke$arity$3 = G__15076__3;
return G__15076;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args15075){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15075)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__15078 = null;
var G__15078__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15078__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15078 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15078__2.call(this,self__,k);
case 3:
return G__15078__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15078.cljs$core$IFn$_invoke$arity$2 = G__15078__2;
G__15078.cljs$core$IFn$_invoke$arity$3 = G__15078__3;
return G__15078;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args15077){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15077)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__15091 = k;
var G__15092 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15091,G__15092) : comp.call(null,G__15091,G__15092));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__15111 = k;
var G__15112 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15111,G__15112) : comp.call(null,G__15111,G__15112));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__15123 = k;
var G__15124 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15123,G__15124) : comp.call(null,G__15123,G__15124));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15126 = cljs.core.seq(coll);
var chunk__15127 = null;
var count__15128 = (0);
var i__15129 = (0);
while(true){
if((i__15129 < count__15128)){
var vec__15130 = chunk__15127.cljs$core$IIndexed$_nth$arity$2(null,i__15129);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15130,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15130,(1),null);
var G__15131_15143 = v;
var G__15132_15144 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15131_15143,G__15132_15144) : f.call(null,G__15131_15143,G__15132_15144));

var G__15145 = seq__15126;
var G__15146 = chunk__15127;
var G__15147 = count__15128;
var G__15148 = (i__15129 + (1));
seq__15126 = G__15145;
chunk__15127 = G__15146;
count__15128 = G__15147;
i__15129 = G__15148;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15126);
if(temp__4126__auto__){
var seq__15126__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15126__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__15126__$1);
var G__15149 = cljs.core.chunk_rest(seq__15126__$1);
var G__15150 = c__4586__auto__;
var G__15151 = cljs.core.count(c__4586__auto__);
var G__15152 = (0);
seq__15126 = G__15149;
chunk__15127 = G__15150;
count__15128 = G__15151;
i__15129 = G__15152;
continue;
} else {
var vec__15133 = cljs.core.first(seq__15126__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15133,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15133,(1),null);
var G__15134_15153 = v;
var G__15135_15154 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15134_15153,G__15135_15154) : f.call(null,G__15134_15153,G__15135_15154));

var G__15155 = cljs.core.next(seq__15126__$1);
var G__15156 = null;
var G__15157 = (0);
var G__15158 = (0);
seq__15126 = G__15155;
chunk__15127 = G__15156;
count__15128 = G__15157;
i__15129 = G__15158;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15136 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15136) : cljs.core.keys.call(null,G__15136));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15137 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15137) : cljs.core.vals.call(null,G__15137));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15138 = k;
var G__15139 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15138,G__15139) : self__.comp.call(null,G__15138,G__15139));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__15159 = t.left;
t = G__15159;
continue;
} else {
var G__15160 = t.right;
t = G__15160;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15161 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15162 = cljs.core.next(es);
ret = G__15161;
es = G__15162;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__15163 = null;
var G__15163__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15163__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15163 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15163__2.call(this,self__,k);
case 3:
return G__15163__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15163.cljs$core$IFn$_invoke$arity$2 = G__15163__2;
G__15163.cljs$core$IFn$_invoke$arity$3 = G__15163__3;
return G__15163;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args15125){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15125)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15140 = k;
var G__15141 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15140,G__15141) : self__.comp.call(null,G__15140,G__15141));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__15164 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15165 = t.left;
stack = G__15164;
t = G__15165;
continue;
} else {
var G__15166 = stack;
var G__15167 = t.right;
stack = G__15166;
t = G__15167;
continue;
}
} else {
if((c > (0))){
var G__15168 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15169 = t.right;
stack = G__15168;
t = G__15169;
continue;
} else {
var G__15170 = stack;
var G__15171 = t.left;
stack = G__15170;
t = G__15171;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__15142 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15142) : cljs.core.key.call(null,G__15142));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__15172 = cljs.core.nnext(in$);
var G__15173 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15172;
out = G__15173;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15174__i = 0, G__15174__a = new Array(arguments.length -  0);
while (G__15174__i < G__15174__a.length) {G__15174__a[G__15174__i] = arguments[G__15174__i + 0]; ++G__15174__i;}
  keyvals = new cljs.core.IndexedSeq(G__15174__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__15175){
var keyvals = cljs.core.seq(arglist__15175);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15176__i = 0, G__15176__a = new Array(arguments.length -  0);
while (G__15176__i < G__15176__a.length) {G__15176__a[G__15176__i] = arguments[G__15176__i + 0]; ++G__15176__i;}
  keyvals = new cljs.core.IndexedSeq(G__15176__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__15177){
var keyvals = cljs.core.seq(arglist__15177);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj15181 = {};
return obj15181;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__15182 = cljs.core.nnext(kvs);
kvs = G__15182;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15183__i = 0, G__15183__a = new Array(arguments.length -  0);
while (G__15183__i < G__15183__a.length) {G__15183__a[G__15183__i] = arguments[G__15183__i + 0]; ++G__15183__i;}
  keyvals = new cljs.core.IndexedSeq(G__15183__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__15184){
var keyvals = cljs.core.seq(arglist__15184);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__15185 = cljs.core.nnext(in$);
var G__15186 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15185;
out = G__15186;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15187__i = 0, G__15187__a = new Array(arguments.length -  0);
while (G__15187__i < G__15187__a.length) {G__15187__a[G__15187__i] = arguments[G__15187__i + 0]; ++G__15187__i;}
  keyvals = new cljs.core.IndexedSeq(G__15187__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__15188){
var keyvals = cljs.core.seq(arglist__15188);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__15189 = cljs.core.nnext(in$);
var G__15190 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15189;
out = G__15190;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__15191__i = 0, G__15191__a = new Array(arguments.length -  1);
while (G__15191__i < G__15191__a.length) {G__15191__a[G__15191__i] = arguments[G__15191__i + 1]; ++G__15191__i;}
  keyvals = new cljs.core.IndexedSeq(G__15191__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__15192){
var comparator = cljs.core.first(arglist__15192);
var keyvals = cljs.core.rest(arglist__15192);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15193 = self__.mseq;
if(G__15193){
var bit__4480__auto__ = (G__15193.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4480__auto__) || (G__15193.cljs$core$INext$)){
return true;
} else {
if((!G__15193.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15193);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15193);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15194 = self__.mseq;
if(G__15194){
var bit__4480__auto__ = (G__15194.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4480__auto__) || (G__15194.cljs$core$INext$)){
return true;
} else {
if((!G__15194.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15194);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15194);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15195 = self__.mseq;
if(G__15195){
var bit__4480__auto__ = (G__15195.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4480__auto__) || (G__15195.cljs$core$INext$)){
return true;
} else {
if((!G__15195.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15195);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15195);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15196 = self__.mseq;
if(G__15196){
var bit__4480__auto__ = (G__15196.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4480__auto__) || (G__15196.cljs$core$INext$)){
return true;
} else {
if((!G__15196.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15196);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15196);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__15197_SHARP_,p2__15198_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3799__auto__ = p1__15197_SHARP_;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__15198_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__15199__i = 0, G__15199__a = new Array(arguments.length -  0);
while (G__15199__i < G__15199__a.length) {G__15199__a[G__15199__i] = arguments[G__15199__i + 0]; ++G__15199__i;}
  maps = new cljs.core.IndexedSeq(G__15199__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__15200){
var maps = cljs.core.seq(arglist__15200);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15203 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15204 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15203,G__15204) : f.call(null,G__15203,G__15204));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3799__auto__ = m1;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__15205__i = 0, G__15205__a = new Array(arguments.length -  1);
while (G__15205__i < G__15205__a.length) {G__15205__a[G__15205__i] = arguments[G__15205__i + 1]; ++G__15205__i;}
  maps = new cljs.core.IndexedSeq(G__15205__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__15206){
var f = cljs.core.first(arglist__15206);
var maps = cljs.core.rest(arglist__15206);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__15207 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__15208 = cljs.core.next(keys);
ret = G__15207;
keys = G__15208;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15211 = cljs.core.seq(coll);
var chunk__15212 = null;
var count__15213 = (0);
var i__15214 = (0);
while(true){
if((i__15214 < count__15213)){
var vec__15215 = chunk__15212.cljs$core$IIndexed$_nth$arity$2(null,i__15214);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15215,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15215,(1),null);
var G__15216_15221 = v;
var G__15217_15222 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15216_15221,G__15217_15222) : f.call(null,G__15216_15221,G__15217_15222));

var G__15223 = seq__15211;
var G__15224 = chunk__15212;
var G__15225 = count__15213;
var G__15226 = (i__15214 + (1));
seq__15211 = G__15223;
chunk__15212 = G__15224;
count__15213 = G__15225;
i__15214 = G__15226;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15211);
if(temp__4126__auto__){
var seq__15211__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15211__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__15211__$1);
var G__15227 = cljs.core.chunk_rest(seq__15211__$1);
var G__15228 = c__4586__auto__;
var G__15229 = cljs.core.count(c__4586__auto__);
var G__15230 = (0);
seq__15211 = G__15227;
chunk__15212 = G__15228;
count__15213 = G__15229;
i__15214 = G__15230;
continue;
} else {
var vec__15218 = cljs.core.first(seq__15211__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15218,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15218,(1),null);
var G__15219_15231 = v;
var G__15220_15232 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15219_15231,G__15220_15232) : f.call(null,G__15219_15231,G__15220_15232));

var G__15233 = cljs.core.next(seq__15211__$1);
var G__15234 = null;
var G__15235 = (0);
var G__15236 = (0);
seq__15211 = G__15233;
chunk__15212 = G__15234;
count__15213 = G__15235;
i__15214 = G__15236;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15209_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15209_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__15237 = null;
var G__15237__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15237__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15237 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15237__2.call(this,self__,k);
case 3:
return G__15237__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15237.cljs$core$IFn$_invoke$arity$2 = G__15237__2;
G__15237.cljs$core$IFn$_invoke$arity$3 = G__15237__3;
return G__15237;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args15210){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15210)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15238 = (i + (1));
var G__15239 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__15238;
out = G__15239;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__15240 = (i + (1));
var G__15241 = cljs.core._conj_BANG_(out,(items[i]));
i = G__15240;
out = G__15241;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__15243 = null;
var G__15243__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__15243__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__15243 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15243__2.call(this,self__,k);
case 3:
return G__15243__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15243.cljs$core$IFn$_invoke$arity$2 = G__15243__2;
G__15243.cljs$core$IFn$_invoke$arity$3 = G__15243__3;
return G__15243;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args15242){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15242)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15246 = cljs.core.seq(coll);
var chunk__15247 = null;
var count__15248 = (0);
var i__15249 = (0);
while(true){
if((i__15249 < count__15248)){
var vec__15250 = chunk__15247.cljs$core$IIndexed$_nth$arity$2(null,i__15249);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15250,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15250,(1),null);
var G__15251_15256 = v;
var G__15252_15257 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15251_15256,G__15252_15257) : f.call(null,G__15251_15256,G__15252_15257));

var G__15258 = seq__15246;
var G__15259 = chunk__15247;
var G__15260 = count__15248;
var G__15261 = (i__15249 + (1));
seq__15246 = G__15258;
chunk__15247 = G__15259;
count__15248 = G__15260;
i__15249 = G__15261;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15246);
if(temp__4126__auto__){
var seq__15246__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15246__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__15246__$1);
var G__15262 = cljs.core.chunk_rest(seq__15246__$1);
var G__15263 = c__4586__auto__;
var G__15264 = cljs.core.count(c__4586__auto__);
var G__15265 = (0);
seq__15246 = G__15262;
chunk__15247 = G__15263;
count__15248 = G__15264;
i__15249 = G__15265;
continue;
} else {
var vec__15253 = cljs.core.first(seq__15246__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15253,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15253,(1),null);
var G__15254_15266 = v;
var G__15255_15267 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15254_15266,G__15255_15267) : f.call(null,G__15254_15266,G__15255_15267));

var G__15268 = cljs.core.next(seq__15246__$1);
var G__15269 = null;
var G__15270 = (0);
var G__15271 = (0);
seq__15246 = G__15268;
chunk__15247 = G__15269;
count__15248 = G__15270;
i__15249 = G__15271;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15244_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15244_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__15272 = null;
var G__15272__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15272__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15272 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15272__2.call(this,self__,k);
case 3:
return G__15272__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15272.cljs$core$IFn$_invoke$arity$2 = G__15272__2;
G__15272.cljs$core$IFn$_invoke$arity$3 = G__15272__3;
return G__15272;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args15245){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15245)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4680__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4680__auto__.length)){
var G__15273 = (i + (1));
var G__15274 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__15273;
res = G__15274;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__15275 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__15276 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__15275;
out = G__15276;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__15277__delegate = function (keys){
return cljs.core.set(keys);
};
var G__15277 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15278__i = 0, G__15278__a = new Array(arguments.length -  0);
while (G__15278__i < G__15278__a.length) {G__15278__a[G__15278__i] = arguments[G__15278__i + 0]; ++G__15278__i;}
  keys = new cljs.core.IndexedSeq(G__15278__a,0);
} 
return G__15277__delegate.call(this,keys);};
G__15277.cljs$lang$maxFixedArity = 0;
G__15277.cljs$lang$applyTo = (function (arglist__15279){
var keys = cljs.core.seq(arglist__15279);
return G__15277__delegate(keys);
});
G__15277.cljs$core$IFn$_invoke$arity$variadic = G__15277__delegate;
return G__15277;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__15280 = null;
if (arguments.length > 0) {
var G__15281__i = 0, G__15281__a = new Array(arguments.length -  0);
while (G__15281__i < G__15281__a.length) {G__15281__a[G__15281__i] = arguments[G__15281__i + 0]; ++G__15281__i;}
G__15280 = new cljs.core.IndexedSeq(G__15281__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15282__i = 0, G__15282__a = new Array(arguments.length -  0);
while (G__15282__i < G__15282__a.length) {G__15282__a[G__15282__i] = arguments[G__15282__i + 0]; ++G__15282__i;}
  keys = new cljs.core.IndexedSeq(G__15282__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__15283){
var keys = cljs.core.seq(arglist__15283);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__15284__i = 0, G__15284__a = new Array(arguments.length -  1);
while (G__15284__i < G__15284__a.length) {G__15284__a[G__15284__i] = arguments[G__15284__i + 1]; ++G__15284__i;}
  keys = new cljs.core.IndexedSeq(G__15284__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__15285){
var comparator = cljs.core.first(arglist__15285);
var keys = cljs.core.rest(arglist__15285);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__15286_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15286_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__15286_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15287_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15287_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__15287_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__15298,seen__$1){
while(true){
var vec__15299 = p__15298;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15299,(0),null);
var xs__$1 = vec__15299;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__15300 = cljs.core.rest(s);
var G__15301 = seen__$1;
p__15298 = G__15300;
seen__$1 = G__15301;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__15302 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__15303 = cljs.core.next(s__$1);
ret = G__15302;
s__$1 = G__15303;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__15305 = x;
if(G__15305){
var bit__4473__auto__ = (G__15305.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4473__auto__) || (G__15305.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__15306 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__15307 = cljs.core.next(ks);
var G__15308 = cljs.core.next(vs);
map = G__15306;
ks = G__15307;
vs = G__15308;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__15319 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15319) : k.call(null,G__15319));
})() > (function (){var G__15320 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15320) : k.call(null,G__15320));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__15321__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15309_SHARP_,p2__15310_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__15309_SHARP_,p2__15310_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15321 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15322__i = 0, G__15322__a = new Array(arguments.length -  3);
while (G__15322__i < G__15322__a.length) {G__15322__a[G__15322__i] = arguments[G__15322__i + 3]; ++G__15322__i;}
  more = new cljs.core.IndexedSeq(G__15322__a,0);
} 
return G__15321__delegate.call(this,k,x,y,more);};
G__15321.cljs$lang$maxFixedArity = 3;
G__15321.cljs$lang$applyTo = (function (arglist__15323){
var k = cljs.core.first(arglist__15323);
arglist__15323 = cljs.core.next(arglist__15323);
var x = cljs.core.first(arglist__15323);
arglist__15323 = cljs.core.next(arglist__15323);
var y = cljs.core.first(arglist__15323);
var more = cljs.core.rest(arglist__15323);
return G__15321__delegate(k,x,y,more);
});
G__15321.cljs$core$IFn$_invoke$arity$variadic = G__15321__delegate;
return G__15321;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__15324 = null;
if (arguments.length > 3) {
var G__15325__i = 0, G__15325__a = new Array(arguments.length -  3);
while (G__15325__i < G__15325__a.length) {G__15325__a[G__15325__i] = arguments[G__15325__i + 3]; ++G__15325__i;}
G__15324 = new cljs.core.IndexedSeq(G__15325__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__15336 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15336) : k.call(null,G__15336));
})() < (function (){var G__15337 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15337) : k.call(null,G__15337));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__15338__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15326_SHARP_,p2__15327_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__15326_SHARP_,p2__15327_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15338 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15339__i = 0, G__15339__a = new Array(arguments.length -  3);
while (G__15339__i < G__15339__a.length) {G__15339__a[G__15339__i] = arguments[G__15339__i + 3]; ++G__15339__i;}
  more = new cljs.core.IndexedSeq(G__15339__a,0);
} 
return G__15338__delegate.call(this,k,x,y,more);};
G__15338.cljs$lang$maxFixedArity = 3;
G__15338.cljs$lang$applyTo = (function (arglist__15340){
var k = cljs.core.first(arglist__15340);
arglist__15340 = cljs.core.next(arglist__15340);
var x = cljs.core.first(arglist__15340);
arglist__15340 = cljs.core.next(arglist__15340);
var y = cljs.core.first(arglist__15340);
var more = cljs.core.rest(arglist__15340);
return G__15338__delegate(k,x,y,more);
});
G__15338.cljs$core$IFn$_invoke$arity$variadic = G__15338__delegate;
return G__15338;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__15341 = null;
if (arguments.length > 3) {
var G__15342__i = 0, G__15342__a = new Array(arguments.length -  3);
while (G__15342__i < G__15342__a.length) {G__15342__a[G__15342__i] = arguments[G__15342__i + 3]; ++G__15342__i;}
G__15341 = new cljs.core.IndexedSeq(G__15342__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__15359 = null;
var G__15359__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15359__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15354 = result;
var G__15355 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15354,G__15355) : rf.call(null,G__15354,G__15355));
})());
})());
var G__15356 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15356) : rf.call(null,G__15356));
});
var G__15359__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__15357 = result;
var G__15358 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15357,G__15358) : rf.call(null,G__15357,G__15358));
} else {
return result;
}
});
G__15359 = function(result,input){
switch(arguments.length){
case 0:
return G__15359__0.call(this);
case 1:
return G__15359__1.call(this,result);
case 2:
return G__15359__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15359.cljs$core$IFn$_invoke$arity$0 = G__15359__0;
G__15359.cljs$core$IFn$_invoke$arity$1 = G__15359__1;
G__15359.cljs$core$IFn$_invoke$arity$2 = G__15359__2;
return G__15359;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__15372 = null;
var G__15372__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15372__1 = (function (result){
var G__15367 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15367) : rf.call(null,G__15367));
});
var G__15372__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15368 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15368) : pred.call(null,G__15368));
})())){
var G__15369 = result;
var G__15370 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15369,G__15370) : rf.call(null,G__15369,G__15370));
} else {
return cljs.core.reduced(result);
}
});
G__15372 = function(result,input){
switch(arguments.length){
case 0:
return G__15372__0.call(this);
case 1:
return G__15372__1.call(this,result);
case 2:
return G__15372__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15372.cljs$core$IFn$_invoke$arity$0 = G__15372__0;
G__15372.cljs$core$IFn$_invoke$arity$1 = G__15372__1;
G__15372.cljs$core$IFn$_invoke$arity$2 = G__15372__2;
return G__15372;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__15371 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15371) : pred.call(null,G__15371));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__15377 = (function (){var G__15379 = cljs.core._entry_key(sc,e);
var G__15380 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15379,G__15380) : comp.call(null,G__15379,G__15380));
})();
var G__15378 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15377,G__15378) : test.call(null,G__15377,G__15378));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15384 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15384,(0),null);
var s = vec__15384;
if(cljs.core.truth_((function (){var G__15385 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15385) : include.call(null,G__15385));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15386 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15386,(0),null);
var s = vec__15386;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15390 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15390,(0),null);
var s = vec__15390;
if(cljs.core.truth_((function (){var G__15391 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15391) : include.call(null,G__15391));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15392 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15392,(0),null);
var s = vec__15392;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__15393 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15393) : Math.ceil.call(null,G__15393));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4220__auto__ = self__.__hash;
if(!((h__4220__auto__ == null))){
return h__4220__auto__;
} else {
var h__4220__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4220__auto____$1;

return h__4220__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__15394 = ret;
var G__15395 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15394,G__15395) : f.call(null,G__15394,G__15395));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__15396 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15396) : cljs.core.deref.call(null,G__15396));
} else {
var G__15397 = (i + self__.step);
var G__15398 = ret__$1;
i = G__15397;
ret = G__15398;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15416 = null;
var G__15416__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15416__1 = (function (result){
var G__15413 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15413) : rf.call(null,G__15413));
});
var G__15416__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__15414 = result;
var G__15415 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15414,G__15415) : rf.call(null,G__15414,G__15415));
} else {
return result;
}
});
G__15416 = function(result,input){
switch(arguments.length){
case 0:
return G__15416__0.call(this);
case 1:
return G__15416__1.call(this,result);
case 2:
return G__15416__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15416.cljs$core$IFn$_invoke$arity$0 = G__15416__0;
G__15416.cljs$core$IFn$_invoke$arity$1 = G__15416__1;
G__15416.cljs$core$IFn$_invoke$arity$2 = G__15416__2;
return G__15416;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__15438 = null;
var G__15438__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15438__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15429 = result;
var G__15430 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15429,G__15430) : rf.call(null,G__15429,G__15430));
})());
})());
var G__15431 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15431) : rf.call(null,G__15431));
});
var G__15438__2 = (function (result,input){
var pval = (function (){var G__15432 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15432) : cljs.core.deref.call(null,G__15432));
})();
var val = (function (){var G__15433 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15433) : f.call(null,G__15433));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15434 = result;
var G__15435 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15434,G__15435) : rf.call(null,G__15434,G__15435));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15438 = function(result,input){
switch(arguments.length){
case 0:
return G__15438__0.call(this);
case 1:
return G__15438__1.call(this,result);
case 2:
return G__15438__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15438.cljs$core$IFn$_invoke$arity$0 = G__15438__0;
G__15438.cljs$core$IFn$_invoke$arity$1 = G__15438__1;
G__15438.cljs$core$IFn$_invoke$arity$2 = G__15438__2;
return G__15438;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15436 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15436) : f.call(null,G__15436));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__15417_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15437 = p1__15417_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15437) : f.call(null,G__15437));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15447 = init;
var G__15448 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15447,G__15448) : f.call(null,G__15447,G__15448));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__15543 = null;
var G__15543__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__15543__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15501 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15501) : f.call(null,G__15501));
})()],null));
});
var G__15543__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15502 = x;
var G__15503 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15502,G__15503) : f.call(null,G__15502,G__15503));
})()],null));
});
var G__15543__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15504 = x;
var G__15505 = y;
var G__15506 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15504,G__15505,G__15506) : f.call(null,G__15504,G__15505,G__15506));
})()],null));
});
var G__15543__4 = (function() { 
var G__15544__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__15544 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15545__i = 0, G__15545__a = new Array(arguments.length -  3);
while (G__15545__i < G__15545__a.length) {G__15545__a[G__15545__i] = arguments[G__15545__i + 3]; ++G__15545__i;}
  args = new cljs.core.IndexedSeq(G__15545__a,0);
} 
return G__15544__delegate.call(this,x,y,z,args);};
G__15544.cljs$lang$maxFixedArity = 3;
G__15544.cljs$lang$applyTo = (function (arglist__15546){
var x = cljs.core.first(arglist__15546);
arglist__15546 = cljs.core.next(arglist__15546);
var y = cljs.core.first(arglist__15546);
arglist__15546 = cljs.core.next(arglist__15546);
var z = cljs.core.first(arglist__15546);
var args = cljs.core.rest(arglist__15546);
return G__15544__delegate(x,y,z,args);
});
G__15544.cljs$core$IFn$_invoke$arity$variadic = G__15544__delegate;
return G__15544;
})()
;
G__15543 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15543__0.call(this);
case 1:
return G__15543__1.call(this,x);
case 2:
return G__15543__2.call(this,x,y);
case 3:
return G__15543__3.call(this,x,y,z);
default:
var G__15547 = null;
if (arguments.length > 3) {
var G__15548__i = 0, G__15548__a = new Array(arguments.length -  3);
while (G__15548__i < G__15548__a.length) {G__15548__a[G__15548__i] = arguments[G__15548__i + 3]; ++G__15548__i;}
G__15547 = new cljs.core.IndexedSeq(G__15548__a,0);
}
return G__15543__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15543.cljs$lang$maxFixedArity = 3;
G__15543.cljs$lang$applyTo = G__15543__4.cljs$lang$applyTo;
G__15543.cljs$core$IFn$_invoke$arity$0 = G__15543__0;
G__15543.cljs$core$IFn$_invoke$arity$1 = G__15543__1;
G__15543.cljs$core$IFn$_invoke$arity$2 = G__15543__2;
G__15543.cljs$core$IFn$_invoke$arity$3 = G__15543__3;
G__15543.cljs$core$IFn$_invoke$arity$variadic = G__15543__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15543;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__15549 = null;
var G__15549__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__15549__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15507 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15507) : f.call(null,G__15507));
})(),(function (){var G__15508 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15508) : g.call(null,G__15508));
})()],null));
});
var G__15549__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15509 = x;
var G__15510 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15509,G__15510) : f.call(null,G__15509,G__15510));
})(),(function (){var G__15511 = x;
var G__15512 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15511,G__15512) : g.call(null,G__15511,G__15512));
})()],null));
});
var G__15549__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15513 = x;
var G__15514 = y;
var G__15515 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15513,G__15514,G__15515) : f.call(null,G__15513,G__15514,G__15515));
})(),(function (){var G__15516 = x;
var G__15517 = y;
var G__15518 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15516,G__15517,G__15518) : g.call(null,G__15516,G__15517,G__15518));
})()],null));
});
var G__15549__4 = (function() { 
var G__15550__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__15550 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15551__i = 0, G__15551__a = new Array(arguments.length -  3);
while (G__15551__i < G__15551__a.length) {G__15551__a[G__15551__i] = arguments[G__15551__i + 3]; ++G__15551__i;}
  args = new cljs.core.IndexedSeq(G__15551__a,0);
} 
return G__15550__delegate.call(this,x,y,z,args);};
G__15550.cljs$lang$maxFixedArity = 3;
G__15550.cljs$lang$applyTo = (function (arglist__15552){
var x = cljs.core.first(arglist__15552);
arglist__15552 = cljs.core.next(arglist__15552);
var y = cljs.core.first(arglist__15552);
arglist__15552 = cljs.core.next(arglist__15552);
var z = cljs.core.first(arglist__15552);
var args = cljs.core.rest(arglist__15552);
return G__15550__delegate(x,y,z,args);
});
G__15550.cljs$core$IFn$_invoke$arity$variadic = G__15550__delegate;
return G__15550;
})()
;
G__15549 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15549__0.call(this);
case 1:
return G__15549__1.call(this,x);
case 2:
return G__15549__2.call(this,x,y);
case 3:
return G__15549__3.call(this,x,y,z);
default:
var G__15553 = null;
if (arguments.length > 3) {
var G__15554__i = 0, G__15554__a = new Array(arguments.length -  3);
while (G__15554__i < G__15554__a.length) {G__15554__a[G__15554__i] = arguments[G__15554__i + 3]; ++G__15554__i;}
G__15553 = new cljs.core.IndexedSeq(G__15554__a,0);
}
return G__15549__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15549.cljs$lang$maxFixedArity = 3;
G__15549.cljs$lang$applyTo = G__15549__4.cljs$lang$applyTo;
G__15549.cljs$core$IFn$_invoke$arity$0 = G__15549__0;
G__15549.cljs$core$IFn$_invoke$arity$1 = G__15549__1;
G__15549.cljs$core$IFn$_invoke$arity$2 = G__15549__2;
G__15549.cljs$core$IFn$_invoke$arity$3 = G__15549__3;
G__15549.cljs$core$IFn$_invoke$arity$variadic = G__15549__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15549;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__15555 = null;
var G__15555__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__15555__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15519 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15519) : f.call(null,G__15519));
})(),(function (){var G__15520 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15520) : g.call(null,G__15520));
})(),(function (){var G__15521 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15521) : h.call(null,G__15521));
})()],null));
});
var G__15555__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15522 = x;
var G__15523 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15522,G__15523) : f.call(null,G__15522,G__15523));
})(),(function (){var G__15524 = x;
var G__15525 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15524,G__15525) : g.call(null,G__15524,G__15525));
})(),(function (){var G__15526 = x;
var G__15527 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15526,G__15527) : h.call(null,G__15526,G__15527));
})()],null));
});
var G__15555__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15528 = x;
var G__15529 = y;
var G__15530 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15528,G__15529,G__15530) : f.call(null,G__15528,G__15529,G__15530));
})(),(function (){var G__15531 = x;
var G__15532 = y;
var G__15533 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15531,G__15532,G__15533) : g.call(null,G__15531,G__15532,G__15533));
})(),(function (){var G__15534 = x;
var G__15535 = y;
var G__15536 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15534,G__15535,G__15536) : h.call(null,G__15534,G__15535,G__15536));
})()],null));
});
var G__15555__4 = (function() { 
var G__15556__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__15556 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15557__i = 0, G__15557__a = new Array(arguments.length -  3);
while (G__15557__i < G__15557__a.length) {G__15557__a[G__15557__i] = arguments[G__15557__i + 3]; ++G__15557__i;}
  args = new cljs.core.IndexedSeq(G__15557__a,0);
} 
return G__15556__delegate.call(this,x,y,z,args);};
G__15556.cljs$lang$maxFixedArity = 3;
G__15556.cljs$lang$applyTo = (function (arglist__15558){
var x = cljs.core.first(arglist__15558);
arglist__15558 = cljs.core.next(arglist__15558);
var y = cljs.core.first(arglist__15558);
arglist__15558 = cljs.core.next(arglist__15558);
var z = cljs.core.first(arglist__15558);
var args = cljs.core.rest(arglist__15558);
return G__15556__delegate(x,y,z,args);
});
G__15556.cljs$core$IFn$_invoke$arity$variadic = G__15556__delegate;
return G__15556;
})()
;
G__15555 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15555__0.call(this);
case 1:
return G__15555__1.call(this,x);
case 2:
return G__15555__2.call(this,x,y);
case 3:
return G__15555__3.call(this,x,y,z);
default:
var G__15559 = null;
if (arguments.length > 3) {
var G__15560__i = 0, G__15560__a = new Array(arguments.length -  3);
while (G__15560__i < G__15560__a.length) {G__15560__a[G__15560__i] = arguments[G__15560__i + 3]; ++G__15560__i;}
G__15559 = new cljs.core.IndexedSeq(G__15560__a,0);
}
return G__15555__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15559);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15555.cljs$lang$maxFixedArity = 3;
G__15555.cljs$lang$applyTo = G__15555__4.cljs$lang$applyTo;
G__15555.cljs$core$IFn$_invoke$arity$0 = G__15555__0;
G__15555.cljs$core$IFn$_invoke$arity$1 = G__15555__1;
G__15555.cljs$core$IFn$_invoke$arity$2 = G__15555__2;
G__15555.cljs$core$IFn$_invoke$arity$3 = G__15555__3;
G__15555.cljs$core$IFn$_invoke$arity$variadic = G__15555__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15555;
})()
});
var juxt__4 = (function() { 
var G__15561__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__15562 = null;
var G__15562__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15449_SHARP_,p2__15450_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15449_SHARP_,(function (){return (p2__15450_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15450_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15450_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15562__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15451_SHARP_,p2__15452_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15451_SHARP_,(function (){var G__15537 = x;
return (p2__15452_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15452_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15537) : p2__15452_SHARP_.call(null,G__15537));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15562__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15453_SHARP_,p2__15454_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15453_SHARP_,(function (){var G__15538 = x;
var G__15539 = y;
return (p2__15454_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15454_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15538,G__15539) : p2__15454_SHARP_.call(null,G__15538,G__15539));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15562__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15455_SHARP_,p2__15456_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15455_SHARP_,(function (){var G__15540 = x;
var G__15541 = y;
var G__15542 = z;
return (p2__15456_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15456_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15540,G__15541,G__15542) : p2__15456_SHARP_.call(null,G__15540,G__15541,G__15542));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15562__4 = (function() { 
var G__15563__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15457_SHARP_,p2__15458_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15457_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15458_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__15563 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15564__i = 0, G__15564__a = new Array(arguments.length -  3);
while (G__15564__i < G__15564__a.length) {G__15564__a[G__15564__i] = arguments[G__15564__i + 3]; ++G__15564__i;}
  args = new cljs.core.IndexedSeq(G__15564__a,0);
} 
return G__15563__delegate.call(this,x,y,z,args);};
G__15563.cljs$lang$maxFixedArity = 3;
G__15563.cljs$lang$applyTo = (function (arglist__15565){
var x = cljs.core.first(arglist__15565);
arglist__15565 = cljs.core.next(arglist__15565);
var y = cljs.core.first(arglist__15565);
arglist__15565 = cljs.core.next(arglist__15565);
var z = cljs.core.first(arglist__15565);
var args = cljs.core.rest(arglist__15565);
return G__15563__delegate(x,y,z,args);
});
G__15563.cljs$core$IFn$_invoke$arity$variadic = G__15563__delegate;
return G__15563;
})()
;
G__15562 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15562__0.call(this);
case 1:
return G__15562__1.call(this,x);
case 2:
return G__15562__2.call(this,x,y);
case 3:
return G__15562__3.call(this,x,y,z);
default:
var G__15566 = null;
if (arguments.length > 3) {
var G__15567__i = 0, G__15567__a = new Array(arguments.length -  3);
while (G__15567__i < G__15567__a.length) {G__15567__a[G__15567__i] = arguments[G__15567__i + 3]; ++G__15567__i;}
G__15566 = new cljs.core.IndexedSeq(G__15567__a,0);
}
return G__15562__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15562.cljs$lang$maxFixedArity = 3;
G__15562.cljs$lang$applyTo = G__15562__4.cljs$lang$applyTo;
G__15562.cljs$core$IFn$_invoke$arity$0 = G__15562__0;
G__15562.cljs$core$IFn$_invoke$arity$1 = G__15562__1;
G__15562.cljs$core$IFn$_invoke$arity$2 = G__15562__2;
G__15562.cljs$core$IFn$_invoke$arity$3 = G__15562__3;
G__15562.cljs$core$IFn$_invoke$arity$variadic = G__15562__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15562;
})()
;})(fs__$1))
};
var G__15561 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15568__i = 0, G__15568__a = new Array(arguments.length -  3);
while (G__15568__i < G__15568__a.length) {G__15568__a[G__15568__i] = arguments[G__15568__i + 3]; ++G__15568__i;}
  fs = new cljs.core.IndexedSeq(G__15568__a,0);
} 
return G__15561__delegate.call(this,f,g,h,fs);};
G__15561.cljs$lang$maxFixedArity = 3;
G__15561.cljs$lang$applyTo = (function (arglist__15569){
var f = cljs.core.first(arglist__15569);
arglist__15569 = cljs.core.next(arglist__15569);
var g = cljs.core.first(arglist__15569);
arglist__15569 = cljs.core.next(arglist__15569);
var h = cljs.core.first(arglist__15569);
var fs = cljs.core.rest(arglist__15569);
return G__15561__delegate(f,g,h,fs);
});
G__15561.cljs$core$IFn$_invoke$arity$variadic = G__15561__delegate;
return G__15561;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__15570 = null;
if (arguments.length > 3) {
var G__15571__i = 0, G__15571__a = new Array(arguments.length -  3);
while (G__15571__i < G__15571__a.length) {G__15571__a[G__15571__i] = arguments[G__15571__i + 3]; ++G__15571__i;}
G__15570 = new cljs.core.IndexedSeq(G__15571__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__15570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__15572 = cljs.core.next(coll);
coll = G__15572;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__15573 = (n - (1));
var G__15574 = cljs.core.next(coll);
n = G__15573;
coll = G__15574;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__15578 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15578,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15578,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15578,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_15586 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__15587_15593 = cljs.core.first(coll);
var G__15588_15594 = writer;
var G__15589_15595 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15587_15593,G__15588_15594,G__15589_15595) : print_one.call(null,G__15587_15593,G__15588_15594,G__15589_15595));
} else {
}

var coll_15596__$1 = cljs.core.next(coll);
var n_15597 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_15596__$1) && (((n_15597 == null)) || (!((n_15597 === (0)))))){
cljs.core._write(writer,sep);

var G__15590_15598 = cljs.core.first(coll_15596__$1);
var G__15591_15599 = writer;
var G__15592_15600 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15590_15598,G__15591_15599,G__15592_15600) : print_one.call(null,G__15590_15598,G__15591_15599,G__15592_15600));

var G__15601 = cljs.core.next(coll_15596__$1);
var G__15602 = (n_15597 - (1));
coll_15596__$1 = G__15601;
n_15597 = G__15602;
continue;
} else {
if((cljs.core.seq(coll_15596__$1)) && ((n_15597 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15586;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__15607 = cljs.core.seq(ss);
var chunk__15608 = null;
var count__15609 = (0);
var i__15610 = (0);
while(true){
if((i__15610 < count__15609)){
var s = chunk__15608.cljs$core$IIndexed$_nth$arity$2(null,i__15610);
cljs.core._write(writer,s);

var G__15611 = seq__15607;
var G__15612 = chunk__15608;
var G__15613 = count__15609;
var G__15614 = (i__15610 + (1));
seq__15607 = G__15611;
chunk__15608 = G__15612;
count__15609 = G__15613;
i__15610 = G__15614;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15607);
if(temp__4126__auto__){
var seq__15607__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15607__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__15607__$1);
var G__15615 = cljs.core.chunk_rest(seq__15607__$1);
var G__15616 = c__4586__auto__;
var G__15617 = cljs.core.count(c__4586__auto__);
var G__15618 = (0);
seq__15607 = G__15615;
chunk__15608 = G__15616;
count__15609 = G__15617;
i__15610 = G__15618;
continue;
} else {
var s = cljs.core.first(seq__15607__$1);
cljs.core._write(writer,s);

var G__15619 = cljs.core.next(seq__15607__$1);
var G__15620 = null;
var G__15621 = (0);
var G__15622 = (0);
seq__15607 = G__15619;
chunk__15608 = G__15620;
count__15609 = G__15621;
i__15610 = G__15622;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__15623__i = 0, G__15623__a = new Array(arguments.length -  1);
while (G__15623__i < G__15623__a.length) {G__15623__a[G__15623__i] = arguments[G__15623__i + 1]; ++G__15623__i;}
  ss = new cljs.core.IndexedSeq(G__15623__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__15624){
var writer = cljs.core.first(arglist__15624);
var ss = cljs.core.rest(arglist__15624);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj15626 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj15626;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__15629 = "[\\\\\"\b\f\n\r\t]";
var G__15630 = "g";
return RegExp(G__15629,G__15630);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3787__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3787__auto__)){
var and__3787__auto____$1 = (function (){var G__15644 = obj;
if(G__15644){
var bit__4480__auto__ = (G__15644.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4480__auto__) || (G__15644.cljs$core$IMeta$)){
return true;
} else {
if((!G__15644.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15644);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15644);
}
})();
if(and__3787__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__15645 = obj;
if(G__15645){
var bit__4473__auto__ = (G__15645.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4473__auto__) || (G__15645.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__15646 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__15647 = pr_writer;
var G__15648 = writer;
var G__15649 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15646,G__15647,G__15648,G__15649) : cljs.core.print_map.call(null,G__15646,G__15647,G__15648,G__15649));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__15650 = obj;
return goog.isString(G__15650);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__15652 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__15652;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__15651 = obj;
if(G__15651){
var bit__4480__auto__ = (G__15651.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4480__auto__) || (G__15651.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__15651.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15651);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15651);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__15657 = cljs.core.seq(cljs.core.next(objs));
var chunk__15658 = null;
var count__15659 = (0);
var i__15660 = (0);
while(true){
if((i__15660 < count__15659)){
var obj = chunk__15658.cljs$core$IIndexed$_nth$arity$2(null,i__15660);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15661 = seq__15657;
var G__15662 = chunk__15658;
var G__15663 = count__15659;
var G__15664 = (i__15660 + (1));
seq__15657 = G__15661;
chunk__15658 = G__15662;
count__15659 = G__15663;
i__15660 = G__15664;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15657);
if(temp__4126__auto__){
var seq__15657__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15657__$1)){
var c__4586__auto__ = cljs.core.chunk_first(seq__15657__$1);
var G__15665 = cljs.core.chunk_rest(seq__15657__$1);
var G__15666 = c__4586__auto__;
var G__15667 = cljs.core.count(c__4586__auto__);
var G__15668 = (0);
seq__15657 = G__15665;
chunk__15658 = G__15666;
count__15659 = G__15667;
i__15660 = G__15668;
continue;
} else {
var obj = cljs.core.first(seq__15657__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15669 = cljs.core.next(seq__15657__$1);
var G__15670 = null;
var G__15671 = (0);
var G__15672 = (0);
seq__15657 = G__15669;
chunk__15658 = G__15670;
count__15659 = G__15671;
i__15660 = G__15672;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15673__i = 0, G__15673__a = new Array(arguments.length -  0);
while (G__15673__i < G__15673__a.length) {G__15673__a[G__15673__i] = arguments[G__15673__i + 0]; ++G__15673__i;}
  objs = new cljs.core.IndexedSeq(G__15673__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__15674){
var objs = cljs.core.seq(arglist__15674);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15675__i = 0, G__15675__a = new Array(arguments.length -  0);
while (G__15675__i < G__15675__a.length) {G__15675__a[G__15675__i] = arguments[G__15675__i + 0]; ++G__15675__i;}
  objs = new cljs.core.IndexedSeq(G__15675__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__15676){
var objs = cljs.core.seq(arglist__15676);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15677__i = 0, G__15677__a = new Array(arguments.length -  0);
while (G__15677__i < G__15677__a.length) {G__15677__a[G__15677__i] = arguments[G__15677__i + 0]; ++G__15677__i;}
  objs = new cljs.core.IndexedSeq(G__15677__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__15678){
var objs = cljs.core.seq(arglist__15678);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15679__i = 0, G__15679__a = new Array(arguments.length -  0);
while (G__15679__i < G__15679__a.length) {G__15679__a[G__15679__i] = arguments[G__15679__i + 0]; ++G__15679__i;}
  objs = new cljs.core.IndexedSeq(G__15679__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__15680){
var objs = cljs.core.seq(arglist__15680);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15681__i = 0, G__15681__a = new Array(arguments.length -  0);
while (G__15681__i < G__15681__a.length) {G__15681__a[G__15681__i] = arguments[G__15681__i + 0]; ++G__15681__i;}
  objs = new cljs.core.IndexedSeq(G__15681__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__15682){
var objs = cljs.core.seq(arglist__15682);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15683__i = 0, G__15683__a = new Array(arguments.length -  0);
while (G__15683__i < G__15683__a.length) {G__15683__a[G__15683__i] = arguments[G__15683__i + 0]; ++G__15683__i;}
  objs = new cljs.core.IndexedSeq(G__15683__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__15684){
var objs = cljs.core.seq(arglist__15684);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15685__i = 0, G__15685__a = new Array(arguments.length -  0);
while (G__15685__i < G__15685__a.length) {G__15685__a[G__15685__i] = arguments[G__15685__i + 0]; ++G__15685__i;}
  objs = new cljs.core.IndexedSeq(G__15685__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__15686){
var objs = cljs.core.seq(arglist__15686);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15687__i = 0, G__15687__a = new Array(arguments.length -  0);
while (G__15687__i < G__15687__a.length) {G__15687__a[G__15687__i] = arguments[G__15687__i + 0]; ++G__15687__i;}
  objs = new cljs.core.IndexedSeq(G__15687__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__15688){
var objs = cljs.core.seq(arglist__15688);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__15695_15701 = cljs.core.key(e);
var G__15696_15702 = w;
var G__15697_15703 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15695_15701,G__15696_15702,G__15697_15703) : print_one.call(null,G__15695_15701,G__15696_15702,G__15697_15703));

cljs.core._write(w," ");

var G__15698 = cljs.core.val(e);
var G__15699 = w;
var G__15700 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15698,G__15699,G__15700) : print_one.call(null,G__15698,G__15699,G__15700));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__15704__i = 0, G__15704__a = new Array(arguments.length -  2);
while (G__15704__i < G__15704__a.length) {G__15704__a[G__15704__i] = arguments[G__15704__i + 2]; ++G__15704__i;}
  args = new cljs.core.IndexedSeq(G__15704__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__15705){
var iref = cljs.core.first(arglist__15705);
arglist__15705 = cljs.core.next(arglist__15705);
var f = cljs.core.first(arglist__15705);
var args = cljs.core.rest(arglist__15705);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__15708 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15708) : cljs.core.atom.call(null,G__15708));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__15710 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15710) : cljs.core.deref.call(null,G__15710));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__15711_SHARP_,p2__15712_SHARP_){
var ret = (function (){var G__15715 = p1__15711_SHARP_;
var G__15716 = p2__15712_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15715,G__15716) : rf.call(null,G__15715,G__15716));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__15719 = null;
var G__15719__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15719__1 = (function (result){
var G__15718 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15718) : rf.call(null,G__15718));
});
var G__15719__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__15719 = function(result,input){
switch(arguments.length){
case 0:
return G__15719__0.call(this);
case 1:
return G__15719__1.call(this,result);
case 2:
return G__15719__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15719.cljs$core$IFn$_invoke$arity$0 = G__15719__0;
G__15719.cljs$core$IFn$_invoke$arity$1 = G__15719__1;
G__15719.cljs$core$IFn$_invoke$arity$2 = G__15719__2;
return G__15719;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__15728 = null;
var G__15728__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15728__1 = (function (result){
var G__15724 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15724) : rf.call(null,G__15724));
});
var G__15728__2 = (function (result,input){
var prior = (function (){var G__15725 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15725) : cljs.core.deref.call(null,G__15725));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__15726 = result;
var G__15727 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15726,G__15727) : rf.call(null,G__15726,G__15727));
}
});
G__15728 = function(result,input){
switch(arguments.length){
case 0:
return G__15728__0.call(this);
case 1:
return G__15728__1.call(this,result);
case 2:
return G__15728__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15728.cljs$core$IFn$_invoke$arity$0 = G__15728__0;
G__15728.cljs$core$IFn$_invoke$arity$1 = G__15728__1;
G__15728.cljs$core$IFn$_invoke$arity$2 = G__15728__2;
return G__15728;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4777__auto__ = this;
return cljs.core.es6_iterator(this__4777__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15730_SHARP_,p2__15729_SHARP_){
var G__15732 = p2__15729_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15732) : proc.call(null,G__15732));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj15734 = {};
return obj15734;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3787__auto__ = x;
if(and__3787__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3787__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4443__auto__ = (((x == null))?null:x);
return (function (){var or__3799__auto__ = (cljs.core._clj__GT_js[(function (){var G__15738 = x__4443__auto__;
return goog.typeOf(G__15738);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3787__auto__ = x;
if(and__3787__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3787__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4443__auto__ = (((x == null))?null:x);
return (function (){var or__3799__auto__ = (cljs.core._key__GT_js[(function (){var G__15742 = x__4443__auto__;
return goog.typeOf(G__15742);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__15745 = k;
if(G__15745){
var bit__4480__auto__ = null;
if(cljs.core.truth_((function (){var or__3799__auto__ = bit__4480__auto__;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return G__15745.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15745.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15745);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15745);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__15746 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15746) : cljs.core.clj__GT_js.call(null,G__15746));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__15762 = x;
if(G__15762){
var bit__4480__auto__ = null;
if(cljs.core.truth_((function (){var or__3799__auto__ = bit__4480__auto__;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return G__15762.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15762.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15762);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15762);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj15764 = {};
return obj15764;
})();
var seq__15765_15775 = cljs.core.seq(x);
var chunk__15766_15776 = null;
var count__15767_15777 = (0);
var i__15768_15778 = (0);
while(true){
if((i__15768_15778 < count__15767_15777)){
var vec__15769_15779 = chunk__15766_15776.cljs$core$IIndexed$_nth$arity$2(null,i__15768_15778);
var k_15780 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15769_15779,(0),null);
var v_15781 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15769_15779,(1),null);
(m[cljs.core.key__GT_js(k_15780)] = clj__GT_js(v_15781));

var G__15782 = seq__15765_15775;
var G__15783 = chunk__15766_15776;
var G__15784 = count__15767_15777;
var G__15785 = (i__15768_15778 + (1));
seq__15765_15775 = G__15782;
chunk__15766_15776 = G__15783;
count__15767_15777 = G__15784;
i__15768_15778 = G__15785;
continue;
} else {
var temp__4126__auto___15786 = cljs.core.seq(seq__15765_15775);
if(temp__4126__auto___15786){
var seq__15765_15787__$1 = temp__4126__auto___15786;
if(cljs.core.chunked_seq_QMARK_(seq__15765_15787__$1)){
var c__4586__auto___15788 = cljs.core.chunk_first(seq__15765_15787__$1);
var G__15789 = cljs.core.chunk_rest(seq__15765_15787__$1);
var G__15790 = c__4586__auto___15788;
var G__15791 = cljs.core.count(c__4586__auto___15788);
var G__15792 = (0);
seq__15765_15775 = G__15789;
chunk__15766_15776 = G__15790;
count__15767_15777 = G__15791;
i__15768_15778 = G__15792;
continue;
} else {
var vec__15770_15793 = cljs.core.first(seq__15765_15787__$1);
var k_15794 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15770_15793,(0),null);
var v_15795 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15770_15793,(1),null);
(m[cljs.core.key__GT_js(k_15794)] = clj__GT_js(v_15795));

var G__15796 = cljs.core.next(seq__15765_15787__$1);
var G__15797 = null;
var G__15798 = (0);
var G__15799 = (0);
seq__15765_15775 = G__15796;
chunk__15766_15776 = G__15797;
count__15767_15777 = G__15798;
i__15768_15778 = G__15799;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__15771_15800 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__15772_15801 = null;
var count__15773_15802 = (0);
var i__15774_15803 = (0);
while(true){
if((i__15774_15803 < count__15773_15802)){
var x_15804__$1 = chunk__15772_15801.cljs$core$IIndexed$_nth$arity$2(null,i__15774_15803);
arr.push(x_15804__$1);

var G__15805 = seq__15771_15800;
var G__15806 = chunk__15772_15801;
var G__15807 = count__15773_15802;
var G__15808 = (i__15774_15803 + (1));
seq__15771_15800 = G__15805;
chunk__15772_15801 = G__15806;
count__15773_15802 = G__15807;
i__15774_15803 = G__15808;
continue;
} else {
var temp__4126__auto___15809 = cljs.core.seq(seq__15771_15800);
if(temp__4126__auto___15809){
var seq__15771_15810__$1 = temp__4126__auto___15809;
if(cljs.core.chunked_seq_QMARK_(seq__15771_15810__$1)){
var c__4586__auto___15811 = cljs.core.chunk_first(seq__15771_15810__$1);
var G__15812 = cljs.core.chunk_rest(seq__15771_15810__$1);
var G__15813 = c__4586__auto___15811;
var G__15814 = cljs.core.count(c__4586__auto___15811);
var G__15815 = (0);
seq__15771_15800 = G__15812;
chunk__15772_15801 = G__15813;
count__15773_15802 = G__15814;
i__15774_15803 = G__15815;
continue;
} else {
var x_15816__$1 = cljs.core.first(seq__15771_15810__$1);
arr.push(x_15816__$1);

var G__15817 = cljs.core.next(seq__15771_15810__$1);
var G__15818 = null;
var G__15819 = (0);
var G__15820 = (0);
seq__15771_15800 = G__15817;
chunk__15772_15801 = G__15818;
count__15773_15802 = G__15819;
i__15774_15803 = G__15820;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj15822 = {};
return obj15822;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3787__auto__ = x;
if(and__3787__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3787__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4443__auto__ = (((x == null))?null:x);
return (function (){var or__3799__auto__ = (cljs.core._js__GT_clj[(function (){var G__15826 = x__4443__auto__;
return goog.typeOf(G__15826);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__15883__delegate = function (x,opts){
var map__15856 = opts;
var map__15856__$1 = ((cljs.core.seq_QMARK_(map__15856))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15856):map__15856);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15856__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__15856,map__15856__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__15872 = x__$1;
if(G__15872){
var bit__4480__auto__ = null;
if(cljs.core.truth_((function (){var or__3799__auto__ = bit__4480__auto__;
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return G__15872.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__15872.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__15872);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__15872);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4555__auto__ = ((function (map__15856,map__15856__$1,keywordize_keys,keyfn){
return (function iter__15873(s__15874){
return (new cljs.core.LazySeq(null,((function (map__15856,map__15856__$1,keywordize_keys,keyfn){
return (function (){
var s__15874__$1 = s__15874;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__15874__$1);
if(temp__4126__auto__){
var s__15874__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__15874__$2)){
var c__4553__auto__ = cljs.core.chunk_first(s__15874__$2);
var size__4554__auto__ = cljs.core.count(c__4553__auto__);
var b__15876 = cljs.core.chunk_buffer(size__4554__auto__);
if((function (){var i__15875 = (0);
while(true){
if((i__15875 < size__4554__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4553__auto__,i__15875);
cljs.core.chunk_append(b__15876,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__15881 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15881) : keyfn.call(null,G__15881));
})(),thisfn((x__$1[k]))], null));

var G__15884 = (i__15875 + (1));
i__15875 = G__15884;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__15876),iter__15873(cljs.core.chunk_rest(s__15874__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__15876),null);
}
} else {
var k = cljs.core.first(s__15874__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__15882 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15882) : keyfn.call(null,G__15882));
})(),thisfn((x__$1[k]))], null),iter__15873(cljs.core.rest(s__15874__$2)));
}
} else {
return null;
}
break;
}
});})(map__15856,map__15856__$1,keywordize_keys,keyfn))
,null,null));
});})(map__15856,map__15856__$1,keywordize_keys,keyfn))
;
return iter__4555__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__15856,map__15856__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__15883 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__15885__i = 0, G__15885__a = new Array(arguments.length -  1);
while (G__15885__i < G__15885__a.length) {G__15885__a[G__15885__i] = arguments[G__15885__i + 1]; ++G__15885__i;}
  opts = new cljs.core.IndexedSeq(G__15885__a,0);
} 
return G__15883__delegate.call(this,x,opts);};
G__15883.cljs$lang$maxFixedArity = 1;
G__15883.cljs$lang$applyTo = (function (arglist__15886){
var x = cljs.core.first(arglist__15886);
var opts = cljs.core.rest(arglist__15886);
return G__15883__delegate(x,opts);
});
G__15883.cljs$core$IFn$_invoke$arity$variadic = G__15883__delegate;
return G__15883;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__15887 = null;
if (arguments.length > 1) {
var G__15888__i = 0, G__15888__a = new Array(arguments.length -  1);
while (G__15888__i < G__15888__a.length) {G__15888__a[G__15888__i] = arguments[G__15888__i + 1]; ++G__15888__i;}
G__15887 = new cljs.core.IndexedSeq(G__15888__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15887);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__15891 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15891) : cljs.core.atom.call(null,G__15891));
})();
return ((function (mem){
return (function() { 
var G__15893__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__15892 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15892) : cljs.core.deref.call(null,G__15892));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__15893 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15894__i = 0, G__15894__a = new Array(arguments.length -  0);
while (G__15894__i < G__15894__a.length) {G__15894__a[G__15894__i] = arguments[G__15894__i + 0]; ++G__15894__i;}
  args = new cljs.core.IndexedSeq(G__15894__a,0);
} 
return G__15893__delegate.call(this,args);};
G__15893.cljs$lang$maxFixedArity = 0;
G__15893.cljs$lang$applyTo = (function (arglist__15895){
var args = cljs.core.seq(arglist__15895);
return G__15893__delegate(args);
});
G__15893.cljs$core$IFn$_invoke$arity$variadic = G__15893__delegate;
return G__15893;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__15897 = ret;
f = G__15897;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__15898__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__15898 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__15899__i = 0, G__15899__a = new Array(arguments.length -  1);
while (G__15899__i < G__15899__a.length) {G__15899__a[G__15899__i] = arguments[G__15899__i + 1]; ++G__15899__i;}
  args = new cljs.core.IndexedSeq(G__15899__a,0);
} 
return G__15898__delegate.call(this,f,args);};
G__15898.cljs$lang$maxFixedArity = 1;
G__15898.cljs$lang$applyTo = (function (arglist__15900){
var f = cljs.core.first(arglist__15900);
var args = cljs.core.rest(arglist__15900);
return G__15898__delegate(f,args);
});
G__15898.cljs$core$IFn$_invoke$arity$variadic = G__15898__delegate;
return G__15898;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__15901 = null;
if (arguments.length > 1) {
var G__15902__i = 0, G__15902__a = new Array(arguments.length -  1);
while (G__15902__i < G__15902__a.length) {G__15902__a[G__15902__i] = arguments[G__15902__i + 1]; ++G__15902__i;}
G__15901 = new cljs.core.IndexedSeq(G__15902__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__15905 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__15905) : Math.floor.call(null,G__15905));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__15907 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15907) : f.call(null,G__15907));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__15909 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15909) : cljs.core.atom.call(null,G__15909));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__15910__i = 0, G__15910__a = new Array(arguments.length -  1);
while (G__15910__i < G__15910__a.length) {G__15910__a[G__15910__i] = arguments[G__15910__i + 1]; ++G__15910__i;}
  args = new cljs.core.IndexedSeq(G__15910__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__15911){
var f = cljs.core.first(arglist__15911);
var args = cljs.core.rest(arglist__15911);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15976 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15976) : cljs.core.deref.call(null,G__15976));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3799__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
var and__3787__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3787__auto__){
var and__3787__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3787__auto____$1){
var and__3787__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3787__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16001 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__15999 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__15999) : child.call(null,G__15999));
})(),(function (){var G__16000 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16000) : parent.call(null,G__16000));
})());
var G__16002 = (i + (1));
ret = G__16001;
i = G__16002;
continue;
}
break;
}
} else {
return and__3787__auto____$2;
}
} else {
return and__3787__auto____$1;
}
} else {
return and__3787__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16006 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16006) : cljs.core.deref.call(null,G__16006));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16010 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16010) : cljs.core.deref.call(null,G__16010));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16014 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16014) : cljs.core.deref.call(null,G__16014));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16023 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16023) : targets.call(null,G__16023));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16024 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16024) : sources.call(null,G__16024));
})()));
});})(tp,td,ta))
;
var or__3799__auto__ = ((cljs.core.contains_QMARK_((function (){var G__16028 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16028) : tp.call(null,G__16028));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__16029 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16029) : ta.call(null,G__16029));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__16030 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16030) : ta.call(null,G__16030));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__16037 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16037) : parentMap.call(null,G__16037));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__16038 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16038) : parentMap.call(null,G__16038));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__16031_SHARP_){
return cljs.core.cons(cljs.core.first(p1__16031_SHARP_),cljs.core.interpose(cljs.core.first(p1__16031_SHARP_),cljs.core.second(p1__16031_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__16039 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16039) : parentMap.call(null,G__16039));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__16032_SHARP_,p2__16033_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16032_SHARP_,p2__16033_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__16042 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16042) : cljs.core.deref.call(null,G__16042));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__16043 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16043) : cljs.core.deref.call(null,G__16043));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__16059 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16059) : cljs.core.deref.call(null,G__16059));
})().call(null,x);
var or__3799__auto__ = (cljs.core.truth_((function (){var and__3787__auto__ = xprefs;
if(cljs.core.truth_(and__3787__auto__)){
var G__16061 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16061) : xprefs.call(null,G__16061));
} else {
return and__3787__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__16062 = cljs.core.rest(ps);
ps = G__16062;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3799__auto____$1)){
return or__3799__auto____$1;
} else {
var or__3799__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__16063 = cljs.core.rest(ps);
ps = G__16063;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3799__auto____$2)){
return or__3799__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3799__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3799__auto__)){
return or__3799__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16077){
var vec__16078 = p__16077;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16078,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16078,(1),null);
var e = vec__16078;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16079 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16079) : cljs.core.deref.call(null,G__16079));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3799__auto__ = (be == null);
if(or__3799__auto__){
return or__3799__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__16080 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16080) : cljs.core.deref.call(null,G__16080));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16081 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16081) : cljs.core.deref.call(null,G__16081));
})(),(function (){var G__16082 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16082) : cljs.core.deref.call(null,G__16082));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj16084 = {};
return obj16084;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3787__auto__ = mf;
if(and__3787__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3787__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4443__auto__ = (((mf == null))?null:mf);
return (function (){var or__3799__auto__ = (cljs.core._reset[(function (){var G__16088 = x__4443__auto__;
return goog.typeOf(G__16088);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._reset["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3787__auto__ = mf;
if(and__3787__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3787__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4443__auto__ = (((mf == null))?null:mf);
return (function (){var or__3799__auto__ = (cljs.core._add_method[(function (){var G__16092 = x__4443__auto__;
return goog.typeOf(G__16092);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._add_method["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3787__auto__ = mf;
if(and__3787__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3787__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4443__auto__ = (((mf == null))?null:mf);
return (function (){var or__3799__auto__ = (cljs.core._remove_method[(function (){var G__16096 = x__4443__auto__;
return goog.typeOf(G__16096);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3787__auto__ = mf;
if(and__3787__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3787__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4443__auto__ = (((mf == null))?null:mf);
return (function (){var or__3799__auto__ = (cljs.core._prefer_method[(function (){var G__16100 = x__4443__auto__;
return goog.typeOf(G__16100);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3787__auto__ = mf;
if(and__3787__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3787__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4443__auto__ = (((mf == null))?null:mf);
return (function (){var or__3799__auto__ = (cljs.core._get_method[(function (){var G__16104 = x__4443__auto__;
return goog.typeOf(G__16104);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._get_method["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3787__auto__ = mf;
if(and__3787__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3787__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4443__auto__ = (((mf == null))?null:mf);
return (function (){var or__3799__auto__ = (cljs.core._methods[(function (){var G__16108 = x__4443__auto__;
return goog.typeOf(G__16108);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._methods["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3787__auto__ = mf;
if(and__3787__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3787__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4443__auto__ = (((mf == null))?null:mf);
return (function (){var or__3799__auto__ = (cljs.core._prefers[(function (){var G__16112 = x__4443__auto__;
return goog.typeOf(G__16112);
})()]);
if(or__3799__auto__){
return or__3799__auto__;
} else {
var or__3799__auto____$1 = (cljs.core._prefers["_"]);
if(or__3799__auto____$1){
return or__3799__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16114 = this$__$1;
return goog.getUid(G__16114);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16115 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16115) : cljs.core.deref.call(null,G__16115));
})(),(function (){var G__16116 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16116) : cljs.core.deref.call(null,G__16116));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__16117 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16117) : cljs.core.deref.call(null,G__16117));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__16118 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16118) : cljs.core.deref.call(null,G__16118));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16119 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16119) : cljs.core.deref.call(null,G__16119));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16120 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16120) : cljs.core.deref.call(null,G__16120));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__16961 = null;
var G__16961__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__16961__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16121 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16121) : self__.dispatch_fn.call(null,G__16121));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16122 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16122) : target_fn.call(null,G__16122));
});
var G__16961__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16123 = a;
var G__16124 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16123,G__16124) : self__.dispatch_fn.call(null,G__16123,G__16124));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16125 = a;
var G__16126 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16125,G__16126) : target_fn.call(null,G__16125,G__16126));
});
var G__16961__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16127 = a;
var G__16128 = b;
var G__16129 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16127,G__16128,G__16129) : self__.dispatch_fn.call(null,G__16127,G__16128,G__16129));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16130 = a;
var G__16131 = b;
var G__16132 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16130,G__16131,G__16132) : target_fn.call(null,G__16130,G__16131,G__16132));
});
var G__16961__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16133 = a;
var G__16134 = b;
var G__16135 = c;
var G__16136 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16133,G__16134,G__16135,G__16136) : self__.dispatch_fn.call(null,G__16133,G__16134,G__16135,G__16136));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16137 = a;
var G__16138 = b;
var G__16139 = c;
var G__16140 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16137,G__16138,G__16139,G__16140) : target_fn.call(null,G__16137,G__16138,G__16139,G__16140));
});
var G__16961__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16141 = a;
var G__16142 = b;
var G__16143 = c;
var G__16144 = d;
var G__16145 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16141,G__16142,G__16143,G__16144,G__16145) : self__.dispatch_fn.call(null,G__16141,G__16142,G__16143,G__16144,G__16145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16146 = a;
var G__16147 = b;
var G__16148 = c;
var G__16149 = d;
var G__16150 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16146,G__16147,G__16148,G__16149,G__16150) : target_fn.call(null,G__16146,G__16147,G__16148,G__16149,G__16150));
});
var G__16961__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16151 = a;
var G__16152 = b;
var G__16153 = c;
var G__16154 = d;
var G__16155 = e;
var G__16156 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16151,G__16152,G__16153,G__16154,G__16155,G__16156) : self__.dispatch_fn.call(null,G__16151,G__16152,G__16153,G__16154,G__16155,G__16156));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16157 = a;
var G__16158 = b;
var G__16159 = c;
var G__16160 = d;
var G__16161 = e;
var G__16162 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16157,G__16158,G__16159,G__16160,G__16161,G__16162) : target_fn.call(null,G__16157,G__16158,G__16159,G__16160,G__16161,G__16162));
});
var G__16961__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16163 = a;
var G__16164 = b;
var G__16165 = c;
var G__16166 = d;
var G__16167 = e;
var G__16168 = f;
var G__16169 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16163,G__16164,G__16165,G__16166,G__16167,G__16168,G__16169) : self__.dispatch_fn.call(null,G__16163,G__16164,G__16165,G__16166,G__16167,G__16168,G__16169));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16170 = a;
var G__16171 = b;
var G__16172 = c;
var G__16173 = d;
var G__16174 = e;
var G__16175 = f;
var G__16176 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16170,G__16171,G__16172,G__16173,G__16174,G__16175,G__16176) : target_fn.call(null,G__16170,G__16171,G__16172,G__16173,G__16174,G__16175,G__16176));
});
var G__16961__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16177 = a;
var G__16178 = b;
var G__16179 = c;
var G__16180 = d;
var G__16181 = e;
var G__16182 = f;
var G__16183 = g;
var G__16184 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16177,G__16178,G__16179,G__16180,G__16181,G__16182,G__16183,G__16184) : self__.dispatch_fn.call(null,G__16177,G__16178,G__16179,G__16180,G__16181,G__16182,G__16183,G__16184));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16185 = a;
var G__16186 = b;
var G__16187 = c;
var G__16188 = d;
var G__16189 = e;
var G__16190 = f;
var G__16191 = g;
var G__16192 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16185,G__16186,G__16187,G__16188,G__16189,G__16190,G__16191,G__16192) : target_fn.call(null,G__16185,G__16186,G__16187,G__16188,G__16189,G__16190,G__16191,G__16192));
});
var G__16961__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16193 = a;
var G__16194 = b;
var G__16195 = c;
var G__16196 = d;
var G__16197 = e;
var G__16198 = f;
var G__16199 = g;
var G__16200 = h;
var G__16201 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199,G__16200,G__16201) : self__.dispatch_fn.call(null,G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199,G__16200,G__16201));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16202 = a;
var G__16203 = b;
var G__16204 = c;
var G__16205 = d;
var G__16206 = e;
var G__16207 = f;
var G__16208 = g;
var G__16209 = h;
var G__16210 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209,G__16210) : target_fn.call(null,G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209,G__16210));
});
var G__16961__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16211 = a;
var G__16212 = b;
var G__16213 = c;
var G__16214 = d;
var G__16215 = e;
var G__16216 = f;
var G__16217 = g;
var G__16218 = h;
var G__16219 = i;
var G__16220 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16211,G__16212,G__16213,G__16214,G__16215,G__16216,G__16217,G__16218,G__16219,G__16220) : self__.dispatch_fn.call(null,G__16211,G__16212,G__16213,G__16214,G__16215,G__16216,G__16217,G__16218,G__16219,G__16220));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16221 = a;
var G__16222 = b;
var G__16223 = c;
var G__16224 = d;
var G__16225 = e;
var G__16226 = f;
var G__16227 = g;
var G__16228 = h;
var G__16229 = i;
var G__16230 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16221,G__16222,G__16223,G__16224,G__16225,G__16226,G__16227,G__16228,G__16229,G__16230) : target_fn.call(null,G__16221,G__16222,G__16223,G__16224,G__16225,G__16226,G__16227,G__16228,G__16229,G__16230));
});
var G__16961__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16231 = a;
var G__16232 = b;
var G__16233 = c;
var G__16234 = d;
var G__16235 = e;
var G__16236 = f;
var G__16237 = g;
var G__16238 = h;
var G__16239 = i;
var G__16240 = j;
var G__16241 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16231,G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238,G__16239,G__16240,G__16241) : self__.dispatch_fn.call(null,G__16231,G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238,G__16239,G__16240,G__16241));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16242 = a;
var G__16243 = b;
var G__16244 = c;
var G__16245 = d;
var G__16246 = e;
var G__16247 = f;
var G__16248 = g;
var G__16249 = h;
var G__16250 = i;
var G__16251 = j;
var G__16252 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16242,G__16243,G__16244,G__16245,G__16246,G__16247,G__16248,G__16249,G__16250,G__16251,G__16252) : target_fn.call(null,G__16242,G__16243,G__16244,G__16245,G__16246,G__16247,G__16248,G__16249,G__16250,G__16251,G__16252));
});
var G__16961__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16253 = a;
var G__16254 = b;
var G__16255 = c;
var G__16256 = d;
var G__16257 = e;
var G__16258 = f;
var G__16259 = g;
var G__16260 = h;
var G__16261 = i;
var G__16262 = j;
var G__16263 = k;
var G__16264 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16253,G__16254,G__16255,G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264) : self__.dispatch_fn.call(null,G__16253,G__16254,G__16255,G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16265 = a;
var G__16266 = b;
var G__16267 = c;
var G__16268 = d;
var G__16269 = e;
var G__16270 = f;
var G__16271 = g;
var G__16272 = h;
var G__16273 = i;
var G__16274 = j;
var G__16275 = k;
var G__16276 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16265,G__16266,G__16267,G__16268,G__16269,G__16270,G__16271,G__16272,G__16273,G__16274,G__16275,G__16276) : target_fn.call(null,G__16265,G__16266,G__16267,G__16268,G__16269,G__16270,G__16271,G__16272,G__16273,G__16274,G__16275,G__16276));
});
var G__16961__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16277 = a;
var G__16278 = b;
var G__16279 = c;
var G__16280 = d;
var G__16281 = e;
var G__16282 = f;
var G__16283 = g;
var G__16284 = h;
var G__16285 = i;
var G__16286 = j;
var G__16287 = k;
var G__16288 = l;
var G__16289 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16277,G__16278,G__16279,G__16280,G__16281,G__16282,G__16283,G__16284,G__16285,G__16286,G__16287,G__16288,G__16289) : self__.dispatch_fn.call(null,G__16277,G__16278,G__16279,G__16280,G__16281,G__16282,G__16283,G__16284,G__16285,G__16286,G__16287,G__16288,G__16289));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16290 = a;
var G__16291 = b;
var G__16292 = c;
var G__16293 = d;
var G__16294 = e;
var G__16295 = f;
var G__16296 = g;
var G__16297 = h;
var G__16298 = i;
var G__16299 = j;
var G__16300 = k;
var G__16301 = l;
var G__16302 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16290,G__16291,G__16292,G__16293,G__16294,G__16295,G__16296,G__16297,G__16298,G__16299,G__16300,G__16301,G__16302) : target_fn.call(null,G__16290,G__16291,G__16292,G__16293,G__16294,G__16295,G__16296,G__16297,G__16298,G__16299,G__16300,G__16301,G__16302));
});
var G__16961__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16303 = a;
var G__16304 = b;
var G__16305 = c;
var G__16306 = d;
var G__16307 = e;
var G__16308 = f;
var G__16309 = g;
var G__16310 = h;
var G__16311 = i;
var G__16312 = j;
var G__16313 = k;
var G__16314 = l;
var G__16315 = m;
var G__16316 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16303,G__16304,G__16305,G__16306,G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313,G__16314,G__16315,G__16316) : self__.dispatch_fn.call(null,G__16303,G__16304,G__16305,G__16306,G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313,G__16314,G__16315,G__16316));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16317 = a;
var G__16318 = b;
var G__16319 = c;
var G__16320 = d;
var G__16321 = e;
var G__16322 = f;
var G__16323 = g;
var G__16324 = h;
var G__16325 = i;
var G__16326 = j;
var G__16327 = k;
var G__16328 = l;
var G__16329 = m;
var G__16330 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16317,G__16318,G__16319,G__16320,G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329,G__16330) : target_fn.call(null,G__16317,G__16318,G__16319,G__16320,G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329,G__16330));
});
var G__16961__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16331 = a;
var G__16332 = b;
var G__16333 = c;
var G__16334 = d;
var G__16335 = e;
var G__16336 = f;
var G__16337 = g;
var G__16338 = h;
var G__16339 = i;
var G__16340 = j;
var G__16341 = k;
var G__16342 = l;
var G__16343 = m;
var G__16344 = n;
var G__16345 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16331,G__16332,G__16333,G__16334,G__16335,G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345) : self__.dispatch_fn.call(null,G__16331,G__16332,G__16333,G__16334,G__16335,G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16346 = a;
var G__16347 = b;
var G__16348 = c;
var G__16349 = d;
var G__16350 = e;
var G__16351 = f;
var G__16352 = g;
var G__16353 = h;
var G__16354 = i;
var G__16355 = j;
var G__16356 = k;
var G__16357 = l;
var G__16358 = m;
var G__16359 = n;
var G__16360 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16346,G__16347,G__16348,G__16349,G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360) : target_fn.call(null,G__16346,G__16347,G__16348,G__16349,G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360));
});
var G__16961__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16361 = a;
var G__16362 = b;
var G__16363 = c;
var G__16364 = d;
var G__16365 = e;
var G__16366 = f;
var G__16367 = g;
var G__16368 = h;
var G__16369 = i;
var G__16370 = j;
var G__16371 = k;
var G__16372 = l;
var G__16373 = m;
var G__16374 = n;
var G__16375 = o;
var G__16376 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16361,G__16362,G__16363,G__16364,G__16365,G__16366,G__16367,G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376) : self__.dispatch_fn.call(null,G__16361,G__16362,G__16363,G__16364,G__16365,G__16366,G__16367,G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16377 = a;
var G__16378 = b;
var G__16379 = c;
var G__16380 = d;
var G__16381 = e;
var G__16382 = f;
var G__16383 = g;
var G__16384 = h;
var G__16385 = i;
var G__16386 = j;
var G__16387 = k;
var G__16388 = l;
var G__16389 = m;
var G__16390 = n;
var G__16391 = o;
var G__16392 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16377,G__16378,G__16379,G__16380,G__16381,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392) : target_fn.call(null,G__16377,G__16378,G__16379,G__16380,G__16381,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392));
});
var G__16961__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16393 = a;
var G__16394 = b;
var G__16395 = c;
var G__16396 = d;
var G__16397 = e;
var G__16398 = f;
var G__16399 = g;
var G__16400 = h;
var G__16401 = i;
var G__16402 = j;
var G__16403 = k;
var G__16404 = l;
var G__16405 = m;
var G__16406 = n;
var G__16407 = o;
var G__16408 = p;
var G__16409 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400,G__16401,G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409) : self__.dispatch_fn.call(null,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400,G__16401,G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16410 = a;
var G__16411 = b;
var G__16412 = c;
var G__16413 = d;
var G__16414 = e;
var G__16415 = f;
var G__16416 = g;
var G__16417 = h;
var G__16418 = i;
var G__16419 = j;
var G__16420 = k;
var G__16421 = l;
var G__16422 = m;
var G__16423 = n;
var G__16424 = o;
var G__16425 = p;
var G__16426 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16410,G__16411,G__16412,G__16413,G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426) : target_fn.call(null,G__16410,G__16411,G__16412,G__16413,G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426));
});
var G__16961__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16427 = a;
var G__16428 = b;
var G__16429 = c;
var G__16430 = d;
var G__16431 = e;
var G__16432 = f;
var G__16433 = g;
var G__16434 = h;
var G__16435 = i;
var G__16436 = j;
var G__16437 = k;
var G__16438 = l;
var G__16439 = m;
var G__16440 = n;
var G__16441 = o;
var G__16442 = p;
var G__16443 = q;
var G__16444 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442,G__16443,G__16444) : self__.dispatch_fn.call(null,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442,G__16443,G__16444));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16445 = a;
var G__16446 = b;
var G__16447 = c;
var G__16448 = d;
var G__16449 = e;
var G__16450 = f;
var G__16451 = g;
var G__16452 = h;
var G__16453 = i;
var G__16454 = j;
var G__16455 = k;
var G__16456 = l;
var G__16457 = m;
var G__16458 = n;
var G__16459 = o;
var G__16460 = p;
var G__16461 = q;
var G__16462 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462) : target_fn.call(null,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451,G__16452,G__16453,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462));
});
var G__16961__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16463 = a;
var G__16464 = b;
var G__16465 = c;
var G__16466 = d;
var G__16467 = e;
var G__16468 = f;
var G__16469 = g;
var G__16470 = h;
var G__16471 = i;
var G__16472 = j;
var G__16473 = k;
var G__16474 = l;
var G__16475 = m;
var G__16476 = n;
var G__16477 = o;
var G__16478 = p;
var G__16479 = q;
var G__16480 = r;
var G__16481 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16463,G__16464,G__16465,G__16466,G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481) : self__.dispatch_fn.call(null,G__16463,G__16464,G__16465,G__16466,G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16482 = a;
var G__16483 = b;
var G__16484 = c;
var G__16485 = d;
var G__16486 = e;
var G__16487 = f;
var G__16488 = g;
var G__16489 = h;
var G__16490 = i;
var G__16491 = j;
var G__16492 = k;
var G__16493 = l;
var G__16494 = m;
var G__16495 = n;
var G__16496 = o;
var G__16497 = p;
var G__16498 = q;
var G__16499 = r;
var G__16500 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497,G__16498,G__16499,G__16500) : target_fn.call(null,G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497,G__16498,G__16499,G__16500));
});
var G__16961__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16501 = a;
var G__16502 = b;
var G__16503 = c;
var G__16504 = d;
var G__16505 = e;
var G__16506 = f;
var G__16507 = g;
var G__16508 = h;
var G__16509 = i;
var G__16510 = j;
var G__16511 = k;
var G__16512 = l;
var G__16513 = m;
var G__16514 = n;
var G__16515 = o;
var G__16516 = p;
var G__16517 = q;
var G__16518 = r;
var G__16519 = s;
var G__16520 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511,G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520) : self__.dispatch_fn.call(null,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509,G__16510,G__16511,G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16521 = a;
var G__16522 = b;
var G__16523 = c;
var G__16524 = d;
var G__16525 = e;
var G__16526 = f;
var G__16527 = g;
var G__16528 = h;
var G__16529 = i;
var G__16530 = j;
var G__16531 = k;
var G__16532 = l;
var G__16533 = m;
var G__16534 = n;
var G__16535 = o;
var G__16536 = p;
var G__16537 = q;
var G__16538 = r;
var G__16539 = s;
var G__16540 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540) : target_fn.call(null,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529,G__16530,G__16531,G__16532,G__16533,G__16534,G__16535,G__16536,G__16537,G__16538,G__16539,G__16540));
});
var G__16961__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__16961 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__16961__1.call(this,self__);
case 2:
return G__16961__2.call(this,self__,a);
case 3:
return G__16961__3.call(this,self__,a,b);
case 4:
return G__16961__4.call(this,self__,a,b,c);
case 5:
return G__16961__5.call(this,self__,a,b,c,d);
case 6:
return G__16961__6.call(this,self__,a,b,c,d,e);
case 7:
return G__16961__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__16961__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__16961__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__16961__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__16961__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__16961__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__16961__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__16961__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__16961__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__16961__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__16961__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__16961__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__16961__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__16961__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__16961__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__16961__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16961.cljs$core$IFn$_invoke$arity$1 = G__16961__1;
G__16961.cljs$core$IFn$_invoke$arity$2 = G__16961__2;
G__16961.cljs$core$IFn$_invoke$arity$3 = G__16961__3;
G__16961.cljs$core$IFn$_invoke$arity$4 = G__16961__4;
G__16961.cljs$core$IFn$_invoke$arity$5 = G__16961__5;
G__16961.cljs$core$IFn$_invoke$arity$6 = G__16961__6;
G__16961.cljs$core$IFn$_invoke$arity$7 = G__16961__7;
G__16961.cljs$core$IFn$_invoke$arity$8 = G__16961__8;
G__16961.cljs$core$IFn$_invoke$arity$9 = G__16961__9;
G__16961.cljs$core$IFn$_invoke$arity$10 = G__16961__10;
G__16961.cljs$core$IFn$_invoke$arity$11 = G__16961__11;
G__16961.cljs$core$IFn$_invoke$arity$12 = G__16961__12;
G__16961.cljs$core$IFn$_invoke$arity$13 = G__16961__13;
G__16961.cljs$core$IFn$_invoke$arity$14 = G__16961__14;
G__16961.cljs$core$IFn$_invoke$arity$15 = G__16961__15;
G__16961.cljs$core$IFn$_invoke$arity$16 = G__16961__16;
G__16961.cljs$core$IFn$_invoke$arity$17 = G__16961__17;
G__16961.cljs$core$IFn$_invoke$arity$18 = G__16961__18;
G__16961.cljs$core$IFn$_invoke$arity$19 = G__16961__19;
G__16961.cljs$core$IFn$_invoke$arity$20 = G__16961__20;
G__16961.cljs$core$IFn$_invoke$arity$21 = G__16961__21;
G__16961.cljs$core$IFn$_invoke$arity$22 = G__16961__22;
return G__16961;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args16113){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16113)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16541 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16541) : self__.dispatch_fn.call(null,G__16541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16542 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16542) : target_fn.call(null,G__16542));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16543 = a;
var G__16544 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16543,G__16544) : self__.dispatch_fn.call(null,G__16543,G__16544));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16545 = a;
var G__16546 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16545,G__16546) : target_fn.call(null,G__16545,G__16546));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16547 = a;
var G__16548 = b;
var G__16549 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16547,G__16548,G__16549) : self__.dispatch_fn.call(null,G__16547,G__16548,G__16549));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16550 = a;
var G__16551 = b;
var G__16552 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16550,G__16551,G__16552) : target_fn.call(null,G__16550,G__16551,G__16552));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16553 = a;
var G__16554 = b;
var G__16555 = c;
var G__16556 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16553,G__16554,G__16555,G__16556) : self__.dispatch_fn.call(null,G__16553,G__16554,G__16555,G__16556));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16557 = a;
var G__16558 = b;
var G__16559 = c;
var G__16560 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16557,G__16558,G__16559,G__16560) : target_fn.call(null,G__16557,G__16558,G__16559,G__16560));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16561 = a;
var G__16562 = b;
var G__16563 = c;
var G__16564 = d;
var G__16565 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16561,G__16562,G__16563,G__16564,G__16565) : self__.dispatch_fn.call(null,G__16561,G__16562,G__16563,G__16564,G__16565));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16566 = a;
var G__16567 = b;
var G__16568 = c;
var G__16569 = d;
var G__16570 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16566,G__16567,G__16568,G__16569,G__16570) : target_fn.call(null,G__16566,G__16567,G__16568,G__16569,G__16570));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16571 = a;
var G__16572 = b;
var G__16573 = c;
var G__16574 = d;
var G__16575 = e;
var G__16576 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16571,G__16572,G__16573,G__16574,G__16575,G__16576) : self__.dispatch_fn.call(null,G__16571,G__16572,G__16573,G__16574,G__16575,G__16576));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16577 = a;
var G__16578 = b;
var G__16579 = c;
var G__16580 = d;
var G__16581 = e;
var G__16582 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16577,G__16578,G__16579,G__16580,G__16581,G__16582) : target_fn.call(null,G__16577,G__16578,G__16579,G__16580,G__16581,G__16582));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16583 = a;
var G__16584 = b;
var G__16585 = c;
var G__16586 = d;
var G__16587 = e;
var G__16588 = f;
var G__16589 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589) : self__.dispatch_fn.call(null,G__16583,G__16584,G__16585,G__16586,G__16587,G__16588,G__16589));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16590 = a;
var G__16591 = b;
var G__16592 = c;
var G__16593 = d;
var G__16594 = e;
var G__16595 = f;
var G__16596 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596) : target_fn.call(null,G__16590,G__16591,G__16592,G__16593,G__16594,G__16595,G__16596));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16597 = a;
var G__16598 = b;
var G__16599 = c;
var G__16600 = d;
var G__16601 = e;
var G__16602 = f;
var G__16603 = g;
var G__16604 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604) : self__.dispatch_fn.call(null,G__16597,G__16598,G__16599,G__16600,G__16601,G__16602,G__16603,G__16604));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16605 = a;
var G__16606 = b;
var G__16607 = c;
var G__16608 = d;
var G__16609 = e;
var G__16610 = f;
var G__16611 = g;
var G__16612 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612) : target_fn.call(null,G__16605,G__16606,G__16607,G__16608,G__16609,G__16610,G__16611,G__16612));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16613 = a;
var G__16614 = b;
var G__16615 = c;
var G__16616 = d;
var G__16617 = e;
var G__16618 = f;
var G__16619 = g;
var G__16620 = h;
var G__16621 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16613,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621) : self__.dispatch_fn.call(null,G__16613,G__16614,G__16615,G__16616,G__16617,G__16618,G__16619,G__16620,G__16621));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16622 = a;
var G__16623 = b;
var G__16624 = c;
var G__16625 = d;
var G__16626 = e;
var G__16627 = f;
var G__16628 = g;
var G__16629 = h;
var G__16630 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630) : target_fn.call(null,G__16622,G__16623,G__16624,G__16625,G__16626,G__16627,G__16628,G__16629,G__16630));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16631 = a;
var G__16632 = b;
var G__16633 = c;
var G__16634 = d;
var G__16635 = e;
var G__16636 = f;
var G__16637 = g;
var G__16638 = h;
var G__16639 = i;
var G__16640 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640) : self__.dispatch_fn.call(null,G__16631,G__16632,G__16633,G__16634,G__16635,G__16636,G__16637,G__16638,G__16639,G__16640));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16641 = a;
var G__16642 = b;
var G__16643 = c;
var G__16644 = d;
var G__16645 = e;
var G__16646 = f;
var G__16647 = g;
var G__16648 = h;
var G__16649 = i;
var G__16650 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650) : target_fn.call(null,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646,G__16647,G__16648,G__16649,G__16650));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16651 = a;
var G__16652 = b;
var G__16653 = c;
var G__16654 = d;
var G__16655 = e;
var G__16656 = f;
var G__16657 = g;
var G__16658 = h;
var G__16659 = i;
var G__16660 = j;
var G__16661 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16651,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661) : self__.dispatch_fn.call(null,G__16651,G__16652,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659,G__16660,G__16661));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16662 = a;
var G__16663 = b;
var G__16664 = c;
var G__16665 = d;
var G__16666 = e;
var G__16667 = f;
var G__16668 = g;
var G__16669 = h;
var G__16670 = i;
var G__16671 = j;
var G__16672 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672) : target_fn.call(null,G__16662,G__16663,G__16664,G__16665,G__16666,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16673 = a;
var G__16674 = b;
var G__16675 = c;
var G__16676 = d;
var G__16677 = e;
var G__16678 = f;
var G__16679 = g;
var G__16680 = h;
var G__16681 = i;
var G__16682 = j;
var G__16683 = k;
var G__16684 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684) : self__.dispatch_fn.call(null,G__16673,G__16674,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682,G__16683,G__16684));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16685 = a;
var G__16686 = b;
var G__16687 = c;
var G__16688 = d;
var G__16689 = e;
var G__16690 = f;
var G__16691 = g;
var G__16692 = h;
var G__16693 = i;
var G__16694 = j;
var G__16695 = k;
var G__16696 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696) : target_fn.call(null,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691,G__16692,G__16693,G__16694,G__16695,G__16696));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16697 = a;
var G__16698 = b;
var G__16699 = c;
var G__16700 = d;
var G__16701 = e;
var G__16702 = f;
var G__16703 = g;
var G__16704 = h;
var G__16705 = i;
var G__16706 = j;
var G__16707 = k;
var G__16708 = l;
var G__16709 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16697,G__16698,G__16699,G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709) : self__.dispatch_fn.call(null,G__16697,G__16698,G__16699,G__16700,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16710 = a;
var G__16711 = b;
var G__16712 = c;
var G__16713 = d;
var G__16714 = e;
var G__16715 = f;
var G__16716 = g;
var G__16717 = h;
var G__16718 = i;
var G__16719 = j;
var G__16720 = k;
var G__16721 = l;
var G__16722 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16710,G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721,G__16722) : target_fn.call(null,G__16710,G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720,G__16721,G__16722));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16723 = a;
var G__16724 = b;
var G__16725 = c;
var G__16726 = d;
var G__16727 = e;
var G__16728 = f;
var G__16729 = g;
var G__16730 = h;
var G__16731 = i;
var G__16732 = j;
var G__16733 = k;
var G__16734 = l;
var G__16735 = m;
var G__16736 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733,G__16734,G__16735,G__16736) : self__.dispatch_fn.call(null,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731,G__16732,G__16733,G__16734,G__16735,G__16736));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16737 = a;
var G__16738 = b;
var G__16739 = c;
var G__16740 = d;
var G__16741 = e;
var G__16742 = f;
var G__16743 = g;
var G__16744 = h;
var G__16745 = i;
var G__16746 = j;
var G__16747 = k;
var G__16748 = l;
var G__16749 = m;
var G__16750 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750) : target_fn.call(null,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16751 = a;
var G__16752 = b;
var G__16753 = c;
var G__16754 = d;
var G__16755 = e;
var G__16756 = f;
var G__16757 = g;
var G__16758 = h;
var G__16759 = i;
var G__16760 = j;
var G__16761 = k;
var G__16762 = l;
var G__16763 = m;
var G__16764 = n;
var G__16765 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761,G__16762,G__16763,G__16764,G__16765) : self__.dispatch_fn.call(null,G__16751,G__16752,G__16753,G__16754,G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761,G__16762,G__16763,G__16764,G__16765));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16766 = a;
var G__16767 = b;
var G__16768 = c;
var G__16769 = d;
var G__16770 = e;
var G__16771 = f;
var G__16772 = g;
var G__16773 = h;
var G__16774 = i;
var G__16775 = j;
var G__16776 = k;
var G__16777 = l;
var G__16778 = m;
var G__16779 = n;
var G__16780 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16766,G__16767,G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777,G__16778,G__16779,G__16780) : target_fn.call(null,G__16766,G__16767,G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777,G__16778,G__16779,G__16780));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16781 = a;
var G__16782 = b;
var G__16783 = c;
var G__16784 = d;
var G__16785 = e;
var G__16786 = f;
var G__16787 = g;
var G__16788 = h;
var G__16789 = i;
var G__16790 = j;
var G__16791 = k;
var G__16792 = l;
var G__16793 = m;
var G__16794 = n;
var G__16795 = o;
var G__16796 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787,G__16788,G__16789,G__16790,G__16791,G__16792,G__16793,G__16794,G__16795,G__16796) : self__.dispatch_fn.call(null,G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787,G__16788,G__16789,G__16790,G__16791,G__16792,G__16793,G__16794,G__16795,G__16796));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16797 = a;
var G__16798 = b;
var G__16799 = c;
var G__16800 = d;
var G__16801 = e;
var G__16802 = f;
var G__16803 = g;
var G__16804 = h;
var G__16805 = i;
var G__16806 = j;
var G__16807 = k;
var G__16808 = l;
var G__16809 = m;
var G__16810 = n;
var G__16811 = o;
var G__16812 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16797,G__16798,G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808,G__16809,G__16810,G__16811,G__16812) : target_fn.call(null,G__16797,G__16798,G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806,G__16807,G__16808,G__16809,G__16810,G__16811,G__16812));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16813 = a;
var G__16814 = b;
var G__16815 = c;
var G__16816 = d;
var G__16817 = e;
var G__16818 = f;
var G__16819 = g;
var G__16820 = h;
var G__16821 = i;
var G__16822 = j;
var G__16823 = k;
var G__16824 = l;
var G__16825 = m;
var G__16826 = n;
var G__16827 = o;
var G__16828 = p;
var G__16829 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16813,G__16814,G__16815,G__16816,G__16817,G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829) : self__.dispatch_fn.call(null,G__16813,G__16814,G__16815,G__16816,G__16817,G__16818,G__16819,G__16820,G__16821,G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16830 = a;
var G__16831 = b;
var G__16832 = c;
var G__16833 = d;
var G__16834 = e;
var G__16835 = f;
var G__16836 = g;
var G__16837 = h;
var G__16838 = i;
var G__16839 = j;
var G__16840 = k;
var G__16841 = l;
var G__16842 = m;
var G__16843 = n;
var G__16844 = o;
var G__16845 = p;
var G__16846 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16830,G__16831,G__16832,G__16833,G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846) : target_fn.call(null,G__16830,G__16831,G__16832,G__16833,G__16834,G__16835,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16847 = a;
var G__16848 = b;
var G__16849 = c;
var G__16850 = d;
var G__16851 = e;
var G__16852 = f;
var G__16853 = g;
var G__16854 = h;
var G__16855 = i;
var G__16856 = j;
var G__16857 = k;
var G__16858 = l;
var G__16859 = m;
var G__16860 = n;
var G__16861 = o;
var G__16862 = p;
var G__16863 = q;
var G__16864 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16847,G__16848,G__16849,G__16850,G__16851,G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862,G__16863,G__16864) : self__.dispatch_fn.call(null,G__16847,G__16848,G__16849,G__16850,G__16851,G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862,G__16863,G__16864));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16865 = a;
var G__16866 = b;
var G__16867 = c;
var G__16868 = d;
var G__16869 = e;
var G__16870 = f;
var G__16871 = g;
var G__16872 = h;
var G__16873 = i;
var G__16874 = j;
var G__16875 = k;
var G__16876 = l;
var G__16877 = m;
var G__16878 = n;
var G__16879 = o;
var G__16880 = p;
var G__16881 = q;
var G__16882 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882) : target_fn.call(null,G__16865,G__16866,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16883 = a;
var G__16884 = b;
var G__16885 = c;
var G__16886 = d;
var G__16887 = e;
var G__16888 = f;
var G__16889 = g;
var G__16890 = h;
var G__16891 = i;
var G__16892 = j;
var G__16893 = k;
var G__16894 = l;
var G__16895 = m;
var G__16896 = n;
var G__16897 = o;
var G__16898 = p;
var G__16899 = q;
var G__16900 = r;
var G__16901 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896,G__16897,G__16898,G__16899,G__16900,G__16901) : self__.dispatch_fn.call(null,G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896,G__16897,G__16898,G__16899,G__16900,G__16901));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16902 = a;
var G__16903 = b;
var G__16904 = c;
var G__16905 = d;
var G__16906 = e;
var G__16907 = f;
var G__16908 = g;
var G__16909 = h;
var G__16910 = i;
var G__16911 = j;
var G__16912 = k;
var G__16913 = l;
var G__16914 = m;
var G__16915 = n;
var G__16916 = o;
var G__16917 = p;
var G__16918 = q;
var G__16919 = r;
var G__16920 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16902,G__16903,G__16904,G__16905,G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917,G__16918,G__16919,G__16920) : target_fn.call(null,G__16902,G__16903,G__16904,G__16905,G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916,G__16917,G__16918,G__16919,G__16920));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16921 = a;
var G__16922 = b;
var G__16923 = c;
var G__16924 = d;
var G__16925 = e;
var G__16926 = f;
var G__16927 = g;
var G__16928 = h;
var G__16929 = i;
var G__16930 = j;
var G__16931 = k;
var G__16932 = l;
var G__16933 = m;
var G__16934 = n;
var G__16935 = o;
var G__16936 = p;
var G__16937 = q;
var G__16938 = r;
var G__16939 = s;
var G__16940 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933,G__16934,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940) : self__.dispatch_fn.call(null,G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933,G__16934,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16941 = a;
var G__16942 = b;
var G__16943 = c;
var G__16944 = d;
var G__16945 = e;
var G__16946 = f;
var G__16947 = g;
var G__16948 = h;
var G__16949 = i;
var G__16950 = j;
var G__16951 = k;
var G__16952 = l;
var G__16953 = m;
var G__16954 = n;
var G__16955 = o;
var G__16956 = p;
var G__16957 = q;
var G__16958 = r;
var G__16959 = s;
var G__16960 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960) : target_fn.call(null,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16962 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__16962);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4386__auto__,writer__4387__auto__,opt__4388__auto__){
return cljs.core._write(writer__4387__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__16967 = x;
var G__16968 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16967,G__16968) : pred.call(null,G__16967,G__16968));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__16969 = y;
var G__16970 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16969,G__16970) : pred.call(null,G__16969,G__16970));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
